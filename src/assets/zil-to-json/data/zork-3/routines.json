[
  {
    "Source": "GMACROS.zil:122",
    "Name": "ZPROB",
    "ArgSpec": "(BASE)",
    "Body": [
      {
        "Zil": "<COND (,LUCKY <G? .BASE <RANDOM 100>>) (ELSE <G? .BASE <RANDOM 300>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",LUCKY",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "LUCKY"
                }
              ]
            },
            {
              "Zil": "<G? .BASE <RANDOM 100>>",
              "Form": [
                {
                  "Atom": "G?"
                },
                {
                  "Zil": ".BASE",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "BASE"
                    }
                  ]
                },
                {
                  "Zil": "<RANDOM 100>",
                  "Form": [
                    {
                      "Atom": "RANDOM"
                    },
                    100
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<G? .BASE <RANDOM 300>>",
              "Form": [
                {
                  "Atom": "G?"
                },
                {
                  "Zil": ".BASE",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "BASE"
                    }
                  ]
                },
                {
                  "Zil": "<RANDOM 300>",
                  "Form": [
                    {
                      "Atom": "RANDOM"
                    },
                    300
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GMACROS.zil:127",
    "Name": "RANDOM-ELEMENT",
    "ArgSpec": "(FROB)",
    "Body": [
      {
        "Zil": "<GET .FROB <RANDOM <GET .FROB 0>>>",
        "Form": [
          {
            "Atom": "GET"
          },
          {
            "Zil": ".FROB",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "FROB"
              }
            ]
          },
          {
            "Zil": "<RANDOM <GET .FROB 0>>",
            "Form": [
              {
                "Atom": "RANDOM"
              },
              {
                "Zil": "<GET .FROB 0>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  {
                    "Zil": ".FROB",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "FROB"
                      }
                    ]
                  },
                  0
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GMACROS.zil:130",
    "Name": "PICK-ONE",
    "ArgSpec": "(FROB \"AUX\" (L <GET .FROB 0>) (CNT <GET .FROB 1>) RND MSG RFROB)",
    "Body": [
      {
        "Zil": "<SET L <- .L 1>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "L"
          },
          {
            "Zil": "<- .L 1>",
            "Form": [
              {
                "Atom": "-"
              },
              {
                "Zil": ".L",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "L"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<SET FROB <REST .FROB 2>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "FROB"
          },
          {
            "Zil": "<REST .FROB 2>",
            "Form": [
              {
                "Atom": "REST"
              },
              {
                "Zil": ".FROB",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "FROB"
                  }
                ]
              },
              2
            ]
          }
        ]
      },
      {
        "Zil": "<SET RFROB <REST .FROB <* .CNT 2>>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "RFROB"
          },
          {
            "Zil": "<REST .FROB <* .CNT 2>>",
            "Form": [
              {
                "Atom": "REST"
              },
              {
                "Zil": ".FROB",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "FROB"
                  }
                ]
              },
              {
                "Zil": "<* .CNT 2>",
                "Form": [
                  {
                    "Atom": "*"
                  },
                  {
                    "Zil": ".CNT",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "CNT"
                      }
                    ]
                  },
                  2
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET RND <RANDOM <- .L .CNT>>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "RND"
          },
          {
            "Zil": "<RANDOM <- .L .CNT>>",
            "Form": [
              {
                "Atom": "RANDOM"
              },
              {
                "Zil": "<- .L .CNT>",
                "Form": [
                  {
                    "Atom": "-"
                  },
                  {
                    "Zil": ".L",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "L"
                      }
                    ]
                  },
                  {
                    "Zil": ".CNT",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "CNT"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET MSG <GET .RFROB .RND>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "MSG"
          },
          {
            "Zil": "<GET .RFROB .RND>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ".RFROB",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "RFROB"
                  }
                ]
              },
              {
                "Zil": ".RND",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "RND"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT .RFROB .RND <GET .RFROB 1>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ".RFROB",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "RFROB"
              }
            ]
          },
          {
            "Zil": ".RND",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "RND"
              }
            ]
          },
          {
            "Zil": "<GET .RFROB 1>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ".RFROB",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "RFROB"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<PUT .RFROB 1 .MSG>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ".RFROB",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "RFROB"
              }
            ]
          },
          1,
          {
            "Zil": ".MSG",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "MSG"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET CNT <+ .CNT 1>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "CNT"
          },
          {
            "Zil": "<+ .CNT 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ".CNT",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "CNT"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<==? .CNT .L> <SET CNT 0>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .CNT .L>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".CNT",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "CNT"
                    }
                  ]
                },
                {
                  "Zil": ".L",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "L"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET CNT 0>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CNT"
                },
                0
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<PUT .FROB 0 .CNT>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ".FROB",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "FROB"
              }
            ]
          },
          0,
          {
            "Zil": ".CNT",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "CNT"
              }
            ]
          }
        ]
      },
      {
        "Zil": ".MSG",
        "Form": [
          {
            "Atom": "LVAL"
          },
          {
            "Atom": "MSG"
          }
        ]
      }
    ]
  },
  {
    "Source": "GCLOCK.zil:21",
    "Name": "QUEUE",
    "ArgSpec": "(RTN TICK \"AUX\" CINT)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<PUT <SET CINT <INT .RTN>> ,C-TICK .TICK>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": "<SET CINT <INT .RTN>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "CINT"
              },
              {
                "Zil": "<INT .RTN>",
                "Form": [
                  {
                    "Atom": "INT"
                  },
                  {
                    "Zil": ".RTN",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "RTN"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": ",C-TICK",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "C-TICK"
              }
            ]
          },
          {
            "Zil": ".TICK",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "TICK"
              }
            ]
          }
        ]
      },
      {
        "Zil": ".CINT",
        "Form": [
          {
            "Atom": "LVAL"
          },
          {
            "Atom": "CINT"
          }
        ]
      }
    ]
  },
  {
    "Source": "GCLOCK.zil:26",
    "Name": "INT",
    "ArgSpec": "(RTN \"OPT\" (DEMON <>) E C INT)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<SET E <REST ,C-TABLE ,C-TABLELEN>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "E"
          },
          {
            "Zil": "<REST ,C-TABLE ,C-TABLELEN>",
            "Form": [
              {
                "Atom": "REST"
              },
              {
                "Zil": ",C-TABLE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "C-TABLE"
                  }
                ]
              },
              {
                "Zil": ",C-TABLELEN",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "C-TABLELEN"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET C <REST ,C-TABLE ,C-INTS>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "C"
          },
          {
            "Zil": "<REST ,C-TABLE ,C-INTS>",
            "Form": [
              {
                "Atom": "REST"
              },
              {
                "Zil": ",C-TABLE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "C-TABLE"
                  }
                ]
              },
              {
                "Zil": ",C-INTS",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "C-INTS"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<==? .C .E> <SETG C-INTS <- ,C-INTS ,C-INTLEN>> <AND .DEMON <SETG C-DEMONS <- ,C-DEMONS ,C-INTLEN>>> <SET INT <REST ,C-TABLE ,C-INTS>> <PUT .INT ,C-RTN .RTN> <RETURN .INT>) (<EQUAL? <GET .C ,C-RTN> .RTN> <RETURN .C>)> <SET C <REST .C ,C-INTLEN>>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<==? .C .E> <SETG C-INTS <- ,C-INTS ,C-INTLEN>> <AND .DEMON <SETG C-DEMONS <- ,C-DEMONS ,C-INTLEN>>> <SET INT <REST ,C-TABLE ,C-INTS>> <PUT .INT ,C-RTN .RTN> <RETURN .INT>) (<EQUAL? <GET .C ,C-RTN> .RTN> <RETURN .C>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<==? .C .E>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".C",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "C"
                        }
                      ]
                    },
                    {
                      "Zil": ".E",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "E"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SETG C-INTS <- ,C-INTS ,C-INTLEN>>",
                  "Form": [
                    {
                      "Atom": "SETG"
                    },
                    {
                      "Atom": "C-INTS"
                    },
                    {
                      "Zil": "<- ,C-INTS ,C-INTLEN>",
                      "Form": [
                        {
                          "Atom": "-"
                        },
                        {
                          "Zil": ",C-INTS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "C-INTS"
                            }
                          ]
                        },
                        {
                          "Zil": ",C-INTLEN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "C-INTLEN"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<AND .DEMON <SETG C-DEMONS <- ,C-DEMONS ,C-INTLEN>>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": ".DEMON",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "DEMON"
                        }
                      ]
                    },
                    {
                      "Zil": "<SETG C-DEMONS <- ,C-DEMONS ,C-INTLEN>>",
                      "Form": [
                        {
                          "Atom": "SETG"
                        },
                        {
                          "Atom": "C-DEMONS"
                        },
                        {
                          "Zil": "<- ,C-DEMONS ,C-INTLEN>",
                          "Form": [
                            {
                              "Atom": "-"
                            },
                            {
                              "Zil": ",C-DEMONS",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "C-DEMONS"
                                }
                              ]
                            },
                            {
                              "Zil": ",C-INTLEN",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "C-INTLEN"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET INT <REST ,C-TABLE ,C-INTS>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "INT"
                    },
                    {
                      "Zil": "<REST ,C-TABLE ,C-INTS>",
                      "Form": [
                        {
                          "Atom": "REST"
                        },
                        {
                          "Zil": ",C-TABLE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "C-TABLE"
                            }
                          ]
                        },
                        {
                          "Zil": ",C-INTS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "C-INTS"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<PUT .INT ,C-RTN .RTN>",
                  "Form": [
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Zil": ".INT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "INT"
                        }
                      ]
                    },
                    {
                      "Zil": ",C-RTN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "C-RTN"
                        }
                      ]
                    },
                    {
                      "Zil": ".RTN",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RTN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN .INT>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": ".INT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "INT"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<EQUAL? <GET .C ,C-RTN> .RTN>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<GET .C ,C-RTN>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ".C",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "C"
                            }
                          ]
                        },
                        {
                          "Zil": ",C-RTN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "C-RTN"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ".RTN",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RTN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN .C>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": ".C",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "C"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<SET C <REST .C ,C-INTLEN>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "C"
              },
              {
                "Zil": "<REST .C ,C-INTLEN>",
                "Form": [
                  {
                    "Atom": "REST"
                  },
                  {
                    "Zil": ".C",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "C"
                      }
                    ]
                  },
                  {
                    "Zil": ",C-INTLEN",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "C-INTLEN"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GCLOCK.zil:43",
    "Name": "CLOCKER",
    "ArgSpec": "(\"AUX\" C E TICK (FLG <>))",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<COND (,CLOCK-WAIT <SETG CLOCK-WAIT <>> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",CLOCK-WAIT",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "CLOCK-WAIT"
                }
              ]
            },
            {
              "Zil": "<SETG CLOCK-WAIT <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CLOCK-WAIT"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SET C <REST ,C-TABLE <COND (,P-WON ,C-INTS) (T ,C-DEMONS)>>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "C"
          },
          {
            "Zil": "<REST ,C-TABLE <COND (,P-WON ,C-INTS) (T ,C-DEMONS)>>",
            "Form": [
              {
                "Atom": "REST"
              },
              {
                "Zil": ",C-TABLE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "C-TABLE"
                  }
                ]
              },
              {
                "Zil": "<COND (,P-WON ,C-INTS) (T ,C-DEMONS)>",
                "Form": [
                  {
                    "Atom": "COND"
                  },
                  [
                    {
                      "Zil": ",P-WON",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-WON"
                        }
                      ]
                    },
                    {
                      "Zil": ",C-INTS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "C-INTS"
                        }
                      ]
                    }
                  ],
                  [
                    {
                      "Atom": "T"
                    },
                    {
                      "Zil": ",C-DEMONS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "C-DEMONS"
                        }
                      ]
                    }
                  ]
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET E <REST ,C-TABLE ,C-TABLELEN>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "E"
          },
          {
            "Zil": "<REST ,C-TABLE ,C-TABLELEN>",
            "Form": [
              {
                "Atom": "REST"
              },
              {
                "Zil": ",C-TABLE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "C-TABLE"
                  }
                ]
              },
              {
                "Zil": ",C-TABLELEN",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "C-TABLELEN"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<==? .C .E> <SETG MOVES <+ ,MOVES 1>> <RETURN .FLG>) (<NOT <0? <GET .C ,C-ENABLED?>>> <SET TICK <GET .C ,C-TICK>> <COND (<0? .TICK>) (T <PUT .C ,C-TICK <- .TICK 1>> <COND (<AND <NOT <G? .TICK 1>> <APPLY <GET .C ,C-RTN>>> <SET FLG T>)>)>)> <SET C <REST .C ,C-INTLEN>>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<==? .C .E> <SETG MOVES <+ ,MOVES 1>> <RETURN .FLG>) (<NOT <0? <GET .C ,C-ENABLED?>>> <SET TICK <GET .C ,C-TICK>> <COND (<0? .TICK>) (T <PUT .C ,C-TICK <- .TICK 1>> <COND (<AND <NOT <G? .TICK 1>> <APPLY <GET .C ,C-RTN>>> <SET FLG T>)>)>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<==? .C .E>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".C",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "C"
                        }
                      ]
                    },
                    {
                      "Zil": ".E",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "E"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SETG MOVES <+ ,MOVES 1>>",
                  "Form": [
                    {
                      "Atom": "SETG"
                    },
                    {
                      "Atom": "MOVES"
                    },
                    {
                      "Zil": "<+ ,MOVES 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ",MOVES",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MOVES"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN .FLG>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": ".FLG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "FLG"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<NOT <0? <GET .C ,C-ENABLED?>>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<0? <GET .C ,C-ENABLED?>>",
                      "Form": [
                        {
                          "Atom": "0?"
                        },
                        {
                          "Zil": "<GET .C ,C-ENABLED?>",
                          "Form": [
                            {
                              "Atom": "GET"
                            },
                            {
                              "Zil": ".C",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "C"
                                }
                              ]
                            },
                            {
                              "Zil": ",C-ENABLED?",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "C-ENABLED?"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET TICK <GET .C ,C-TICK>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "TICK"
                    },
                    {
                      "Zil": "<GET .C ,C-TICK>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ".C",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "C"
                            }
                          ]
                        },
                        {
                          "Zil": ",C-TICK",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "C-TICK"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<0? .TICK>) (T <PUT .C ,C-TICK <- .TICK 1>> <COND (<AND <NOT <G? .TICK 1>> <APPLY <GET .C ,C-RTN>>> <SET FLG T>)>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<0? .TICK>",
                        "Form": [
                          {
                            "Atom": "0?"
                          },
                          {
                            "Zil": ".TICK",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TICK"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<PUT .C ,C-TICK <- .TICK 1>>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ".C",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "C"
                              }
                            ]
                          },
                          {
                            "Zil": ",C-TICK",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "C-TICK"
                              }
                            ]
                          },
                          {
                            "Zil": "<- .TICK 1>",
                            "Form": [
                              {
                                "Atom": "-"
                              },
                              {
                                "Zil": ".TICK",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "TICK"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<AND <NOT <G? .TICK 1>> <APPLY <GET .C ,C-RTN>>> <SET FLG T>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<AND <NOT <G? .TICK 1>> <APPLY <GET .C ,C-RTN>>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<NOT <G? .TICK 1>>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": "<G? .TICK 1>",
                                      "Form": [
                                        {
                                          "Atom": "G?"
                                        },
                                        {
                                          "Zil": ".TICK",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "TICK"
                                            }
                                          ]
                                        },
                                        1
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<APPLY <GET .C ,C-RTN>>",
                                  "Form": [
                                    {
                                      "Atom": "APPLY"
                                    },
                                    {
                                      "Zil": "<GET .C ,C-RTN>",
                                      "Form": [
                                        {
                                          "Atom": "GET"
                                        },
                                        {
                                          "Zil": ".C",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "C"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",C-RTN",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "C-RTN"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET FLG T>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "FLG"
                                },
                                {
                                  "Atom": "T"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<SET C <REST .C ,C-INTLEN>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "C"
              },
              {
                "Zil": "<REST .C ,C-INTLEN>",
                "Form": [
                  {
                    "Atom": "REST"
                  },
                  {
                    "Zil": ".C",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "C"
                      }
                    ]
                  },
                  {
                    "Zil": ",C-INTLEN",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "C-INTLEN"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GMAIN.zil:34",
    "Name": "MAIN-LOOP",
    "ArgSpec": "(\"AUX\" TRASH)",
    "Body": [
      {
        "Zil": "<REPEAT () <SET TRASH <MAIN-LOOP-1>>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<SET TRASH <MAIN-LOOP-1>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "TRASH"
              },
              {
                "Zil": "<MAIN-LOOP-1>",
                "Form": [
                  {
                    "Atom": "MAIN-LOOP-1"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GMAIN.zil:38",
    "Name": "MAIN-LOOP-1",
    "ArgSpec": "(\"AUX\" ICNT OCNT NUM CNT OBJ TBL V PTBL OBJ1 TMP O I)",
    "Body": [
      {
        "Zil": "<SET CNT 0>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "CNT"
          },
          0
        ]
      },
      {
        "Zil": "<SET OBJ <>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OBJ"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<SET PTBL T>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "PTBL"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<COND (<SETG P-WON <PARSER>> <SET ICNT <GET ,P-PRSI ,P-MATCHLEN>> <SET OCNT <GET ,P-PRSO ,P-MATCHLEN>> <COND (<AND ,P-IT-OBJECT <ACCESSIBLE? ,P-IT-OBJECT>> <SET TMP <>> <REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> .ICNT> <RETURN>) (T <COND (<EQUAL? <GET ,P-PRSI .CNT> ,IT> <PUT ,P-PRSI .CNT ,P-IT-OBJECT> <SET TMP T> <RETURN>)>)>> <COND (<NOT .TMP> <SET CNT 0> <REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> .OCNT> <RETURN>) (T <COND (<EQUAL? <GET ,P-PRSO .CNT> ,IT> <PUT ,P-PRSO .CNT ,P-IT-OBJECT> <RETURN>)>)>>)> <SET CNT 0>)> <SET NUM <COND (<0? .OCNT> .OCNT) (<G? .OCNT 1> <SET TBL ,P-PRSO> <COND (<0? .ICNT> <SET OBJ <>>) (T <SET OBJ <GET ,P-PRSI 1>>)> .OCNT) (<G? .ICNT 1> <SET PTBL <>> <SET TBL ,P-PRSI> <SET OBJ <GET ,P-PRSO 1>> .ICNT) (T 1)>> <COND (<AND <NOT .OBJ> <1? .ICNT>> <SET OBJ <GET ,P-PRSI 1>>)> <COND (<AND <==? ,PRSA ,V?WALK> <NOT <ZERO? ,P-WALK-DIR>>> <SET V <PERFORM ,PRSA ,PRSO>>) (<0? .NUM> <COND (<0? <BAND <GETB ,P-SYNTAX ,P-SBITS> ,P-SONUMS>> <SET V <PERFORM ,PRSA>> <SETG PRSO <>>) (<NOT ,LIT> <TELL \"It's too dark to see.\" CR>) (T <TELL \"It's not clear what you're referring to.\" CR> <SET V <>>)>) (T <SETG P-NOT-HERE 0> <SETG P-MULT <>> <COND (<G? .NUM 1> <SETG P-MULT T>)> <SET TMP <>> <REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> .NUM> <COND (<G? ,P-NOT-HERE 0> <TELL \"The \"> <COND (<NOT <EQUAL? ,P-NOT-HERE .NUM>> <TELL \"other \">)> <TELL \"object\"> <COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"s\">)> <TELL \" that you mentioned \"> <COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"are\">) (T <TELL \"is\">)> <TELL \"n't here.\" CR>) (<NOT .TMP> <TELL \"There's nothing here you can take.\" CR>)> <RETURN>) (T <COND (.PTBL <SET OBJ1 <GET ,P-PRSO .CNT>>) (T <SET OBJ1 <GET ,P-PRSI .CNT>>)> <SET O <COND (.PTBL .OBJ1) (T .OBJ)>> <SET I <COND (.PTBL .OBJ) (T .OBJ1)>> <COND (<OR <G? .NUM 1> <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL>> <SET V <LOC ,WINNER>> <COND (<EQUAL? .O ,NOT-HERE-OBJECT> <SETG P-NOT-HERE <+ ,P-NOT-HERE 1>> <AGAIN>) (<AND <VERB? TAKE> .I <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL> <NOT <IN? .O .I>>> <AGAIN>) (<AND <EQUAL? ,P-GETFLAGS ,P-ALL> <VERB? TAKE> <OR <AND <NOT <EQUAL? <LOC .O> ,WINNER ,HERE .V>> <NOT <EQUAL? <LOC .O> .I>> <NOT <FSET? <LOC .O> ,SURFACEBIT>>> <NOT <OR <FSET? .O ,TAKEBIT> <FSET? .O ,TRYTAKEBIT>>>>> <AGAIN>) (ELSE <COND (<EQUAL? .OBJ1 ,IT> <PRINTD ,P-IT-OBJECT>) (T <PRINTD .OBJ1>)> <TELL \": \">)>)> <SETG PRSO .O> <SETG PRSI .I> <SET TMP T> <SET V <PERFORM ,PRSA ,PRSO ,PRSI>> <COND (<==? .V ,M-FATAL> <RETURN>)>)>>)> <COND (<NOT <==? .V ,M-FATAL>> <SET V <APPLY <GETP <LOC ,WINNER> ,P?ACTION> ,M-END>>)> <COND (<==? .V ,M-FATAL> <SETG P-CONT <>>)>) (T <SETG P-CONT <>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SETG P-WON <PARSER>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-WON"
                },
                {
                  "Zil": "<PARSER>",
                  "Form": [
                    {
                      "Atom": "PARSER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET ICNT <GET ,P-PRSI ,P-MATCHLEN>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "ICNT"
                },
                {
                  "Zil": "<GET ,P-PRSI ,P-MATCHLEN>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-MATCHLEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-MATCHLEN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET OCNT <GET ,P-PRSO ,P-MATCHLEN>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "OCNT"
                },
                {
                  "Zil": "<GET ,P-PRSO ,P-MATCHLEN>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-MATCHLEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-MATCHLEN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND ,P-IT-OBJECT <ACCESSIBLE? ,P-IT-OBJECT>> <SET TMP <>> <REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> .ICNT> <RETURN>) (T <COND (<EQUAL? <GET ,P-PRSI .CNT> ,IT> <PUT ,P-PRSI .CNT ,P-IT-OBJECT> <SET TMP T> <RETURN>)>)>> <COND (<NOT .TMP> <SET CNT 0> <REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> .OCNT> <RETURN>) (T <COND (<EQUAL? <GET ,P-PRSO .CNT> ,IT> <PUT ,P-PRSO .CNT ,P-IT-OBJECT> <RETURN>)>)>>)> <SET CNT 0>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND ,P-IT-OBJECT <ACCESSIBLE? ,P-IT-OBJECT>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ",P-IT-OBJECT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-IT-OBJECT"
                          }
                        ]
                      },
                      {
                        "Zil": "<ACCESSIBLE? ,P-IT-OBJECT>",
                        "Form": [
                          {
                            "Atom": "ACCESSIBLE?"
                          },
                          {
                            "Zil": ",P-IT-OBJECT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-IT-OBJECT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET TMP <>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "TMP"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> .ICNT> <RETURN>) (T <COND (<EQUAL? <GET ,P-PRSI .CNT> ,IT> <PUT ,P-PRSI .CNT ,P-IT-OBJECT> <SET TMP T> <RETURN>)>)>>",
                    "Form": [
                      {
                        "Atom": "REPEAT"
                      },
                      [],
                      {
                        "Zil": "<COND (<G? <SET CNT <+ .CNT 1>> .ICNT> <RETURN>) (T <COND (<EQUAL? <GET ,P-PRSI .CNT> ,IT> <PUT ,P-PRSI .CNT ,P-IT-OBJECT> <SET TMP T> <RETURN>)>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<G? <SET CNT <+ .CNT 1>> .ICNT>",
                              "Form": [
                                {
                                  "Atom": "G?"
                                },
                                {
                                  "Zil": "<SET CNT <+ .CNT 1>>",
                                  "Form": [
                                    {
                                      "Atom": "SET"
                                    },
                                    {
                                      "Atom": "CNT"
                                    },
                                    {
                                      "Zil": "<+ .CNT 1>",
                                      "Form": [
                                        {
                                          "Atom": "+"
                                        },
                                        {
                                          "Zil": ".CNT",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "CNT"
                                            }
                                          ]
                                        },
                                        1
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".ICNT",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "ICNT"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<RETURN>",
                              "Form": [
                                {
                                  "Atom": "RETURN"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            {
                              "Zil": "<COND (<EQUAL? <GET ,P-PRSI .CNT> ,IT> <PUT ,P-PRSI .CNT ,P-IT-OBJECT> <SET TMP T> <RETURN>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<EQUAL? <GET ,P-PRSI .CNT> ,IT>",
                                    "Form": [
                                      {
                                        "Atom": "EQUAL?"
                                      },
                                      {
                                        "Zil": "<GET ,P-PRSI .CNT>",
                                        "Form": [
                                          {
                                            "Atom": "GET"
                                          },
                                          {
                                            "Zil": ",P-PRSI",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-PRSI"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ".CNT",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "CNT"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",IT",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "IT"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<PUT ,P-PRSI .CNT ,P-IT-OBJECT>",
                                    "Form": [
                                      {
                                        "Atom": "PUT"
                                      },
                                      {
                                        "Zil": ",P-PRSI",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-PRSI"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ".CNT",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "CNT"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",P-IT-OBJECT",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-IT-OBJECT"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SET TMP T>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "TMP"
                                      },
                                      {
                                        "Atom": "T"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RETURN>",
                                    "Form": [
                                      {
                                        "Atom": "RETURN"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<NOT .TMP> <SET CNT 0> <REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> .OCNT> <RETURN>) (T <COND (<EQUAL? <GET ,P-PRSO .CNT> ,IT> <PUT ,P-PRSO .CNT ,P-IT-OBJECT> <RETURN>)>)>>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<NOT .TMP>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": ".TMP",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "TMP"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SET CNT 0>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "CNT"
                            },
                            0
                          ]
                        },
                        {
                          "Zil": "<REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> .OCNT> <RETURN>) (T <COND (<EQUAL? <GET ,P-PRSO .CNT> ,IT> <PUT ,P-PRSO .CNT ,P-IT-OBJECT> <RETURN>)>)>>",
                          "Form": [
                            {
                              "Atom": "REPEAT"
                            },
                            [],
                            {
                              "Zil": "<COND (<G? <SET CNT <+ .CNT 1>> .OCNT> <RETURN>) (T <COND (<EQUAL? <GET ,P-PRSO .CNT> ,IT> <PUT ,P-PRSO .CNT ,P-IT-OBJECT> <RETURN>)>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<G? <SET CNT <+ .CNT 1>> .OCNT>",
                                    "Form": [
                                      {
                                        "Atom": "G?"
                                      },
                                      {
                                        "Zil": "<SET CNT <+ .CNT 1>>",
                                        "Form": [
                                          {
                                            "Atom": "SET"
                                          },
                                          {
                                            "Atom": "CNT"
                                          },
                                          {
                                            "Zil": "<+ .CNT 1>",
                                            "Form": [
                                              {
                                                "Atom": "+"
                                              },
                                              {
                                                "Zil": ".CNT",
                                                "Form": [
                                                  {
                                                    "Atom": "LVAL"
                                                  },
                                                  {
                                                    "Atom": "CNT"
                                                  }
                                                ]
                                              },
                                              1
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ".OCNT",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "OCNT"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RETURN>",
                                    "Form": [
                                      {
                                        "Atom": "RETURN"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  {
                                    "Zil": "<COND (<EQUAL? <GET ,P-PRSO .CNT> ,IT> <PUT ,P-PRSO .CNT ,P-IT-OBJECT> <RETURN>)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": "<EQUAL? <GET ,P-PRSO .CNT> ,IT>",
                                          "Form": [
                                            {
                                              "Atom": "EQUAL?"
                                            },
                                            {
                                              "Zil": "<GET ,P-PRSO .CNT>",
                                              "Form": [
                                                {
                                                  "Atom": "GET"
                                                },
                                                {
                                                  "Zil": ",P-PRSO",
                                                  "Form": [
                                                    {
                                                      "Atom": "GVAL"
                                                    },
                                                    {
                                                      "Atom": "P-PRSO"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "Zil": ".CNT",
                                                  "Form": [
                                                    {
                                                      "Atom": "LVAL"
                                                    },
                                                    {
                                                      "Atom": "CNT"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",IT",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "IT"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<PUT ,P-PRSO .CNT ,P-IT-OBJECT>",
                                          "Form": [
                                            {
                                              "Atom": "PUT"
                                            },
                                            {
                                              "Zil": ",P-PRSO",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "P-PRSO"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ".CNT",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "CNT"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",P-IT-OBJECT",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "P-IT-OBJECT"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<RETURN>",
                                          "Form": [
                                            {
                                              "Atom": "RETURN"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<SET CNT 0>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "CNT"
                      },
                      0
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SET NUM <COND (<0? .OCNT> .OCNT) (<G? .OCNT 1> <SET TBL ,P-PRSO> <COND (<0? .ICNT> <SET OBJ <>>) (T <SET OBJ <GET ,P-PRSI 1>>)> .OCNT) (<G? .ICNT 1> <SET PTBL <>> <SET TBL ,P-PRSI> <SET OBJ <GET ,P-PRSO 1>> .ICNT) (T 1)>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "NUM"
                },
                {
                  "Zil": "<COND (<0? .OCNT> .OCNT) (<G? .OCNT 1> <SET TBL ,P-PRSO> <COND (<0? .ICNT> <SET OBJ <>>) (T <SET OBJ <GET ,P-PRSI 1>>)> .OCNT) (<G? .ICNT 1> <SET PTBL <>> <SET TBL ,P-PRSI> <SET OBJ <GET ,P-PRSO 1>> .ICNT) (T 1)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<0? .OCNT>",
                        "Form": [
                          {
                            "Atom": "0?"
                          },
                          {
                            "Zil": ".OCNT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "OCNT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ".OCNT",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OCNT"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<G? .OCNT 1>",
                        "Form": [
                          {
                            "Atom": "G?"
                          },
                          {
                            "Zil": ".OCNT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "OCNT"
                              }
                            ]
                          },
                          1
                        ]
                      },
                      {
                        "Zil": "<SET TBL ,P-PRSO>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "TBL"
                          },
                          {
                            "Zil": ",P-PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-PRSO"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<0? .ICNT> <SET OBJ <>>) (T <SET OBJ <GET ,P-PRSI 1>>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<0? .ICNT>",
                              "Form": [
                                {
                                  "Atom": "0?"
                                },
                                {
                                  "Zil": ".ICNT",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "ICNT"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET OBJ <>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "OBJ"
                                },
                                {
                                  "Zil": "<>",
                                  "Form": []
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            {
                              "Zil": "<SET OBJ <GET ,P-PRSI 1>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "OBJ"
                                },
                                {
                                  "Zil": "<GET ,P-PRSI 1>",
                                  "Form": [
                                    {
                                      "Atom": "GET"
                                    },
                                    {
                                      "Zil": ",P-PRSI",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-PRSI"
                                        }
                                      ]
                                    },
                                    1
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": ".OCNT",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OCNT"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<G? .ICNT 1>",
                        "Form": [
                          {
                            "Atom": "G?"
                          },
                          {
                            "Zil": ".ICNT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "ICNT"
                              }
                            ]
                          },
                          1
                        ]
                      },
                      {
                        "Zil": "<SET PTBL <>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "PTBL"
                          },
                          {
                            "Zil": "<>",
                            "Form": []
                          }
                        ]
                      },
                      {
                        "Zil": "<SET TBL ,P-PRSI>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "TBL"
                          },
                          {
                            "Zil": ",P-PRSI",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-PRSI"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET OBJ <GET ,P-PRSO 1>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "OBJ"
                          },
                          {
                            "Zil": "<GET ,P-PRSO 1>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",P-PRSO",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-PRSO"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ".ICNT",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "ICNT"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      1
                    ]
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND <NOT .OBJ> <1? .ICNT>> <SET OBJ <GET ,P-PRSI 1>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <NOT .OBJ> <1? .ICNT>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<NOT .OBJ>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".OBJ",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "OBJ"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<1? .ICNT>",
                        "Form": [
                          {
                            "Atom": "1?"
                          },
                          {
                            "Zil": ".ICNT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "ICNT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET OBJ <GET ,P-PRSI 1>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "OBJ"
                      },
                      {
                        "Zil": "<GET ,P-PRSI 1>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-PRSI",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-PRSI"
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<AND <==? ,PRSA ,V?WALK> <NOT <ZERO? ,P-WALK-DIR>>> <SET V <PERFORM ,PRSA ,PRSO>>) (<0? .NUM> <COND (<0? <BAND <GETB ,P-SYNTAX ,P-SBITS> ,P-SONUMS>> <SET V <PERFORM ,PRSA>> <SETG PRSO <>>) (<NOT ,LIT> <TELL \"It's too dark to see.\" CR>) (T <TELL \"It's not clear what you're referring to.\" CR> <SET V <>>)>) (T <SETG P-NOT-HERE 0> <SETG P-MULT <>> <COND (<G? .NUM 1> <SETG P-MULT T>)> <SET TMP <>> <REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> .NUM> <COND (<G? ,P-NOT-HERE 0> <TELL \"The \"> <COND (<NOT <EQUAL? ,P-NOT-HERE .NUM>> <TELL \"other \">)> <TELL \"object\"> <COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"s\">)> <TELL \" that you mentioned \"> <COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"are\">) (T <TELL \"is\">)> <TELL \"n't here.\" CR>) (<NOT .TMP> <TELL \"There's nothing here you can take.\" CR>)> <RETURN>) (T <COND (.PTBL <SET OBJ1 <GET ,P-PRSO .CNT>>) (T <SET OBJ1 <GET ,P-PRSI .CNT>>)> <SET O <COND (.PTBL .OBJ1) (T .OBJ)>> <SET I <COND (.PTBL .OBJ) (T .OBJ1)>> <COND (<OR <G? .NUM 1> <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL>> <SET V <LOC ,WINNER>> <COND (<EQUAL? .O ,NOT-HERE-OBJECT> <SETG P-NOT-HERE <+ ,P-NOT-HERE 1>> <AGAIN>) (<AND <VERB? TAKE> .I <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL> <NOT <IN? .O .I>>> <AGAIN>) (<AND <EQUAL? ,P-GETFLAGS ,P-ALL> <VERB? TAKE> <OR <AND <NOT <EQUAL? <LOC .O> ,WINNER ,HERE .V>> <NOT <EQUAL? <LOC .O> .I>> <NOT <FSET? <LOC .O> ,SURFACEBIT>>> <NOT <OR <FSET? .O ,TAKEBIT> <FSET? .O ,TRYTAKEBIT>>>>> <AGAIN>) (ELSE <COND (<EQUAL? .OBJ1 ,IT> <PRINTD ,P-IT-OBJECT>) (T <PRINTD .OBJ1>)> <TELL \": \">)>)> <SETG PRSO .O> <SETG PRSI .I> <SET TMP T> <SET V <PERFORM ,PRSA ,PRSO ,PRSI>> <COND (<==? .V ,M-FATAL> <RETURN>)>)>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <==? ,PRSA ,V?WALK> <NOT <ZERO? ,P-WALK-DIR>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<==? ,PRSA ,V?WALK>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",PRSA",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSA"
                              }
                            ]
                          },
                          {
                            "Zil": ",V?WALK",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "V?WALK"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <ZERO? ,P-WALK-DIR>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<ZERO? ,P-WALK-DIR>",
                            "Form": [
                              {
                                "Atom": "ZERO?"
                              },
                              {
                                "Zil": ",P-WALK-DIR",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-WALK-DIR"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET V <PERFORM ,PRSA ,PRSO>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "V"
                      },
                      {
                        "Zil": "<PERFORM ,PRSA ,PRSO>",
                        "Form": [
                          {
                            "Atom": "PERFORM"
                          },
                          {
                            "Zil": ",PRSA",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSA"
                              }
                            ]
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<0? .NUM>",
                    "Form": [
                      {
                        "Atom": "0?"
                      },
                      {
                        "Zil": ".NUM",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NUM"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<0? <BAND <GETB ,P-SYNTAX ,P-SBITS> ,P-SONUMS>> <SET V <PERFORM ,PRSA>> <SETG PRSO <>>) (<NOT ,LIT> <TELL \"It's too dark to see.\" CR>) (T <TELL \"It's not clear what you're referring to.\" CR> <SET V <>>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<0? <BAND <GETB ,P-SYNTAX ,P-SBITS> ,P-SONUMS>>",
                          "Form": [
                            {
                              "Atom": "0?"
                            },
                            {
                              "Zil": "<BAND <GETB ,P-SYNTAX ,P-SBITS> ,P-SONUMS>",
                              "Form": [
                                {
                                  "Atom": "BAND"
                                },
                                {
                                  "Zil": "<GETB ,P-SYNTAX ,P-SBITS>",
                                  "Form": [
                                    {
                                      "Atom": "GETB"
                                    },
                                    {
                                      "Zil": ",P-SYNTAX",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-SYNTAX"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P-SBITS",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-SBITS"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-SONUMS",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-SONUMS"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SET V <PERFORM ,PRSA>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "V"
                            },
                            {
                              "Zil": "<PERFORM ,PRSA>",
                              "Form": [
                                {
                                  "Atom": "PERFORM"
                                },
                                {
                                  "Zil": ",PRSA",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PRSA"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG PRSO <>>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "PRSO"
                            },
                            {
                              "Zil": "<>",
                              "Form": []
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<NOT ,LIT>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": ",LIT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "LIT"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"It's too dark to see.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "It's too dark to see.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"It's not clear what you're referring to.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "It's not clear what you're referring to.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<SET V <>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "V"
                            },
                            {
                              "Zil": "<>",
                              "Form": []
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SETG P-NOT-HERE 0>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-NOT-HERE"
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<SETG P-MULT <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-MULT"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<G? .NUM 1> <SETG P-MULT T>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<G? .NUM 1>",
                          "Form": [
                            {
                              "Atom": "G?"
                            },
                            {
                              "Zil": ".NUM",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "NUM"
                                }
                              ]
                            },
                            1
                          ]
                        },
                        {
                          "Zil": "<SETG P-MULT T>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "P-MULT"
                            },
                            {
                              "Atom": "T"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<SET TMP <>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "TMP"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> .NUM> <COND (<G? ,P-NOT-HERE 0> <TELL \"The \"> <COND (<NOT <EQUAL? ,P-NOT-HERE .NUM>> <TELL \"other \">)> <TELL \"object\"> <COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"s\">)> <TELL \" that you mentioned \"> <COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"are\">) (T <TELL \"is\">)> <TELL \"n't here.\" CR>) (<NOT .TMP> <TELL \"There's nothing here you can take.\" CR>)> <RETURN>) (T <COND (.PTBL <SET OBJ1 <GET ,P-PRSO .CNT>>) (T <SET OBJ1 <GET ,P-PRSI .CNT>>)> <SET O <COND (.PTBL .OBJ1) (T .OBJ)>> <SET I <COND (.PTBL .OBJ) (T .OBJ1)>> <COND (<OR <G? .NUM 1> <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL>> <SET V <LOC ,WINNER>> <COND (<EQUAL? .O ,NOT-HERE-OBJECT> <SETG P-NOT-HERE <+ ,P-NOT-HERE 1>> <AGAIN>) (<AND <VERB? TAKE> .I <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL> <NOT <IN? .O .I>>> <AGAIN>) (<AND <EQUAL? ,P-GETFLAGS ,P-ALL> <VERB? TAKE> <OR <AND <NOT <EQUAL? <LOC .O> ,WINNER ,HERE .V>> <NOT <EQUAL? <LOC .O> .I>> <NOT <FSET? <LOC .O> ,SURFACEBIT>>> <NOT <OR <FSET? .O ,TAKEBIT> <FSET? .O ,TRYTAKEBIT>>>>> <AGAIN>) (ELSE <COND (<EQUAL? .OBJ1 ,IT> <PRINTD ,P-IT-OBJECT>) (T <PRINTD .OBJ1>)> <TELL \": \">)>)> <SETG PRSO .O> <SETG PRSI .I> <SET TMP T> <SET V <PERFORM ,PRSA ,PRSO ,PRSI>> <COND (<==? .V ,M-FATAL> <RETURN>)>)>>",
                    "Form": [
                      {
                        "Atom": "REPEAT"
                      },
                      [],
                      {
                        "Zil": "<COND (<G? <SET CNT <+ .CNT 1>> .NUM> <COND (<G? ,P-NOT-HERE 0> <TELL \"The \"> <COND (<NOT <EQUAL? ,P-NOT-HERE .NUM>> <TELL \"other \">)> <TELL \"object\"> <COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"s\">)> <TELL \" that you mentioned \"> <COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"are\">) (T <TELL \"is\">)> <TELL \"n't here.\" CR>) (<NOT .TMP> <TELL \"There's nothing here you can take.\" CR>)> <RETURN>) (T <COND (.PTBL <SET OBJ1 <GET ,P-PRSO .CNT>>) (T <SET OBJ1 <GET ,P-PRSI .CNT>>)> <SET O <COND (.PTBL .OBJ1) (T .OBJ)>> <SET I <COND (.PTBL .OBJ) (T .OBJ1)>> <COND (<OR <G? .NUM 1> <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL>> <SET V <LOC ,WINNER>> <COND (<EQUAL? .O ,NOT-HERE-OBJECT> <SETG P-NOT-HERE <+ ,P-NOT-HERE 1>> <AGAIN>) (<AND <VERB? TAKE> .I <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL> <NOT <IN? .O .I>>> <AGAIN>) (<AND <EQUAL? ,P-GETFLAGS ,P-ALL> <VERB? TAKE> <OR <AND <NOT <EQUAL? <LOC .O> ,WINNER ,HERE .V>> <NOT <EQUAL? <LOC .O> .I>> <NOT <FSET? <LOC .O> ,SURFACEBIT>>> <NOT <OR <FSET? .O ,TAKEBIT> <FSET? .O ,TRYTAKEBIT>>>>> <AGAIN>) (ELSE <COND (<EQUAL? .OBJ1 ,IT> <PRINTD ,P-IT-OBJECT>) (T <PRINTD .OBJ1>)> <TELL \": \">)>)> <SETG PRSO .O> <SETG PRSI .I> <SET TMP T> <SET V <PERFORM ,PRSA ,PRSO ,PRSI>> <COND (<==? .V ,M-FATAL> <RETURN>)>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<G? <SET CNT <+ .CNT 1>> .NUM>",
                              "Form": [
                                {
                                  "Atom": "G?"
                                },
                                {
                                  "Zil": "<SET CNT <+ .CNT 1>>",
                                  "Form": [
                                    {
                                      "Atom": "SET"
                                    },
                                    {
                                      "Atom": "CNT"
                                    },
                                    {
                                      "Zil": "<+ .CNT 1>",
                                      "Form": [
                                        {
                                          "Atom": "+"
                                        },
                                        {
                                          "Zil": ".CNT",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "CNT"
                                            }
                                          ]
                                        },
                                        1
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".NUM",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "NUM"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<G? ,P-NOT-HERE 0> <TELL \"The \"> <COND (<NOT <EQUAL? ,P-NOT-HERE .NUM>> <TELL \"other \">)> <TELL \"object\"> <COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"s\">)> <TELL \" that you mentioned \"> <COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"are\">) (T <TELL \"is\">)> <TELL \"n't here.\" CR>) (<NOT .TMP> <TELL \"There's nothing here you can take.\" CR>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<G? ,P-NOT-HERE 0>",
                                    "Form": [
                                      {
                                        "Atom": "G?"
                                      },
                                      {
                                        "Zil": ",P-NOT-HERE",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-NOT-HERE"
                                          }
                                        ]
                                      },
                                      0
                                    ]
                                  },
                                  {
                                    "Zil": "<TELL \"The \">",
                                    "Form": [
                                      {
                                        "Atom": "TELL"
                                      },
                                      "The "
                                    ]
                                  },
                                  {
                                    "Zil": "<COND (<NOT <EQUAL? ,P-NOT-HERE .NUM>> <TELL \"other \">)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": "<NOT <EQUAL? ,P-NOT-HERE .NUM>>",
                                          "Form": [
                                            {
                                              "Atom": "NOT"
                                            },
                                            {
                                              "Zil": "<EQUAL? ,P-NOT-HERE .NUM>",
                                              "Form": [
                                                {
                                                  "Atom": "EQUAL?"
                                                },
                                                {
                                                  "Zil": ",P-NOT-HERE",
                                                  "Form": [
                                                    {
                                                      "Atom": "GVAL"
                                                    },
                                                    {
                                                      "Atom": "P-NOT-HERE"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "Zil": ".NUM",
                                                  "Form": [
                                                    {
                                                      "Atom": "LVAL"
                                                    },
                                                    {
                                                      "Atom": "NUM"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<TELL \"other \">",
                                          "Form": [
                                            {
                                              "Atom": "TELL"
                                            },
                                            "other "
                                          ]
                                        }
                                      ]
                                    ]
                                  },
                                  {
                                    "Zil": "<TELL \"object\">",
                                    "Form": [
                                      {
                                        "Atom": "TELL"
                                      },
                                      "object"
                                    ]
                                  },
                                  {
                                    "Zil": "<COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"s\">)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": "<NOT <EQUAL? ,P-NOT-HERE 1>>",
                                          "Form": [
                                            {
                                              "Atom": "NOT"
                                            },
                                            {
                                              "Zil": "<EQUAL? ,P-NOT-HERE 1>",
                                              "Form": [
                                                {
                                                  "Atom": "EQUAL?"
                                                },
                                                {
                                                  "Zil": ",P-NOT-HERE",
                                                  "Form": [
                                                    {
                                                      "Atom": "GVAL"
                                                    },
                                                    {
                                                      "Atom": "P-NOT-HERE"
                                                    }
                                                  ]
                                                },
                                                1
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<TELL \"s\">",
                                          "Form": [
                                            {
                                              "Atom": "TELL"
                                            },
                                            "s"
                                          ]
                                        }
                                      ]
                                    ]
                                  },
                                  {
                                    "Zil": "<TELL \" that you mentioned \">",
                                    "Form": [
                                      {
                                        "Atom": "TELL"
                                      },
                                      " that you mentioned "
                                    ]
                                  },
                                  {
                                    "Zil": "<COND (<NOT <EQUAL? ,P-NOT-HERE 1>> <TELL \"are\">) (T <TELL \"is\">)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": "<NOT <EQUAL? ,P-NOT-HERE 1>>",
                                          "Form": [
                                            {
                                              "Atom": "NOT"
                                            },
                                            {
                                              "Zil": "<EQUAL? ,P-NOT-HERE 1>",
                                              "Form": [
                                                {
                                                  "Atom": "EQUAL?"
                                                },
                                                {
                                                  "Zil": ",P-NOT-HERE",
                                                  "Form": [
                                                    {
                                                      "Atom": "GVAL"
                                                    },
                                                    {
                                                      "Atom": "P-NOT-HERE"
                                                    }
                                                  ]
                                                },
                                                1
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<TELL \"are\">",
                                          "Form": [
                                            {
                                              "Atom": "TELL"
                                            },
                                            "are"
                                          ]
                                        }
                                      ],
                                      [
                                        {
                                          "Atom": "T"
                                        },
                                        {
                                          "Zil": "<TELL \"is\">",
                                          "Form": [
                                            {
                                              "Atom": "TELL"
                                            },
                                            "is"
                                          ]
                                        }
                                      ]
                                    ]
                                  },
                                  {
                                    "Zil": "<TELL \"n't here.\" CR>",
                                    "Form": [
                                      {
                                        "Atom": "TELL"
                                      },
                                      "n't here.",
                                      {
                                        "Atom": "CR"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Zil": "<NOT .TMP>",
                                    "Form": [
                                      {
                                        "Atom": "NOT"
                                      },
                                      {
                                        "Zil": ".TMP",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "TMP"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<TELL \"There's nothing here you can take.\" CR>",
                                    "Form": [
                                      {
                                        "Atom": "TELL"
                                      },
                                      "There's nothing here you can take.",
                                      {
                                        "Atom": "CR"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            },
                            {
                              "Zil": "<RETURN>",
                              "Form": [
                                {
                                  "Atom": "RETURN"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            {
                              "Zil": "<COND (.PTBL <SET OBJ1 <GET ,P-PRSO .CNT>>) (T <SET OBJ1 <GET ,P-PRSI .CNT>>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": ".PTBL",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "PTBL"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SET OBJ1 <GET ,P-PRSO .CNT>>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "OBJ1"
                                      },
                                      {
                                        "Zil": "<GET ,P-PRSO .CNT>",
                                        "Form": [
                                          {
                                            "Atom": "GET"
                                          },
                                          {
                                            "Zil": ",P-PRSO",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-PRSO"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ".CNT",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "CNT"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  {
                                    "Zil": "<SET OBJ1 <GET ,P-PRSI .CNT>>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "OBJ1"
                                      },
                                      {
                                        "Zil": "<GET ,P-PRSI .CNT>",
                                        "Form": [
                                          {
                                            "Atom": "GET"
                                          },
                                          {
                                            "Zil": ",P-PRSI",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-PRSI"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ".CNT",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "CNT"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              ]
                            },
                            {
                              "Zil": "<SET O <COND (.PTBL .OBJ1) (T .OBJ)>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "O"
                                },
                                {
                                  "Zil": "<COND (.PTBL .OBJ1) (T .OBJ)>",
                                  "Form": [
                                    {
                                      "Atom": "COND"
                                    },
                                    [
                                      {
                                        "Zil": ".PTBL",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "PTBL"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ".OBJ1",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "OBJ1"
                                          }
                                        ]
                                      }
                                    ],
                                    [
                                      {
                                        "Atom": "T"
                                      },
                                      {
                                        "Zil": ".OBJ",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "OBJ"
                                          }
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET I <COND (.PTBL .OBJ) (T .OBJ1)>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "I"
                                },
                                {
                                  "Zil": "<COND (.PTBL .OBJ) (T .OBJ1)>",
                                  "Form": [
                                    {
                                      "Atom": "COND"
                                    },
                                    [
                                      {
                                        "Zil": ".PTBL",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "PTBL"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ".OBJ",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "OBJ"
                                          }
                                        ]
                                      }
                                    ],
                                    [
                                      {
                                        "Atom": "T"
                                      },
                                      {
                                        "Zil": ".OBJ1",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "OBJ1"
                                          }
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<OR <G? .NUM 1> <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL>> <SET V <LOC ,WINNER>> <COND (<EQUAL? .O ,NOT-HERE-OBJECT> <SETG P-NOT-HERE <+ ,P-NOT-HERE 1>> <AGAIN>) (<AND <VERB? TAKE> .I <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL> <NOT <IN? .O .I>>> <AGAIN>) (<AND <EQUAL? ,P-GETFLAGS ,P-ALL> <VERB? TAKE> <OR <AND <NOT <EQUAL? <LOC .O> ,WINNER ,HERE .V>> <NOT <EQUAL? <LOC .O> .I>> <NOT <FSET? <LOC .O> ,SURFACEBIT>>> <NOT <OR <FSET? .O ,TAKEBIT> <FSET? .O ,TRYTAKEBIT>>>>> <AGAIN>) (ELSE <COND (<EQUAL? .OBJ1 ,IT> <PRINTD ,P-IT-OBJECT>) (T <PRINTD .OBJ1>)> <TELL \": \">)>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<OR <G? .NUM 1> <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL>>",
                                    "Form": [
                                      {
                                        "Atom": "OR"
                                      },
                                      {
                                        "Zil": "<G? .NUM 1>",
                                        "Form": [
                                          {
                                            "Atom": "G?"
                                          },
                                          {
                                            "Zil": ".NUM",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "NUM"
                                              }
                                            ]
                                          },
                                          1
                                        ]
                                      },
                                      {
                                        "Zil": "<EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL>",
                                        "Form": [
                                          {
                                            "Atom": "EQUAL?"
                                          },
                                          {
                                            "Zil": "<GET <GET ,P-ITBL ,P-NC1> 0>",
                                            "Form": [
                                              {
                                                "Atom": "GET"
                                              },
                                              {
                                                "Zil": "<GET ,P-ITBL ,P-NC1>",
                                                "Form": [
                                                  {
                                                    "Atom": "GET"
                                                  },
                                                  {
                                                    "Zil": ",P-ITBL",
                                                    "Form": [
                                                      {
                                                        "Atom": "GVAL"
                                                      },
                                                      {
                                                        "Atom": "P-ITBL"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "Zil": ",P-NC1",
                                                    "Form": [
                                                      {
                                                        "Atom": "GVAL"
                                                      },
                                                      {
                                                        "Atom": "P-NC1"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              0
                                            ]
                                          },
                                          {
                                            "Zil": ",W?ALL",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "W?ALL"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SET V <LOC ,WINNER>>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "V"
                                      },
                                      {
                                        "Zil": "<LOC ,WINNER>",
                                        "Form": [
                                          {
                                            "Atom": "LOC"
                                          },
                                          {
                                            "Zil": ",WINNER",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "WINNER"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<COND (<EQUAL? .O ,NOT-HERE-OBJECT> <SETG P-NOT-HERE <+ ,P-NOT-HERE 1>> <AGAIN>) (<AND <VERB? TAKE> .I <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL> <NOT <IN? .O .I>>> <AGAIN>) (<AND <EQUAL? ,P-GETFLAGS ,P-ALL> <VERB? TAKE> <OR <AND <NOT <EQUAL? <LOC .O> ,WINNER ,HERE .V>> <NOT <EQUAL? <LOC .O> .I>> <NOT <FSET? <LOC .O> ,SURFACEBIT>>> <NOT <OR <FSET? .O ,TAKEBIT> <FSET? .O ,TRYTAKEBIT>>>>> <AGAIN>) (ELSE <COND (<EQUAL? .OBJ1 ,IT> <PRINTD ,P-IT-OBJECT>) (T <PRINTD .OBJ1>)> <TELL \": \">)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": "<EQUAL? .O ,NOT-HERE-OBJECT>",
                                          "Form": [
                                            {
                                              "Atom": "EQUAL?"
                                            },
                                            {
                                              "Zil": ".O",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "O"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",NOT-HERE-OBJECT",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "NOT-HERE-OBJECT"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<SETG P-NOT-HERE <+ ,P-NOT-HERE 1>>",
                                          "Form": [
                                            {
                                              "Atom": "SETG"
                                            },
                                            {
                                              "Atom": "P-NOT-HERE"
                                            },
                                            {
                                              "Zil": "<+ ,P-NOT-HERE 1>",
                                              "Form": [
                                                {
                                                  "Atom": "+"
                                                },
                                                {
                                                  "Zil": ",P-NOT-HERE",
                                                  "Form": [
                                                    {
                                                      "Atom": "GVAL"
                                                    },
                                                    {
                                                      "Atom": "P-NOT-HERE"
                                                    }
                                                  ]
                                                },
                                                1
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<AGAIN>",
                                          "Form": [
                                            {
                                              "Atom": "AGAIN"
                                            }
                                          ]
                                        }
                                      ],
                                      [
                                        {
                                          "Zil": "<AND <VERB? TAKE> .I <EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL> <NOT <IN? .O .I>>>",
                                          "Form": [
                                            {
                                              "Atom": "AND"
                                            },
                                            {
                                              "Zil": "<VERB? TAKE>",
                                              "Form": [
                                                {
                                                  "Atom": "VERB?"
                                                },
                                                {
                                                  "Atom": "TAKE"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ".I",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "I"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": "<EQUAL? <GET <GET ,P-ITBL ,P-NC1> 0> ,W?ALL>",
                                              "Form": [
                                                {
                                                  "Atom": "EQUAL?"
                                                },
                                                {
                                                  "Zil": "<GET <GET ,P-ITBL ,P-NC1> 0>",
                                                  "Form": [
                                                    {
                                                      "Atom": "GET"
                                                    },
                                                    {
                                                      "Zil": "<GET ,P-ITBL ,P-NC1>",
                                                      "Form": [
                                                        {
                                                          "Atom": "GET"
                                                        },
                                                        {
                                                          "Zil": ",P-ITBL",
                                                          "Form": [
                                                            {
                                                              "Atom": "GVAL"
                                                            },
                                                            {
                                                              "Atom": "P-ITBL"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "Zil": ",P-NC1",
                                                          "Form": [
                                                            {
                                                              "Atom": "GVAL"
                                                            },
                                                            {
                                                              "Atom": "P-NC1"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    0
                                                  ]
                                                },
                                                {
                                                  "Zil": ",W?ALL",
                                                  "Form": [
                                                    {
                                                      "Atom": "GVAL"
                                                    },
                                                    {
                                                      "Atom": "W?ALL"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": "<NOT <IN? .O .I>>",
                                              "Form": [
                                                {
                                                  "Atom": "NOT"
                                                },
                                                {
                                                  "Zil": "<IN? .O .I>",
                                                  "Form": [
                                                    {
                                                      "Atom": "IN?"
                                                    },
                                                    {
                                                      "Zil": ".O",
                                                      "Form": [
                                                        {
                                                          "Atom": "LVAL"
                                                        },
                                                        {
                                                          "Atom": "O"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "Zil": ".I",
                                                      "Form": [
                                                        {
                                                          "Atom": "LVAL"
                                                        },
                                                        {
                                                          "Atom": "I"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<AGAIN>",
                                          "Form": [
                                            {
                                              "Atom": "AGAIN"
                                            }
                                          ]
                                        }
                                      ],
                                      [
                                        {
                                          "Zil": "<AND <EQUAL? ,P-GETFLAGS ,P-ALL> <VERB? TAKE> <OR <AND <NOT <EQUAL? <LOC .O> ,WINNER ,HERE .V>> <NOT <EQUAL? <LOC .O> .I>> <NOT <FSET? <LOC .O> ,SURFACEBIT>>> <NOT <OR <FSET? .O ,TAKEBIT> <FSET? .O ,TRYTAKEBIT>>>>>",
                                          "Form": [
                                            {
                                              "Atom": "AND"
                                            },
                                            {
                                              "Zil": "<EQUAL? ,P-GETFLAGS ,P-ALL>",
                                              "Form": [
                                                {
                                                  "Atom": "EQUAL?"
                                                },
                                                {
                                                  "Zil": ",P-GETFLAGS",
                                                  "Form": [
                                                    {
                                                      "Atom": "GVAL"
                                                    },
                                                    {
                                                      "Atom": "P-GETFLAGS"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "Zil": ",P-ALL",
                                                  "Form": [
                                                    {
                                                      "Atom": "GVAL"
                                                    },
                                                    {
                                                      "Atom": "P-ALL"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": "<VERB? TAKE>",
                                              "Form": [
                                                {
                                                  "Atom": "VERB?"
                                                },
                                                {
                                                  "Atom": "TAKE"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": "<OR <AND <NOT <EQUAL? <LOC .O> ,WINNER ,HERE .V>> <NOT <EQUAL? <LOC .O> .I>> <NOT <FSET? <LOC .O> ,SURFACEBIT>>> <NOT <OR <FSET? .O ,TAKEBIT> <FSET? .O ,TRYTAKEBIT>>>>",
                                              "Form": [
                                                {
                                                  "Atom": "OR"
                                                },
                                                {
                                                  "Zil": "<AND <NOT <EQUAL? <LOC .O> ,WINNER ,HERE .V>> <NOT <EQUAL? <LOC .O> .I>> <NOT <FSET? <LOC .O> ,SURFACEBIT>>>",
                                                  "Form": [
                                                    {
                                                      "Atom": "AND"
                                                    },
                                                    {
                                                      "Zil": "<NOT <EQUAL? <LOC .O> ,WINNER ,HERE .V>>",
                                                      "Form": [
                                                        {
                                                          "Atom": "NOT"
                                                        },
                                                        {
                                                          "Zil": "<EQUAL? <LOC .O> ,WINNER ,HERE .V>",
                                                          "Form": [
                                                            {
                                                              "Atom": "EQUAL?"
                                                            },
                                                            {
                                                              "Zil": "<LOC .O>",
                                                              "Form": [
                                                                {
                                                                  "Atom": "LOC"
                                                                },
                                                                {
                                                                  "Zil": ".O",
                                                                  "Form": [
                                                                    {
                                                                      "Atom": "LVAL"
                                                                    },
                                                                    {
                                                                      "Atom": "O"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "Zil": ",WINNER",
                                                              "Form": [
                                                                {
                                                                  "Atom": "GVAL"
                                                                },
                                                                {
                                                                  "Atom": "WINNER"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "Zil": ",HERE",
                                                              "Form": [
                                                                {
                                                                  "Atom": "GVAL"
                                                                },
                                                                {
                                                                  "Atom": "HERE"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "Zil": ".V",
                                                              "Form": [
                                                                {
                                                                  "Atom": "LVAL"
                                                                },
                                                                {
                                                                  "Atom": "V"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "Zil": "<NOT <EQUAL? <LOC .O> .I>>",
                                                      "Form": [
                                                        {
                                                          "Atom": "NOT"
                                                        },
                                                        {
                                                          "Zil": "<EQUAL? <LOC .O> .I>",
                                                          "Form": [
                                                            {
                                                              "Atom": "EQUAL?"
                                                            },
                                                            {
                                                              "Zil": "<LOC .O>",
                                                              "Form": [
                                                                {
                                                                  "Atom": "LOC"
                                                                },
                                                                {
                                                                  "Zil": ".O",
                                                                  "Form": [
                                                                    {
                                                                      "Atom": "LVAL"
                                                                    },
                                                                    {
                                                                      "Atom": "O"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "Zil": ".I",
                                                              "Form": [
                                                                {
                                                                  "Atom": "LVAL"
                                                                },
                                                                {
                                                                  "Atom": "I"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "Zil": "<NOT <FSET? <LOC .O> ,SURFACEBIT>>",
                                                      "Form": [
                                                        {
                                                          "Atom": "NOT"
                                                        },
                                                        {
                                                          "Zil": "<FSET? <LOC .O> ,SURFACEBIT>",
                                                          "Form": [
                                                            {
                                                              "Atom": "FSET?"
                                                            },
                                                            {
                                                              "Zil": "<LOC .O>",
                                                              "Form": [
                                                                {
                                                                  "Atom": "LOC"
                                                                },
                                                                {
                                                                  "Zil": ".O",
                                                                  "Form": [
                                                                    {
                                                                      "Atom": "LVAL"
                                                                    },
                                                                    {
                                                                      "Atom": "O"
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "Zil": ",SURFACEBIT",
                                                              "Form": [
                                                                {
                                                                  "Atom": "GVAL"
                                                                },
                                                                {
                                                                  "Atom": "SURFACEBIT"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "Zil": "<NOT <OR <FSET? .O ,TAKEBIT> <FSET? .O ,TRYTAKEBIT>>>",
                                                  "Form": [
                                                    {
                                                      "Atom": "NOT"
                                                    },
                                                    {
                                                      "Zil": "<OR <FSET? .O ,TAKEBIT> <FSET? .O ,TRYTAKEBIT>>",
                                                      "Form": [
                                                        {
                                                          "Atom": "OR"
                                                        },
                                                        {
                                                          "Zil": "<FSET? .O ,TAKEBIT>",
                                                          "Form": [
                                                            {
                                                              "Atom": "FSET?"
                                                            },
                                                            {
                                                              "Zil": ".O",
                                                              "Form": [
                                                                {
                                                                  "Atom": "LVAL"
                                                                },
                                                                {
                                                                  "Atom": "O"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "Zil": ",TAKEBIT",
                                                              "Form": [
                                                                {
                                                                  "Atom": "GVAL"
                                                                },
                                                                {
                                                                  "Atom": "TAKEBIT"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "Zil": "<FSET? .O ,TRYTAKEBIT>",
                                                          "Form": [
                                                            {
                                                              "Atom": "FSET?"
                                                            },
                                                            {
                                                              "Zil": ".O",
                                                              "Form": [
                                                                {
                                                                  "Atom": "LVAL"
                                                                },
                                                                {
                                                                  "Atom": "O"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "Zil": ",TRYTAKEBIT",
                                                              "Form": [
                                                                {
                                                                  "Atom": "GVAL"
                                                                },
                                                                {
                                                                  "Atom": "TRYTAKEBIT"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<AGAIN>",
                                          "Form": [
                                            {
                                              "Atom": "AGAIN"
                                            }
                                          ]
                                        }
                                      ],
                                      [
                                        {
                                          "Atom": "ELSE"
                                        },
                                        {
                                          "Zil": "<COND (<EQUAL? .OBJ1 ,IT> <PRINTD ,P-IT-OBJECT>) (T <PRINTD .OBJ1>)>",
                                          "Form": [
                                            {
                                              "Atom": "COND"
                                            },
                                            [
                                              {
                                                "Zil": "<EQUAL? .OBJ1 ,IT>",
                                                "Form": [
                                                  {
                                                    "Atom": "EQUAL?"
                                                  },
                                                  {
                                                    "Zil": ".OBJ1",
                                                    "Form": [
                                                      {
                                                        "Atom": "LVAL"
                                                      },
                                                      {
                                                        "Atom": "OBJ1"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "Zil": ",IT",
                                                    "Form": [
                                                      {
                                                        "Atom": "GVAL"
                                                      },
                                                      {
                                                        "Atom": "IT"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              {
                                                "Zil": "<PRINTD ,P-IT-OBJECT>",
                                                "Form": [
                                                  {
                                                    "Atom": "PRINTD"
                                                  },
                                                  {
                                                    "Zil": ",P-IT-OBJECT",
                                                    "Form": [
                                                      {
                                                        "Atom": "GVAL"
                                                      },
                                                      {
                                                        "Atom": "P-IT-OBJECT"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            [
                                              {
                                                "Atom": "T"
                                              },
                                              {
                                                "Zil": "<PRINTD .OBJ1>",
                                                "Form": [
                                                  {
                                                    "Atom": "PRINTD"
                                                  },
                                                  {
                                                    "Zil": ".OBJ1",
                                                    "Form": [
                                                      {
                                                        "Atom": "LVAL"
                                                      },
                                                      {
                                                        "Atom": "OBJ1"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ]
                                          ]
                                        },
                                        {
                                          "Zil": "<TELL \": \">",
                                          "Form": [
                                            {
                                              "Atom": "TELL"
                                            },
                                            ": "
                                          ]
                                        }
                                      ]
                                    ]
                                  }
                                ]
                              ]
                            },
                            {
                              "Zil": "<SETG PRSO .O>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "PRSO"
                                },
                                {
                                  "Zil": ".O",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "O"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG PRSI .I>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "PRSI"
                                },
                                {
                                  "Zil": ".I",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "I"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET TMP T>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "TMP"
                                },
                                {
                                  "Atom": "T"
                                }
                              ]
                            },
                            {
                              "Zil": "<SET V <PERFORM ,PRSA ,PRSO ,PRSI>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "V"
                                },
                                {
                                  "Zil": "<PERFORM ,PRSA ,PRSO ,PRSI>",
                                  "Form": [
                                    {
                                      "Atom": "PERFORM"
                                    },
                                    {
                                      "Zil": ",PRSA",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PRSA"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PRSO",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PRSO"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PRSI",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PRSI"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<==? .V ,M-FATAL> <RETURN>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<==? .V ,M-FATAL>",
                                    "Form": [
                                      {
                                        "Atom": "==?"
                                      },
                                      {
                                        "Zil": ".V",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "V"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",M-FATAL",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "M-FATAL"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RETURN>",
                                    "Form": [
                                      {
                                        "Atom": "RETURN"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<NOT <==? .V ,M-FATAL>> <SET V <APPLY <GETP <LOC ,WINNER> ,P?ACTION> ,M-END>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <==? .V ,M-FATAL>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<==? .V ,M-FATAL>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ".V",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "V"
                              }
                            ]
                          },
                          {
                            "Zil": ",M-FATAL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "M-FATAL"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET V <APPLY <GETP <LOC ,WINNER> ,P?ACTION> ,M-END>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "V"
                      },
                      {
                        "Zil": "<APPLY <GETP <LOC ,WINNER> ,P?ACTION> ,M-END>",
                        "Form": [
                          {
                            "Atom": "APPLY"
                          },
                          {
                            "Zil": "<GETP <LOC ,WINNER> ,P?ACTION>",
                            "Form": [
                              {
                                "Atom": "GETP"
                              },
                              {
                                "Zil": "<LOC ,WINNER>",
                                "Form": [
                                  {
                                    "Atom": "LOC"
                                  },
                                  {
                                    "Zil": ",WINNER",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "WINNER"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": ",P?ACTION",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P?ACTION"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": ",M-END",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "M-END"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<==? .V ,M-FATAL> <SETG P-CONT <>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? .V ,M-FATAL>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ".V",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "V"
                          }
                        ]
                      },
                      {
                        "Zil": ",M-FATAL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "M-FATAL"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-CONT <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-CONT"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SETG P-CONT <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-CONT"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT ,CLEFT-QUEUED?> <ENABLE <QUEUE I-CLEFT <+ 70 <RANDOM 70>>>> <SETG CLEFT-QUEUED? T>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,CLEFT-QUEUED?>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",CLEFT-QUEUED?",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLEFT-QUEUED?"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-CLEFT <+ 70 <RANDOM 70>>>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-CLEFT <+ 70 <RANDOM 70>>>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-CLEFT"
                    },
                    {
                      "Zil": "<+ 70 <RANDOM 70>>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        70,
                        {
                          "Zil": "<RANDOM 70>",
                          "Form": [
                            {
                              "Atom": "RANDOM"
                            },
                            70
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG CLEFT-QUEUED? T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CLEFT-QUEUED?"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (,P-WON <COND (<VERB? TELL BRIEF SUPER-BRIEF VERBOSE SAVE VERSION QUIT RESTART SCORE SCRIPT UNSCRIPT RESTORE> T) (T <SET V <CLOCKER>>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",P-WON",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "P-WON"
                }
              ]
            },
            {
              "Zil": "<COND (<VERB? TELL BRIEF SUPER-BRIEF VERBOSE SAVE VERSION QUIT RESTART SCORE SCRIPT UNSCRIPT RESTORE> T) (T <SET V <CLOCKER>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<VERB? TELL BRIEF SUPER-BRIEF VERBOSE SAVE VERSION QUIT RESTART SCORE SCRIPT UNSCRIPT RESTORE>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Atom": "BRIEF"
                      },
                      {
                        "Atom": "SUPER-BRIEF"
                      },
                      {
                        "Atom": "VERBOSE"
                      },
                      {
                        "Atom": "SAVE"
                      },
                      {
                        "Atom": "VERSION"
                      },
                      {
                        "Atom": "QUIT"
                      },
                      {
                        "Atom": "RESTART"
                      },
                      {
                        "Atom": "SCORE"
                      },
                      {
                        "Atom": "SCRIPT"
                      },
                      {
                        "Atom": "UNSCRIPT"
                      },
                      {
                        "Atom": "RESTORE"
                      }
                    ]
                  },
                  {
                    "Atom": "T"
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SET V <CLOCKER>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "V"
                      },
                      {
                        "Zil": "<CLOCKER>",
                        "Form": [
                          {
                            "Atom": "CLOCKER"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GMAIN.zil:180",
    "Name": "PERFORM",
    "ArgSpec": "(A \"OPT\" (O <>) (I <>) \"AUX\" V OA OO OI)",
    "Body": [
      {
        "Zil": "<SET OA ,PRSA>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OA"
          },
          {
            "Zil": ",PRSA",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSA"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET OO ,PRSO>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OO"
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET OI ,PRSI>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OI"
          },
          {
            "Zil": ",PRSI",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSI"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND <EQUAL? ,IT .I .O> <NOT <ACCESSIBLE? ,P-IT-OBJECT>>> <TELL \"I don't see what you are referring to.\" CR> <RFATAL>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <EQUAL? ,IT .I .O> <NOT <ACCESSIBLE? ,P-IT-OBJECT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<EQUAL? ,IT .I .O>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",IT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "IT"
                        }
                      ]
                    },
                    {
                      "Zil": ".I",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "I"
                        }
                      ]
                    },
                    {
                      "Zil": ".O",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "O"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <ACCESSIBLE? ,P-IT-OBJECT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<ACCESSIBLE? ,P-IT-OBJECT>",
                      "Form": [
                        {
                          "Atom": "ACCESSIBLE?"
                        },
                        {
                          "Zil": ",P-IT-OBJECT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-IT-OBJECT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"I don't see what you are referring to.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "I don't see what you are referring to.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFATAL>",
              "Form": [
                {
                  "Atom": "RFATAL"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<==? .O ,IT> <SET O ,P-IT-OBJECT>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .O ,IT>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".O",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "O"
                    }
                  ]
                },
                {
                  "Zil": ",IT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "IT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET O ,P-IT-OBJECT>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "O"
                },
                {
                  "Zil": ",P-IT-OBJECT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-IT-OBJECT"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<==? .I ,IT> <SET I ,P-IT-OBJECT>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .I ,IT>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".I",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "I"
                    }
                  ]
                },
                {
                  "Zil": ",IT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "IT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET I ,P-IT-OBJECT>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "I"
                },
                {
                  "Zil": ",P-IT-OBJECT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-IT-OBJECT"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG PRSA .A>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "PRSA"
          },
          {
            "Zil": ".A",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "A"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG PRSO .O>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "PRSO"
          },
          {
            "Zil": ".O",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "O"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND ,PRSO <NOT <EQUAL? ,PRSI ,IT>> <NOT <VERB? WALK>>> <SETG P-IT-OBJECT ,PRSO>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND ,PRSO <NOT <EQUAL? ,PRSI ,IT>> <NOT <VERB? WALK>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <EQUAL? ,PRSI ,IT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? ,PRSI ,IT>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ",PRSI",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSI"
                            }
                          ]
                        },
                        {
                          "Zil": ",IT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "IT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <VERB? WALK>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<VERB? WALK>",
                      "Form": [
                        {
                          "Atom": "VERB?"
                        },
                        {
                          "Atom": "WALK"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-IT-OBJECT ,PRSO>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-IT-OBJECT"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG PRSI .I>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "PRSI"
          },
          {
            "Zil": ".I",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "I"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND <EQUAL? ,NOT-HERE-OBJECT ,PRSO ,PRSI> <SET V <NOT-HERE-OBJECT-F>>> .V) (T <SET O ,PRSO> <SET I ,PRSI> <COND (<SET V <APPLY <GETP ,WINNER ,P?ACTION>>> .V) (<SET V <APPLY <GETP <LOC ,WINNER> ,P?ACTION> ,M-BEG>> .V) (<SET V <APPLY <GET ,PREACTIONS .A>>> .V) (<AND .I <SET V <APPLY <GETP .I ,P?ACTION>>>> .V) (<AND .O <NOT <==? .A ,V?WALK>> <LOC .O> <SET V <APPLY <GETP <LOC .O> ,P?CONTFCN>>>> .V) (<AND .O <NOT <==? .A ,V?WALK>> <SET V <APPLY <GETP .O ,P?ACTION>>>> .V) (<SET V <APPLY <GET ,ACTIONS .A>>> .V)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <EQUAL? ,NOT-HERE-OBJECT ,PRSO ,PRSI> <SET V <NOT-HERE-OBJECT-F>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<EQUAL? ,NOT-HERE-OBJECT ,PRSO ,PRSI>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",NOT-HERE-OBJECT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "NOT-HERE-OBJECT"
                        }
                      ]
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET V <NOT-HERE-OBJECT-F>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "V"
                    },
                    {
                      "Zil": "<NOT-HERE-OBJECT-F>",
                      "Form": [
                        {
                          "Atom": "NOT-HERE-OBJECT-F"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": ".V",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "V"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SET O ,PRSO>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "O"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET I ,PRSI>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "I"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<SET V <APPLY <GETP ,WINNER ,P?ACTION>>> .V) (<SET V <APPLY <GETP <LOC ,WINNER> ,P?ACTION> ,M-BEG>> .V) (<SET V <APPLY <GET ,PREACTIONS .A>>> .V) (<AND .I <SET V <APPLY <GETP .I ,P?ACTION>>>> .V) (<AND .O <NOT <==? .A ,V?WALK>> <LOC .O> <SET V <APPLY <GETP <LOC .O> ,P?CONTFCN>>>> .V) (<AND .O <NOT <==? .A ,V?WALK>> <SET V <APPLY <GETP .O ,P?ACTION>>>> .V) (<SET V <APPLY <GET ,ACTIONS .A>>> .V)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<SET V <APPLY <GETP ,WINNER ,P?ACTION>>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "V"
                      },
                      {
                        "Zil": "<APPLY <GETP ,WINNER ,P?ACTION>>",
                        "Form": [
                          {
                            "Atom": "APPLY"
                          },
                          {
                            "Zil": "<GETP ,WINNER ,P?ACTION>",
                            "Form": [
                              {
                                "Atom": "GETP"
                              },
                              {
                                "Zil": ",WINNER",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "WINNER"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P?ACTION",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P?ACTION"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": ".V",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "V"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<SET V <APPLY <GETP <LOC ,WINNER> ,P?ACTION> ,M-BEG>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "V"
                      },
                      {
                        "Zil": "<APPLY <GETP <LOC ,WINNER> ,P?ACTION> ,M-BEG>",
                        "Form": [
                          {
                            "Atom": "APPLY"
                          },
                          {
                            "Zil": "<GETP <LOC ,WINNER> ,P?ACTION>",
                            "Form": [
                              {
                                "Atom": "GETP"
                              },
                              {
                                "Zil": "<LOC ,WINNER>",
                                "Form": [
                                  {
                                    "Atom": "LOC"
                                  },
                                  {
                                    "Zil": ",WINNER",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "WINNER"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": ",P?ACTION",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P?ACTION"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": ",M-BEG",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "M-BEG"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": ".V",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "V"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<SET V <APPLY <GET ,PREACTIONS .A>>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "V"
                      },
                      {
                        "Zil": "<APPLY <GET ,PREACTIONS .A>>",
                        "Form": [
                          {
                            "Atom": "APPLY"
                          },
                          {
                            "Zil": "<GET ,PREACTIONS .A>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",PREACTIONS",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "PREACTIONS"
                                  }
                                ]
                              },
                              {
                                "Zil": ".A",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "A"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": ".V",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "V"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND .I <SET V <APPLY <GETP .I ,P?ACTION>>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ".I",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "I"
                          }
                        ]
                      },
                      {
                        "Zil": "<SET V <APPLY <GETP .I ,P?ACTION>>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "V"
                          },
                          {
                            "Zil": "<APPLY <GETP .I ,P?ACTION>>",
                            "Form": [
                              {
                                "Atom": "APPLY"
                              },
                              {
                                "Zil": "<GETP .I ,P?ACTION>",
                                "Form": [
                                  {
                                    "Atom": "GETP"
                                  },
                                  {
                                    "Zil": ".I",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "I"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P?ACTION",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P?ACTION"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": ".V",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "V"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND .O <NOT <==? .A ,V?WALK>> <LOC .O> <SET V <APPLY <GETP <LOC .O> ,P?CONTFCN>>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ".O",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "O"
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <==? .A ,V?WALK>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<==? .A ,V?WALK>",
                            "Form": [
                              {
                                "Atom": "==?"
                              },
                              {
                                "Zil": ".A",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "A"
                                  }
                                ]
                              },
                              {
                                "Zil": ",V?WALK",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "V?WALK"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<LOC .O>",
                        "Form": [
                          {
                            "Atom": "LOC"
                          },
                          {
                            "Zil": ".O",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "O"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET V <APPLY <GETP <LOC .O> ,P?CONTFCN>>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "V"
                          },
                          {
                            "Zil": "<APPLY <GETP <LOC .O> ,P?CONTFCN>>",
                            "Form": [
                              {
                                "Atom": "APPLY"
                              },
                              {
                                "Zil": "<GETP <LOC .O> ,P?CONTFCN>",
                                "Form": [
                                  {
                                    "Atom": "GETP"
                                  },
                                  {
                                    "Zil": "<LOC .O>",
                                    "Form": [
                                      {
                                        "Atom": "LOC"
                                      },
                                      {
                                        "Zil": ".O",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "O"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P?CONTFCN",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P?CONTFCN"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": ".V",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "V"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND .O <NOT <==? .A ,V?WALK>> <SET V <APPLY <GETP .O ,P?ACTION>>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ".O",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "O"
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <==? .A ,V?WALK>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<==? .A ,V?WALK>",
                            "Form": [
                              {
                                "Atom": "==?"
                              },
                              {
                                "Zil": ".A",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "A"
                                  }
                                ]
                              },
                              {
                                "Zil": ",V?WALK",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "V?WALK"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET V <APPLY <GETP .O ,P?ACTION>>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "V"
                          },
                          {
                            "Zil": "<APPLY <GETP .O ,P?ACTION>>",
                            "Form": [
                              {
                                "Atom": "APPLY"
                              },
                              {
                                "Zil": "<GETP .O ,P?ACTION>",
                                "Form": [
                                  {
                                    "Atom": "GETP"
                                  },
                                  {
                                    "Zil": ".O",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "O"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P?ACTION",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P?ACTION"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": ".V",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "V"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<SET V <APPLY <GET ,ACTIONS .A>>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "V"
                      },
                      {
                        "Zil": "<APPLY <GET ,ACTIONS .A>>",
                        "Form": [
                          {
                            "Atom": "APPLY"
                          },
                          {
                            "Zil": "<GET ,ACTIONS .A>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",ACTIONS",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "ACTIONS"
                                  }
                                ]
                              },
                              {
                                "Zil": ".A",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "A"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": ".V",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "V"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG PRSA .OA>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "PRSA"
          },
          {
            "Zil": ".OA",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "OA"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG PRSO .OO>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "PRSO"
          },
          {
            "Zil": ".OO",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "OO"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG PRSI .OI>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "PRSI"
          },
          {
            "Zil": ".OI",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "OI"
              }
            ]
          }
        ]
      },
      {
        "Zil": ".V",
        "Form": [
          {
            "Atom": "LVAL"
          },
          {
            "Atom": "V"
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:109",
    "Name": "PARSER",
    "ArgSpec": "(\"AUX\" (PTR ,P-LEXSTART) WRD (VAL 0) (VERB <>) (OF-FLAG <>) OWINNER OMERGED LEN (DIR <>) (NW 0) (LW 0) (CNT -1))",
    "Body": [
      {
        "Zil": "<REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> ,P-ITBLLEN> <RETURN>) (T <COND (<NOT ,P-OFLAG> <PUT ,P-OTBL .CNT <GET ,P-ITBL .CNT>>)> <PUT ,P-ITBL .CNT 0>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<G? <SET CNT <+ .CNT 1>> ,P-ITBLLEN> <RETURN>) (T <COND (<NOT ,P-OFLAG> <PUT ,P-OTBL .CNT <GET ,P-ITBL .CNT>>)> <PUT ,P-ITBL .CNT 0>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<G? <SET CNT <+ .CNT 1>> ,P-ITBLLEN>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": "<SET CNT <+ .CNT 1>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "CNT"
                        },
                        {
                          "Zil": "<+ .CNT 1>",
                          "Form": [
                            {
                              "Atom": "+"
                            },
                            {
                              "Zil": ".CNT",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "CNT"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",P-ITBLLEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBLLEN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<COND (<NOT ,P-OFLAG> <PUT ,P-OTBL .CNT <GET ,P-ITBL .CNT>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT ,P-OFLAG>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",P-OFLAG",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-OFLAG"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PUT ,P-OTBL .CNT <GET ,P-ITBL .CNT>>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ",P-OTBL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-OTBL"
                              }
                            ]
                          },
                          {
                            "Zil": ".CNT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "CNT"
                              }
                            ]
                          },
                          {
                            "Zil": "<GET ,P-ITBL .CNT>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",P-ITBL",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-ITBL"
                                  }
                                ]
                              },
                              {
                                "Zil": ".CNT",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "CNT"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<PUT ,P-ITBL .CNT 0>",
                  "Form": [
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    },
                    0
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Zil": "<SET OWINNER ,WINNER>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OWINNER"
          },
          {
            "Zil": ",WINNER",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "WINNER"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET OMERGED ,P-MERGED>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OMERGED"
          },
          {
            "Zil": ",P-MERGED",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MERGED"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG P-ADVERB <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-ADVERB"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<SETG P-MERGED <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-MERGED"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<SETG P-END-ON-PREP <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-END-ON-PREP"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<PUT ,P-PRSO ,P-MATCHLEN 0>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-PRSO"
              }
            ]
          },
          {
            "Zil": ",P-MATCHLEN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MATCHLEN"
              }
            ]
          },
          0
        ]
      },
      {
        "Zil": "<PUT ,P-PRSI ,P-MATCHLEN 0>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-PRSI",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-PRSI"
              }
            ]
          },
          {
            "Zil": ",P-MATCHLEN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MATCHLEN"
              }
            ]
          },
          0
        ]
      },
      {
        "Zil": "<PUT ,P-BUTS ,P-MATCHLEN 0>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-BUTS",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-BUTS"
              }
            ]
          },
          {
            "Zil": ",P-MATCHLEN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MATCHLEN"
              }
            ]
          },
          0
        ]
      },
      {
        "Zil": "<COND (<AND <NOT ,QUOTE-FLAG> <N==? ,WINNER ,PLAYER>> <SETG WINNER ,PLAYER> <SETG HERE <META-LOC ,PLAYER>> <SETG LIT <LIT? ,HERE>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <NOT ,QUOTE-FLAG> <N==? ,WINNER ,PLAYER>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT ,QUOTE-FLAG>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",QUOTE-FLAG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "QUOTE-FLAG"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<N==? ,WINNER ,PLAYER>",
                  "Form": [
                    {
                      "Atom": "N==?"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    },
                    {
                      "Zil": ",PLAYER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PLAYER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG WINNER ,PLAYER>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "WINNER"
                },
                {
                  "Zil": ",PLAYER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PLAYER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG HERE <META-LOC ,PLAYER>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "HERE"
                },
                {
                  "Zil": "<META-LOC ,PLAYER>",
                  "Form": [
                    {
                      "Atom": "META-LOC"
                    },
                    {
                      "Zil": ",PLAYER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PLAYER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG LIT <LIT? ,HERE>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "LIT"
                },
                {
                  "Zil": "<LIT? ,HERE>",
                  "Form": [
                    {
                      "Atom": "LIT?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (,RESERVE-PTR <SET PTR ,RESERVE-PTR> <STUFF ,RESERVE-LEXV ,P-LEXV> <COND (<AND <NOT ,SUPER-BRIEF> <EQUAL? ,PLAYER ,WINNER>> <CRLF>)> <SETG RESERVE-PTR <>> <SETG P-CONT <>>) (,P-CONT <SET PTR ,P-CONT> <COND (<AND <NOT ,SUPER-BRIEF> <EQUAL? ,PLAYER ,WINNER> <NOT <VERB? SAY>>> <CRLF>)> <SETG P-CONT <>>) (T <SETG WINNER ,PLAYER> <SETG QUOTE-FLAG <>> <COND (<NOT <FSET? <LOC ,WINNER> ,VEHBIT>> <SETG HERE <LOC ,WINNER>>)> <SETG LIT <LIT? ,HERE>> <COND (<NOT ,SUPER-BRIEF> <CRLF>)> <TELL \">\"> <READ ,P-INBUF ,P-LEXV>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",RESERVE-PTR",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "RESERVE-PTR"
                }
              ]
            },
            {
              "Zil": "<SET PTR ,RESERVE-PTR>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "PTR"
                },
                {
                  "Zil": ",RESERVE-PTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "RESERVE-PTR"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<STUFF ,RESERVE-LEXV ,P-LEXV>",
              "Form": [
                {
                  "Atom": "STUFF"
                },
                {
                  "Zil": ",RESERVE-LEXV",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "RESERVE-LEXV"
                    }
                  ]
                },
                {
                  "Zil": ",P-LEXV",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-LEXV"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND <NOT ,SUPER-BRIEF> <EQUAL? ,PLAYER ,WINNER>> <CRLF>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <NOT ,SUPER-BRIEF> <EQUAL? ,PLAYER ,WINNER>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<NOT ,SUPER-BRIEF>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",SUPER-BRIEF",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SUPER-BRIEF"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<EQUAL? ,PLAYER ,WINNER>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",PLAYER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PLAYER"
                              }
                            ]
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<CRLF>",
                    "Form": [
                      {
                        "Atom": "CRLF"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SETG RESERVE-PTR <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "RESERVE-PTR"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG P-CONT <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-CONT"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ],
          [
            {
              "Zil": ",P-CONT",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "P-CONT"
                }
              ]
            },
            {
              "Zil": "<SET PTR ,P-CONT>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "PTR"
                },
                {
                  "Zil": ",P-CONT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-CONT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND <NOT ,SUPER-BRIEF> <EQUAL? ,PLAYER ,WINNER> <NOT <VERB? SAY>>> <CRLF>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <NOT ,SUPER-BRIEF> <EQUAL? ,PLAYER ,WINNER> <NOT <VERB? SAY>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<NOT ,SUPER-BRIEF>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",SUPER-BRIEF",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SUPER-BRIEF"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<EQUAL? ,PLAYER ,WINNER>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",PLAYER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PLAYER"
                              }
                            ]
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <VERB? SAY>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<VERB? SAY>",
                            "Form": [
                              {
                                "Atom": "VERB?"
                              },
                              {
                                "Atom": "SAY"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<CRLF>",
                    "Form": [
                      {
                        "Atom": "CRLF"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SETG P-CONT <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-CONT"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SETG WINNER ,PLAYER>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "WINNER"
                },
                {
                  "Zil": ",PLAYER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PLAYER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG QUOTE-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "QUOTE-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <FSET? <LOC ,WINNER> ,VEHBIT>> <SETG HERE <LOC ,WINNER>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <FSET? <LOC ,WINNER> ,VEHBIT>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? <LOC ,WINNER> ,VEHBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": "<LOC ,WINNER>",
                            "Form": [
                              {
                                "Atom": "LOC"
                              },
                              {
                                "Zil": ",WINNER",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "WINNER"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": ",VEHBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "VEHBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG HERE <LOC ,WINNER>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "HERE"
                      },
                      {
                        "Zil": "<LOC ,WINNER>",
                        "Form": [
                          {
                            "Atom": "LOC"
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SETG LIT <LIT? ,HERE>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "LIT"
                },
                {
                  "Zil": "<LIT? ,HERE>",
                  "Form": [
                    {
                      "Atom": "LIT?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT ,SUPER-BRIEF> <CRLF>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,SUPER-BRIEF>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",SUPER-BRIEF",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SUPER-BRIEF"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<CRLF>",
                    "Form": [
                      {
                        "Atom": "CRLF"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \">\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                ">"
              ]
            },
            {
              "Zil": "<READ ,P-INBUF ,P-LEXV>",
              "Form": [
                {
                  "Atom": "READ"
                },
                {
                  "Zil": ",P-INBUF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-INBUF"
                    }
                  ]
                },
                {
                  "Zil": ",P-LEXV",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-LEXV"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG P-LEN <GETB ,P-LEXV ,P-LEXWORDS>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-LEN"
          },
          {
            "Zil": "<GETB ,P-LEXV ,P-LEXWORDS>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": ",P-LEXV",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-LEXV"
                  }
                ]
              },
              {
                "Zil": ",P-LEXWORDS",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-LEXWORDS"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<ZERO? ,P-LEN> <TELL \"I beg your pardon?\" CR> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<ZERO? ,P-LEN>",
              "Form": [
                {
                  "Atom": "ZERO?"
                },
                {
                  "Zil": ",P-LEN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-LEN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"I beg your pardon?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "I beg your pardon?",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<EQUAL? <SET WRD <GET ,P-LEXV .PTR>> ,W?OOPS> <COND (<EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?PERIOD ,W?COMMA> <SET PTR <+ .PTR ,P-LEXELEN>> <SETG P-LEN <- ,P-LEN 1>>)> <COND (<NOT <G? ,P-LEN 1>> <TELL \"I can't help your clumsiness.\" CR> <RFALSE>) (<GET ,OOPS-TABLE ,O-PTR> <COND (<AND <G? ,P-LEN 2> <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?QUOTE>> <TELL \"Sorry, you can't correct mistakes in quoted text.\" CR> <RFALSE>) (<G? ,P-LEN 2> <TELL \"Warning: only the first word after OOPS is used.\" CR>)> <PUT ,AGAIN-LEXV <GET ,OOPS-TABLE ,O-PTR> <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>> <SETG WINNER .OWINNER> <INBUF-ADD <GETB ,P-LEXV <+ <* .PTR ,P-LEXELEN> 6>> <GETB ,P-LEXV <+ <* .PTR ,P-LEXELEN> 7>> <+ <* <GET ,OOPS-TABLE ,O-PTR> ,P-LEXELEN> 3>> <STUFF ,AGAIN-LEXV ,P-LEXV> <SETG P-LEN <GETB ,P-LEXV ,P-LEXWORDS>> <SET PTR <GET ,OOPS-TABLE ,O-START>> <INBUF-STUFF ,OOPS-INBUF ,P-INBUF>) (T <PUT ,OOPS-TABLE ,O-END <>> <TELL \"There was no word to replace!\" CR> <RFALSE>)>) (T <COND (<NOT <EQUAL? .WRD ,W?AGAIN ,W?G>> <SETG P-NUMBER 0>)> <PUT ,OOPS-TABLE ,O-END <>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? <SET WRD <GET ,P-LEXV .PTR>> ,W?OOPS>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": "<SET WRD <GET ,P-LEXV .PTR>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "WRD"
                    },
                    {
                      "Zil": "<GET ,P-LEXV .PTR>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-LEXV",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-LEXV"
                            }
                          ]
                        },
                        {
                          "Zil": ".PTR",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "PTR"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",W?OOPS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "W?OOPS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?PERIOD ,W?COMMA> <SET PTR <+ .PTR ,P-LEXELEN>> <SETG P-LEN <- ,P-LEN 1>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?PERIOD ,W?COMMA>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": "<GET ,P-LEXV <+ .PTR ,P-LEXELEN>>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-LEXV",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEXV"
                              }
                            ]
                          },
                          {
                            "Zil": "<+ .PTR ,P-LEXELEN>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".PTR",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "PTR"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-LEXELEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-LEXELEN"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",W?PERIOD",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "W?PERIOD"
                          }
                        ]
                      },
                      {
                        "Zil": ",W?COMMA",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "W?COMMA"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET PTR <+ .PTR ,P-LEXELEN>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "PTR"
                      },
                      {
                        "Zil": "<+ .PTR ,P-LEXELEN>",
                        "Form": [
                          {
                            "Atom": "+"
                          },
                          {
                            "Zil": ".PTR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "PTR"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-LEXELEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEXELEN"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-LEN <- ,P-LEN 1>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-LEN"
                      },
                      {
                        "Zil": "<- ,P-LEN 1>",
                        "Form": [
                          {
                            "Atom": "-"
                          },
                          {
                            "Zil": ",P-LEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEN"
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<NOT <G? ,P-LEN 1>> <TELL \"I can't help your clumsiness.\" CR> <RFALSE>) (<GET ,OOPS-TABLE ,O-PTR> <COND (<AND <G? ,P-LEN 2> <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?QUOTE>> <TELL \"Sorry, you can't correct mistakes in quoted text.\" CR> <RFALSE>) (<G? ,P-LEN 2> <TELL \"Warning: only the first word after OOPS is used.\" CR>)> <PUT ,AGAIN-LEXV <GET ,OOPS-TABLE ,O-PTR> <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>> <SETG WINNER .OWINNER> <INBUF-ADD <GETB ,P-LEXV <+ <* .PTR ,P-LEXELEN> 6>> <GETB ,P-LEXV <+ <* .PTR ,P-LEXELEN> 7>> <+ <* <GET ,OOPS-TABLE ,O-PTR> ,P-LEXELEN> 3>> <STUFF ,AGAIN-LEXV ,P-LEXV> <SETG P-LEN <GETB ,P-LEXV ,P-LEXWORDS>> <SET PTR <GET ,OOPS-TABLE ,O-START>> <INBUF-STUFF ,OOPS-INBUF ,P-INBUF>) (T <PUT ,OOPS-TABLE ,O-END <>> <TELL \"There was no word to replace!\" CR> <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <G? ,P-LEN 1>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<G? ,P-LEN 1>",
                        "Form": [
                          {
                            "Atom": "G?"
                          },
                          {
                            "Zil": ",P-LEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEN"
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"I can't help your clumsiness.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "I can't help your clumsiness.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<GET ,OOPS-TABLE ,O-PTR>",
                    "Form": [
                      {
                        "Atom": "GET"
                      },
                      {
                        "Zil": ",OOPS-TABLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OOPS-TABLE"
                          }
                        ]
                      },
                      {
                        "Zil": ",O-PTR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "O-PTR"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<AND <G? ,P-LEN 2> <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?QUOTE>> <TELL \"Sorry, you can't correct mistakes in quoted text.\" CR> <RFALSE>) (<G? ,P-LEN 2> <TELL \"Warning: only the first word after OOPS is used.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<AND <G? ,P-LEN 2> <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?QUOTE>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": "<G? ,P-LEN 2>",
                              "Form": [
                                {
                                  "Atom": "G?"
                                },
                                {
                                  "Zil": ",P-LEN",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-LEN"
                                    }
                                  ]
                                },
                                2
                              ]
                            },
                            {
                              "Zil": "<EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?QUOTE>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": "<GET ,P-LEXV <+ .PTR ,P-LEXELEN>>",
                                  "Form": [
                                    {
                                      "Atom": "GET"
                                    },
                                    {
                                      "Zil": ",P-LEXV",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEXV"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<+ .PTR ,P-LEXELEN>",
                                      "Form": [
                                        {
                                          "Atom": "+"
                                        },
                                        {
                                          "Zil": ".PTR",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "PTR"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",P-LEXELEN",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "P-LEXELEN"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?QUOTE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?QUOTE"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"Sorry, you can't correct mistakes in quoted text.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Sorry, you can't correct mistakes in quoted text.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RFALSE>",
                          "Form": [
                            {
                              "Atom": "RFALSE"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<G? ,P-LEN 2>",
                          "Form": [
                            {
                              "Atom": "G?"
                            },
                            {
                              "Zil": ",P-LEN",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-LEN"
                                }
                              ]
                            },
                            2
                          ]
                        },
                        {
                          "Zil": "<TELL \"Warning: only the first word after OOPS is used.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Warning: only the first word after OOPS is used.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<PUT ,AGAIN-LEXV <GET ,OOPS-TABLE ,O-PTR> <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>>",
                    "Form": [
                      {
                        "Atom": "PUT"
                      },
                      {
                        "Zil": ",AGAIN-LEXV",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "AGAIN-LEXV"
                          }
                        ]
                      },
                      {
                        "Zil": "<GET ,OOPS-TABLE ,O-PTR>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",OOPS-TABLE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "OOPS-TABLE"
                              }
                            ]
                          },
                          {
                            "Zil": ",O-PTR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "O-PTR"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<GET ,P-LEXV <+ .PTR ,P-LEXELEN>>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-LEXV",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEXV"
                              }
                            ]
                          },
                          {
                            "Zil": "<+ .PTR ,P-LEXELEN>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".PTR",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "PTR"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-LEXELEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-LEXELEN"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG WINNER .OWINNER>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "WINNER"
                      },
                      {
                        "Zil": ".OWINNER",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OWINNER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<INBUF-ADD <GETB ,P-LEXV <+ <* .PTR ,P-LEXELEN> 6>> <GETB ,P-LEXV <+ <* .PTR ,P-LEXELEN> 7>> <+ <* <GET ,OOPS-TABLE ,O-PTR> ,P-LEXELEN> 3>>",
                    "Form": [
                      {
                        "Atom": "INBUF-ADD"
                      },
                      {
                        "Zil": "<GETB ,P-LEXV <+ <* .PTR ,P-LEXELEN> 6>>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ",P-LEXV",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEXV"
                              }
                            ]
                          },
                          {
                            "Zil": "<+ <* .PTR ,P-LEXELEN> 6>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": "<* .PTR ,P-LEXELEN>",
                                "Form": [
                                  {
                                    "Atom": "*"
                                  },
                                  {
                                    "Zil": ".PTR",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "PTR"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P-LEXELEN",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-LEXELEN"
                                      }
                                    ]
                                  }
                                ]
                              },
                              6
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<GETB ,P-LEXV <+ <* .PTR ,P-LEXELEN> 7>>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ",P-LEXV",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEXV"
                              }
                            ]
                          },
                          {
                            "Zil": "<+ <* .PTR ,P-LEXELEN> 7>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": "<* .PTR ,P-LEXELEN>",
                                "Form": [
                                  {
                                    "Atom": "*"
                                  },
                                  {
                                    "Zil": ".PTR",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "PTR"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P-LEXELEN",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-LEXELEN"
                                      }
                                    ]
                                  }
                                ]
                              },
                              7
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<+ <* <GET ,OOPS-TABLE ,O-PTR> ,P-LEXELEN> 3>",
                        "Form": [
                          {
                            "Atom": "+"
                          },
                          {
                            "Zil": "<* <GET ,OOPS-TABLE ,O-PTR> ,P-LEXELEN>",
                            "Form": [
                              {
                                "Atom": "*"
                              },
                              {
                                "Zil": "<GET ,OOPS-TABLE ,O-PTR>",
                                "Form": [
                                  {
                                    "Atom": "GET"
                                  },
                                  {
                                    "Zil": ",OOPS-TABLE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "OOPS-TABLE"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",O-PTR",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "O-PTR"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-LEXELEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-LEXELEN"
                                  }
                                ]
                              }
                            ]
                          },
                          3
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<STUFF ,AGAIN-LEXV ,P-LEXV>",
                    "Form": [
                      {
                        "Atom": "STUFF"
                      },
                      {
                        "Zil": ",AGAIN-LEXV",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "AGAIN-LEXV"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-LEXV",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-LEXV"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-LEN <GETB ,P-LEXV ,P-LEXWORDS>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-LEN"
                      },
                      {
                        "Zil": "<GETB ,P-LEXV ,P-LEXWORDS>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ",P-LEXV",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEXV"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-LEXWORDS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEXWORDS"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET PTR <GET ,OOPS-TABLE ,O-START>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "PTR"
                      },
                      {
                        "Zil": "<GET ,OOPS-TABLE ,O-START>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",OOPS-TABLE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "OOPS-TABLE"
                              }
                            ]
                          },
                          {
                            "Zil": ",O-START",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "O-START"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<INBUF-STUFF ,OOPS-INBUF ,P-INBUF>",
                    "Form": [
                      {
                        "Atom": "INBUF-STUFF"
                      },
                      {
                        "Zil": ",OOPS-INBUF",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OOPS-INBUF"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-INBUF",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-INBUF"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<PUT ,OOPS-TABLE ,O-END <>>",
                    "Form": [
                      {
                        "Atom": "PUT"
                      },
                      {
                        "Zil": ",OOPS-TABLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OOPS-TABLE"
                          }
                        ]
                      },
                      {
                        "Zil": ",O-END",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "O-END"
                          }
                        ]
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"There was no word to replace!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There was no word to replace!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<COND (<NOT <EQUAL? .WRD ,W?AGAIN ,W?G>> <SETG P-NUMBER 0>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <EQUAL? .WRD ,W?AGAIN ,W?G>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<EQUAL? .WRD ,W?AGAIN ,W?G>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?AGAIN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?AGAIN"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?G",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?G"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-NUMBER 0>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-NUMBER"
                      },
                      0
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<PUT ,OOPS-TABLE ,O-END <>>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",OOPS-TABLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OOPS-TABLE"
                    }
                  ]
                },
                {
                  "Zil": ",O-END",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "O-END"
                    }
                  ]
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<EQUAL? <GET ,P-LEXV .PTR> ,W?AGAIN ,W?G> <COND (<ZERO? <GETB ,OOPS-INBUF 1>> <TELL \"Beg pardon?\" CR> <RFALSE>) (,P-OFLAG <TELL \"It's difficult to repeat fragments.\" CR> <RFALSE>) (<NOT ,P-WON> <TELL \"That would just repeat a mistake.\" CR> <RFALSE>) (<G? ,P-LEN 1> <COND (<OR <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?PERIOD ,W?COMMA ,W?THEN> <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?AND>> <SET PTR <+ .PTR <* 2 ,P-LEXELEN>>> <PUTB ,P-LEXV ,P-LEXWORDS <- <GETB ,P-LEXV ,P-LEXWORDS> 2>>) (T <TELL \"I couldn't understand that sentence.\" CR> <RFALSE>)>) (T <SET PTR <+ .PTR ,P-LEXELEN>> <PUTB ,P-LEXV ,P-LEXWORDS <- <GETB ,P-LEXV ,P-LEXWORDS> 1>>)> <COND (<G? <GETB ,P-LEXV ,P-LEXWORDS> 0> <STUFF ,P-LEXV ,RESERVE-LEXV> <SETG RESERVE-PTR .PTR>) (T <SETG RESERVE-PTR <>>)> <SETG WINNER .OWINNER> <SETG P-MERGED .OMERGED> <INBUF-STUFF ,OOPS-INBUF ,P-INBUF> <STUFF ,AGAIN-LEXV ,P-LEXV> <SET CNT -1> <SET DIR ,AGAIN-DIR> <REPEAT () <COND (<IGRTR? CNT ,P-ITBLLEN> <RETURN>) (T <PUT ,P-ITBL .CNT <GET ,P-OTBL .CNT>>)>>) (T <STUFF ,P-LEXV ,AGAIN-LEXV> <INBUF-STUFF ,P-INBUF ,OOPS-INBUF> <PUT ,OOPS-TABLE ,O-START .PTR> <PUT ,OOPS-TABLE ,O-LENGTH <* 4 ,P-LEN>> <SET LEN <* 2 <+ .PTR <* ,P-LEXELEN <GETB ,P-LEXV ,P-LEXWORDS>>>>> <PUT ,OOPS-TABLE ,O-END <+ <GETB ,P-LEXV <- .LEN 1>> <GETB ,P-LEXV <- .LEN 2>>>> <SETG RESERVE-PTR <>> <SET LEN ,P-LEN> <SETG P-DIR <>> <SETG P-NCN 0> <SETG P-GETFLAGS 0> <REPEAT () <COND (<L? <SETG P-LEN <- ,P-LEN 1>> 0> <SETG QUOTE-FLAG <>> <RETURN>) (<OR <SET WRD <GET ,P-LEXV .PTR>> <SET WRD <NUMBER? .PTR>>> <COND (<ZERO? ,P-LEN> <SET NW 0>) (T <SET NW <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>>)> <COND (<AND <EQUAL? .WRD ,W?TO> <EQUAL? .VERB ,ACT?TELL>> <SET WRD ,W?QUOTE>) (<AND <EQUAL? .WRD ,W?THEN> <G? ,P-LEN 0> <NOT .VERB> <NOT ,QUOTE-FLAG>> <COND (<EQUAL? .LW 0 ,W?PERIOD> <SET WRD ,W?THE>) (ELSE <PUT ,P-ITBL ,P-VERB ,ACT?TELL> <PUT ,P-ITBL ,P-VERBN 0> <SET WRD ,W?QUOTE>)>)> <COND (<EQUAL? .WRD ,W?THEN ,W?PERIOD ,W?QUOTE> <COND (<EQUAL? .WRD ,W?QUOTE> <COND (,QUOTE-FLAG <SETG QUOTE-FLAG <>>) (T <SETG QUOTE-FLAG T>)>)> <OR <ZERO? ,P-LEN> <SETG P-CONT <+ .PTR ,P-LEXELEN>>> <PUTB ,P-LEXV ,P-LEXWORDS ,P-LEN> <RETURN>) (<AND <SET VAL <WT? .WRD ,PS?DIRECTION ,P1?DIRECTION>> <EQUAL? .VERB <> ,ACT?WALK> <OR <EQUAL? .LEN 1> <AND <EQUAL? .LEN 2> <EQUAL? .VERB ,ACT?WALK>> <AND <EQUAL? .NW ,W?THEN ,W?PERIOD ,W?QUOTE> <NOT <L? .LEN 2>>> <AND ,QUOTE-FLAG <EQUAL? .LEN 2> <EQUAL? .NW ,W?QUOTE>> <AND <G? .LEN 2> <EQUAL? .NW ,W?COMMA ,W?AND>>>> <SET DIR .VAL> <COND (<EQUAL? .NW ,W?COMMA ,W?AND> <PUT ,P-LEXV <+ .PTR ,P-LEXELEN> ,W?THEN>)> <COND (<NOT <G? .LEN 2>> <SETG QUOTE-FLAG <>> <RETURN>)>) (<AND <SET VAL <WT? .WRD ,PS?VERB ,P1?VERB>> <NOT .VERB>> <SET VERB .VAL> <PUT ,P-ITBL ,P-VERB .VAL> <PUT ,P-ITBL ,P-VERBN ,P-VTBL> <PUT ,P-VTBL 0 .WRD> <PUTB ,P-VTBL 2 <GETB ,P-LEXV <SET CNT <+ <* .PTR 2> 2>>>> <PUTB ,P-VTBL 3 <GETB ,P-LEXV <+ .CNT 1>>>) (<OR <SET VAL <WT? .WRD ,PS?PREPOSITION 0>> <EQUAL? .WRD ,W?ALL ,W?ONE> <WT? .WRD ,PS?ADJECTIVE> <WT? .WRD ,PS?OBJECT>> <COND (<AND <G? ,P-LEN 1> <EQUAL? .NW ,W?OF> <ZERO? .VAL> <NOT <EQUAL? .WRD ,W?ALL ,W?ONE ,W?A>>> <SET OF-FLAG T>) (<AND <NOT <ZERO? .VAL>> <OR <ZERO? ,P-LEN> <EQUAL? .NW ,W?THEN ,W?PERIOD>>> <SETG P-END-ON-PREP T> <COND (<L? ,P-NCN 2> <PUT ,P-ITBL ,P-PREP1 .VAL> <PUT ,P-ITBL ,P-PREP1N .WRD>)>) (<EQUAL? ,P-NCN 2> <TELL \"There were too many nouns in that sentence.\" CR> <RFALSE>) (T <SETG P-NCN <+ ,P-NCN 1>> <SETG P-ACT .VERB> <OR <SET PTR <CLAUSE .PTR .VAL .WRD>> <RFALSE>> <COND (<L? .PTR 0> <SETG QUOTE-FLAG <>> <RETURN>)>)>) (<EQUAL? .WRD ,W?OF> <COND (<OR <NOT .OF-FLAG> <EQUAL? .NW ,W?PERIOD ,W?THEN>> <CANT-USE .PTR> <RFALSE>) (T <SET OF-FLAG <>>)>) (<WT? .WRD ,PS?BUZZ-WORD>) (<AND <EQUAL? .VERB ,ACT?TELL> <WT? .WRD ,PS?VERB ,P1?VERB> <EQUAL? ,WINNER ,PLAYER>> <TELL \"Please consult your manual for the correct way to talk to other people\r\nor creatures.\" CR> <RFALSE>) (T <CANT-USE .PTR> <RFALSE>)>) (T <UNKNOWN-WORD .PTR> <RFALSE>)> <SET LW .WRD> <SET PTR <+ .PTR ,P-LEXELEN>>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? <GET ,P-LEXV .PTR> ,W?AGAIN ,W?G>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": "<GET ,P-LEXV .PTR>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-LEXV",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-LEXV"
                        }
                      ]
                    },
                    {
                      "Zil": ".PTR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "PTR"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",W?AGAIN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "W?AGAIN"
                    }
                  ]
                },
                {
                  "Zil": ",W?G",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "W?G"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<ZERO? <GETB ,OOPS-INBUF 1>> <TELL \"Beg pardon?\" CR> <RFALSE>) (,P-OFLAG <TELL \"It's difficult to repeat fragments.\" CR> <RFALSE>) (<NOT ,P-WON> <TELL \"That would just repeat a mistake.\" CR> <RFALSE>) (<G? ,P-LEN 1> <COND (<OR <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?PERIOD ,W?COMMA ,W?THEN> <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?AND>> <SET PTR <+ .PTR <* 2 ,P-LEXELEN>>> <PUTB ,P-LEXV ,P-LEXWORDS <- <GETB ,P-LEXV ,P-LEXWORDS> 2>>) (T <TELL \"I couldn't understand that sentence.\" CR> <RFALSE>)>) (T <SET PTR <+ .PTR ,P-LEXELEN>> <PUTB ,P-LEXV ,P-LEXWORDS <- <GETB ,P-LEXV ,P-LEXWORDS> 1>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<ZERO? <GETB ,OOPS-INBUF 1>>",
                    "Form": [
                      {
                        "Atom": "ZERO?"
                      },
                      {
                        "Zil": "<GETB ,OOPS-INBUF 1>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ",OOPS-INBUF",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "OOPS-INBUF"
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Beg pardon?\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Beg pardon?",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": ",P-OFLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-OFLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"It's difficult to repeat fragments.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It's difficult to repeat fragments.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<NOT ,P-WON>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",P-WON",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-WON"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"That would just repeat a mistake.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "That would just repeat a mistake.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<G? ,P-LEN 1>",
                    "Form": [
                      {
                        "Atom": "G?"
                      },
                      {
                        "Zil": ",P-LEN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-LEN"
                          }
                        ]
                      },
                      1
                    ]
                  },
                  {
                    "Zil": "<COND (<OR <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?PERIOD ,W?COMMA ,W?THEN> <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?AND>> <SET PTR <+ .PTR <* 2 ,P-LEXELEN>>> <PUTB ,P-LEXV ,P-LEXWORDS <- <GETB ,P-LEXV ,P-LEXWORDS> 2>>) (T <TELL \"I couldn't understand that sentence.\" CR> <RFALSE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<OR <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?PERIOD ,W?COMMA ,W?THEN> <EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?AND>>",
                          "Form": [
                            {
                              "Atom": "OR"
                            },
                            {
                              "Zil": "<EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?PERIOD ,W?COMMA ,W?THEN>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": "<GET ,P-LEXV <+ .PTR ,P-LEXELEN>>",
                                  "Form": [
                                    {
                                      "Atom": "GET"
                                    },
                                    {
                                      "Zil": ",P-LEXV",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEXV"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<+ .PTR ,P-LEXELEN>",
                                      "Form": [
                                        {
                                          "Atom": "+"
                                        },
                                        {
                                          "Zil": ".PTR",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "PTR"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",P-LEXELEN",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "P-LEXELEN"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?PERIOD",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?PERIOD"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?COMMA",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?COMMA"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?THEN",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?THEN"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<EQUAL? <GET ,P-LEXV <+ .PTR ,P-LEXELEN>> ,W?AND>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": "<GET ,P-LEXV <+ .PTR ,P-LEXELEN>>",
                                  "Form": [
                                    {
                                      "Atom": "GET"
                                    },
                                    {
                                      "Zil": ",P-LEXV",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEXV"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<+ .PTR ,P-LEXELEN>",
                                      "Form": [
                                        {
                                          "Atom": "+"
                                        },
                                        {
                                          "Zil": ".PTR",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "PTR"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",P-LEXELEN",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "P-LEXELEN"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?AND",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?AND"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SET PTR <+ .PTR <* 2 ,P-LEXELEN>>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "PTR"
                            },
                            {
                              "Zil": "<+ .PTR <* 2 ,P-LEXELEN>>",
                              "Form": [
                                {
                                  "Atom": "+"
                                },
                                {
                                  "Zil": ".PTR",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "PTR"
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<* 2 ,P-LEXELEN>",
                                  "Form": [
                                    {
                                      "Atom": "*"
                                    },
                                    2,
                                    {
                                      "Zil": ",P-LEXELEN",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEXELEN"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<PUTB ,P-LEXV ,P-LEXWORDS <- <GETB ,P-LEXV ,P-LEXWORDS> 2>>",
                          "Form": [
                            {
                              "Atom": "PUTB"
                            },
                            {
                              "Zil": ",P-LEXV",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-LEXV"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-LEXWORDS",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-LEXWORDS"
                                }
                              ]
                            },
                            {
                              "Zil": "<- <GETB ,P-LEXV ,P-LEXWORDS> 2>",
                              "Form": [
                                {
                                  "Atom": "-"
                                },
                                {
                                  "Zil": "<GETB ,P-LEXV ,P-LEXWORDS>",
                                  "Form": [
                                    {
                                      "Atom": "GETB"
                                    },
                                    {
                                      "Zil": ",P-LEXV",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEXV"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P-LEXWORDS",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEXWORDS"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                2
                              ]
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"I couldn't understand that sentence.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "I couldn't understand that sentence.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RFALSE>",
                          "Form": [
                            {
                              "Atom": "RFALSE"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SET PTR <+ .PTR ,P-LEXELEN>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "PTR"
                      },
                      {
                        "Zil": "<+ .PTR ,P-LEXELEN>",
                        "Form": [
                          {
                            "Atom": "+"
                          },
                          {
                            "Zil": ".PTR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "PTR"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-LEXELEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEXELEN"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<PUTB ,P-LEXV ,P-LEXWORDS <- <GETB ,P-LEXV ,P-LEXWORDS> 1>>",
                    "Form": [
                      {
                        "Atom": "PUTB"
                      },
                      {
                        "Zil": ",P-LEXV",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-LEXV"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-LEXWORDS",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-LEXWORDS"
                          }
                        ]
                      },
                      {
                        "Zil": "<- <GETB ,P-LEXV ,P-LEXWORDS> 1>",
                        "Form": [
                          {
                            "Atom": "-"
                          },
                          {
                            "Zil": "<GETB ,P-LEXV ,P-LEXWORDS>",
                            "Form": [
                              {
                                "Atom": "GETB"
                              },
                              {
                                "Zil": ",P-LEXV",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-LEXV"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-LEXWORDS",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-LEXWORDS"
                                  }
                                ]
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<G? <GETB ,P-LEXV ,P-LEXWORDS> 0> <STUFF ,P-LEXV ,RESERVE-LEXV> <SETG RESERVE-PTR .PTR>) (T <SETG RESERVE-PTR <>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<G? <GETB ,P-LEXV ,P-LEXWORDS> 0>",
                    "Form": [
                      {
                        "Atom": "G?"
                      },
                      {
                        "Zil": "<GETB ,P-LEXV ,P-LEXWORDS>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ",P-LEXV",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEXV"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-LEXWORDS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEXWORDS"
                              }
                            ]
                          }
                        ]
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<STUFF ,P-LEXV ,RESERVE-LEXV>",
                    "Form": [
                      {
                        "Atom": "STUFF"
                      },
                      {
                        "Zil": ",P-LEXV",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-LEXV"
                          }
                        ]
                      },
                      {
                        "Zil": ",RESERVE-LEXV",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "RESERVE-LEXV"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG RESERVE-PTR .PTR>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "RESERVE-PTR"
                      },
                      {
                        "Zil": ".PTR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PTR"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SETG RESERVE-PTR <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "RESERVE-PTR"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SETG WINNER .OWINNER>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "WINNER"
                },
                {
                  "Zil": ".OWINNER",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OWINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-MERGED .OMERGED>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-MERGED"
                },
                {
                  "Zil": ".OMERGED",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OMERGED"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<INBUF-STUFF ,OOPS-INBUF ,P-INBUF>",
              "Form": [
                {
                  "Atom": "INBUF-STUFF"
                },
                {
                  "Zil": ",OOPS-INBUF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OOPS-INBUF"
                    }
                  ]
                },
                {
                  "Zil": ",P-INBUF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-INBUF"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<STUFF ,AGAIN-LEXV ,P-LEXV>",
              "Form": [
                {
                  "Atom": "STUFF"
                },
                {
                  "Zil": ",AGAIN-LEXV",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "AGAIN-LEXV"
                    }
                  ]
                },
                {
                  "Zil": ",P-LEXV",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-LEXV"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET CNT -1>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CNT"
                },
                -1
              ]
            },
            {
              "Zil": "<SET DIR ,AGAIN-DIR>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "DIR"
                },
                {
                  "Zil": ",AGAIN-DIR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "AGAIN-DIR"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REPEAT () <COND (<IGRTR? CNT ,P-ITBLLEN> <RETURN>) (T <PUT ,P-ITBL .CNT <GET ,P-OTBL .CNT>>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<IGRTR? CNT ,P-ITBLLEN> <RETURN>) (T <PUT ,P-ITBL .CNT <GET ,P-OTBL .CNT>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<IGRTR? CNT ,P-ITBLLEN>",
                        "Form": [
                          {
                            "Atom": "IGRTR?"
                          },
                          {
                            "Atom": "CNT"
                          },
                          {
                            "Zil": ",P-ITBLLEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-ITBLLEN"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<PUT ,P-ITBL .CNT <GET ,P-OTBL .CNT>>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ",P-ITBL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-ITBL"
                              }
                            ]
                          },
                          {
                            "Zil": ".CNT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "CNT"
                              }
                            ]
                          },
                          {
                            "Zil": "<GET ,P-OTBL .CNT>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",P-OTBL",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-OTBL"
                                  }
                                ]
                              },
                              {
                                "Zil": ".CNT",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "CNT"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<STUFF ,P-LEXV ,AGAIN-LEXV>",
              "Form": [
                {
                  "Atom": "STUFF"
                },
                {
                  "Zil": ",P-LEXV",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-LEXV"
                    }
                  ]
                },
                {
                  "Zil": ",AGAIN-LEXV",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "AGAIN-LEXV"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<INBUF-STUFF ,P-INBUF ,OOPS-INBUF>",
              "Form": [
                {
                  "Atom": "INBUF-STUFF"
                },
                {
                  "Zil": ",P-INBUF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-INBUF"
                    }
                  ]
                },
                {
                  "Zil": ",OOPS-INBUF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OOPS-INBUF"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,OOPS-TABLE ,O-START .PTR>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",OOPS-TABLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OOPS-TABLE"
                    }
                  ]
                },
                {
                  "Zil": ",O-START",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "O-START"
                    }
                  ]
                },
                {
                  "Zil": ".PTR",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "PTR"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,OOPS-TABLE ,O-LENGTH <* 4 ,P-LEN>>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",OOPS-TABLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OOPS-TABLE"
                    }
                  ]
                },
                {
                  "Zil": ",O-LENGTH",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "O-LENGTH"
                    }
                  ]
                },
                {
                  "Zil": "<* 4 ,P-LEN>",
                  "Form": [
                    {
                      "Atom": "*"
                    },
                    4,
                    {
                      "Zil": ",P-LEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-LEN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET LEN <* 2 <+ .PTR <* ,P-LEXELEN <GETB ,P-LEXV ,P-LEXWORDS>>>>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "LEN"
                },
                {
                  "Zil": "<* 2 <+ .PTR <* ,P-LEXELEN <GETB ,P-LEXV ,P-LEXWORDS>>>>",
                  "Form": [
                    {
                      "Atom": "*"
                    },
                    2,
                    {
                      "Zil": "<+ .PTR <* ,P-LEXELEN <GETB ,P-LEXV ,P-LEXWORDS>>>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ".PTR",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "PTR"
                            }
                          ]
                        },
                        {
                          "Zil": "<* ,P-LEXELEN <GETB ,P-LEXV ,P-LEXWORDS>>",
                          "Form": [
                            {
                              "Atom": "*"
                            },
                            {
                              "Zil": ",P-LEXELEN",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-LEXELEN"
                                }
                              ]
                            },
                            {
                              "Zil": "<GETB ,P-LEXV ,P-LEXWORDS>",
                              "Form": [
                                {
                                  "Atom": "GETB"
                                },
                                {
                                  "Zil": ",P-LEXV",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-LEXV"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-LEXWORDS",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-LEXWORDS"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,OOPS-TABLE ,O-END <+ <GETB ,P-LEXV <- .LEN 1>> <GETB ,P-LEXV <- .LEN 2>>>>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",OOPS-TABLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OOPS-TABLE"
                    }
                  ]
                },
                {
                  "Zil": ",O-END",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "O-END"
                    }
                  ]
                },
                {
                  "Zil": "<+ <GETB ,P-LEXV <- .LEN 1>> <GETB ,P-LEXV <- .LEN 2>>>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": "<GETB ,P-LEXV <- .LEN 1>>",
                      "Form": [
                        {
                          "Atom": "GETB"
                        },
                        {
                          "Zil": ",P-LEXV",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-LEXV"
                            }
                          ]
                        },
                        {
                          "Zil": "<- .LEN 1>",
                          "Form": [
                            {
                              "Atom": "-"
                            },
                            {
                              "Zil": ".LEN",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "LEN"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<GETB ,P-LEXV <- .LEN 2>>",
                      "Form": [
                        {
                          "Atom": "GETB"
                        },
                        {
                          "Zil": ",P-LEXV",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-LEXV"
                            }
                          ]
                        },
                        {
                          "Zil": "<- .LEN 2>",
                          "Form": [
                            {
                              "Atom": "-"
                            },
                            {
                              "Zil": ".LEN",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "LEN"
                                }
                              ]
                            },
                            2
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG RESERVE-PTR <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "RESERVE-PTR"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SET LEN ,P-LEN>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "LEN"
                },
                {
                  "Zil": ",P-LEN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-LEN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-DIR <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-DIR"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG P-NCN 0>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-NCN"
                },
                0
              ]
            },
            {
              "Zil": "<SETG P-GETFLAGS 0>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-GETFLAGS"
                },
                0
              ]
            },
            {
              "Zil": "<REPEAT () <COND (<L? <SETG P-LEN <- ,P-LEN 1>> 0> <SETG QUOTE-FLAG <>> <RETURN>) (<OR <SET WRD <GET ,P-LEXV .PTR>> <SET WRD <NUMBER? .PTR>>> <COND (<ZERO? ,P-LEN> <SET NW 0>) (T <SET NW <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>>)> <COND (<AND <EQUAL? .WRD ,W?TO> <EQUAL? .VERB ,ACT?TELL>> <SET WRD ,W?QUOTE>) (<AND <EQUAL? .WRD ,W?THEN> <G? ,P-LEN 0> <NOT .VERB> <NOT ,QUOTE-FLAG>> <COND (<EQUAL? .LW 0 ,W?PERIOD> <SET WRD ,W?THE>) (ELSE <PUT ,P-ITBL ,P-VERB ,ACT?TELL> <PUT ,P-ITBL ,P-VERBN 0> <SET WRD ,W?QUOTE>)>)> <COND (<EQUAL? .WRD ,W?THEN ,W?PERIOD ,W?QUOTE> <COND (<EQUAL? .WRD ,W?QUOTE> <COND (,QUOTE-FLAG <SETG QUOTE-FLAG <>>) (T <SETG QUOTE-FLAG T>)>)> <OR <ZERO? ,P-LEN> <SETG P-CONT <+ .PTR ,P-LEXELEN>>> <PUTB ,P-LEXV ,P-LEXWORDS ,P-LEN> <RETURN>) (<AND <SET VAL <WT? .WRD ,PS?DIRECTION ,P1?DIRECTION>> <EQUAL? .VERB <> ,ACT?WALK> <OR <EQUAL? .LEN 1> <AND <EQUAL? .LEN 2> <EQUAL? .VERB ,ACT?WALK>> <AND <EQUAL? .NW ,W?THEN ,W?PERIOD ,W?QUOTE> <NOT <L? .LEN 2>>> <AND ,QUOTE-FLAG <EQUAL? .LEN 2> <EQUAL? .NW ,W?QUOTE>> <AND <G? .LEN 2> <EQUAL? .NW ,W?COMMA ,W?AND>>>> <SET DIR .VAL> <COND (<EQUAL? .NW ,W?COMMA ,W?AND> <PUT ,P-LEXV <+ .PTR ,P-LEXELEN> ,W?THEN>)> <COND (<NOT <G? .LEN 2>> <SETG QUOTE-FLAG <>> <RETURN>)>) (<AND <SET VAL <WT? .WRD ,PS?VERB ,P1?VERB>> <NOT .VERB>> <SET VERB .VAL> <PUT ,P-ITBL ,P-VERB .VAL> <PUT ,P-ITBL ,P-VERBN ,P-VTBL> <PUT ,P-VTBL 0 .WRD> <PUTB ,P-VTBL 2 <GETB ,P-LEXV <SET CNT <+ <* .PTR 2> 2>>>> <PUTB ,P-VTBL 3 <GETB ,P-LEXV <+ .CNT 1>>>) (<OR <SET VAL <WT? .WRD ,PS?PREPOSITION 0>> <EQUAL? .WRD ,W?ALL ,W?ONE> <WT? .WRD ,PS?ADJECTIVE> <WT? .WRD ,PS?OBJECT>> <COND (<AND <G? ,P-LEN 1> <EQUAL? .NW ,W?OF> <ZERO? .VAL> <NOT <EQUAL? .WRD ,W?ALL ,W?ONE ,W?A>>> <SET OF-FLAG T>) (<AND <NOT <ZERO? .VAL>> <OR <ZERO? ,P-LEN> <EQUAL? .NW ,W?THEN ,W?PERIOD>>> <SETG P-END-ON-PREP T> <COND (<L? ,P-NCN 2> <PUT ,P-ITBL ,P-PREP1 .VAL> <PUT ,P-ITBL ,P-PREP1N .WRD>)>) (<EQUAL? ,P-NCN 2> <TELL \"There were too many nouns in that sentence.\" CR> <RFALSE>) (T <SETG P-NCN <+ ,P-NCN 1>> <SETG P-ACT .VERB> <OR <SET PTR <CLAUSE .PTR .VAL .WRD>> <RFALSE>> <COND (<L? .PTR 0> <SETG QUOTE-FLAG <>> <RETURN>)>)>) (<EQUAL? .WRD ,W?OF> <COND (<OR <NOT .OF-FLAG> <EQUAL? .NW ,W?PERIOD ,W?THEN>> <CANT-USE .PTR> <RFALSE>) (T <SET OF-FLAG <>>)>) (<WT? .WRD ,PS?BUZZ-WORD>) (<AND <EQUAL? .VERB ,ACT?TELL> <WT? .WRD ,PS?VERB ,P1?VERB> <EQUAL? ,WINNER ,PLAYER>> <TELL \"Please consult your manual for the correct way to talk to other people\r\nor creatures.\" CR> <RFALSE>) (T <CANT-USE .PTR> <RFALSE>)>) (T <UNKNOWN-WORD .PTR> <RFALSE>)> <SET LW .WRD> <SET PTR <+ .PTR ,P-LEXELEN>>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<L? <SETG P-LEN <- ,P-LEN 1>> 0> <SETG QUOTE-FLAG <>> <RETURN>) (<OR <SET WRD <GET ,P-LEXV .PTR>> <SET WRD <NUMBER? .PTR>>> <COND (<ZERO? ,P-LEN> <SET NW 0>) (T <SET NW <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>>)> <COND (<AND <EQUAL? .WRD ,W?TO> <EQUAL? .VERB ,ACT?TELL>> <SET WRD ,W?QUOTE>) (<AND <EQUAL? .WRD ,W?THEN> <G? ,P-LEN 0> <NOT .VERB> <NOT ,QUOTE-FLAG>> <COND (<EQUAL? .LW 0 ,W?PERIOD> <SET WRD ,W?THE>) (ELSE <PUT ,P-ITBL ,P-VERB ,ACT?TELL> <PUT ,P-ITBL ,P-VERBN 0> <SET WRD ,W?QUOTE>)>)> <COND (<EQUAL? .WRD ,W?THEN ,W?PERIOD ,W?QUOTE> <COND (<EQUAL? .WRD ,W?QUOTE> <COND (,QUOTE-FLAG <SETG QUOTE-FLAG <>>) (T <SETG QUOTE-FLAG T>)>)> <OR <ZERO? ,P-LEN> <SETG P-CONT <+ .PTR ,P-LEXELEN>>> <PUTB ,P-LEXV ,P-LEXWORDS ,P-LEN> <RETURN>) (<AND <SET VAL <WT? .WRD ,PS?DIRECTION ,P1?DIRECTION>> <EQUAL? .VERB <> ,ACT?WALK> <OR <EQUAL? .LEN 1> <AND <EQUAL? .LEN 2> <EQUAL? .VERB ,ACT?WALK>> <AND <EQUAL? .NW ,W?THEN ,W?PERIOD ,W?QUOTE> <NOT <L? .LEN 2>>> <AND ,QUOTE-FLAG <EQUAL? .LEN 2> <EQUAL? .NW ,W?QUOTE>> <AND <G? .LEN 2> <EQUAL? .NW ,W?COMMA ,W?AND>>>> <SET DIR .VAL> <COND (<EQUAL? .NW ,W?COMMA ,W?AND> <PUT ,P-LEXV <+ .PTR ,P-LEXELEN> ,W?THEN>)> <COND (<NOT <G? .LEN 2>> <SETG QUOTE-FLAG <>> <RETURN>)>) (<AND <SET VAL <WT? .WRD ,PS?VERB ,P1?VERB>> <NOT .VERB>> <SET VERB .VAL> <PUT ,P-ITBL ,P-VERB .VAL> <PUT ,P-ITBL ,P-VERBN ,P-VTBL> <PUT ,P-VTBL 0 .WRD> <PUTB ,P-VTBL 2 <GETB ,P-LEXV <SET CNT <+ <* .PTR 2> 2>>>> <PUTB ,P-VTBL 3 <GETB ,P-LEXV <+ .CNT 1>>>) (<OR <SET VAL <WT? .WRD ,PS?PREPOSITION 0>> <EQUAL? .WRD ,W?ALL ,W?ONE> <WT? .WRD ,PS?ADJECTIVE> <WT? .WRD ,PS?OBJECT>> <COND (<AND <G? ,P-LEN 1> <EQUAL? .NW ,W?OF> <ZERO? .VAL> <NOT <EQUAL? .WRD ,W?ALL ,W?ONE ,W?A>>> <SET OF-FLAG T>) (<AND <NOT <ZERO? .VAL>> <OR <ZERO? ,P-LEN> <EQUAL? .NW ,W?THEN ,W?PERIOD>>> <SETG P-END-ON-PREP T> <COND (<L? ,P-NCN 2> <PUT ,P-ITBL ,P-PREP1 .VAL> <PUT ,P-ITBL ,P-PREP1N .WRD>)>) (<EQUAL? ,P-NCN 2> <TELL \"There were too many nouns in that sentence.\" CR> <RFALSE>) (T <SETG P-NCN <+ ,P-NCN 1>> <SETG P-ACT .VERB> <OR <SET PTR <CLAUSE .PTR .VAL .WRD>> <RFALSE>> <COND (<L? .PTR 0> <SETG QUOTE-FLAG <>> <RETURN>)>)>) (<EQUAL? .WRD ,W?OF> <COND (<OR <NOT .OF-FLAG> <EQUAL? .NW ,W?PERIOD ,W?THEN>> <CANT-USE .PTR> <RFALSE>) (T <SET OF-FLAG <>>)>) (<WT? .WRD ,PS?BUZZ-WORD>) (<AND <EQUAL? .VERB ,ACT?TELL> <WT? .WRD ,PS?VERB ,P1?VERB> <EQUAL? ,WINNER ,PLAYER>> <TELL \"Please consult your manual for the correct way to talk to other people\r\nor creatures.\" CR> <RFALSE>) (T <CANT-USE .PTR> <RFALSE>)>) (T <UNKNOWN-WORD .PTR> <RFALSE>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<L? <SETG P-LEN <- ,P-LEN 1>> 0>",
                        "Form": [
                          {
                            "Atom": "L?"
                          },
                          {
                            "Zil": "<SETG P-LEN <- ,P-LEN 1>>",
                            "Form": [
                              {
                                "Atom": "SETG"
                              },
                              {
                                "Atom": "P-LEN"
                              },
                              {
                                "Zil": "<- ,P-LEN 1>",
                                "Form": [
                                  {
                                    "Atom": "-"
                                  },
                                  {
                                    "Zil": ",P-LEN",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-LEN"
                                      }
                                    ]
                                  },
                                  1
                                ]
                              }
                            ]
                          },
                          0
                        ]
                      },
                      {
                        "Zil": "<SETG QUOTE-FLAG <>>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "QUOTE-FLAG"
                          },
                          {
                            "Zil": "<>",
                            "Form": []
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<OR <SET WRD <GET ,P-LEXV .PTR>> <SET WRD <NUMBER? .PTR>>>",
                        "Form": [
                          {
                            "Atom": "OR"
                          },
                          {
                            "Zil": "<SET WRD <GET ,P-LEXV .PTR>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "WRD"
                              },
                              {
                                "Zil": "<GET ,P-LEXV .PTR>",
                                "Form": [
                                  {
                                    "Atom": "GET"
                                  },
                                  {
                                    "Zil": ",P-LEXV",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-LEXV"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ".PTR",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "PTR"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<SET WRD <NUMBER? .PTR>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "WRD"
                              },
                              {
                                "Zil": "<NUMBER? .PTR>",
                                "Form": [
                                  {
                                    "Atom": "NUMBER?"
                                  },
                                  {
                                    "Zil": ".PTR",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "PTR"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<ZERO? ,P-LEN> <SET NW 0>) (T <SET NW <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<ZERO? ,P-LEN>",
                              "Form": [
                                {
                                  "Atom": "ZERO?"
                                },
                                {
                                  "Zil": ",P-LEN",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-LEN"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET NW 0>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "NW"
                                },
                                0
                              ]
                            }
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            {
                              "Zil": "<SET NW <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "NW"
                                },
                                {
                                  "Zil": "<GET ,P-LEXV <+ .PTR ,P-LEXELEN>>",
                                  "Form": [
                                    {
                                      "Atom": "GET"
                                    },
                                    {
                                      "Zil": ",P-LEXV",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEXV"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<+ .PTR ,P-LEXELEN>",
                                      "Form": [
                                        {
                                          "Atom": "+"
                                        },
                                        {
                                          "Zil": ".PTR",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "PTR"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",P-LEXELEN",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "P-LEXELEN"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<COND (<AND <EQUAL? .WRD ,W?TO> <EQUAL? .VERB ,ACT?TELL>> <SET WRD ,W?QUOTE>) (<AND <EQUAL? .WRD ,W?THEN> <G? ,P-LEN 0> <NOT .VERB> <NOT ,QUOTE-FLAG>> <COND (<EQUAL? .LW 0 ,W?PERIOD> <SET WRD ,W?THE>) (ELSE <PUT ,P-ITBL ,P-VERB ,ACT?TELL> <PUT ,P-ITBL ,P-VERBN 0> <SET WRD ,W?QUOTE>)>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<AND <EQUAL? .WRD ,W?TO> <EQUAL? .VERB ,ACT?TELL>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<EQUAL? .WRD ,W?TO>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ".WRD",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "WRD"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",W?TO",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "W?TO"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<EQUAL? .VERB ,ACT?TELL>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ".VERB",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "VERB"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",ACT?TELL",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "ACT?TELL"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET WRD ,W?QUOTE>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "WRD"
                                },
                                {
                                  "Zil": ",W?QUOTE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?QUOTE"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<AND <EQUAL? .WRD ,W?THEN> <G? ,P-LEN 0> <NOT .VERB> <NOT ,QUOTE-FLAG>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<EQUAL? .WRD ,W?THEN>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ".WRD",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "WRD"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",W?THEN",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "W?THEN"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<G? ,P-LEN 0>",
                                  "Form": [
                                    {
                                      "Atom": "G?"
                                    },
                                    {
                                      "Zil": ",P-LEN",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEN"
                                        }
                                      ]
                                    },
                                    0
                                  ]
                                },
                                {
                                  "Zil": "<NOT .VERB>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": ".VERB",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "VERB"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<NOT ,QUOTE-FLAG>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": ",QUOTE-FLAG",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "QUOTE-FLAG"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<EQUAL? .LW 0 ,W?PERIOD> <SET WRD ,W?THE>) (ELSE <PUT ,P-ITBL ,P-VERB ,ACT?TELL> <PUT ,P-ITBL ,P-VERBN 0> <SET WRD ,W?QUOTE>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<EQUAL? .LW 0 ,W?PERIOD>",
                                    "Form": [
                                      {
                                        "Atom": "EQUAL?"
                                      },
                                      {
                                        "Zil": ".LW",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "LW"
                                          }
                                        ]
                                      },
                                      0,
                                      {
                                        "Zil": ",W?PERIOD",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "W?PERIOD"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SET WRD ,W?THE>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "WRD"
                                      },
                                      {
                                        "Zil": ",W?THE",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "W?THE"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "ELSE"
                                  },
                                  {
                                    "Zil": "<PUT ,P-ITBL ,P-VERB ,ACT?TELL>",
                                    "Form": [
                                      {
                                        "Atom": "PUT"
                                      },
                                      {
                                        "Zil": ",P-ITBL",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-ITBL"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",P-VERB",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-VERB"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",ACT?TELL",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "ACT?TELL"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<PUT ,P-ITBL ,P-VERBN 0>",
                                    "Form": [
                                      {
                                        "Atom": "PUT"
                                      },
                                      {
                                        "Zil": ",P-ITBL",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-ITBL"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",P-VERBN",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-VERBN"
                                          }
                                        ]
                                      },
                                      0
                                    ]
                                  },
                                  {
                                    "Zil": "<SET WRD ,W?QUOTE>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "WRD"
                                      },
                                      {
                                        "Zil": ",W?QUOTE",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "W?QUOTE"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<COND (<EQUAL? .WRD ,W?THEN ,W?PERIOD ,W?QUOTE> <COND (<EQUAL? .WRD ,W?QUOTE> <COND (,QUOTE-FLAG <SETG QUOTE-FLAG <>>) (T <SETG QUOTE-FLAG T>)>)> <OR <ZERO? ,P-LEN> <SETG P-CONT <+ .PTR ,P-LEXELEN>>> <PUTB ,P-LEXV ,P-LEXWORDS ,P-LEN> <RETURN>) (<AND <SET VAL <WT? .WRD ,PS?DIRECTION ,P1?DIRECTION>> <EQUAL? .VERB <> ,ACT?WALK> <OR <EQUAL? .LEN 1> <AND <EQUAL? .LEN 2> <EQUAL? .VERB ,ACT?WALK>> <AND <EQUAL? .NW ,W?THEN ,W?PERIOD ,W?QUOTE> <NOT <L? .LEN 2>>> <AND ,QUOTE-FLAG <EQUAL? .LEN 2> <EQUAL? .NW ,W?QUOTE>> <AND <G? .LEN 2> <EQUAL? .NW ,W?COMMA ,W?AND>>>> <SET DIR .VAL> <COND (<EQUAL? .NW ,W?COMMA ,W?AND> <PUT ,P-LEXV <+ .PTR ,P-LEXELEN> ,W?THEN>)> <COND (<NOT <G? .LEN 2>> <SETG QUOTE-FLAG <>> <RETURN>)>) (<AND <SET VAL <WT? .WRD ,PS?VERB ,P1?VERB>> <NOT .VERB>> <SET VERB .VAL> <PUT ,P-ITBL ,P-VERB .VAL> <PUT ,P-ITBL ,P-VERBN ,P-VTBL> <PUT ,P-VTBL 0 .WRD> <PUTB ,P-VTBL 2 <GETB ,P-LEXV <SET CNT <+ <* .PTR 2> 2>>>> <PUTB ,P-VTBL 3 <GETB ,P-LEXV <+ .CNT 1>>>) (<OR <SET VAL <WT? .WRD ,PS?PREPOSITION 0>> <EQUAL? .WRD ,W?ALL ,W?ONE> <WT? .WRD ,PS?ADJECTIVE> <WT? .WRD ,PS?OBJECT>> <COND (<AND <G? ,P-LEN 1> <EQUAL? .NW ,W?OF> <ZERO? .VAL> <NOT <EQUAL? .WRD ,W?ALL ,W?ONE ,W?A>>> <SET OF-FLAG T>) (<AND <NOT <ZERO? .VAL>> <OR <ZERO? ,P-LEN> <EQUAL? .NW ,W?THEN ,W?PERIOD>>> <SETG P-END-ON-PREP T> <COND (<L? ,P-NCN 2> <PUT ,P-ITBL ,P-PREP1 .VAL> <PUT ,P-ITBL ,P-PREP1N .WRD>)>) (<EQUAL? ,P-NCN 2> <TELL \"There were too many nouns in that sentence.\" CR> <RFALSE>) (T <SETG P-NCN <+ ,P-NCN 1>> <SETG P-ACT .VERB> <OR <SET PTR <CLAUSE .PTR .VAL .WRD>> <RFALSE>> <COND (<L? .PTR 0> <SETG QUOTE-FLAG <>> <RETURN>)>)>) (<EQUAL? .WRD ,W?OF> <COND (<OR <NOT .OF-FLAG> <EQUAL? .NW ,W?PERIOD ,W?THEN>> <CANT-USE .PTR> <RFALSE>) (T <SET OF-FLAG <>>)>) (<WT? .WRD ,PS?BUZZ-WORD>) (<AND <EQUAL? .VERB ,ACT?TELL> <WT? .WRD ,PS?VERB ,P1?VERB> <EQUAL? ,WINNER ,PLAYER>> <TELL \"Please consult your manual for the correct way to talk to other people\r\nor creatures.\" CR> <RFALSE>) (T <CANT-USE .PTR> <RFALSE>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<EQUAL? .WRD ,W?THEN ,W?PERIOD ,W?QUOTE>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".WRD",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "WRD"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?THEN",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?THEN"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?PERIOD",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?PERIOD"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?QUOTE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?QUOTE"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<EQUAL? .WRD ,W?QUOTE> <COND (,QUOTE-FLAG <SETG QUOTE-FLAG <>>) (T <SETG QUOTE-FLAG T>)>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<EQUAL? .WRD ,W?QUOTE>",
                                    "Form": [
                                      {
                                        "Atom": "EQUAL?"
                                      },
                                      {
                                        "Zil": ".WRD",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "WRD"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",W?QUOTE",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "W?QUOTE"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<COND (,QUOTE-FLAG <SETG QUOTE-FLAG <>>) (T <SETG QUOTE-FLAG T>)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": ",QUOTE-FLAG",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "QUOTE-FLAG"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<SETG QUOTE-FLAG <>>",
                                          "Form": [
                                            {
                                              "Atom": "SETG"
                                            },
                                            {
                                              "Atom": "QUOTE-FLAG"
                                            },
                                            {
                                              "Zil": "<>",
                                              "Form": []
                                            }
                                          ]
                                        }
                                      ],
                                      [
                                        {
                                          "Atom": "T"
                                        },
                                        {
                                          "Zil": "<SETG QUOTE-FLAG T>",
                                          "Form": [
                                            {
                                              "Atom": "SETG"
                                            },
                                            {
                                              "Atom": "QUOTE-FLAG"
                                            },
                                            {
                                              "Atom": "T"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  }
                                ]
                              ]
                            },
                            {
                              "Zil": "<OR <ZERO? ,P-LEN> <SETG P-CONT <+ .PTR ,P-LEXELEN>>>",
                              "Form": [
                                {
                                  "Atom": "OR"
                                },
                                {
                                  "Zil": "<ZERO? ,P-LEN>",
                                  "Form": [
                                    {
                                      "Atom": "ZERO?"
                                    },
                                    {
                                      "Zil": ",P-LEN",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEN"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<SETG P-CONT <+ .PTR ,P-LEXELEN>>",
                                  "Form": [
                                    {
                                      "Atom": "SETG"
                                    },
                                    {
                                      "Atom": "P-CONT"
                                    },
                                    {
                                      "Zil": "<+ .PTR ,P-LEXELEN>",
                                      "Form": [
                                        {
                                          "Atom": "+"
                                        },
                                        {
                                          "Zil": ".PTR",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "PTR"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",P-LEXELEN",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "P-LEXELEN"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<PUTB ,P-LEXV ,P-LEXWORDS ,P-LEN>",
                              "Form": [
                                {
                                  "Atom": "PUTB"
                                },
                                {
                                  "Zil": ",P-LEXV",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-LEXV"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-LEXWORDS",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-LEXWORDS"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-LEN",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-LEN"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<RETURN>",
                              "Form": [
                                {
                                  "Atom": "RETURN"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<AND <SET VAL <WT? .WRD ,PS?DIRECTION ,P1?DIRECTION>> <EQUAL? .VERB <> ,ACT?WALK> <OR <EQUAL? .LEN 1> <AND <EQUAL? .LEN 2> <EQUAL? .VERB ,ACT?WALK>> <AND <EQUAL? .NW ,W?THEN ,W?PERIOD ,W?QUOTE> <NOT <L? .LEN 2>>> <AND ,QUOTE-FLAG <EQUAL? .LEN 2> <EQUAL? .NW ,W?QUOTE>> <AND <G? .LEN 2> <EQUAL? .NW ,W?COMMA ,W?AND>>>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<SET VAL <WT? .WRD ,PS?DIRECTION ,P1?DIRECTION>>",
                                  "Form": [
                                    {
                                      "Atom": "SET"
                                    },
                                    {
                                      "Atom": "VAL"
                                    },
                                    {
                                      "Zil": "<WT? .WRD ,PS?DIRECTION ,P1?DIRECTION>",
                                      "Form": [
                                        {
                                          "Atom": "WT?"
                                        },
                                        {
                                          "Zil": ".WRD",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "WRD"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",PS?DIRECTION",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "PS?DIRECTION"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",P1?DIRECTION",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "P1?DIRECTION"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<EQUAL? .VERB <> ,ACT?WALK>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ".VERB",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "VERB"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<>",
                                      "Form": []
                                    },
                                    {
                                      "Zil": ",ACT?WALK",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "ACT?WALK"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<OR <EQUAL? .LEN 1> <AND <EQUAL? .LEN 2> <EQUAL? .VERB ,ACT?WALK>> <AND <EQUAL? .NW ,W?THEN ,W?PERIOD ,W?QUOTE> <NOT <L? .LEN 2>>> <AND ,QUOTE-FLAG <EQUAL? .LEN 2> <EQUAL? .NW ,W?QUOTE>> <AND <G? .LEN 2> <EQUAL? .NW ,W?COMMA ,W?AND>>>",
                                  "Form": [
                                    {
                                      "Atom": "OR"
                                    },
                                    {
                                      "Zil": "<EQUAL? .LEN 1>",
                                      "Form": [
                                        {
                                          "Atom": "EQUAL?"
                                        },
                                        {
                                          "Zil": ".LEN",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "LEN"
                                            }
                                          ]
                                        },
                                        1
                                      ]
                                    },
                                    {
                                      "Zil": "<AND <EQUAL? .LEN 2> <EQUAL? .VERB ,ACT?WALK>>",
                                      "Form": [
                                        {
                                          "Atom": "AND"
                                        },
                                        {
                                          "Zil": "<EQUAL? .LEN 2>",
                                          "Form": [
                                            {
                                              "Atom": "EQUAL?"
                                            },
                                            {
                                              "Zil": ".LEN",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "LEN"
                                                }
                                              ]
                                            },
                                            2
                                          ]
                                        },
                                        {
                                          "Zil": "<EQUAL? .VERB ,ACT?WALK>",
                                          "Form": [
                                            {
                                              "Atom": "EQUAL?"
                                            },
                                            {
                                              "Zil": ".VERB",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "VERB"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",ACT?WALK",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "ACT?WALK"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<AND <EQUAL? .NW ,W?THEN ,W?PERIOD ,W?QUOTE> <NOT <L? .LEN 2>>>",
                                      "Form": [
                                        {
                                          "Atom": "AND"
                                        },
                                        {
                                          "Zil": "<EQUAL? .NW ,W?THEN ,W?PERIOD ,W?QUOTE>",
                                          "Form": [
                                            {
                                              "Atom": "EQUAL?"
                                            },
                                            {
                                              "Zil": ".NW",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "NW"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",W?THEN",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "W?THEN"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",W?PERIOD",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "W?PERIOD"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",W?QUOTE",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "W?QUOTE"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<NOT <L? .LEN 2>>",
                                          "Form": [
                                            {
                                              "Atom": "NOT"
                                            },
                                            {
                                              "Zil": "<L? .LEN 2>",
                                              "Form": [
                                                {
                                                  "Atom": "L?"
                                                },
                                                {
                                                  "Zil": ".LEN",
                                                  "Form": [
                                                    {
                                                      "Atom": "LVAL"
                                                    },
                                                    {
                                                      "Atom": "LEN"
                                                    }
                                                  ]
                                                },
                                                2
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<AND ,QUOTE-FLAG <EQUAL? .LEN 2> <EQUAL? .NW ,W?QUOTE>>",
                                      "Form": [
                                        {
                                          "Atom": "AND"
                                        },
                                        {
                                          "Zil": ",QUOTE-FLAG",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "QUOTE-FLAG"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<EQUAL? .LEN 2>",
                                          "Form": [
                                            {
                                              "Atom": "EQUAL?"
                                            },
                                            {
                                              "Zil": ".LEN",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "LEN"
                                                }
                                              ]
                                            },
                                            2
                                          ]
                                        },
                                        {
                                          "Zil": "<EQUAL? .NW ,W?QUOTE>",
                                          "Form": [
                                            {
                                              "Atom": "EQUAL?"
                                            },
                                            {
                                              "Zil": ".NW",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "NW"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",W?QUOTE",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "W?QUOTE"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<AND <G? .LEN 2> <EQUAL? .NW ,W?COMMA ,W?AND>>",
                                      "Form": [
                                        {
                                          "Atom": "AND"
                                        },
                                        {
                                          "Zil": "<G? .LEN 2>",
                                          "Form": [
                                            {
                                              "Atom": "G?"
                                            },
                                            {
                                              "Zil": ".LEN",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "LEN"
                                                }
                                              ]
                                            },
                                            2
                                          ]
                                        },
                                        {
                                          "Zil": "<EQUAL? .NW ,W?COMMA ,W?AND>",
                                          "Form": [
                                            {
                                              "Atom": "EQUAL?"
                                            },
                                            {
                                              "Zil": ".NW",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "NW"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",W?COMMA",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "W?COMMA"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",W?AND",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "W?AND"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET DIR .VAL>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "DIR"
                                },
                                {
                                  "Zil": ".VAL",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "VAL"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<EQUAL? .NW ,W?COMMA ,W?AND> <PUT ,P-LEXV <+ .PTR ,P-LEXELEN> ,W?THEN>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<EQUAL? .NW ,W?COMMA ,W?AND>",
                                    "Form": [
                                      {
                                        "Atom": "EQUAL?"
                                      },
                                      {
                                        "Zil": ".NW",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "NW"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",W?COMMA",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "W?COMMA"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",W?AND",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "W?AND"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<PUT ,P-LEXV <+ .PTR ,P-LEXELEN> ,W?THEN>",
                                    "Form": [
                                      {
                                        "Atom": "PUT"
                                      },
                                      {
                                        "Zil": ",P-LEXV",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-LEXV"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": "<+ .PTR ,P-LEXELEN>",
                                        "Form": [
                                          {
                                            "Atom": "+"
                                          },
                                          {
                                            "Zil": ".PTR",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "PTR"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",P-LEXELEN",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-LEXELEN"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",W?THEN",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "W?THEN"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              ]
                            },
                            {
                              "Zil": "<COND (<NOT <G? .LEN 2>> <SETG QUOTE-FLAG <>> <RETURN>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<NOT <G? .LEN 2>>",
                                    "Form": [
                                      {
                                        "Atom": "NOT"
                                      },
                                      {
                                        "Zil": "<G? .LEN 2>",
                                        "Form": [
                                          {
                                            "Atom": "G?"
                                          },
                                          {
                                            "Zil": ".LEN",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "LEN"
                                              }
                                            ]
                                          },
                                          2
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SETG QUOTE-FLAG <>>",
                                    "Form": [
                                      {
                                        "Atom": "SETG"
                                      },
                                      {
                                        "Atom": "QUOTE-FLAG"
                                      },
                                      {
                                        "Zil": "<>",
                                        "Form": []
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RETURN>",
                                    "Form": [
                                      {
                                        "Atom": "RETURN"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<AND <SET VAL <WT? .WRD ,PS?VERB ,P1?VERB>> <NOT .VERB>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<SET VAL <WT? .WRD ,PS?VERB ,P1?VERB>>",
                                  "Form": [
                                    {
                                      "Atom": "SET"
                                    },
                                    {
                                      "Atom": "VAL"
                                    },
                                    {
                                      "Zil": "<WT? .WRD ,PS?VERB ,P1?VERB>",
                                      "Form": [
                                        {
                                          "Atom": "WT?"
                                        },
                                        {
                                          "Zil": ".WRD",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "WRD"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",PS?VERB",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "PS?VERB"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",P1?VERB",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "P1?VERB"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<NOT .VERB>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": ".VERB",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "VERB"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET VERB .VAL>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "VERB"
                                },
                                {
                                  "Zil": ".VAL",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "VAL"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<PUT ,P-ITBL ,P-VERB .VAL>",
                              "Form": [
                                {
                                  "Atom": "PUT"
                                },
                                {
                                  "Zil": ",P-ITBL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ITBL"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-VERB",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-VERB"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".VAL",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "VAL"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<PUT ,P-ITBL ,P-VERBN ,P-VTBL>",
                              "Form": [
                                {
                                  "Atom": "PUT"
                                },
                                {
                                  "Zil": ",P-ITBL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ITBL"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-VERBN",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-VERBN"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-VTBL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-VTBL"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<PUT ,P-VTBL 0 .WRD>",
                              "Form": [
                                {
                                  "Atom": "PUT"
                                },
                                {
                                  "Zil": ",P-VTBL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-VTBL"
                                    }
                                  ]
                                },
                                0,
                                {
                                  "Zil": ".WRD",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "WRD"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<PUTB ,P-VTBL 2 <GETB ,P-LEXV <SET CNT <+ <* .PTR 2> 2>>>>",
                              "Form": [
                                {
                                  "Atom": "PUTB"
                                },
                                {
                                  "Zil": ",P-VTBL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-VTBL"
                                    }
                                  ]
                                },
                                2,
                                {
                                  "Zil": "<GETB ,P-LEXV <SET CNT <+ <* .PTR 2> 2>>>",
                                  "Form": [
                                    {
                                      "Atom": "GETB"
                                    },
                                    {
                                      "Zil": ",P-LEXV",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEXV"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<SET CNT <+ <* .PTR 2> 2>>",
                                      "Form": [
                                        {
                                          "Atom": "SET"
                                        },
                                        {
                                          "Atom": "CNT"
                                        },
                                        {
                                          "Zil": "<+ <* .PTR 2> 2>",
                                          "Form": [
                                            {
                                              "Atom": "+"
                                            },
                                            {
                                              "Zil": "<* .PTR 2>",
                                              "Form": [
                                                {
                                                  "Atom": "*"
                                                },
                                                {
                                                  "Zil": ".PTR",
                                                  "Form": [
                                                    {
                                                      "Atom": "LVAL"
                                                    },
                                                    {
                                                      "Atom": "PTR"
                                                    }
                                                  ]
                                                },
                                                2
                                              ]
                                            },
                                            2
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<PUTB ,P-VTBL 3 <GETB ,P-LEXV <+ .CNT 1>>>",
                              "Form": [
                                {
                                  "Atom": "PUTB"
                                },
                                {
                                  "Zil": ",P-VTBL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-VTBL"
                                    }
                                  ]
                                },
                                3,
                                {
                                  "Zil": "<GETB ,P-LEXV <+ .CNT 1>>",
                                  "Form": [
                                    {
                                      "Atom": "GETB"
                                    },
                                    {
                                      "Zil": ",P-LEXV",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEXV"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<+ .CNT 1>",
                                      "Form": [
                                        {
                                          "Atom": "+"
                                        },
                                        {
                                          "Zil": ".CNT",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "CNT"
                                            }
                                          ]
                                        },
                                        1
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<OR <SET VAL <WT? .WRD ,PS?PREPOSITION 0>> <EQUAL? .WRD ,W?ALL ,W?ONE> <WT? .WRD ,PS?ADJECTIVE> <WT? .WRD ,PS?OBJECT>>",
                              "Form": [
                                {
                                  "Atom": "OR"
                                },
                                {
                                  "Zil": "<SET VAL <WT? .WRD ,PS?PREPOSITION 0>>",
                                  "Form": [
                                    {
                                      "Atom": "SET"
                                    },
                                    {
                                      "Atom": "VAL"
                                    },
                                    {
                                      "Zil": "<WT? .WRD ,PS?PREPOSITION 0>",
                                      "Form": [
                                        {
                                          "Atom": "WT?"
                                        },
                                        {
                                          "Zil": ".WRD",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "WRD"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",PS?PREPOSITION",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "PS?PREPOSITION"
                                            }
                                          ]
                                        },
                                        0
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<EQUAL? .WRD ,W?ALL ,W?ONE>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ".WRD",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "WRD"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",W?ALL",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "W?ALL"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",W?ONE",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "W?ONE"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<WT? .WRD ,PS?ADJECTIVE>",
                                  "Form": [
                                    {
                                      "Atom": "WT?"
                                    },
                                    {
                                      "Zil": ".WRD",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "WRD"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PS?ADJECTIVE",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PS?ADJECTIVE"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<WT? .WRD ,PS?OBJECT>",
                                  "Form": [
                                    {
                                      "Atom": "WT?"
                                    },
                                    {
                                      "Zil": ".WRD",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "WRD"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PS?OBJECT",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PS?OBJECT"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<AND <G? ,P-LEN 1> <EQUAL? .NW ,W?OF> <ZERO? .VAL> <NOT <EQUAL? .WRD ,W?ALL ,W?ONE ,W?A>>> <SET OF-FLAG T>) (<AND <NOT <ZERO? .VAL>> <OR <ZERO? ,P-LEN> <EQUAL? .NW ,W?THEN ,W?PERIOD>>> <SETG P-END-ON-PREP T> <COND (<L? ,P-NCN 2> <PUT ,P-ITBL ,P-PREP1 .VAL> <PUT ,P-ITBL ,P-PREP1N .WRD>)>) (<EQUAL? ,P-NCN 2> <TELL \"There were too many nouns in that sentence.\" CR> <RFALSE>) (T <SETG P-NCN <+ ,P-NCN 1>> <SETG P-ACT .VERB> <OR <SET PTR <CLAUSE .PTR .VAL .WRD>> <RFALSE>> <COND (<L? .PTR 0> <SETG QUOTE-FLAG <>> <RETURN>)>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<AND <G? ,P-LEN 1> <EQUAL? .NW ,W?OF> <ZERO? .VAL> <NOT <EQUAL? .WRD ,W?ALL ,W?ONE ,W?A>>>",
                                    "Form": [
                                      {
                                        "Atom": "AND"
                                      },
                                      {
                                        "Zil": "<G? ,P-LEN 1>",
                                        "Form": [
                                          {
                                            "Atom": "G?"
                                          },
                                          {
                                            "Zil": ",P-LEN",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-LEN"
                                              }
                                            ]
                                          },
                                          1
                                        ]
                                      },
                                      {
                                        "Zil": "<EQUAL? .NW ,W?OF>",
                                        "Form": [
                                          {
                                            "Atom": "EQUAL?"
                                          },
                                          {
                                            "Zil": ".NW",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "NW"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",W?OF",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "W?OF"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": "<ZERO? .VAL>",
                                        "Form": [
                                          {
                                            "Atom": "ZERO?"
                                          },
                                          {
                                            "Zil": ".VAL",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "VAL"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": "<NOT <EQUAL? .WRD ,W?ALL ,W?ONE ,W?A>>",
                                        "Form": [
                                          {
                                            "Atom": "NOT"
                                          },
                                          {
                                            "Zil": "<EQUAL? .WRD ,W?ALL ,W?ONE ,W?A>",
                                            "Form": [
                                              {
                                                "Atom": "EQUAL?"
                                              },
                                              {
                                                "Zil": ".WRD",
                                                "Form": [
                                                  {
                                                    "Atom": "LVAL"
                                                  },
                                                  {
                                                    "Atom": "WRD"
                                                  }
                                                ]
                                              },
                                              {
                                                "Zil": ",W?ALL",
                                                "Form": [
                                                  {
                                                    "Atom": "GVAL"
                                                  },
                                                  {
                                                    "Atom": "W?ALL"
                                                  }
                                                ]
                                              },
                                              {
                                                "Zil": ",W?ONE",
                                                "Form": [
                                                  {
                                                    "Atom": "GVAL"
                                                  },
                                                  {
                                                    "Atom": "W?ONE"
                                                  }
                                                ]
                                              },
                                              {
                                                "Zil": ",W?A",
                                                "Form": [
                                                  {
                                                    "Atom": "GVAL"
                                                  },
                                                  {
                                                    "Atom": "W?A"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SET OF-FLAG T>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "OF-FLAG"
                                      },
                                      {
                                        "Atom": "T"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Zil": "<AND <NOT <ZERO? .VAL>> <OR <ZERO? ,P-LEN> <EQUAL? .NW ,W?THEN ,W?PERIOD>>>",
                                    "Form": [
                                      {
                                        "Atom": "AND"
                                      },
                                      {
                                        "Zil": "<NOT <ZERO? .VAL>>",
                                        "Form": [
                                          {
                                            "Atom": "NOT"
                                          },
                                          {
                                            "Zil": "<ZERO? .VAL>",
                                            "Form": [
                                              {
                                                "Atom": "ZERO?"
                                              },
                                              {
                                                "Zil": ".VAL",
                                                "Form": [
                                                  {
                                                    "Atom": "LVAL"
                                                  },
                                                  {
                                                    "Atom": "VAL"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": "<OR <ZERO? ,P-LEN> <EQUAL? .NW ,W?THEN ,W?PERIOD>>",
                                        "Form": [
                                          {
                                            "Atom": "OR"
                                          },
                                          {
                                            "Zil": "<ZERO? ,P-LEN>",
                                            "Form": [
                                              {
                                                "Atom": "ZERO?"
                                              },
                                              {
                                                "Zil": ",P-LEN",
                                                "Form": [
                                                  {
                                                    "Atom": "GVAL"
                                                  },
                                                  {
                                                    "Atom": "P-LEN"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": "<EQUAL? .NW ,W?THEN ,W?PERIOD>",
                                            "Form": [
                                              {
                                                "Atom": "EQUAL?"
                                              },
                                              {
                                                "Zil": ".NW",
                                                "Form": [
                                                  {
                                                    "Atom": "LVAL"
                                                  },
                                                  {
                                                    "Atom": "NW"
                                                  }
                                                ]
                                              },
                                              {
                                                "Zil": ",W?THEN",
                                                "Form": [
                                                  {
                                                    "Atom": "GVAL"
                                                  },
                                                  {
                                                    "Atom": "W?THEN"
                                                  }
                                                ]
                                              },
                                              {
                                                "Zil": ",W?PERIOD",
                                                "Form": [
                                                  {
                                                    "Atom": "GVAL"
                                                  },
                                                  {
                                                    "Atom": "W?PERIOD"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SETG P-END-ON-PREP T>",
                                    "Form": [
                                      {
                                        "Atom": "SETG"
                                      },
                                      {
                                        "Atom": "P-END-ON-PREP"
                                      },
                                      {
                                        "Atom": "T"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<COND (<L? ,P-NCN 2> <PUT ,P-ITBL ,P-PREP1 .VAL> <PUT ,P-ITBL ,P-PREP1N .WRD>)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": "<L? ,P-NCN 2>",
                                          "Form": [
                                            {
                                              "Atom": "L?"
                                            },
                                            {
                                              "Zil": ",P-NCN",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "P-NCN"
                                                }
                                              ]
                                            },
                                            2
                                          ]
                                        },
                                        {
                                          "Zil": "<PUT ,P-ITBL ,P-PREP1 .VAL>",
                                          "Form": [
                                            {
                                              "Atom": "PUT"
                                            },
                                            {
                                              "Zil": ",P-ITBL",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "P-ITBL"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",P-PREP1",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "P-PREP1"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ".VAL",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "VAL"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<PUT ,P-ITBL ,P-PREP1N .WRD>",
                                          "Form": [
                                            {
                                              "Atom": "PUT"
                                            },
                                            {
                                              "Zil": ",P-ITBL",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "P-ITBL"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",P-PREP1N",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "P-PREP1N"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ".WRD",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "WRD"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Zil": "<EQUAL? ,P-NCN 2>",
                                    "Form": [
                                      {
                                        "Atom": "EQUAL?"
                                      },
                                      {
                                        "Zil": ",P-NCN",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-NCN"
                                          }
                                        ]
                                      },
                                      2
                                    ]
                                  },
                                  {
                                    "Zil": "<TELL \"There were too many nouns in that sentence.\" CR>",
                                    "Form": [
                                      {
                                        "Atom": "TELL"
                                      },
                                      "There were too many nouns in that sentence.",
                                      {
                                        "Atom": "CR"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RFALSE>",
                                    "Form": [
                                      {
                                        "Atom": "RFALSE"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  {
                                    "Zil": "<SETG P-NCN <+ ,P-NCN 1>>",
                                    "Form": [
                                      {
                                        "Atom": "SETG"
                                      },
                                      {
                                        "Atom": "P-NCN"
                                      },
                                      {
                                        "Zil": "<+ ,P-NCN 1>",
                                        "Form": [
                                          {
                                            "Atom": "+"
                                          },
                                          {
                                            "Zil": ",P-NCN",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-NCN"
                                              }
                                            ]
                                          },
                                          1
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SETG P-ACT .VERB>",
                                    "Form": [
                                      {
                                        "Atom": "SETG"
                                      },
                                      {
                                        "Atom": "P-ACT"
                                      },
                                      {
                                        "Zil": ".VERB",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "VERB"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<OR <SET PTR <CLAUSE .PTR .VAL .WRD>> <RFALSE>>",
                                    "Form": [
                                      {
                                        "Atom": "OR"
                                      },
                                      {
                                        "Zil": "<SET PTR <CLAUSE .PTR .VAL .WRD>>",
                                        "Form": [
                                          {
                                            "Atom": "SET"
                                          },
                                          {
                                            "Atom": "PTR"
                                          },
                                          {
                                            "Zil": "<CLAUSE .PTR .VAL .WRD>",
                                            "Form": [
                                              {
                                                "Atom": "CLAUSE"
                                              },
                                              {
                                                "Zil": ".PTR",
                                                "Form": [
                                                  {
                                                    "Atom": "LVAL"
                                                  },
                                                  {
                                                    "Atom": "PTR"
                                                  }
                                                ]
                                              },
                                              {
                                                "Zil": ".VAL",
                                                "Form": [
                                                  {
                                                    "Atom": "LVAL"
                                                  },
                                                  {
                                                    "Atom": "VAL"
                                                  }
                                                ]
                                              },
                                              {
                                                "Zil": ".WRD",
                                                "Form": [
                                                  {
                                                    "Atom": "LVAL"
                                                  },
                                                  {
                                                    "Atom": "WRD"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": "<RFALSE>",
                                        "Form": [
                                          {
                                            "Atom": "RFALSE"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<COND (<L? .PTR 0> <SETG QUOTE-FLAG <>> <RETURN>)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": "<L? .PTR 0>",
                                          "Form": [
                                            {
                                              "Atom": "L?"
                                            },
                                            {
                                              "Zil": ".PTR",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "PTR"
                                                }
                                              ]
                                            },
                                            0
                                          ]
                                        },
                                        {
                                          "Zil": "<SETG QUOTE-FLAG <>>",
                                          "Form": [
                                            {
                                              "Atom": "SETG"
                                            },
                                            {
                                              "Atom": "QUOTE-FLAG"
                                            },
                                            {
                                              "Zil": "<>",
                                              "Form": []
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<RETURN>",
                                          "Form": [
                                            {
                                              "Atom": "RETURN"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<EQUAL? .WRD ,W?OF>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".WRD",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "WRD"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?OF",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?OF"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<OR <NOT .OF-FLAG> <EQUAL? .NW ,W?PERIOD ,W?THEN>> <CANT-USE .PTR> <RFALSE>) (T <SET OF-FLAG <>>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<OR <NOT .OF-FLAG> <EQUAL? .NW ,W?PERIOD ,W?THEN>>",
                                    "Form": [
                                      {
                                        "Atom": "OR"
                                      },
                                      {
                                        "Zil": "<NOT .OF-FLAG>",
                                        "Form": [
                                          {
                                            "Atom": "NOT"
                                          },
                                          {
                                            "Zil": ".OF-FLAG",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "OF-FLAG"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": "<EQUAL? .NW ,W?PERIOD ,W?THEN>",
                                        "Form": [
                                          {
                                            "Atom": "EQUAL?"
                                          },
                                          {
                                            "Zil": ".NW",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "NW"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",W?PERIOD",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "W?PERIOD"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",W?THEN",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "W?THEN"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<CANT-USE .PTR>",
                                    "Form": [
                                      {
                                        "Atom": "CANT-USE"
                                      },
                                      {
                                        "Zil": ".PTR",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "PTR"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RFALSE>",
                                    "Form": [
                                      {
                                        "Atom": "RFALSE"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  {
                                    "Zil": "<SET OF-FLAG <>>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "OF-FLAG"
                                      },
                                      {
                                        "Zil": "<>",
                                        "Form": []
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<WT? .WRD ,PS?BUZZ-WORD>",
                              "Form": [
                                {
                                  "Atom": "WT?"
                                },
                                {
                                  "Zil": ".WRD",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "WRD"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",PS?BUZZ-WORD",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PS?BUZZ-WORD"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<AND <EQUAL? .VERB ,ACT?TELL> <WT? .WRD ,PS?VERB ,P1?VERB> <EQUAL? ,WINNER ,PLAYER>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<EQUAL? .VERB ,ACT?TELL>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ".VERB",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "VERB"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",ACT?TELL",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "ACT?TELL"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<WT? .WRD ,PS?VERB ,P1?VERB>",
                                  "Form": [
                                    {
                                      "Atom": "WT?"
                                    },
                                    {
                                      "Zil": ".WRD",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "WRD"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PS?VERB",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PS?VERB"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P1?VERB",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P1?VERB"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<EQUAL? ,WINNER ,PLAYER>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ",WINNER",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "WINNER"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PLAYER",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PLAYER"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<TELL \"Please consult your manual for the correct way to talk to other people\r\nor creatures.\" CR>",
                              "Form": [
                                {
                                  "Atom": "TELL"
                                },
                                "Please consult your manual for the correct way to talk to other people\r\nor creatures.",
                                {
                                  "Atom": "CR"
                                }
                              ]
                            },
                            {
                              "Zil": "<RFALSE>",
                              "Form": [
                                {
                                  "Atom": "RFALSE"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            {
                              "Zil": "<CANT-USE .PTR>",
                              "Form": [
                                {
                                  "Atom": "CANT-USE"
                                },
                                {
                                  "Zil": ".PTR",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "PTR"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<RFALSE>",
                              "Form": [
                                {
                                  "Atom": "RFALSE"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<UNKNOWN-WORD .PTR>",
                        "Form": [
                          {
                            "Atom": "UNKNOWN-WORD"
                          },
                          {
                            "Zil": ".PTR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "PTR"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RFALSE>",
                        "Form": [
                          {
                            "Atom": "RFALSE"
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<SET LW .WRD>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "LW"
                    },
                    {
                      "Zil": ".WRD",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "WRD"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET PTR <+ .PTR ,P-LEXELEN>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "PTR"
                    },
                    {
                      "Zil": "<+ .PTR ,P-LEXELEN>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ".PTR",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "PTR"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-LEXELEN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-LEXELEN"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<PUT ,OOPS-TABLE ,O-PTR <>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",OOPS-TABLE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "OOPS-TABLE"
              }
            ]
          },
          {
            "Zil": ",O-PTR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "O-PTR"
              }
            ]
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (.DIR <SETG PRSA ,V?WALK> <SETG PRSO .DIR> <SETG P-OFLAG <>> <SETG P-WALK-DIR .DIR> <SETG AGAIN-DIR .DIR>) (ELSE <COND (,P-OFLAG <ORPHAN-MERGE>)> <SETG P-WALK-DIR <>> <SETG AGAIN-DIR <>> <COND (<AND <SYNTAX-CHECK> <SNARF-OBJECTS> <MANY-CHECK> <TAKE-CHECK>> T)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ".DIR",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "DIR"
                }
              ]
            },
            {
              "Zil": "<SETG PRSA ,V?WALK>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "PRSA"
                },
                {
                  "Zil": ",V?WALK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?WALK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG PRSO .DIR>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "PRSO"
                },
                {
                  "Zil": ".DIR",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DIR"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-OFLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-OFLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG P-WALK-DIR .DIR>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-WALK-DIR"
                },
                {
                  "Zil": ".DIR",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DIR"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG AGAIN-DIR .DIR>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "AGAIN-DIR"
                },
                {
                  "Zil": ".DIR",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DIR"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<COND (,P-OFLAG <ORPHAN-MERGE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",P-OFLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-OFLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<ORPHAN-MERGE>",
                    "Form": [
                      {
                        "Atom": "ORPHAN-MERGE"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SETG P-WALK-DIR <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-WALK-DIR"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG AGAIN-DIR <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "AGAIN-DIR"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<COND (<AND <SYNTAX-CHECK> <SNARF-OBJECTS> <MANY-CHECK> <TAKE-CHECK>> T)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <SYNTAX-CHECK> <SNARF-OBJECTS> <MANY-CHECK> <TAKE-CHECK>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<SYNTAX-CHECK>",
                        "Form": [
                          {
                            "Atom": "SYNTAX-CHECK"
                          }
                        ]
                      },
                      {
                        "Zil": "<SNARF-OBJECTS>",
                        "Form": [
                          {
                            "Atom": "SNARF-OBJECTS"
                          }
                        ]
                      },
                      {
                        "Zil": "<MANY-CHECK>",
                        "Form": [
                          {
                            "Atom": "MANY-CHECK"
                          }
                        ]
                      },
                      {
                        "Zil": "<TAKE-CHECK>",
                        "Form": [
                          {
                            "Atom": "TAKE-CHECK"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Atom": "T"
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:387",
    "Name": "STUFF",
    "ArgSpec": "(SRC DEST \"OPT\" (MAX 29) \"AUX\" (PTR ,P-LEXSTART) (CTR 1) BPTR)",
    "Body": [
      {
        "Zil": "<PUTB .DEST 0 <GETB .SRC 0>>",
        "Form": [
          {
            "Atom": "PUTB"
          },
          {
            "Zil": ".DEST",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "DEST"
              }
            ]
          },
          0,
          {
            "Zil": "<GETB .SRC 0>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": ".SRC",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "SRC"
                  }
                ]
              },
              0
            ]
          }
        ]
      },
      {
        "Zil": "<PUTB .DEST 1 <GETB .SRC 1>>",
        "Form": [
          {
            "Atom": "PUTB"
          },
          {
            "Zil": ".DEST",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "DEST"
              }
            ]
          },
          1,
          {
            "Zil": "<GETB .SRC 1>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": ".SRC",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "SRC"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <PUT .DEST .PTR <GET .SRC .PTR>> <SET BPTR <+ <* .PTR 2> 2>> <PUTB .DEST .BPTR <GETB .SRC .BPTR>> <SET BPTR <+ <* .PTR 2> 3>> <PUTB .DEST .BPTR <GETB .SRC .BPTR>> <SET PTR <+ .PTR ,P-LEXELEN>> <COND (<IGRTR? CTR .MAX> <RETURN>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<PUT .DEST .PTR <GET .SRC .PTR>>",
            "Form": [
              {
                "Atom": "PUT"
              },
              {
                "Zil": ".DEST",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "DEST"
                  }
                ]
              },
              {
                "Zil": ".PTR",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "PTR"
                  }
                ]
              },
              {
                "Zil": "<GET .SRC .PTR>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  {
                    "Zil": ".SRC",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "SRC"
                      }
                    ]
                  },
                  {
                    "Zil": ".PTR",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "PTR"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<SET BPTR <+ <* .PTR 2> 2>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "BPTR"
              },
              {
                "Zil": "<+ <* .PTR 2> 2>",
                "Form": [
                  {
                    "Atom": "+"
                  },
                  {
                    "Zil": "<* .PTR 2>",
                    "Form": [
                      {
                        "Atom": "*"
                      },
                      {
                        "Zil": ".PTR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PTR"
                          }
                        ]
                      },
                      2
                    ]
                  },
                  2
                ]
              }
            ]
          },
          {
            "Zil": "<PUTB .DEST .BPTR <GETB .SRC .BPTR>>",
            "Form": [
              {
                "Atom": "PUTB"
              },
              {
                "Zil": ".DEST",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "DEST"
                  }
                ]
              },
              {
                "Zil": ".BPTR",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "BPTR"
                  }
                ]
              },
              {
                "Zil": "<GETB .SRC .BPTR>",
                "Form": [
                  {
                    "Atom": "GETB"
                  },
                  {
                    "Zil": ".SRC",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "SRC"
                      }
                    ]
                  },
                  {
                    "Zil": ".BPTR",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "BPTR"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<SET BPTR <+ <* .PTR 2> 3>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "BPTR"
              },
              {
                "Zil": "<+ <* .PTR 2> 3>",
                "Form": [
                  {
                    "Atom": "+"
                  },
                  {
                    "Zil": "<* .PTR 2>",
                    "Form": [
                      {
                        "Atom": "*"
                      },
                      {
                        "Zil": ".PTR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PTR"
                          }
                        ]
                      },
                      2
                    ]
                  },
                  3
                ]
              }
            ]
          },
          {
            "Zil": "<PUTB .DEST .BPTR <GETB .SRC .BPTR>>",
            "Form": [
              {
                "Atom": "PUTB"
              },
              {
                "Zil": ".DEST",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "DEST"
                  }
                ]
              },
              {
                "Zil": ".BPTR",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "BPTR"
                  }
                ]
              },
              {
                "Zil": "<GETB .SRC .BPTR>",
                "Form": [
                  {
                    "Atom": "GETB"
                  },
                  {
                    "Zil": ".SRC",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "SRC"
                      }
                    ]
                  },
                  {
                    "Zil": ".BPTR",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "BPTR"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<SET PTR <+ .PTR ,P-LEXELEN>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "PTR"
              },
              {
                "Zil": "<+ .PTR ,P-LEXELEN>",
                "Form": [
                  {
                    "Atom": "+"
                  },
                  {
                    "Zil": ".PTR",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "PTR"
                      }
                    ]
                  },
                  {
                    "Zil": ",P-LEXELEN",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-LEXELEN"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<COND (<IGRTR? CTR .MAX> <RETURN>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<IGRTR? CTR .MAX>",
                  "Form": [
                    {
                      "Atom": "IGRTR?"
                    },
                    {
                      "Atom": "CTR"
                    },
                    {
                      "Zil": ".MAX",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "MAX"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:402",
    "Name": "INBUF-STUFF",
    "ArgSpec": "(SRC DEST \"AUX\" CNT)",
    "Body": [
      {
        "Zil": "<SET CNT <- <GETB .SRC 0> 1>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "CNT"
          },
          {
            "Zil": "<- <GETB .SRC 0> 1>",
            "Form": [
              {
                "Atom": "-"
              },
              {
                "Zil": "<GETB .SRC 0>",
                "Form": [
                  {
                    "Atom": "GETB"
                  },
                  {
                    "Zil": ".SRC",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "SRC"
                      }
                    ]
                  },
                  0
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <PUTB .DEST .CNT <GETB .SRC .CNT>> <COND (<DLESS? CNT 0> <RETURN>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<PUTB .DEST .CNT <GETB .SRC .CNT>>",
            "Form": [
              {
                "Atom": "PUTB"
              },
              {
                "Zil": ".DEST",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "DEST"
                  }
                ]
              },
              {
                "Zil": ".CNT",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "CNT"
                  }
                ]
              },
              {
                "Zil": "<GETB .SRC .CNT>",
                "Form": [
                  {
                    "Atom": "GETB"
                  },
                  {
                    "Zil": ".SRC",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "SRC"
                      }
                    ]
                  },
                  {
                    "Zil": ".CNT",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "CNT"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<COND (<DLESS? CNT 0> <RETURN>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<DLESS? CNT 0>",
                  "Form": [
                    {
                      "Atom": "DLESS?"
                    },
                    {
                      "Atom": "CNT"
                    },
                    0
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:410",
    "Name": "INBUF-ADD",
    "ArgSpec": "(LEN BEG SLOT \"AUX\" DBEG (CTR 0) TMP)",
    "Body": [
      {
        "Zil": "<COND (<SET TMP <GET ,OOPS-TABLE ,O-END>> <SET DBEG .TMP>) (T <SET DBEG <+ <GETB ,AGAIN-LEXV <SET TMP <GET ,OOPS-TABLE ,O-LENGTH>>> <GETB ,AGAIN-LEXV <+ .TMP 1>>>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET TMP <GET ,OOPS-TABLE ,O-END>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TMP"
                },
                {
                  "Zil": "<GET ,OOPS-TABLE ,O-END>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",OOPS-TABLE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "OOPS-TABLE"
                        }
                      ]
                    },
                    {
                      "Zil": ",O-END",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "O-END"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET DBEG .TMP>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "DBEG"
                },
                {
                  "Zil": ".TMP",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "TMP"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SET DBEG <+ <GETB ,AGAIN-LEXV <SET TMP <GET ,OOPS-TABLE ,O-LENGTH>>> <GETB ,AGAIN-LEXV <+ .TMP 1>>>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "DBEG"
                },
                {
                  "Zil": "<+ <GETB ,AGAIN-LEXV <SET TMP <GET ,OOPS-TABLE ,O-LENGTH>>> <GETB ,AGAIN-LEXV <+ .TMP 1>>>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": "<GETB ,AGAIN-LEXV <SET TMP <GET ,OOPS-TABLE ,O-LENGTH>>>",
                      "Form": [
                        {
                          "Atom": "GETB"
                        },
                        {
                          "Zil": ",AGAIN-LEXV",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "AGAIN-LEXV"
                            }
                          ]
                        },
                        {
                          "Zil": "<SET TMP <GET ,OOPS-TABLE ,O-LENGTH>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "TMP"
                            },
                            {
                              "Zil": "<GET ,OOPS-TABLE ,O-LENGTH>",
                              "Form": [
                                {
                                  "Atom": "GET"
                                },
                                {
                                  "Zil": ",OOPS-TABLE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "OOPS-TABLE"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",O-LENGTH",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "O-LENGTH"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<GETB ,AGAIN-LEXV <+ .TMP 1>>",
                      "Form": [
                        {
                          "Atom": "GETB"
                        },
                        {
                          "Zil": ",AGAIN-LEXV",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "AGAIN-LEXV"
                            }
                          ]
                        },
                        {
                          "Zil": "<+ .TMP 1>",
                          "Form": [
                            {
                              "Atom": "+"
                            },
                            {
                              "Zil": ".TMP",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "TMP"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<PUT ,OOPS-TABLE ,O-END <+ .DBEG .LEN>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",OOPS-TABLE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "OOPS-TABLE"
              }
            ]
          },
          {
            "Zil": ",O-END",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "O-END"
              }
            ]
          },
          {
            "Zil": "<+ .DBEG .LEN>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ".DBEG",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "DBEG"
                  }
                ]
              },
              {
                "Zil": ".LEN",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "LEN"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <PUTB ,OOPS-INBUF <+ .DBEG .CTR> <GETB ,P-INBUF <+ .BEG .CTR>>> <SET CTR <+ .CTR 1>> <COND (<EQUAL? .CTR .LEN> <RETURN>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<PUTB ,OOPS-INBUF <+ .DBEG .CTR> <GETB ,P-INBUF <+ .BEG .CTR>>>",
            "Form": [
              {
                "Atom": "PUTB"
              },
              {
                "Zil": ",OOPS-INBUF",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "OOPS-INBUF"
                  }
                ]
              },
              {
                "Zil": "<+ .DBEG .CTR>",
                "Form": [
                  {
                    "Atom": "+"
                  },
                  {
                    "Zil": ".DBEG",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "DBEG"
                      }
                    ]
                  },
                  {
                    "Zil": ".CTR",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "CTR"
                      }
                    ]
                  }
                ]
              },
              {
                "Zil": "<GETB ,P-INBUF <+ .BEG .CTR>>",
                "Form": [
                  {
                    "Atom": "GETB"
                  },
                  {
                    "Zil": ",P-INBUF",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-INBUF"
                      }
                    ]
                  },
                  {
                    "Zil": "<+ .BEG .CTR>",
                    "Form": [
                      {
                        "Atom": "+"
                      },
                      {
                        "Zil": ".BEG",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "BEG"
                          }
                        ]
                      },
                      {
                        "Zil": ".CTR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "CTR"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<SET CTR <+ .CTR 1>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "CTR"
              },
              {
                "Zil": "<+ .CTR 1>",
                "Form": [
                  {
                    "Atom": "+"
                  },
                  {
                    "Zil": ".CTR",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "CTR"
                      }
                    ]
                  },
                  1
                ]
              }
            ]
          },
          {
            "Zil": "<COND (<EQUAL? .CTR .LEN> <RETURN>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<EQUAL? .CTR .LEN>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".CTR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CTR"
                        }
                      ]
                    },
                    {
                      "Zil": ".LEN",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "LEN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Zil": "<PUTB ,AGAIN-LEXV .SLOT .DBEG>",
        "Form": [
          {
            "Atom": "PUTB"
          },
          {
            "Zil": ",AGAIN-LEXV",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "AGAIN-LEXV"
              }
            ]
          },
          {
            "Zil": ".SLOT",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "SLOT"
              }
            ]
          },
          {
            "Zil": ".DBEG",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "DBEG"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUTB ,AGAIN-LEXV <- .SLOT 1> .LEN>",
        "Form": [
          {
            "Atom": "PUTB"
          },
          {
            "Zil": ",AGAIN-LEXV",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "AGAIN-LEXV"
              }
            ]
          },
          {
            "Zil": "<- .SLOT 1>",
            "Form": [
              {
                "Atom": "-"
              },
              {
                "Zil": ".SLOT",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "SLOT"
                  }
                ]
              },
              1
            ]
          },
          {
            "Zil": ".LEN",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "LEN"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:430",
    "Name": "WT?",
    "ArgSpec": "(PTR BIT \"OPT\" (B1 5) \"AUX\" (OFFS ,P-P1OFF) TYP)",
    "Body": [
      {
        "Zil": "<COND (<BTST <SET TYP <GETB .PTR ,P-PSOFF>> .BIT> <COND (<G? .B1 4> <RTRUE>) (T <SET TYP <BAND .TYP ,P-P1BITS>> <COND (<NOT <EQUAL? .TYP .B1>> <SET OFFS <+ .OFFS 1>>)> <GETB .PTR .OFFS>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<BTST <SET TYP <GETB .PTR ,P-PSOFF>> .BIT>",
              "Form": [
                {
                  "Atom": "BTST"
                },
                {
                  "Zil": "<SET TYP <GETB .PTR ,P-PSOFF>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "TYP"
                    },
                    {
                      "Zil": "<GETB .PTR ,P-PSOFF>",
                      "Form": [
                        {
                          "Atom": "GETB"
                        },
                        {
                          "Zil": ".PTR",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "PTR"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-PSOFF",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-PSOFF"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ".BIT",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "BIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<G? .B1 4> <RTRUE>) (T <SET TYP <BAND .TYP ,P-P1BITS>> <COND (<NOT <EQUAL? .TYP .B1>> <SET OFFS <+ .OFFS 1>>)> <GETB .PTR .OFFS>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<G? .B1 4>",
                    "Form": [
                      {
                        "Atom": "G?"
                      },
                      {
                        "Zil": ".B1",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "B1"
                          }
                        ]
                      },
                      4
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SET TYP <BAND .TYP ,P-P1BITS>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "TYP"
                      },
                      {
                        "Zil": "<BAND .TYP ,P-P1BITS>",
                        "Form": [
                          {
                            "Atom": "BAND"
                          },
                          {
                            "Zil": ".TYP",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TYP"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-P1BITS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-P1BITS"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<NOT <EQUAL? .TYP .B1>> <SET OFFS <+ .OFFS 1>>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<NOT <EQUAL? .TYP .B1>>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": "<EQUAL? .TYP .B1>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".TYP",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "TYP"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".B1",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "B1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SET OFFS <+ .OFFS 1>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "OFFS"
                            },
                            {
                              "Zil": "<+ .OFFS 1>",
                              "Form": [
                                {
                                  "Atom": "+"
                                },
                                {
                                  "Zil": ".OFFS",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "OFFS"
                                    }
                                  ]
                                },
                                1
                              ]
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<GETB .PTR .OFFS>",
                    "Form": [
                      {
                        "Atom": "GETB"
                      },
                      {
                        "Zil": ".PTR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PTR"
                          }
                        ]
                      },
                      {
                        "Zil": ".OFFS",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OFFS"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:440",
    "Name": "CLAUSE",
    "ArgSpec": "(PTR VAL WRD \"AUX\" OFF NUM (ANDFLG <>) (FIRST?? T) NW (LW 0))",
    "Body": [
      {
        "Zil": "<SET OFF <* <- ,P-NCN 1> 2>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OFF"
          },
          {
            "Zil": "<* <- ,P-NCN 1> 2>",
            "Form": [
              {
                "Atom": "*"
              },
              {
                "Zil": "<- ,P-NCN 1>",
                "Form": [
                  {
                    "Atom": "-"
                  },
                  {
                    "Zil": ",P-NCN",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-NCN"
                      }
                    ]
                  },
                  1
                ]
              },
              2
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<NOT <EQUAL? .VAL 0>> <PUT ,P-ITBL <SET NUM <+ ,P-PREP1 .OFF>> .VAL> <PUT ,P-ITBL <+ .NUM 1> .WRD> <SET PTR <+ .PTR ,P-LEXELEN>>) (T <SETG P-LEN <+ ,P-LEN 1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <EQUAL? .VAL 0>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<EQUAL? .VAL 0>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".VAL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "VAL"
                        }
                      ]
                    },
                    0
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-ITBL <SET NUM <+ ,P-PREP1 .OFF>> .VAL>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-ITBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ITBL"
                    }
                  ]
                },
                {
                  "Zil": "<SET NUM <+ ,P-PREP1 .OFF>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "NUM"
                    },
                    {
                      "Zil": "<+ ,P-PREP1 .OFF>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ",P-PREP1",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-PREP1"
                            }
                          ]
                        },
                        {
                          "Zil": ".OFF",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "OFF"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ".VAL",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "VAL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-ITBL <+ .NUM 1> .WRD>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-ITBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ITBL"
                    }
                  ]
                },
                {
                  "Zil": "<+ .NUM 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ".NUM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "NUM"
                        }
                      ]
                    },
                    1
                  ]
                },
                {
                  "Zil": ".WRD",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "WRD"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET PTR <+ .PTR ,P-LEXELEN>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "PTR"
                },
                {
                  "Zil": "<+ .PTR ,P-LEXELEN>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ".PTR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "PTR"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-LEXELEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-LEXELEN"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SETG P-LEN <+ ,P-LEN 1>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-LEN"
                },
                {
                  "Zil": "<+ ,P-LEN 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ",P-LEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-LEN"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<ZERO? ,P-LEN> <SETG P-NCN <- ,P-NCN 1>> <RETURN -1>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<ZERO? ,P-LEN>",
              "Form": [
                {
                  "Atom": "ZERO?"
                },
                {
                  "Zil": ",P-LEN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-LEN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-NCN <- ,P-NCN 1>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-NCN"
                },
                {
                  "Zil": "<- ,P-NCN 1>",
                  "Form": [
                    {
                      "Atom": "-"
                    },
                    {
                      "Zil": ",P-NCN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NCN"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            },
            {
              "Zil": "<RETURN -1>",
              "Form": [
                {
                  "Atom": "RETURN"
                },
                -1
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<PUT ,P-ITBL <SET NUM <+ ,P-NC1 .OFF>> <REST ,P-LEXV <* .PTR 2>>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-ITBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-ITBL"
              }
            ]
          },
          {
            "Zil": "<SET NUM <+ ,P-NC1 .OFF>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "NUM"
              },
              {
                "Zil": "<+ ,P-NC1 .OFF>",
                "Form": [
                  {
                    "Atom": "+"
                  },
                  {
                    "Zil": ",P-NC1",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-NC1"
                      }
                    ]
                  },
                  {
                    "Zil": ".OFF",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "OFF"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<REST ,P-LEXV <* .PTR 2>>",
            "Form": [
              {
                "Atom": "REST"
              },
              {
                "Zil": ",P-LEXV",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-LEXV"
                  }
                ]
              },
              {
                "Zil": "<* .PTR 2>",
                "Form": [
                  {
                    "Atom": "*"
                  },
                  {
                    "Zil": ".PTR",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "PTR"
                      }
                    ]
                  },
                  2
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<EQUAL? <GET ,P-LEXV .PTR> ,W?THE ,W?A ,W?AN> <PUT ,P-ITBL .NUM <REST <GET ,P-ITBL .NUM> 4>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? <GET ,P-LEXV .PTR> ,W?THE ,W?A ,W?AN>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": "<GET ,P-LEXV .PTR>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-LEXV",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-LEXV"
                        }
                      ]
                    },
                    {
                      "Zil": ".PTR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "PTR"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",W?THE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "W?THE"
                    }
                  ]
                },
                {
                  "Zil": ",W?A",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "W?A"
                    }
                  ]
                },
                {
                  "Zil": ",W?AN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "W?AN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-ITBL .NUM <REST <GET ,P-ITBL .NUM> 4>>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-ITBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ITBL"
                    }
                  ]
                },
                {
                  "Zil": ".NUM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "NUM"
                    }
                  ]
                },
                {
                  "Zil": "<REST <GET ,P-ITBL .NUM> 4>",
                  "Form": [
                    {
                      "Atom": "REST"
                    },
                    {
                      "Zil": "<GET ,P-ITBL .NUM>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-ITBL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-ITBL"
                            }
                          ]
                        },
                        {
                          "Zil": ".NUM",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "NUM"
                            }
                          ]
                        }
                      ]
                    },
                    4
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<L? <SETG P-LEN <- ,P-LEN 1>> 0> <PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* .PTR 2>>> <RETURN -1>)> <COND (<OR <SET WRD <GET ,P-LEXV .PTR>> <SET WRD <NUMBER? .PTR>>> <COND (<ZERO? ,P-LEN> <SET NW 0>) (T <SET NW <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>>)> <COND (<EQUAL? .WRD ,W?AND ,W?COMMA> <SET ANDFLG T>) (<EQUAL? .WRD ,W?ALL ,W?ONE> <COND (<EQUAL? .NW ,W?OF> <SETG P-LEN <- ,P-LEN 1>> <SET PTR <+ .PTR ,P-LEXELEN>>)>) (<OR <EQUAL? .WRD ,W?THEN ,W?PERIOD> <AND <WT? .WRD ,PS?PREPOSITION> <GET ,P-ITBL ,P-VERB> <NOT .FIRST??>>> <SETG P-LEN <+ ,P-LEN 1>> <PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* .PTR 2>>> <RETURN <- .PTR ,P-LEXELEN>>) (<WT? .WRD ,PS?OBJECT> <COND (<AND <G? ,P-LEN 0> <EQUAL? .NW ,W?OF> <NOT <EQUAL? .WRD ,W?ALL ,W?ONE>>> T) (<AND <WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE> <NOT <EQUAL? .NW 0>> <WT? .NW ,PS?OBJECT>>) (<AND <NOT .ANDFLG> <NOT <EQUAL? .NW ,W?BUT ,W?EXCEPT>> <NOT <EQUAL? .NW ,W?AND ,W?COMMA>>> <PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* <+ .PTR 2> 2>>> <RETURN .PTR>) (T <SET ANDFLG <>>)>) (<AND <OR ,P-MERGED ,P-OFLAG <NOT <EQUAL? <GET ,P-ITBL ,P-VERB> 0>>> <OR <WT? .WRD ,PS?ADJECTIVE> <WT? .WRD ,PS?BUZZ-WORD>>>) (<AND .ANDFLG <OR <WT? .WRD ,PS?DIRECTION> <WT? .WRD ,PS?VERB>>> <SET PTR <- .PTR 4>> <PUT ,P-LEXV <+ .PTR 2> ,W?THEN> <SETG P-LEN <+ ,P-LEN 2>>) (<WT? .WRD ,PS?PREPOSITION> T) (T <CANT-USE .PTR> <RFALSE>)>) (T <UNKNOWN-WORD .PTR> <RFALSE>)> <SET LW .WRD> <SET FIRST?? <>> <SET PTR <+ .PTR ,P-LEXELEN>>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<L? <SETG P-LEN <- ,P-LEN 1>> 0> <PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* .PTR 2>>> <RETURN -1>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<L? <SETG P-LEN <- ,P-LEN 1>> 0>",
                  "Form": [
                    {
                      "Atom": "L?"
                    },
                    {
                      "Zil": "<SETG P-LEN <- ,P-LEN 1>>",
                      "Form": [
                        {
                          "Atom": "SETG"
                        },
                        {
                          "Atom": "P-LEN"
                        },
                        {
                          "Zil": "<- ,P-LEN 1>",
                          "Form": [
                            {
                              "Atom": "-"
                            },
                            {
                              "Zil": ",P-LEN",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-LEN"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    },
                    0
                  ]
                },
                {
                  "Zil": "<PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* .PTR 2>>>",
                  "Form": [
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": "<+ .NUM 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ".NUM",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "NUM"
                            }
                          ]
                        },
                        1
                      ]
                    },
                    {
                      "Zil": "<REST ,P-LEXV <* .PTR 2>>",
                      "Form": [
                        {
                          "Atom": "REST"
                        },
                        {
                          "Zil": ",P-LEXV",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-LEXV"
                            }
                          ]
                        },
                        {
                          "Zil": "<* .PTR 2>",
                          "Form": [
                            {
                              "Atom": "*"
                            },
                            {
                              "Zil": ".PTR",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "PTR"
                                }
                              ]
                            },
                            2
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN -1>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    -1
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<COND (<OR <SET WRD <GET ,P-LEXV .PTR>> <SET WRD <NUMBER? .PTR>>> <COND (<ZERO? ,P-LEN> <SET NW 0>) (T <SET NW <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>>)> <COND (<EQUAL? .WRD ,W?AND ,W?COMMA> <SET ANDFLG T>) (<EQUAL? .WRD ,W?ALL ,W?ONE> <COND (<EQUAL? .NW ,W?OF> <SETG P-LEN <- ,P-LEN 1>> <SET PTR <+ .PTR ,P-LEXELEN>>)>) (<OR <EQUAL? .WRD ,W?THEN ,W?PERIOD> <AND <WT? .WRD ,PS?PREPOSITION> <GET ,P-ITBL ,P-VERB> <NOT .FIRST??>>> <SETG P-LEN <+ ,P-LEN 1>> <PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* .PTR 2>>> <RETURN <- .PTR ,P-LEXELEN>>) (<WT? .WRD ,PS?OBJECT> <COND (<AND <G? ,P-LEN 0> <EQUAL? .NW ,W?OF> <NOT <EQUAL? .WRD ,W?ALL ,W?ONE>>> T) (<AND <WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE> <NOT <EQUAL? .NW 0>> <WT? .NW ,PS?OBJECT>>) (<AND <NOT .ANDFLG> <NOT <EQUAL? .NW ,W?BUT ,W?EXCEPT>> <NOT <EQUAL? .NW ,W?AND ,W?COMMA>>> <PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* <+ .PTR 2> 2>>> <RETURN .PTR>) (T <SET ANDFLG <>>)>) (<AND <OR ,P-MERGED ,P-OFLAG <NOT <EQUAL? <GET ,P-ITBL ,P-VERB> 0>>> <OR <WT? .WRD ,PS?ADJECTIVE> <WT? .WRD ,PS?BUZZ-WORD>>>) (<AND .ANDFLG <OR <WT? .WRD ,PS?DIRECTION> <WT? .WRD ,PS?VERB>>> <SET PTR <- .PTR 4>> <PUT ,P-LEXV <+ .PTR 2> ,W?THEN> <SETG P-LEN <+ ,P-LEN 2>>) (<WT? .WRD ,PS?PREPOSITION> T) (T <CANT-USE .PTR> <RFALSE>)>) (T <UNKNOWN-WORD .PTR> <RFALSE>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<OR <SET WRD <GET ,P-LEXV .PTR>> <SET WRD <NUMBER? .PTR>>>",
                  "Form": [
                    {
                      "Atom": "OR"
                    },
                    {
                      "Zil": "<SET WRD <GET ,P-LEXV .PTR>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "WRD"
                        },
                        {
                          "Zil": "<GET ,P-LEXV .PTR>",
                          "Form": [
                            {
                              "Atom": "GET"
                            },
                            {
                              "Zil": ",P-LEXV",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-LEXV"
                                }
                              ]
                            },
                            {
                              "Zil": ".PTR",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "PTR"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<SET WRD <NUMBER? .PTR>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "WRD"
                        },
                        {
                          "Zil": "<NUMBER? .PTR>",
                          "Form": [
                            {
                              "Atom": "NUMBER?"
                            },
                            {
                              "Zil": ".PTR",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "PTR"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<ZERO? ,P-LEN> <SET NW 0>) (T <SET NW <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<ZERO? ,P-LEN>",
                        "Form": [
                          {
                            "Atom": "ZERO?"
                          },
                          {
                            "Zil": ",P-LEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEN"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET NW 0>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "NW"
                          },
                          0
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<SET NW <GET ,P-LEXV <+ .PTR ,P-LEXELEN>>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "NW"
                          },
                          {
                            "Zil": "<GET ,P-LEXV <+ .PTR ,P-LEXELEN>>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",P-LEXV",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-LEXV"
                                  }
                                ]
                              },
                              {
                                "Zil": "<+ .PTR ,P-LEXELEN>",
                                "Form": [
                                  {
                                    "Atom": "+"
                                  },
                                  {
                                    "Zil": ".PTR",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "PTR"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P-LEXELEN",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-LEXELEN"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<COND (<EQUAL? .WRD ,W?AND ,W?COMMA> <SET ANDFLG T>) (<EQUAL? .WRD ,W?ALL ,W?ONE> <COND (<EQUAL? .NW ,W?OF> <SETG P-LEN <- ,P-LEN 1>> <SET PTR <+ .PTR ,P-LEXELEN>>)>) (<OR <EQUAL? .WRD ,W?THEN ,W?PERIOD> <AND <WT? .WRD ,PS?PREPOSITION> <GET ,P-ITBL ,P-VERB> <NOT .FIRST??>>> <SETG P-LEN <+ ,P-LEN 1>> <PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* .PTR 2>>> <RETURN <- .PTR ,P-LEXELEN>>) (<WT? .WRD ,PS?OBJECT> <COND (<AND <G? ,P-LEN 0> <EQUAL? .NW ,W?OF> <NOT <EQUAL? .WRD ,W?ALL ,W?ONE>>> T) (<AND <WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE> <NOT <EQUAL? .NW 0>> <WT? .NW ,PS?OBJECT>>) (<AND <NOT .ANDFLG> <NOT <EQUAL? .NW ,W?BUT ,W?EXCEPT>> <NOT <EQUAL? .NW ,W?AND ,W?COMMA>>> <PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* <+ .PTR 2> 2>>> <RETURN .PTR>) (T <SET ANDFLG <>>)>) (<AND <OR ,P-MERGED ,P-OFLAG <NOT <EQUAL? <GET ,P-ITBL ,P-VERB> 0>>> <OR <WT? .WRD ,PS?ADJECTIVE> <WT? .WRD ,PS?BUZZ-WORD>>>) (<AND .ANDFLG <OR <WT? .WRD ,PS?DIRECTION> <WT? .WRD ,PS?VERB>>> <SET PTR <- .PTR 4>> <PUT ,P-LEXV <+ .PTR 2> ,W?THEN> <SETG P-LEN <+ ,P-LEN 2>>) (<WT? .WRD ,PS?PREPOSITION> T) (T <CANT-USE .PTR> <RFALSE>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<EQUAL? .WRD ,W?AND ,W?COMMA>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?AND",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?AND"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?COMMA",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?COMMA"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET ANDFLG T>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "ANDFLG"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<EQUAL? .WRD ,W?ALL ,W?ONE>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?ALL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?ALL"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?ONE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?ONE"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<EQUAL? .NW ,W?OF> <SETG P-LEN <- ,P-LEN 1>> <SET PTR <+ .PTR ,P-LEXELEN>>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<EQUAL? .NW ,W?OF>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".NW",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "NW"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?OF",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?OF"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-LEN <- ,P-LEN 1>>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-LEN"
                                },
                                {
                                  "Zil": "<- ,P-LEN 1>",
                                  "Form": [
                                    {
                                      "Atom": "-"
                                    },
                                    {
                                      "Zil": ",P-LEN",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEN"
                                        }
                                      ]
                                    },
                                    1
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET PTR <+ .PTR ,P-LEXELEN>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "PTR"
                                },
                                {
                                  "Zil": "<+ .PTR ,P-LEXELEN>",
                                  "Form": [
                                    {
                                      "Atom": "+"
                                    },
                                    {
                                      "Zil": ".PTR",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "PTR"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P-LEXELEN",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEXELEN"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<OR <EQUAL? .WRD ,W?THEN ,W?PERIOD> <AND <WT? .WRD ,PS?PREPOSITION> <GET ,P-ITBL ,P-VERB> <NOT .FIRST??>>>",
                        "Form": [
                          {
                            "Atom": "OR"
                          },
                          {
                            "Zil": "<EQUAL? .WRD ,W?THEN ,W?PERIOD>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".WRD",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "WRD"
                                  }
                                ]
                              },
                              {
                                "Zil": ",W?THEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "W?THEN"
                                  }
                                ]
                              },
                              {
                                "Zil": ",W?PERIOD",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "W?PERIOD"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<AND <WT? .WRD ,PS?PREPOSITION> <GET ,P-ITBL ,P-VERB> <NOT .FIRST??>>",
                            "Form": [
                              {
                                "Atom": "AND"
                              },
                              {
                                "Zil": "<WT? .WRD ,PS?PREPOSITION>",
                                "Form": [
                                  {
                                    "Atom": "WT?"
                                  },
                                  {
                                    "Zil": ".WRD",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "WRD"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",PS?PREPOSITION",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "PS?PREPOSITION"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<GET ,P-ITBL ,P-VERB>",
                                "Form": [
                                  {
                                    "Atom": "GET"
                                  },
                                  {
                                    "Zil": ",P-ITBL",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-ITBL"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P-VERB",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-VERB"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<NOT .FIRST??>",
                                "Form": [
                                  {
                                    "Atom": "NOT"
                                  },
                                  {
                                    "Zil": ".FIRST??",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "FIRST??"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SETG P-LEN <+ ,P-LEN 1>>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-LEN"
                          },
                          {
                            "Zil": "<+ ,P-LEN 1>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ",P-LEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-LEN"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* .PTR 2>>>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ",P-ITBL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-ITBL"
                              }
                            ]
                          },
                          {
                            "Zil": "<+ .NUM 1>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".NUM",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "NUM"
                                  }
                                ]
                              },
                              1
                            ]
                          },
                          {
                            "Zil": "<REST ,P-LEXV <* .PTR 2>>",
                            "Form": [
                              {
                                "Atom": "REST"
                              },
                              {
                                "Zil": ",P-LEXV",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-LEXV"
                                  }
                                ]
                              },
                              {
                                "Zil": "<* .PTR 2>",
                                "Form": [
                                  {
                                    "Atom": "*"
                                  },
                                  {
                                    "Zil": ".PTR",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "PTR"
                                      }
                                    ]
                                  },
                                  2
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN <- .PTR ,P-LEXELEN>>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          },
                          {
                            "Zil": "<- .PTR ,P-LEXELEN>",
                            "Form": [
                              {
                                "Atom": "-"
                              },
                              {
                                "Zil": ".PTR",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "PTR"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-LEXELEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-LEXELEN"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<WT? .WRD ,PS?OBJECT>",
                        "Form": [
                          {
                            "Atom": "WT?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",PS?OBJECT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PS?OBJECT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<AND <G? ,P-LEN 0> <EQUAL? .NW ,W?OF> <NOT <EQUAL? .WRD ,W?ALL ,W?ONE>>> T) (<AND <WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE> <NOT <EQUAL? .NW 0>> <WT? .NW ,PS?OBJECT>>) (<AND <NOT .ANDFLG> <NOT <EQUAL? .NW ,W?BUT ,W?EXCEPT>> <NOT <EQUAL? .NW ,W?AND ,W?COMMA>>> <PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* <+ .PTR 2> 2>>> <RETURN .PTR>) (T <SET ANDFLG <>>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<AND <G? ,P-LEN 0> <EQUAL? .NW ,W?OF> <NOT <EQUAL? .WRD ,W?ALL ,W?ONE>>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<G? ,P-LEN 0>",
                                  "Form": [
                                    {
                                      "Atom": "G?"
                                    },
                                    {
                                      "Zil": ",P-LEN",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEN"
                                        }
                                      ]
                                    },
                                    0
                                  ]
                                },
                                {
                                  "Zil": "<EQUAL? .NW ,W?OF>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ".NW",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "NW"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",W?OF",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "W?OF"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<NOT <EQUAL? .WRD ,W?ALL ,W?ONE>>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": "<EQUAL? .WRD ,W?ALL ,W?ONE>",
                                      "Form": [
                                        {
                                          "Atom": "EQUAL?"
                                        },
                                        {
                                          "Zil": ".WRD",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "WRD"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",W?ALL",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "W?ALL"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",W?ONE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "W?ONE"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Atom": "T"
                            }
                          ],
                          [
                            {
                              "Zil": "<AND <WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE> <NOT <EQUAL? .NW 0>> <WT? .NW ,PS?OBJECT>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE>",
                                  "Form": [
                                    {
                                      "Atom": "WT?"
                                    },
                                    {
                                      "Zil": ".WRD",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "WRD"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PS?ADJECTIVE",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PS?ADJECTIVE"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P1?ADJECTIVE",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P1?ADJECTIVE"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<NOT <EQUAL? .NW 0>>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": "<EQUAL? .NW 0>",
                                      "Form": [
                                        {
                                          "Atom": "EQUAL?"
                                        },
                                        {
                                          "Zil": ".NW",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "NW"
                                            }
                                          ]
                                        },
                                        0
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<WT? .NW ,PS?OBJECT>",
                                  "Form": [
                                    {
                                      "Atom": "WT?"
                                    },
                                    {
                                      "Zil": ".NW",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "NW"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PS?OBJECT",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PS?OBJECT"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<AND <NOT .ANDFLG> <NOT <EQUAL? .NW ,W?BUT ,W?EXCEPT>> <NOT <EQUAL? .NW ,W?AND ,W?COMMA>>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<NOT .ANDFLG>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": ".ANDFLG",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "ANDFLG"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<NOT <EQUAL? .NW ,W?BUT ,W?EXCEPT>>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": "<EQUAL? .NW ,W?BUT ,W?EXCEPT>",
                                      "Form": [
                                        {
                                          "Atom": "EQUAL?"
                                        },
                                        {
                                          "Zil": ".NW",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "NW"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",W?BUT",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "W?BUT"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",W?EXCEPT",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "W?EXCEPT"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<NOT <EQUAL? .NW ,W?AND ,W?COMMA>>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": "<EQUAL? .NW ,W?AND ,W?COMMA>",
                                      "Form": [
                                        {
                                          "Atom": "EQUAL?"
                                        },
                                        {
                                          "Zil": ".NW",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "NW"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",W?AND",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "W?AND"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",W?COMMA",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "W?COMMA"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<PUT ,P-ITBL <+ .NUM 1> <REST ,P-LEXV <* <+ .PTR 2> 2>>>",
                              "Form": [
                                {
                                  "Atom": "PUT"
                                },
                                {
                                  "Zil": ",P-ITBL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ITBL"
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<+ .NUM 1>",
                                  "Form": [
                                    {
                                      "Atom": "+"
                                    },
                                    {
                                      "Zil": ".NUM",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "NUM"
                                        }
                                      ]
                                    },
                                    1
                                  ]
                                },
                                {
                                  "Zil": "<REST ,P-LEXV <* <+ .PTR 2> 2>>",
                                  "Form": [
                                    {
                                      "Atom": "REST"
                                    },
                                    {
                                      "Zil": ",P-LEXV",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-LEXV"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<* <+ .PTR 2> 2>",
                                      "Form": [
                                        {
                                          "Atom": "*"
                                        },
                                        {
                                          "Zil": "<+ .PTR 2>",
                                          "Form": [
                                            {
                                              "Atom": "+"
                                            },
                                            {
                                              "Zil": ".PTR",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "PTR"
                                                }
                                              ]
                                            },
                                            2
                                          ]
                                        },
                                        2
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<RETURN .PTR>",
                              "Form": [
                                {
                                  "Atom": "RETURN"
                                },
                                {
                                  "Zil": ".PTR",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "PTR"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            {
                              "Zil": "<SET ANDFLG <>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "ANDFLG"
                                },
                                {
                                  "Zil": "<>",
                                  "Form": []
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<AND <OR ,P-MERGED ,P-OFLAG <NOT <EQUAL? <GET ,P-ITBL ,P-VERB> 0>>> <OR <WT? .WRD ,PS?ADJECTIVE> <WT? .WRD ,PS?BUZZ-WORD>>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<OR ,P-MERGED ,P-OFLAG <NOT <EQUAL? <GET ,P-ITBL ,P-VERB> 0>>>",
                            "Form": [
                              {
                                "Atom": "OR"
                              },
                              {
                                "Zil": ",P-MERGED",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-MERGED"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-OFLAG",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-OFLAG"
                                  }
                                ]
                              },
                              {
                                "Zil": "<NOT <EQUAL? <GET ,P-ITBL ,P-VERB> 0>>",
                                "Form": [
                                  {
                                    "Atom": "NOT"
                                  },
                                  {
                                    "Zil": "<EQUAL? <GET ,P-ITBL ,P-VERB> 0>",
                                    "Form": [
                                      {
                                        "Atom": "EQUAL?"
                                      },
                                      {
                                        "Zil": "<GET ,P-ITBL ,P-VERB>",
                                        "Form": [
                                          {
                                            "Atom": "GET"
                                          },
                                          {
                                            "Zil": ",P-ITBL",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-ITBL"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",P-VERB",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-VERB"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      0
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<OR <WT? .WRD ,PS?ADJECTIVE> <WT? .WRD ,PS?BUZZ-WORD>>",
                            "Form": [
                              {
                                "Atom": "OR"
                              },
                              {
                                "Zil": "<WT? .WRD ,PS?ADJECTIVE>",
                                "Form": [
                                  {
                                    "Atom": "WT?"
                                  },
                                  {
                                    "Zil": ".WRD",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "WRD"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",PS?ADJECTIVE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "PS?ADJECTIVE"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<WT? .WRD ,PS?BUZZ-WORD>",
                                "Form": [
                                  {
                                    "Atom": "WT?"
                                  },
                                  {
                                    "Zil": ".WRD",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "WRD"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",PS?BUZZ-WORD",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "PS?BUZZ-WORD"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<AND .ANDFLG <OR <WT? .WRD ,PS?DIRECTION> <WT? .WRD ,PS?VERB>>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": ".ANDFLG",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "ANDFLG"
                              }
                            ]
                          },
                          {
                            "Zil": "<OR <WT? .WRD ,PS?DIRECTION> <WT? .WRD ,PS?VERB>>",
                            "Form": [
                              {
                                "Atom": "OR"
                              },
                              {
                                "Zil": "<WT? .WRD ,PS?DIRECTION>",
                                "Form": [
                                  {
                                    "Atom": "WT?"
                                  },
                                  {
                                    "Zil": ".WRD",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "WRD"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",PS?DIRECTION",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "PS?DIRECTION"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<WT? .WRD ,PS?VERB>",
                                "Form": [
                                  {
                                    "Atom": "WT?"
                                  },
                                  {
                                    "Zil": ".WRD",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "WRD"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",PS?VERB",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "PS?VERB"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET PTR <- .PTR 4>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "PTR"
                          },
                          {
                            "Zil": "<- .PTR 4>",
                            "Form": [
                              {
                                "Atom": "-"
                              },
                              {
                                "Zil": ".PTR",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "PTR"
                                  }
                                ]
                              },
                              4
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PUT ,P-LEXV <+ .PTR 2> ,W?THEN>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ",P-LEXV",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-LEXV"
                              }
                            ]
                          },
                          {
                            "Zil": "<+ .PTR 2>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".PTR",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "PTR"
                                  }
                                ]
                              },
                              2
                            ]
                          },
                          {
                            "Zil": ",W?THEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?THEN"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SETG P-LEN <+ ,P-LEN 2>>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-LEN"
                          },
                          {
                            "Zil": "<+ ,P-LEN 2>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ",P-LEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-LEN"
                                  }
                                ]
                              },
                              2
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<WT? .WRD ,PS?PREPOSITION>",
                        "Form": [
                          {
                            "Atom": "WT?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",PS?PREPOSITION",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PS?PREPOSITION"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Atom": "T"
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<CANT-USE .PTR>",
                        "Form": [
                          {
                            "Atom": "CANT-USE"
                          },
                          {
                            "Zil": ".PTR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "PTR"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RFALSE>",
                        "Form": [
                          {
                            "Atom": "RFALSE"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<UNKNOWN-WORD .PTR>",
                  "Form": [
                    {
                      "Atom": "UNKNOWN-WORD"
                    },
                    {
                      "Zil": ".PTR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "PTR"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<SET LW .WRD>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "LW"
              },
              {
                "Zil": ".WRD",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "WRD"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<SET FIRST?? <>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "FIRST??"
              },
              {
                "Zil": "<>",
                "Form": []
              }
            ]
          },
          {
            "Zil": "<SET PTR <+ .PTR ,P-LEXELEN>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "PTR"
              },
              {
                "Zil": "<+ .PTR ,P-LEXELEN>",
                "Form": [
                  {
                    "Atom": "+"
                  },
                  {
                    "Zil": ".PTR",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "PTR"
                      }
                    ]
                  },
                  {
                    "Zil": ",P-LEXELEN",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-LEXELEN"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:512",
    "Name": "NUMBER?",
    "ArgSpec": "(PTR \"AUX\" CNT BPTR CHR (SUM 0) (TIM <>))",
    "Body": [
      {
        "Zil": "<SET CNT <GETB <REST ,P-LEXV <* .PTR 2>> 2>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "CNT"
          },
          {
            "Zil": "<GETB <REST ,P-LEXV <* .PTR 2>> 2>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": "<REST ,P-LEXV <* .PTR 2>>",
                "Form": [
                  {
                    "Atom": "REST"
                  },
                  {
                    "Zil": ",P-LEXV",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-LEXV"
                      }
                    ]
                  },
                  {
                    "Zil": "<* .PTR 2>",
                    "Form": [
                      {
                        "Atom": "*"
                      },
                      {
                        "Zil": ".PTR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PTR"
                          }
                        ]
                      },
                      2
                    ]
                  }
                ]
              },
              2
            ]
          }
        ]
      },
      {
        "Zil": "<SET BPTR <GETB <REST ,P-LEXV <* .PTR 2>> 3>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "BPTR"
          },
          {
            "Zil": "<GETB <REST ,P-LEXV <* .PTR 2>> 3>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": "<REST ,P-LEXV <* .PTR 2>>",
                "Form": [
                  {
                    "Atom": "REST"
                  },
                  {
                    "Zil": ",P-LEXV",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-LEXV"
                      }
                    ]
                  },
                  {
                    "Zil": "<* .PTR 2>",
                    "Form": [
                      {
                        "Atom": "*"
                      },
                      {
                        "Zil": ".PTR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PTR"
                          }
                        ]
                      },
                      2
                    ]
                  }
                ]
              },
              3
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<L? <SET CNT <- .CNT 1>> 0> <RETURN>) (T <SET CHR <GETB ,P-INBUF .BPTR>> <COND (<EQUAL? .CHR 58> <SET TIM .SUM> <SET SUM 0>) (<G? .SUM 10000> <RFALSE>) (<AND <L? .CHR 58> <G? .CHR 47>> <SET SUM <+ <* .SUM 10> <- .CHR 48>>>) (T <RFALSE>)> <SET BPTR <+ .BPTR 1>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<L? <SET CNT <- .CNT 1>> 0> <RETURN>) (T <SET CHR <GETB ,P-INBUF .BPTR>> <COND (<EQUAL? .CHR 58> <SET TIM .SUM> <SET SUM 0>) (<G? .SUM 10000> <RFALSE>) (<AND <L? .CHR 58> <G? .CHR 47>> <SET SUM <+ <* .SUM 10> <- .CHR 48>>>) (T <RFALSE>)> <SET BPTR <+ .BPTR 1>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<L? <SET CNT <- .CNT 1>> 0>",
                  "Form": [
                    {
                      "Atom": "L?"
                    },
                    {
                      "Zil": "<SET CNT <- .CNT 1>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "CNT"
                        },
                        {
                          "Zil": "<- .CNT 1>",
                          "Form": [
                            {
                              "Atom": "-"
                            },
                            {
                              "Zil": ".CNT",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "CNT"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    },
                    0
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<SET CHR <GETB ,P-INBUF .BPTR>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "CHR"
                    },
                    {
                      "Zil": "<GETB ,P-INBUF .BPTR>",
                      "Form": [
                        {
                          "Atom": "GETB"
                        },
                        {
                          "Zil": ",P-INBUF",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-INBUF"
                            }
                          ]
                        },
                        {
                          "Zil": ".BPTR",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "BPTR"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<EQUAL? .CHR 58> <SET TIM .SUM> <SET SUM 0>) (<G? .SUM 10000> <RFALSE>) (<AND <L? .CHR 58> <G? .CHR 47>> <SET SUM <+ <* .SUM 10> <- .CHR 48>>>) (T <RFALSE>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<EQUAL? .CHR 58>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".CHR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "CHR"
                              }
                            ]
                          },
                          58
                        ]
                      },
                      {
                        "Zil": "<SET TIM .SUM>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "TIM"
                          },
                          {
                            "Zil": ".SUM",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "SUM"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET SUM 0>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "SUM"
                          },
                          0
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<G? .SUM 10000>",
                        "Form": [
                          {
                            "Atom": "G?"
                          },
                          {
                            "Zil": ".SUM",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "SUM"
                              }
                            ]
                          },
                          10000
                        ]
                      },
                      {
                        "Zil": "<RFALSE>",
                        "Form": [
                          {
                            "Atom": "RFALSE"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<AND <L? .CHR 58> <G? .CHR 47>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<L? .CHR 58>",
                            "Form": [
                              {
                                "Atom": "L?"
                              },
                              {
                                "Zil": ".CHR",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "CHR"
                                  }
                                ]
                              },
                              58
                            ]
                          },
                          {
                            "Zil": "<G? .CHR 47>",
                            "Form": [
                              {
                                "Atom": "G?"
                              },
                              {
                                "Zil": ".CHR",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "CHR"
                                  }
                                ]
                              },
                              47
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET SUM <+ <* .SUM 10> <- .CHR 48>>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "SUM"
                          },
                          {
                            "Zil": "<+ <* .SUM 10> <- .CHR 48>>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": "<* .SUM 10>",
                                "Form": [
                                  {
                                    "Atom": "*"
                                  },
                                  {
                                    "Zil": ".SUM",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "SUM"
                                      }
                                    ]
                                  },
                                  10
                                ]
                              },
                              {
                                "Zil": "<- .CHR 48>",
                                "Form": [
                                  {
                                    "Atom": "-"
                                  },
                                  {
                                    "Zil": ".CHR",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "CHR"
                                      }
                                    ]
                                  },
                                  48
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<RFALSE>",
                        "Form": [
                          {
                            "Atom": "RFALSE"
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<SET BPTR <+ .BPTR 1>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "BPTR"
                    },
                    {
                      "Zil": "<+ .BPTR 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ".BPTR",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "BPTR"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-LEXV .PTR ,W?INTNUM>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-LEXV",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-LEXV"
              }
            ]
          },
          {
            "Zil": ".PTR",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "PTR"
              }
            ]
          },
          {
            "Zil": ",W?INTNUM",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "W?INTNUM"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<G? .SUM 1000> <RFALSE>) (.TIM <COND (<L? .TIM 8> <SET TIM <+ .TIM 12>>) (<G? .TIM 23> <RFALSE>)> <SET SUM <+ .SUM <* .TIM 60>>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<G? .SUM 1000>",
              "Form": [
                {
                  "Atom": "G?"
                },
                {
                  "Zil": ".SUM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "SUM"
                    }
                  ]
                },
                1000
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": ".TIM",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "TIM"
                }
              ]
            },
            {
              "Zil": "<COND (<L? .TIM 8> <SET TIM <+ .TIM 12>>) (<G? .TIM 23> <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<L? .TIM 8>",
                    "Form": [
                      {
                        "Atom": "L?"
                      },
                      {
                        "Zil": ".TIM",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TIM"
                          }
                        ]
                      },
                      8
                    ]
                  },
                  {
                    "Zil": "<SET TIM <+ .TIM 12>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "TIM"
                      },
                      {
                        "Zil": "<+ .TIM 12>",
                        "Form": [
                          {
                            "Atom": "+"
                          },
                          {
                            "Zil": ".TIM",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TIM"
                              }
                            ]
                          },
                          12
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<G? .TIM 23>",
                    "Form": [
                      {
                        "Atom": "G?"
                      },
                      {
                        "Zil": ".TIM",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TIM"
                          }
                        ]
                      },
                      23
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SET SUM <+ .SUM <* .TIM 60>>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "SUM"
                },
                {
                  "Zil": "<+ .SUM <* .TIM 60>>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ".SUM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "SUM"
                        }
                      ]
                    },
                    {
                      "Zil": "<* .TIM 60>",
                      "Form": [
                        {
                          "Atom": "*"
                        },
                        {
                          "Zil": ".TIM",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TIM"
                            }
                          ]
                        },
                        60
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG P-NUMBER .SUM>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-NUMBER"
          },
          {
            "Zil": ".SUM",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "SUM"
              }
            ]
          }
        ]
      },
      {
        "Zil": ",W?INTNUM",
        "Form": [
          {
            "Atom": "GVAL"
          },
          {
            "Atom": "W?INTNUM"
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:543",
    "Name": "ORPHAN-MERGE",
    "ArgSpec": "(\"AUX\" (CNT -1) TEMP VERB BEG END (ADJ <>) WRD)",
    "Body": [
      {
        "Zil": "<SETG P-OFLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-OFLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (<OR <EQUAL? <WT? <SET WRD <GET <GET ,P-ITBL ,P-VERBN> 0>> ,PS?VERB ,P1?VERB> <GET ,P-OTBL ,P-VERB>> <NOT <ZERO? <WT? .WRD ,PS?ADJECTIVE>>>> <SET ADJ T>) (<AND <NOT <ZERO? <WT? .WRD ,PS?OBJECT ,P1?OBJECT>>> <EQUAL? ,P-NCN 0>> <PUT ,P-ITBL ,P-VERB 0> <PUT ,P-ITBL ,P-VERBN 0> <PUT ,P-ITBL ,P-NC1 <REST ,P-LEXV 2>> <PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>> <SETG P-NCN 1>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <EQUAL? <WT? <SET WRD <GET <GET ,P-ITBL ,P-VERBN> 0>> ,PS?VERB ,P1?VERB> <GET ,P-OTBL ,P-VERB>> <NOT <ZERO? <WT? .WRD ,PS?ADJECTIVE>>>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<EQUAL? <WT? <SET WRD <GET <GET ,P-ITBL ,P-VERBN> 0>> ,PS?VERB ,P1?VERB> <GET ,P-OTBL ,P-VERB>>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<WT? <SET WRD <GET <GET ,P-ITBL ,P-VERBN> 0>> ,PS?VERB ,P1?VERB>",
                      "Form": [
                        {
                          "Atom": "WT?"
                        },
                        {
                          "Zil": "<SET WRD <GET <GET ,P-ITBL ,P-VERBN> 0>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "WRD"
                            },
                            {
                              "Zil": "<GET <GET ,P-ITBL ,P-VERBN> 0>",
                              "Form": [
                                {
                                  "Atom": "GET"
                                },
                                {
                                  "Zil": "<GET ,P-ITBL ,P-VERBN>",
                                  "Form": [
                                    {
                                      "Atom": "GET"
                                    },
                                    {
                                      "Zil": ",P-ITBL",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-ITBL"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P-VERBN",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-VERBN"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                0
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": ",PS?VERB",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PS?VERB"
                            }
                          ]
                        },
                        {
                          "Zil": ",P1?VERB",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P1?VERB"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<GET ,P-OTBL ,P-VERB>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-OTBL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-OTBL"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-VERB",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-VERB"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <ZERO? <WT? .WRD ,PS?ADJECTIVE>>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<ZERO? <WT? .WRD ,PS?ADJECTIVE>>",
                      "Form": [
                        {
                          "Atom": "ZERO?"
                        },
                        {
                          "Zil": "<WT? .WRD ,PS?ADJECTIVE>",
                          "Form": [
                            {
                              "Atom": "WT?"
                            },
                            {
                              "Zil": ".WRD",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "WRD"
                                }
                              ]
                            },
                            {
                              "Zil": ",PS?ADJECTIVE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PS?ADJECTIVE"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET ADJ T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "ADJ"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <NOT <ZERO? <WT? .WRD ,PS?OBJECT ,P1?OBJECT>>> <EQUAL? ,P-NCN 0>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT <ZERO? <WT? .WRD ,PS?OBJECT ,P1?OBJECT>>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<ZERO? <WT? .WRD ,PS?OBJECT ,P1?OBJECT>>",
                      "Form": [
                        {
                          "Atom": "ZERO?"
                        },
                        {
                          "Zil": "<WT? .WRD ,PS?OBJECT ,P1?OBJECT>",
                          "Form": [
                            {
                              "Atom": "WT?"
                            },
                            {
                              "Zil": ".WRD",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "WRD"
                                }
                              ]
                            },
                            {
                              "Zil": ",PS?OBJECT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PS?OBJECT"
                                }
                              ]
                            },
                            {
                              "Zil": ",P1?OBJECT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P1?OBJECT"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,P-NCN 0>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",P-NCN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NCN"
                        }
                      ]
                    },
                    0
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-ITBL ,P-VERB 0>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-ITBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ITBL"
                    }
                  ]
                },
                {
                  "Zil": ",P-VERB",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-VERB"
                    }
                  ]
                },
                0
              ]
            },
            {
              "Zil": "<PUT ,P-ITBL ,P-VERBN 0>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-ITBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ITBL"
                    }
                  ]
                },
                {
                  "Zil": ",P-VERBN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-VERBN"
                    }
                  ]
                },
                0
              ]
            },
            {
              "Zil": "<PUT ,P-ITBL ,P-NC1 <REST ,P-LEXV 2>>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-ITBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ITBL"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC1",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC1"
                    }
                  ]
                },
                {
                  "Zil": "<REST ,P-LEXV 2>",
                  "Form": [
                    {
                      "Atom": "REST"
                    },
                    {
                      "Zil": ",P-LEXV",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-LEXV"
                        }
                      ]
                    },
                    2
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-ITBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ITBL"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC1L",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC1L"
                    }
                  ]
                },
                {
                  "Zil": "<REST ,P-LEXV 6>",
                  "Form": [
                    {
                      "Atom": "REST"
                    },
                    {
                      "Zil": ",P-LEXV",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-LEXV"
                        }
                      ]
                    },
                    6
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-NCN 1>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-NCN"
                },
                1
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<AND <NOT <ZERO? <SET VERB <GET ,P-ITBL ,P-VERB>>>> <NOT .ADJ> <NOT <EQUAL? .VERB <GET ,P-OTBL ,P-VERB>>>> <RFALSE>) (<EQUAL? ,P-NCN 2> <RFALSE>) (<EQUAL? <GET ,P-OTBL ,P-NC1> 1> <COND (<OR <EQUAL? <SET TEMP <GET ,P-ITBL ,P-PREP1>> <GET ,P-OTBL ,P-PREP1>> <ZERO? .TEMP>> <COND (.ADJ <PUT ,P-OTBL ,P-NC1 <REST ,P-LEXV 2>> <COND (<ZERO? <GET ,P-ITBL ,P-NC1L>> <PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>>)> <COND (<ZERO? ,P-NCN> <SETG P-NCN 1>)>) (T <PUT ,P-OTBL ,P-NC1 <GET ,P-ITBL ,P-NC1>>)> <PUT ,P-OTBL ,P-NC1L <GET ,P-ITBL ,P-NC1L>>) (T <RFALSE>)>) (<EQUAL? <GET ,P-OTBL ,P-NC2> 1> <COND (<OR <EQUAL? <SET TEMP <GET ,P-ITBL ,P-PREP1>> <GET ,P-OTBL ,P-PREP2>> <ZERO? .TEMP>> <COND (.ADJ <PUT ,P-ITBL ,P-NC1 <REST ,P-LEXV 2>> <COND (<ZERO? <GET ,P-ITBL ,P-NC1L>> <PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>>)>)> <PUT ,P-OTBL ,P-NC2 <GET ,P-ITBL ,P-NC1>> <PUT ,P-OTBL ,P-NC2L <GET ,P-ITBL ,P-NC1L>> <SETG P-NCN 2>) (T <RFALSE>)>) (<NOT <ZERO? ,P-ACLAUSE>> <COND (<AND <NOT <EQUAL? ,P-NCN 1>> <NOT .ADJ>> <SETG P-ACLAUSE <>> <RFALSE>) (T <SET BEG <GET ,P-ITBL ,P-NC1>> <COND (.ADJ <SET BEG <REST ,P-LEXV 2>> <SET ADJ <>>)> <SET END <GET ,P-ITBL ,P-NC1L>> <REPEAT () <SET WRD <GET .BEG 0>> <COND (<EQUAL? .BEG .END> <COND (.ADJ <ACLAUSE-WIN .ADJ> <RETURN>) (T <SETG P-ACLAUSE <>> <RFALSE>)>) (<AND <NOT .ADJ> <OR <BTST <GETB .WRD ,P-PSOFF> ,PS?ADJECTIVE> <EQUAL? .WRD ,W?ALL ,W?ONE>>> <SET ADJ .WRD>) (<EQUAL? .WRD ,W?ONE> <ACLAUSE-WIN .ADJ> <RETURN>) (<BTST <GETB .WRD ,P-PSOFF> ,PS?OBJECT> <COND (<EQUAL? .WRD ,P-ANAM> <ACLAUSE-WIN .ADJ>) (T <NCLAUSE-WIN>)> <RETURN>)> <SET BEG <REST .BEG ,P-WORDLEN>> <COND (<EQUAL? .END 0> <SET END .BEG> <SETG P-NCN 1> <PUT ,P-ITBL ,P-NC1 <BACK .BEG 4>> <PUT ,P-ITBL ,P-NC1L .BEG>)>>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <NOT <ZERO? <SET VERB <GET ,P-ITBL ,P-VERB>>>> <NOT .ADJ> <NOT <EQUAL? .VERB <GET ,P-OTBL ,P-VERB>>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT <ZERO? <SET VERB <GET ,P-ITBL ,P-VERB>>>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<ZERO? <SET VERB <GET ,P-ITBL ,P-VERB>>>",
                      "Form": [
                        {
                          "Atom": "ZERO?"
                        },
                        {
                          "Zil": "<SET VERB <GET ,P-ITBL ,P-VERB>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "VERB"
                            },
                            {
                              "Zil": "<GET ,P-ITBL ,P-VERB>",
                              "Form": [
                                {
                                  "Atom": "GET"
                                },
                                {
                                  "Zil": ",P-ITBL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ITBL"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-VERB",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-VERB"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT .ADJ>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".ADJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "ADJ"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <EQUAL? .VERB <GET ,P-OTBL ,P-VERB>>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? .VERB <GET ,P-OTBL ,P-VERB>>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ".VERB",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "VERB"
                            }
                          ]
                        },
                        {
                          "Zil": "<GET ,P-OTBL ,P-VERB>",
                          "Form": [
                            {
                              "Atom": "GET"
                            },
                            {
                              "Zil": ",P-OTBL",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-OTBL"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-VERB",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-VERB"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,P-NCN 2>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",P-NCN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NCN"
                    }
                  ]
                },
                2
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? <GET ,P-OTBL ,P-NC1> 1>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": "<GET ,P-OTBL ,P-NC1>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-OTBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-OTBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-NC1",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NC1"
                        }
                      ]
                    }
                  ]
                },
                1
              ]
            },
            {
              "Zil": "<COND (<OR <EQUAL? <SET TEMP <GET ,P-ITBL ,P-PREP1>> <GET ,P-OTBL ,P-PREP1>> <ZERO? .TEMP>> <COND (.ADJ <PUT ,P-OTBL ,P-NC1 <REST ,P-LEXV 2>> <COND (<ZERO? <GET ,P-ITBL ,P-NC1L>> <PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>>)> <COND (<ZERO? ,P-NCN> <SETG P-NCN 1>)>) (T <PUT ,P-OTBL ,P-NC1 <GET ,P-ITBL ,P-NC1>>)> <PUT ,P-OTBL ,P-NC1L <GET ,P-ITBL ,P-NC1L>>) (T <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR <EQUAL? <SET TEMP <GET ,P-ITBL ,P-PREP1>> <GET ,P-OTBL ,P-PREP1>> <ZERO? .TEMP>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<EQUAL? <SET TEMP <GET ,P-ITBL ,P-PREP1>> <GET ,P-OTBL ,P-PREP1>>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": "<SET TEMP <GET ,P-ITBL ,P-PREP1>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "TEMP"
                              },
                              {
                                "Zil": "<GET ,P-ITBL ,P-PREP1>",
                                "Form": [
                                  {
                                    "Atom": "GET"
                                  },
                                  {
                                    "Zil": ",P-ITBL",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-ITBL"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P-PREP1",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-PREP1"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<GET ,P-OTBL ,P-PREP1>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",P-OTBL",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-OTBL"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-PREP1",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-PREP1"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<ZERO? .TEMP>",
                        "Form": [
                          {
                            "Atom": "ZERO?"
                          },
                          {
                            "Zil": ".TEMP",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TEMP"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (.ADJ <PUT ,P-OTBL ,P-NC1 <REST ,P-LEXV 2>> <COND (<ZERO? <GET ,P-ITBL ,P-NC1L>> <PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>>)> <COND (<ZERO? ,P-NCN> <SETG P-NCN 1>)>) (T <PUT ,P-OTBL ,P-NC1 <GET ,P-ITBL ,P-NC1>>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ".ADJ",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "ADJ"
                            }
                          ]
                        },
                        {
                          "Zil": "<PUT ,P-OTBL ,P-NC1 <REST ,P-LEXV 2>>",
                          "Form": [
                            {
                              "Atom": "PUT"
                            },
                            {
                              "Zil": ",P-OTBL",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-OTBL"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-NC1",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-NC1"
                                }
                              ]
                            },
                            {
                              "Zil": "<REST ,P-LEXV 2>",
                              "Form": [
                                {
                                  "Atom": "REST"
                                },
                                {
                                  "Zil": ",P-LEXV",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-LEXV"
                                    }
                                  ]
                                },
                                2
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<COND (<ZERO? <GET ,P-ITBL ,P-NC1L>> <PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>>)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<ZERO? <GET ,P-ITBL ,P-NC1L>>",
                                "Form": [
                                  {
                                    "Atom": "ZERO?"
                                  },
                                  {
                                    "Zil": "<GET ,P-ITBL ,P-NC1L>",
                                    "Form": [
                                      {
                                        "Atom": "GET"
                                      },
                                      {
                                        "Zil": ",P-ITBL",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-ITBL"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",P-NC1L",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-NC1L"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>>",
                                "Form": [
                                  {
                                    "Atom": "PUT"
                                  },
                                  {
                                    "Zil": ",P-ITBL",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-ITBL"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P-NC1L",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-NC1L"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<REST ,P-LEXV 6>",
                                    "Form": [
                                      {
                                        "Atom": "REST"
                                      },
                                      {
                                        "Zil": ",P-LEXV",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-LEXV"
                                          }
                                        ]
                                      },
                                      6
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        },
                        {
                          "Zil": "<COND (<ZERO? ,P-NCN> <SETG P-NCN 1>)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<ZERO? ,P-NCN>",
                                "Form": [
                                  {
                                    "Atom": "ZERO?"
                                  },
                                  {
                                    "Zil": ",P-NCN",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-NCN"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<SETG P-NCN 1>",
                                "Form": [
                                  {
                                    "Atom": "SETG"
                                  },
                                  {
                                    "Atom": "P-NCN"
                                  },
                                  1
                                ]
                              }
                            ]
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<PUT ,P-OTBL ,P-NC1 <GET ,P-ITBL ,P-NC1>>",
                          "Form": [
                            {
                              "Atom": "PUT"
                            },
                            {
                              "Zil": ",P-OTBL",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-OTBL"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-NC1",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-NC1"
                                }
                              ]
                            },
                            {
                              "Zil": "<GET ,P-ITBL ,P-NC1>",
                              "Form": [
                                {
                                  "Atom": "GET"
                                },
                                {
                                  "Zil": ",P-ITBL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ITBL"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-NC1",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-NC1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<PUT ,P-OTBL ,P-NC1L <GET ,P-ITBL ,P-NC1L>>",
                    "Form": [
                      {
                        "Atom": "PUT"
                      },
                      {
                        "Zil": ",P-OTBL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-OTBL"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-NC1L",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-NC1L"
                          }
                        ]
                      },
                      {
                        "Zil": "<GET ,P-ITBL ,P-NC1L>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-ITBL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-ITBL"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-NC1L",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-NC1L"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? <GET ,P-OTBL ,P-NC2> 1>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": "<GET ,P-OTBL ,P-NC2>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-OTBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-OTBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-NC2",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NC2"
                        }
                      ]
                    }
                  ]
                },
                1
              ]
            },
            {
              "Zil": "<COND (<OR <EQUAL? <SET TEMP <GET ,P-ITBL ,P-PREP1>> <GET ,P-OTBL ,P-PREP2>> <ZERO? .TEMP>> <COND (.ADJ <PUT ,P-ITBL ,P-NC1 <REST ,P-LEXV 2>> <COND (<ZERO? <GET ,P-ITBL ,P-NC1L>> <PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>>)>)> <PUT ,P-OTBL ,P-NC2 <GET ,P-ITBL ,P-NC1>> <PUT ,P-OTBL ,P-NC2L <GET ,P-ITBL ,P-NC1L>> <SETG P-NCN 2>) (T <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR <EQUAL? <SET TEMP <GET ,P-ITBL ,P-PREP1>> <GET ,P-OTBL ,P-PREP2>> <ZERO? .TEMP>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<EQUAL? <SET TEMP <GET ,P-ITBL ,P-PREP1>> <GET ,P-OTBL ,P-PREP2>>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": "<SET TEMP <GET ,P-ITBL ,P-PREP1>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "TEMP"
                              },
                              {
                                "Zil": "<GET ,P-ITBL ,P-PREP1>",
                                "Form": [
                                  {
                                    "Atom": "GET"
                                  },
                                  {
                                    "Zil": ",P-ITBL",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-ITBL"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P-PREP1",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-PREP1"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<GET ,P-OTBL ,P-PREP2>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",P-OTBL",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-OTBL"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-PREP2",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-PREP2"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<ZERO? .TEMP>",
                        "Form": [
                          {
                            "Atom": "ZERO?"
                          },
                          {
                            "Zil": ".TEMP",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TEMP"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (.ADJ <PUT ,P-ITBL ,P-NC1 <REST ,P-LEXV 2>> <COND (<ZERO? <GET ,P-ITBL ,P-NC1L>> <PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>>)>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ".ADJ",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "ADJ"
                            }
                          ]
                        },
                        {
                          "Zil": "<PUT ,P-ITBL ,P-NC1 <REST ,P-LEXV 2>>",
                          "Form": [
                            {
                              "Atom": "PUT"
                            },
                            {
                              "Zil": ",P-ITBL",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-ITBL"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-NC1",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-NC1"
                                }
                              ]
                            },
                            {
                              "Zil": "<REST ,P-LEXV 2>",
                              "Form": [
                                {
                                  "Atom": "REST"
                                },
                                {
                                  "Zil": ",P-LEXV",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-LEXV"
                                    }
                                  ]
                                },
                                2
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<COND (<ZERO? <GET ,P-ITBL ,P-NC1L>> <PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>>)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<ZERO? <GET ,P-ITBL ,P-NC1L>>",
                                "Form": [
                                  {
                                    "Atom": "ZERO?"
                                  },
                                  {
                                    "Zil": "<GET ,P-ITBL ,P-NC1L>",
                                    "Form": [
                                      {
                                        "Atom": "GET"
                                      },
                                      {
                                        "Zil": ",P-ITBL",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-ITBL"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",P-NC1L",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-NC1L"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<PUT ,P-ITBL ,P-NC1L <REST ,P-LEXV 6>>",
                                "Form": [
                                  {
                                    "Atom": "PUT"
                                  },
                                  {
                                    "Zil": ",P-ITBL",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-ITBL"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P-NC1L",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-NC1L"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<REST ,P-LEXV 6>",
                                    "Form": [
                                      {
                                        "Atom": "REST"
                                      },
                                      {
                                        "Zil": ",P-LEXV",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-LEXV"
                                          }
                                        ]
                                      },
                                      6
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<PUT ,P-OTBL ,P-NC2 <GET ,P-ITBL ,P-NC1>>",
                    "Form": [
                      {
                        "Atom": "PUT"
                      },
                      {
                        "Zil": ",P-OTBL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-OTBL"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-NC2",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-NC2"
                          }
                        ]
                      },
                      {
                        "Zil": "<GET ,P-ITBL ,P-NC1>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-ITBL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-ITBL"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-NC1",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-NC1"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<PUT ,P-OTBL ,P-NC2L <GET ,P-ITBL ,P-NC1L>>",
                    "Form": [
                      {
                        "Atom": "PUT"
                      },
                      {
                        "Zil": ",P-OTBL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-OTBL"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-NC2L",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-NC2L"
                          }
                        ]
                      },
                      {
                        "Zil": "<GET ,P-ITBL ,P-NC1L>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-ITBL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-ITBL"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-NC1L",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-NC1L"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-NCN 2>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-NCN"
                      },
                      2
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <ZERO? ,P-ACLAUSE>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<ZERO? ,P-ACLAUSE>",
                  "Form": [
                    {
                      "Atom": "ZERO?"
                    },
                    {
                      "Zil": ",P-ACLAUSE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ACLAUSE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND <NOT <EQUAL? ,P-NCN 1>> <NOT .ADJ>> <SETG P-ACLAUSE <>> <RFALSE>) (T <SET BEG <GET ,P-ITBL ,P-NC1>> <COND (.ADJ <SET BEG <REST ,P-LEXV 2>> <SET ADJ <>>)> <SET END <GET ,P-ITBL ,P-NC1L>> <REPEAT () <SET WRD <GET .BEG 0>> <COND (<EQUAL? .BEG .END> <COND (.ADJ <ACLAUSE-WIN .ADJ> <RETURN>) (T <SETG P-ACLAUSE <>> <RFALSE>)>) (<AND <NOT .ADJ> <OR <BTST <GETB .WRD ,P-PSOFF> ,PS?ADJECTIVE> <EQUAL? .WRD ,W?ALL ,W?ONE>>> <SET ADJ .WRD>) (<EQUAL? .WRD ,W?ONE> <ACLAUSE-WIN .ADJ> <RETURN>) (<BTST <GETB .WRD ,P-PSOFF> ,PS?OBJECT> <COND (<EQUAL? .WRD ,P-ANAM> <ACLAUSE-WIN .ADJ>) (T <NCLAUSE-WIN>)> <RETURN>)> <SET BEG <REST .BEG ,P-WORDLEN>> <COND (<EQUAL? .END 0> <SET END .BEG> <SETG P-NCN 1> <PUT ,P-ITBL ,P-NC1 <BACK .BEG 4>> <PUT ,P-ITBL ,P-NC1L .BEG>)>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <NOT <EQUAL? ,P-NCN 1>> <NOT .ADJ>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<NOT <EQUAL? ,P-NCN 1>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<EQUAL? ,P-NCN 1>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ",P-NCN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-NCN"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT .ADJ>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".ADJ",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "ADJ"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-ACLAUSE <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-ACLAUSE"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SET BEG <GET ,P-ITBL ,P-NC1>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "BEG"
                      },
                      {
                        "Zil": "<GET ,P-ITBL ,P-NC1>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-ITBL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-ITBL"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-NC1",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-NC1"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (.ADJ <SET BEG <REST ,P-LEXV 2>> <SET ADJ <>>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ".ADJ",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "ADJ"
                            }
                          ]
                        },
                        {
                          "Zil": "<SET BEG <REST ,P-LEXV 2>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "BEG"
                            },
                            {
                              "Zil": "<REST ,P-LEXV 2>",
                              "Form": [
                                {
                                  "Atom": "REST"
                                },
                                {
                                  "Zil": ",P-LEXV",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-LEXV"
                                    }
                                  ]
                                },
                                2
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SET ADJ <>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "ADJ"
                            },
                            {
                              "Zil": "<>",
                              "Form": []
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<SET END <GET ,P-ITBL ,P-NC1L>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "END"
                      },
                      {
                        "Zil": "<GET ,P-ITBL ,P-NC1L>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-ITBL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-ITBL"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-NC1L",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-NC1L"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<REPEAT () <SET WRD <GET .BEG 0>> <COND (<EQUAL? .BEG .END> <COND (.ADJ <ACLAUSE-WIN .ADJ> <RETURN>) (T <SETG P-ACLAUSE <>> <RFALSE>)>) (<AND <NOT .ADJ> <OR <BTST <GETB .WRD ,P-PSOFF> ,PS?ADJECTIVE> <EQUAL? .WRD ,W?ALL ,W?ONE>>> <SET ADJ .WRD>) (<EQUAL? .WRD ,W?ONE> <ACLAUSE-WIN .ADJ> <RETURN>) (<BTST <GETB .WRD ,P-PSOFF> ,PS?OBJECT> <COND (<EQUAL? .WRD ,P-ANAM> <ACLAUSE-WIN .ADJ>) (T <NCLAUSE-WIN>)> <RETURN>)> <SET BEG <REST .BEG ,P-WORDLEN>> <COND (<EQUAL? .END 0> <SET END .BEG> <SETG P-NCN 1> <PUT ,P-ITBL ,P-NC1 <BACK .BEG 4>> <PUT ,P-ITBL ,P-NC1L .BEG>)>>",
                    "Form": [
                      {
                        "Atom": "REPEAT"
                      },
                      [],
                      {
                        "Zil": "<SET WRD <GET .BEG 0>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "WRD"
                          },
                          {
                            "Zil": "<GET .BEG 0>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ".BEG",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "BEG"
                                  }
                                ]
                              },
                              0
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<EQUAL? .BEG .END> <COND (.ADJ <ACLAUSE-WIN .ADJ> <RETURN>) (T <SETG P-ACLAUSE <>> <RFALSE>)>) (<AND <NOT .ADJ> <OR <BTST <GETB .WRD ,P-PSOFF> ,PS?ADJECTIVE> <EQUAL? .WRD ,W?ALL ,W?ONE>>> <SET ADJ .WRD>) (<EQUAL? .WRD ,W?ONE> <ACLAUSE-WIN .ADJ> <RETURN>) (<BTST <GETB .WRD ,P-PSOFF> ,PS?OBJECT> <COND (<EQUAL? .WRD ,P-ANAM> <ACLAUSE-WIN .ADJ>) (T <NCLAUSE-WIN>)> <RETURN>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<EQUAL? .BEG .END>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".BEG",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "BEG"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".END",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "END"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (.ADJ <ACLAUSE-WIN .ADJ> <RETURN>) (T <SETG P-ACLAUSE <>> <RFALSE>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": ".ADJ",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "ADJ"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<ACLAUSE-WIN .ADJ>",
                                    "Form": [
                                      {
                                        "Atom": "ACLAUSE-WIN"
                                      },
                                      {
                                        "Zil": ".ADJ",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "ADJ"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RETURN>",
                                    "Form": [
                                      {
                                        "Atom": "RETURN"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  {
                                    "Zil": "<SETG P-ACLAUSE <>>",
                                    "Form": [
                                      {
                                        "Atom": "SETG"
                                      },
                                      {
                                        "Atom": "P-ACLAUSE"
                                      },
                                      {
                                        "Zil": "<>",
                                        "Form": []
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RFALSE>",
                                    "Form": [
                                      {
                                        "Atom": "RFALSE"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<AND <NOT .ADJ> <OR <BTST <GETB .WRD ,P-PSOFF> ,PS?ADJECTIVE> <EQUAL? .WRD ,W?ALL ,W?ONE>>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<NOT .ADJ>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": ".ADJ",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "ADJ"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<OR <BTST <GETB .WRD ,P-PSOFF> ,PS?ADJECTIVE> <EQUAL? .WRD ,W?ALL ,W?ONE>>",
                                  "Form": [
                                    {
                                      "Atom": "OR"
                                    },
                                    {
                                      "Zil": "<BTST <GETB .WRD ,P-PSOFF> ,PS?ADJECTIVE>",
                                      "Form": [
                                        {
                                          "Atom": "BTST"
                                        },
                                        {
                                          "Zil": "<GETB .WRD ,P-PSOFF>",
                                          "Form": [
                                            {
                                              "Atom": "GETB"
                                            },
                                            {
                                              "Zil": ".WRD",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "WRD"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",P-PSOFF",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "P-PSOFF"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",PS?ADJECTIVE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "PS?ADJECTIVE"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<EQUAL? .WRD ,W?ALL ,W?ONE>",
                                      "Form": [
                                        {
                                          "Atom": "EQUAL?"
                                        },
                                        {
                                          "Zil": ".WRD",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "WRD"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",W?ALL",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "W?ALL"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",W?ONE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "W?ONE"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET ADJ .WRD>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "ADJ"
                                },
                                {
                                  "Zil": ".WRD",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "WRD"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<EQUAL? .WRD ,W?ONE>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".WRD",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "WRD"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?ONE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?ONE"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<ACLAUSE-WIN .ADJ>",
                              "Form": [
                                {
                                  "Atom": "ACLAUSE-WIN"
                                },
                                {
                                  "Zil": ".ADJ",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "ADJ"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<RETURN>",
                              "Form": [
                                {
                                  "Atom": "RETURN"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<BTST <GETB .WRD ,P-PSOFF> ,PS?OBJECT>",
                              "Form": [
                                {
                                  "Atom": "BTST"
                                },
                                {
                                  "Zil": "<GETB .WRD ,P-PSOFF>",
                                  "Form": [
                                    {
                                      "Atom": "GETB"
                                    },
                                    {
                                      "Zil": ".WRD",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "WRD"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P-PSOFF",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-PSOFF"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",PS?OBJECT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PS?OBJECT"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<EQUAL? .WRD ,P-ANAM> <ACLAUSE-WIN .ADJ>) (T <NCLAUSE-WIN>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<EQUAL? .WRD ,P-ANAM>",
                                    "Form": [
                                      {
                                        "Atom": "EQUAL?"
                                      },
                                      {
                                        "Zil": ".WRD",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "WRD"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",P-ANAM",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-ANAM"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<ACLAUSE-WIN .ADJ>",
                                    "Form": [
                                      {
                                        "Atom": "ACLAUSE-WIN"
                                      },
                                      {
                                        "Zil": ".ADJ",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "ADJ"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  {
                                    "Zil": "<NCLAUSE-WIN>",
                                    "Form": [
                                      {
                                        "Atom": "NCLAUSE-WIN"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            },
                            {
                              "Zil": "<RETURN>",
                              "Form": [
                                {
                                  "Atom": "RETURN"
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<SET BEG <REST .BEG ,P-WORDLEN>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "BEG"
                          },
                          {
                            "Zil": "<REST .BEG ,P-WORDLEN>",
                            "Form": [
                              {
                                "Atom": "REST"
                              },
                              {
                                "Zil": ".BEG",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "BEG"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-WORDLEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-WORDLEN"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<EQUAL? .END 0> <SET END .BEG> <SETG P-NCN 1> <PUT ,P-ITBL ,P-NC1 <BACK .BEG 4>> <PUT ,P-ITBL ,P-NC1L .BEG>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<EQUAL? .END 0>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".END",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "END"
                                    }
                                  ]
                                },
                                0
                              ]
                            },
                            {
                              "Zil": "<SET END .BEG>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "END"
                                },
                                {
                                  "Zil": ".BEG",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "BEG"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-NCN 1>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-NCN"
                                },
                                1
                              ]
                            },
                            {
                              "Zil": "<PUT ,P-ITBL ,P-NC1 <BACK .BEG 4>>",
                              "Form": [
                                {
                                  "Atom": "PUT"
                                },
                                {
                                  "Zil": ",P-ITBL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ITBL"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-NC1",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-NC1"
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<BACK .BEG 4>",
                                  "Form": [
                                    {
                                      "Atom": "BACK"
                                    },
                                    {
                                      "Zil": ".BEG",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "BEG"
                                        }
                                      ]
                                    },
                                    4
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<PUT ,P-ITBL ,P-NC1L .BEG>",
                              "Form": [
                                {
                                  "Atom": "PUT"
                                },
                                {
                                  "Zil": ",P-ITBL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ITBL"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-NC1L",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-NC1L"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".BEG",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "BEG"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<PUT ,P-VTBL 0 <GET ,P-OVTBL 0>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-VTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-VTBL"
              }
            ]
          },
          0,
          {
            "Zil": "<GET ,P-OVTBL 0>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ",P-OVTBL",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-OVTBL"
                  }
                ]
              },
              0
            ]
          }
        ]
      },
      {
        "Zil": "<PUTB ,P-VTBL 2 <GETB ,P-OVTBL 2>>",
        "Form": [
          {
            "Atom": "PUTB"
          },
          {
            "Zil": ",P-VTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-VTBL"
              }
            ]
          },
          2,
          {
            "Zil": "<GETB ,P-OVTBL 2>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": ",P-OVTBL",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-OVTBL"
                  }
                ]
              },
              2
            ]
          }
        ]
      },
      {
        "Zil": "<PUTB ,P-VTBL 3 <GETB ,P-OVTBL 3>>",
        "Form": [
          {
            "Atom": "PUTB"
          },
          {
            "Zil": ",P-VTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-VTBL"
              }
            ]
          },
          3,
          {
            "Zil": "<GETB ,P-OVTBL 3>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": ",P-OVTBL",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-OVTBL"
                  }
                ]
              },
              3
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-OTBL ,P-VERBN ,P-VTBL>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-OTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-OTBL"
              }
            ]
          },
          {
            "Zil": ",P-VERBN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-VERBN"
              }
            ]
          },
          {
            "Zil": ",P-VTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-VTBL"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUTB ,P-VTBL 2 0>",
        "Form": [
          {
            "Atom": "PUTB"
          },
          {
            "Zil": ",P-VTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-VTBL"
              }
            ]
          },
          2,
          0
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> ,P-ITBLLEN> <SETG P-MERGED T> <RTRUE>) (T <PUT ,P-ITBL .CNT <GET ,P-OTBL .CNT>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<G? <SET CNT <+ .CNT 1>> ,P-ITBLLEN> <SETG P-MERGED T> <RTRUE>) (T <PUT ,P-ITBL .CNT <GET ,P-OTBL .CNT>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<G? <SET CNT <+ .CNT 1>> ,P-ITBLLEN>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": "<SET CNT <+ .CNT 1>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "CNT"
                        },
                        {
                          "Zil": "<+ .CNT 1>",
                          "Form": [
                            {
                              "Atom": "+"
                            },
                            {
                              "Zil": ".CNT",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "CNT"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",P-ITBLLEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBLLEN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SETG P-MERGED T>",
                  "Form": [
                    {
                      "Atom": "SETG"
                    },
                    {
                      "Atom": "P-MERGED"
                    },
                    {
                      "Atom": "T"
                    }
                  ]
                },
                {
                  "Zil": "<RTRUE>",
                  "Form": [
                    {
                      "Atom": "RTRUE"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<PUT ,P-ITBL .CNT <GET ,P-OTBL .CNT>>",
                  "Form": [
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    },
                    {
                      "Zil": "<GET ,P-OTBL .CNT>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-OTBL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-OTBL"
                            }
                          ]
                        },
                        {
                          "Zil": ".CNT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "CNT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Atom": "T"
      }
    ]
  },
  {
    "Source": "GPARSER.zil:634",
    "Name": "ACLAUSE-WIN",
    "ArgSpec": "(ADJ)",
    "Body": [
      {
        "Zil": "<PUT ,P-ITBL ,P-VERB <GET ,P-OTBL ,P-VERB>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-ITBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-ITBL"
              }
            ]
          },
          {
            "Zil": ",P-VERB",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-VERB"
              }
            ]
          },
          {
            "Zil": "<GET ,P-OTBL ,P-VERB>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ",P-OTBL",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-OTBL"
                  }
                ]
              },
              {
                "Zil": ",P-VERB",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-VERB"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-CCTBL ,CC-SBPTR ,P-ACLAUSE>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-CCTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-CCTBL"
              }
            ]
          },
          {
            "Zil": ",CC-SBPTR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CC-SBPTR"
              }
            ]
          },
          {
            "Zil": ",P-ACLAUSE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-ACLAUSE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-CCTBL ,CC-SEPTR <+ ,P-ACLAUSE 1>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-CCTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-CCTBL"
              }
            ]
          },
          {
            "Zil": ",CC-SEPTR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CC-SEPTR"
              }
            ]
          },
          {
            "Zil": "<+ ,P-ACLAUSE 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ",P-ACLAUSE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-ACLAUSE"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-CCTBL ,CC-DBPTR ,P-ACLAUSE>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-CCTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-CCTBL"
              }
            ]
          },
          {
            "Zil": ",CC-DBPTR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CC-DBPTR"
              }
            ]
          },
          {
            "Zil": ",P-ACLAUSE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-ACLAUSE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-CCTBL ,CC-DEPTR <+ ,P-ACLAUSE 1>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-CCTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-CCTBL"
              }
            ]
          },
          {
            "Zil": ",CC-DEPTR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CC-DEPTR"
              }
            ]
          },
          {
            "Zil": "<+ ,P-ACLAUSE 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ",P-ACLAUSE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-ACLAUSE"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<CLAUSE-COPY ,P-OTBL ,P-OTBL .ADJ>",
        "Form": [
          {
            "Atom": "CLAUSE-COPY"
          },
          {
            "Zil": ",P-OTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-OTBL"
              }
            ]
          },
          {
            "Zil": ",P-OTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-OTBL"
              }
            ]
          },
          {
            "Zil": ".ADJ",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "ADJ"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<AND <NOT <EQUAL? <GET ,P-OTBL ,P-NC2> 0>> <SETG P-NCN 2>>",
        "Form": [
          {
            "Atom": "AND"
          },
          {
            "Zil": "<NOT <EQUAL? <GET ,P-OTBL ,P-NC2> 0>>",
            "Form": [
              {
                "Atom": "NOT"
              },
              {
                "Zil": "<EQUAL? <GET ,P-OTBL ,P-NC2> 0>",
                "Form": [
                  {
                    "Atom": "EQUAL?"
                  },
                  {
                    "Zil": "<GET ,P-OTBL ,P-NC2>",
                    "Form": [
                      {
                        "Atom": "GET"
                      },
                      {
                        "Zil": ",P-OTBL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-OTBL"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-NC2",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-NC2"
                          }
                        ]
                      }
                    ]
                  },
                  0
                ]
              }
            ]
          },
          {
            "Zil": "<SETG P-NCN 2>",
            "Form": [
              {
                "Atom": "SETG"
              },
              {
                "Atom": "P-NCN"
              },
              2
            ]
          }
        ]
      },
      {
        "Zil": "<SETG P-ACLAUSE <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-ACLAUSE"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:645",
    "Name": "NCLAUSE-WIN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<PUT ,P-CCTBL ,CC-SBPTR ,P-NC1>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-CCTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-CCTBL"
              }
            ]
          },
          {
            "Zil": ",CC-SBPTR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CC-SBPTR"
              }
            ]
          },
          {
            "Zil": ",P-NC1",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-NC1"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-CCTBL ,CC-SEPTR ,P-NC1L>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-CCTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-CCTBL"
              }
            ]
          },
          {
            "Zil": ",CC-SEPTR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CC-SEPTR"
              }
            ]
          },
          {
            "Zil": ",P-NC1L",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-NC1L"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-CCTBL ,CC-DBPTR ,P-ACLAUSE>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-CCTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-CCTBL"
              }
            ]
          },
          {
            "Zil": ",CC-DBPTR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CC-DBPTR"
              }
            ]
          },
          {
            "Zil": ",P-ACLAUSE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-ACLAUSE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-CCTBL ,CC-DEPTR <+ ,P-ACLAUSE 1>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-CCTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-CCTBL"
              }
            ]
          },
          {
            "Zil": ",CC-DEPTR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CC-DEPTR"
              }
            ]
          },
          {
            "Zil": "<+ ,P-ACLAUSE 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ",P-ACLAUSE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-ACLAUSE"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<CLAUSE-COPY ,P-ITBL ,P-OTBL>",
        "Form": [
          {
            "Atom": "CLAUSE-COPY"
          },
          {
            "Zil": ",P-ITBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-ITBL"
              }
            ]
          },
          {
            "Zil": ",P-OTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-OTBL"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<AND <NOT <EQUAL? <GET ,P-OTBL ,P-NC2> 0>> <SETG P-NCN 2>>",
        "Form": [
          {
            "Atom": "AND"
          },
          {
            "Zil": "<NOT <EQUAL? <GET ,P-OTBL ,P-NC2> 0>>",
            "Form": [
              {
                "Atom": "NOT"
              },
              {
                "Zil": "<EQUAL? <GET ,P-OTBL ,P-NC2> 0>",
                "Form": [
                  {
                    "Atom": "EQUAL?"
                  },
                  {
                    "Zil": "<GET ,P-OTBL ,P-NC2>",
                    "Form": [
                      {
                        "Atom": "GET"
                      },
                      {
                        "Zil": ",P-OTBL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-OTBL"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-NC2",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-NC2"
                          }
                        ]
                      }
                    ]
                  },
                  0
                ]
              }
            ]
          },
          {
            "Zil": "<SETG P-NCN 2>",
            "Form": [
              {
                "Atom": "SETG"
              },
              {
                "Atom": "P-NCN"
              },
              2
            ]
          }
        ]
      },
      {
        "Zil": "<SETG P-ACLAUSE <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-ACLAUSE"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:658",
    "Name": "WORD-PRINT",
    "ArgSpec": "(CNT BUF)",
    "Body": [
      {
        "Zil": "<REPEAT () <COND (<DLESS? CNT 0> <RETURN>) (ELSE <PRINTC <GETB ,P-INBUF .BUF>> <SET BUF <+ .BUF 1>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<DLESS? CNT 0> <RETURN>) (ELSE <PRINTC <GETB ,P-INBUF .BUF>> <SET BUF <+ .BUF 1>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<DLESS? CNT 0>",
                  "Form": [
                    {
                      "Atom": "DLESS?"
                    },
                    {
                      "Atom": "CNT"
                    },
                    0
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "ELSE"
                },
                {
                  "Zil": "<PRINTC <GETB ,P-INBUF .BUF>>",
                  "Form": [
                    {
                      "Atom": "PRINTC"
                    },
                    {
                      "Zil": "<GETB ,P-INBUF .BUF>",
                      "Form": [
                        {
                          "Atom": "GETB"
                        },
                        {
                          "Zil": ",P-INBUF",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-INBUF"
                            }
                          ]
                        },
                        {
                          "Zil": ".BUF",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "BUF"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET BUF <+ .BUF 1>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "BUF"
                    },
                    {
                      "Zil": "<+ .BUF 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ".BUF",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "BUF"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:665",
    "Name": "UNKNOWN-WORD",
    "ArgSpec": "(PTR \"AUX\" BUF)",
    "Body": [
      {
        "Zil": "<PUT ,OOPS-TABLE ,O-PTR .PTR>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",OOPS-TABLE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "OOPS-TABLE"
              }
            ]
          },
          {
            "Zil": ",O-PTR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "O-PTR"
              }
            ]
          },
          {
            "Zil": ".PTR",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "PTR"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<VERB? SAY> <TELL \"Nothing happens.\" CR> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? SAY>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "SAY"
                }
              ]
            },
            {
              "Zil": "<TELL \"Nothing happens.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Nothing happens.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<TELL \"I don't know the word \\\"\">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "I don't know the word \""
        ]
      },
      {
        "Zil": "<WORD-PRINT <GETB <REST ,P-LEXV <SET BUF <* .PTR 2>>> 2> <GETB <REST ,P-LEXV .BUF> 3>>",
        "Form": [
          {
            "Atom": "WORD-PRINT"
          },
          {
            "Zil": "<GETB <REST ,P-LEXV <SET BUF <* .PTR 2>>> 2>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": "<REST ,P-LEXV <SET BUF <* .PTR 2>>>",
                "Form": [
                  {
                    "Atom": "REST"
                  },
                  {
                    "Zil": ",P-LEXV",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-LEXV"
                      }
                    ]
                  },
                  {
                    "Zil": "<SET BUF <* .PTR 2>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "BUF"
                      },
                      {
                        "Zil": "<* .PTR 2>",
                        "Form": [
                          {
                            "Atom": "*"
                          },
                          {
                            "Zil": ".PTR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "PTR"
                              }
                            ]
                          },
                          2
                        ]
                      }
                    ]
                  }
                ]
              },
              2
            ]
          },
          {
            "Zil": "<GETB <REST ,P-LEXV .BUF> 3>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": "<REST ,P-LEXV .BUF>",
                "Form": [
                  {
                    "Atom": "REST"
                  },
                  {
                    "Zil": ",P-LEXV",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-LEXV"
                      }
                    ]
                  },
                  {
                    "Zil": ".BUF",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "BUF"
                      }
                    ]
                  }
                ]
              },
              3
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \"\\\".\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "\".",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<SETG QUOTE-FLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "QUOTE-FLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<SETG P-OFLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-OFLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:677",
    "Name": "CANT-USE",
    "ArgSpec": "(PTR \"AUX\" BUF)",
    "Body": [
      {
        "Zil": "<COND (<VERB? SAY> <TELL \"Nothing happens.\" CR> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? SAY>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "SAY"
                }
              ]
            },
            {
              "Zil": "<TELL \"Nothing happens.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Nothing happens.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<TELL \"You used the word \\\"\">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You used the word \""
        ]
      },
      {
        "Zil": "<WORD-PRINT <GETB <REST ,P-LEXV <SET BUF <* .PTR 2>>> 2> <GETB <REST ,P-LEXV .BUF> 3>>",
        "Form": [
          {
            "Atom": "WORD-PRINT"
          },
          {
            "Zil": "<GETB <REST ,P-LEXV <SET BUF <* .PTR 2>>> 2>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": "<REST ,P-LEXV <SET BUF <* .PTR 2>>>",
                "Form": [
                  {
                    "Atom": "REST"
                  },
                  {
                    "Zil": ",P-LEXV",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-LEXV"
                      }
                    ]
                  },
                  {
                    "Zil": "<SET BUF <* .PTR 2>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "BUF"
                      },
                      {
                        "Zil": "<* .PTR 2>",
                        "Form": [
                          {
                            "Atom": "*"
                          },
                          {
                            "Zil": ".PTR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "PTR"
                              }
                            ]
                          },
                          2
                        ]
                      }
                    ]
                  }
                ]
              },
              2
            ]
          },
          {
            "Zil": "<GETB <REST ,P-LEXV .BUF> 3>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": "<REST ,P-LEXV .BUF>",
                "Form": [
                  {
                    "Atom": "REST"
                  },
                  {
                    "Zil": ",P-LEXV",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-LEXV"
                      }
                    ]
                  },
                  {
                    "Zil": ".BUF",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "BUF"
                      }
                    ]
                  }
                ]
              },
              3
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \"\\\" in a way that I don't understand.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "\" in a way that I don't understand.",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<SETG QUOTE-FLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "QUOTE-FLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<SETG P-OFLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-OFLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:707",
    "Name": "SYNTAX-CHECK",
    "ArgSpec": "(\"AUX\" SYN LEN NUM OBJ (DRIVE1 <>) (DRIVE2 <>) PREP VERB TMP)",
    "Body": [
      {
        "Zil": "<COND (<ZERO? <SET VERB <GET ,P-ITBL ,P-VERB>>> <TELL \"There was no verb in that sentence!\" CR> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<ZERO? <SET VERB <GET ,P-ITBL ,P-VERB>>>",
              "Form": [
                {
                  "Atom": "ZERO?"
                },
                {
                  "Zil": "<SET VERB <GET ,P-ITBL ,P-VERB>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "VERB"
                    },
                    {
                      "Zil": "<GET ,P-ITBL ,P-VERB>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-ITBL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-ITBL"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-VERB",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-VERB"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"There was no verb in that sentence!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There was no verb in that sentence!",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SET SYN <GET ,VERBS <- 255 .VERB>>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "SYN"
          },
          {
            "Zil": "<GET ,VERBS <- 255 .VERB>>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ",VERBS",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "VERBS"
                  }
                ]
              },
              {
                "Zil": "<- 255 .VERB>",
                "Form": [
                  {
                    "Atom": "-"
                  },
                  255,
                  {
                    "Zil": ".VERB",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "VERB"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET LEN <GETB .SYN 0>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "LEN"
          },
          {
            "Zil": "<GETB .SYN 0>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": ".SYN",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "SYN"
                  }
                ]
              },
              0
            ]
          }
        ]
      },
      {
        "Zil": "<SET SYN <REST .SYN>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "SYN"
          },
          {
            "Zil": "<REST .SYN>",
            "Form": [
              {
                "Atom": "REST"
              },
              {
                "Zil": ".SYN",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "SYN"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <SET NUM <BAND <GETB .SYN ,P-SBITS> ,P-SONUMS>> <COND (<G? ,P-NCN .NUM> T) (<AND <NOT <L? .NUM 1>> <ZERO? ,P-NCN> <OR <ZERO? <SET PREP <GET ,P-ITBL ,P-PREP1>>> <EQUAL? .PREP <GETB .SYN ,P-SPREP1>>>> <SET DRIVE1 .SYN>) (<EQUAL? <GETB .SYN ,P-SPREP1> <GET ,P-ITBL ,P-PREP1>> <COND (<AND <EQUAL? .NUM 2> <EQUAL? ,P-NCN 1>> <SET DRIVE2 .SYN>) (<EQUAL? <GETB .SYN ,P-SPREP2> <GET ,P-ITBL ,P-PREP2>> <SYNTAX-FOUND .SYN> <RTRUE>)>)> <COND (<DLESS? LEN 1> <COND (<OR .DRIVE1 .DRIVE2> <RETURN>) (T <TELL \"That sentence isn't one I recognize.\" CR> <RFALSE>)>) (T <SET SYN <REST .SYN ,P-SYNLEN>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<SET NUM <BAND <GETB .SYN ,P-SBITS> ,P-SONUMS>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "NUM"
              },
              {
                "Zil": "<BAND <GETB .SYN ,P-SBITS> ,P-SONUMS>",
                "Form": [
                  {
                    "Atom": "BAND"
                  },
                  {
                    "Zil": "<GETB .SYN ,P-SBITS>",
                    "Form": [
                      {
                        "Atom": "GETB"
                      },
                      {
                        "Zil": ".SYN",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "SYN"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-SBITS",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-SBITS"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": ",P-SONUMS",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-SONUMS"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<COND (<G? ,P-NCN .NUM> T) (<AND <NOT <L? .NUM 1>> <ZERO? ,P-NCN> <OR <ZERO? <SET PREP <GET ,P-ITBL ,P-PREP1>>> <EQUAL? .PREP <GETB .SYN ,P-SPREP1>>>> <SET DRIVE1 .SYN>) (<EQUAL? <GETB .SYN ,P-SPREP1> <GET ,P-ITBL ,P-PREP1>> <COND (<AND <EQUAL? .NUM 2> <EQUAL? ,P-NCN 1>> <SET DRIVE2 .SYN>) (<EQUAL? <GETB .SYN ,P-SPREP2> <GET ,P-ITBL ,P-PREP2>> <SYNTAX-FOUND .SYN> <RTRUE>)>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<G? ,P-NCN .NUM>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": ",P-NCN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NCN"
                        }
                      ]
                    },
                    {
                      "Zil": ".NUM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "NUM"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "T"
                }
              ],
              [
                {
                  "Zil": "<AND <NOT <L? .NUM 1>> <ZERO? ,P-NCN> <OR <ZERO? <SET PREP <GET ,P-ITBL ,P-PREP1>>> <EQUAL? .PREP <GETB .SYN ,P-SPREP1>>>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<NOT <L? .NUM 1>>",
                      "Form": [
                        {
                          "Atom": "NOT"
                        },
                        {
                          "Zil": "<L? .NUM 1>",
                          "Form": [
                            {
                              "Atom": "L?"
                            },
                            {
                              "Zil": ".NUM",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "NUM"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<ZERO? ,P-NCN>",
                      "Form": [
                        {
                          "Atom": "ZERO?"
                        },
                        {
                          "Zil": ",P-NCN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-NCN"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<OR <ZERO? <SET PREP <GET ,P-ITBL ,P-PREP1>>> <EQUAL? .PREP <GETB .SYN ,P-SPREP1>>>",
                      "Form": [
                        {
                          "Atom": "OR"
                        },
                        {
                          "Zil": "<ZERO? <SET PREP <GET ,P-ITBL ,P-PREP1>>>",
                          "Form": [
                            {
                              "Atom": "ZERO?"
                            },
                            {
                              "Zil": "<SET PREP <GET ,P-ITBL ,P-PREP1>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "PREP"
                                },
                                {
                                  "Zil": "<GET ,P-ITBL ,P-PREP1>",
                                  "Form": [
                                    {
                                      "Atom": "GET"
                                    },
                                    {
                                      "Zil": ",P-ITBL",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-ITBL"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P-PREP1",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-PREP1"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<EQUAL? .PREP <GETB .SYN ,P-SPREP1>>",
                          "Form": [
                            {
                              "Atom": "EQUAL?"
                            },
                            {
                              "Zil": ".PREP",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "PREP"
                                }
                              ]
                            },
                            {
                              "Zil": "<GETB .SYN ,P-SPREP1>",
                              "Form": [
                                {
                                  "Atom": "GETB"
                                },
                                {
                                  "Zil": ".SYN",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "SYN"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-SPREP1",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-SPREP1"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET DRIVE1 .SYN>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "DRIVE1"
                    },
                    {
                      "Zil": ".SYN",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "SYN"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<EQUAL? <GETB .SYN ,P-SPREP1> <GET ,P-ITBL ,P-PREP1>>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<GETB .SYN ,P-SPREP1>",
                      "Form": [
                        {
                          "Atom": "GETB"
                        },
                        {
                          "Zil": ".SYN",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "SYN"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-SPREP1",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-SPREP1"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<GET ,P-ITBL ,P-PREP1>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-ITBL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-ITBL"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-PREP1",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-PREP1"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<AND <EQUAL? .NUM 2> <EQUAL? ,P-NCN 1>> <SET DRIVE2 .SYN>) (<EQUAL? <GETB .SYN ,P-SPREP2> <GET ,P-ITBL ,P-PREP2>> <SYNTAX-FOUND .SYN> <RTRUE>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<AND <EQUAL? .NUM 2> <EQUAL? ,P-NCN 1>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<EQUAL? .NUM 2>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".NUM",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "NUM"
                                  }
                                ]
                              },
                              2
                            ]
                          },
                          {
                            "Zil": "<EQUAL? ,P-NCN 1>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ",P-NCN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-NCN"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET DRIVE2 .SYN>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "DRIVE2"
                          },
                          {
                            "Zil": ".SYN",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "SYN"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<EQUAL? <GETB .SYN ,P-SPREP2> <GET ,P-ITBL ,P-PREP2>>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": "<GETB .SYN ,P-SPREP2>",
                            "Form": [
                              {
                                "Atom": "GETB"
                              },
                              {
                                "Zil": ".SYN",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "SYN"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-SPREP2",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-SPREP2"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<GET ,P-ITBL ,P-PREP2>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",P-ITBL",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-ITBL"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-PREP2",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-PREP2"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SYNTAX-FOUND .SYN>",
                        "Form": [
                          {
                            "Atom": "SYNTAX-FOUND"
                          },
                          {
                            "Zil": ".SYN",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "SYN"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RTRUE>",
                        "Form": [
                          {
                            "Atom": "RTRUE"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<COND (<DLESS? LEN 1> <COND (<OR .DRIVE1 .DRIVE2> <RETURN>) (T <TELL \"That sentence isn't one I recognize.\" CR> <RFALSE>)>) (T <SET SYN <REST .SYN ,P-SYNLEN>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<DLESS? LEN 1>",
                  "Form": [
                    {
                      "Atom": "DLESS?"
                    },
                    {
                      "Atom": "LEN"
                    },
                    1
                  ]
                },
                {
                  "Zil": "<COND (<OR .DRIVE1 .DRIVE2> <RETURN>) (T <TELL \"That sentence isn't one I recognize.\" CR> <RFALSE>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<OR .DRIVE1 .DRIVE2>",
                        "Form": [
                          {
                            "Atom": "OR"
                          },
                          {
                            "Zil": ".DRIVE1",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "DRIVE1"
                              }
                            ]
                          },
                          {
                            "Zil": ".DRIVE2",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "DRIVE2"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<TELL \"That sentence isn't one I recognize.\" CR>",
                        "Form": [
                          {
                            "Atom": "TELL"
                          },
                          "That sentence isn't one I recognize.",
                          {
                            "Atom": "CR"
                          }
                        ]
                      },
                      {
                        "Zil": "<RFALSE>",
                        "Form": [
                          {
                            "Atom": "RFALSE"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<SET SYN <REST .SYN ,P-SYNLEN>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "SYN"
                    },
                    {
                      "Zil": "<REST .SYN ,P-SYNLEN>",
                      "Form": [
                        {
                          "Atom": "REST"
                        },
                        {
                          "Zil": ".SYN",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "SYN"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-SYNLEN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-SYNLEN"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND .DRIVE1 <SET OBJ <GWIM <GETB .DRIVE1 ,P-SFWIM1> <GETB .DRIVE1 ,P-SLOC1> <GETB .DRIVE1 ,P-SPREP1>>>> <PUT ,P-PRSO ,P-MATCHLEN 1> <PUT ,P-PRSO 1 .OBJ> <SYNTAX-FOUND .DRIVE1>) (<AND .DRIVE2 <SET OBJ <GWIM <GETB .DRIVE2 ,P-SFWIM2> <GETB .DRIVE2 ,P-SLOC2> <GETB .DRIVE2 ,P-SPREP2>>>> <PUT ,P-PRSI ,P-MATCHLEN 1> <PUT ,P-PRSI 1 .OBJ> <SYNTAX-FOUND .DRIVE2>) (<EQUAL? .VERB ,ACT?FIND> <TELL \"That question can't be answered.\" CR> <RFALSE>) (<NOT <EQUAL? ,WINNER ,PLAYER>> <CANT-ORPHAN>) (T <ORPHAN .DRIVE1 .DRIVE2> <TELL \"What do you want to \"> <SET TMP <GET ,P-OTBL ,P-VERBN>> <COND (<EQUAL? .TMP 0> <TELL \"tell\">) (<ZERO? <GETB ,P-VTBL 2>> <PRINTB <GET .TMP 0>>) (T <WORD-PRINT <GETB .TMP 2> <GETB .TMP 3>> <PUTB ,P-VTBL 2 0>)> <COND (.DRIVE2 <TELL \" \"> <THING-PRINT T T>)> <SETG P-OFLAG T> <PREP-PRINT <COND (.DRIVE1 <GETB .DRIVE1 ,P-SPREP1>) (T <GETB .DRIVE2 ,P-SPREP2>)>> <TELL \"?\" CR> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND .DRIVE1 <SET OBJ <GWIM <GETB .DRIVE1 ,P-SFWIM1> <GETB .DRIVE1 ,P-SLOC1> <GETB .DRIVE1 ,P-SPREP1>>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ".DRIVE1",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DRIVE1"
                    }
                  ]
                },
                {
                  "Zil": "<SET OBJ <GWIM <GETB .DRIVE1 ,P-SFWIM1> <GETB .DRIVE1 ,P-SLOC1> <GETB .DRIVE1 ,P-SPREP1>>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "OBJ"
                    },
                    {
                      "Zil": "<GWIM <GETB .DRIVE1 ,P-SFWIM1> <GETB .DRIVE1 ,P-SLOC1> <GETB .DRIVE1 ,P-SPREP1>>",
                      "Form": [
                        {
                          "Atom": "GWIM"
                        },
                        {
                          "Zil": "<GETB .DRIVE1 ,P-SFWIM1>",
                          "Form": [
                            {
                              "Atom": "GETB"
                            },
                            {
                              "Zil": ".DRIVE1",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "DRIVE1"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-SFWIM1",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-SFWIM1"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<GETB .DRIVE1 ,P-SLOC1>",
                          "Form": [
                            {
                              "Atom": "GETB"
                            },
                            {
                              "Zil": ".DRIVE1",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "DRIVE1"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-SLOC1",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-SLOC1"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<GETB .DRIVE1 ,P-SPREP1>",
                          "Form": [
                            {
                              "Atom": "GETB"
                            },
                            {
                              "Zil": ".DRIVE1",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "DRIVE1"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-SPREP1",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-SPREP1"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-PRSO ,P-MATCHLEN 1>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",P-MATCHLEN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-MATCHLEN"
                    }
                  ]
                },
                1
              ]
            },
            {
              "Zil": "<PUT ,P-PRSO 1 .OBJ>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-PRSO"
                    }
                  ]
                },
                1,
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SYNTAX-FOUND .DRIVE1>",
              "Form": [
                {
                  "Atom": "SYNTAX-FOUND"
                },
                {
                  "Zil": ".DRIVE1",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DRIVE1"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND .DRIVE2 <SET OBJ <GWIM <GETB .DRIVE2 ,P-SFWIM2> <GETB .DRIVE2 ,P-SLOC2> <GETB .DRIVE2 ,P-SPREP2>>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ".DRIVE2",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DRIVE2"
                    }
                  ]
                },
                {
                  "Zil": "<SET OBJ <GWIM <GETB .DRIVE2 ,P-SFWIM2> <GETB .DRIVE2 ,P-SLOC2> <GETB .DRIVE2 ,P-SPREP2>>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "OBJ"
                    },
                    {
                      "Zil": "<GWIM <GETB .DRIVE2 ,P-SFWIM2> <GETB .DRIVE2 ,P-SLOC2> <GETB .DRIVE2 ,P-SPREP2>>",
                      "Form": [
                        {
                          "Atom": "GWIM"
                        },
                        {
                          "Zil": "<GETB .DRIVE2 ,P-SFWIM2>",
                          "Form": [
                            {
                              "Atom": "GETB"
                            },
                            {
                              "Zil": ".DRIVE2",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "DRIVE2"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-SFWIM2",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-SFWIM2"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<GETB .DRIVE2 ,P-SLOC2>",
                          "Form": [
                            {
                              "Atom": "GETB"
                            },
                            {
                              "Zil": ".DRIVE2",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "DRIVE2"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-SLOC2",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-SLOC2"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<GETB .DRIVE2 ,P-SPREP2>",
                          "Form": [
                            {
                              "Atom": "GETB"
                            },
                            {
                              "Zil": ".DRIVE2",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "DRIVE2"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-SPREP2",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-SPREP2"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-PRSI ,P-MATCHLEN 1>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-PRSI"
                    }
                  ]
                },
                {
                  "Zil": ",P-MATCHLEN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-MATCHLEN"
                    }
                  ]
                },
                1
              ]
            },
            {
              "Zil": "<PUT ,P-PRSI 1 .OBJ>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-PRSI"
                    }
                  ]
                },
                1,
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SYNTAX-FOUND .DRIVE2>",
              "Form": [
                {
                  "Atom": "SYNTAX-FOUND"
                },
                {
                  "Zil": ".DRIVE2",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DRIVE2"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? .VERB ,ACT?FIND>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ".VERB",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "VERB"
                    }
                  ]
                },
                {
                  "Zil": ",ACT?FIND",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACT?FIND"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"That question can't be answered.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "That question can't be answered.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <EQUAL? ,WINNER ,PLAYER>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<EQUAL? ,WINNER ,PLAYER>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    },
                    {
                      "Zil": ",PLAYER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PLAYER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<CANT-ORPHAN>",
              "Form": [
                {
                  "Atom": "CANT-ORPHAN"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<ORPHAN .DRIVE1 .DRIVE2>",
              "Form": [
                {
                  "Atom": "ORPHAN"
                },
                {
                  "Zil": ".DRIVE1",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DRIVE1"
                    }
                  ]
                },
                {
                  "Zil": ".DRIVE2",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DRIVE2"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"What do you want to \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "What do you want to "
              ]
            },
            {
              "Zil": "<SET TMP <GET ,P-OTBL ,P-VERBN>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TMP"
                },
                {
                  "Zil": "<GET ,P-OTBL ,P-VERBN>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-OTBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-OTBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-VERBN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-VERBN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? .TMP 0> <TELL \"tell\">) (<ZERO? <GETB ,P-VTBL 2>> <PRINTB <GET .TMP 0>>) (T <WORD-PRINT <GETB .TMP 2> <GETB .TMP 3>> <PUTB ,P-VTBL 2 0>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? .TMP 0>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ".TMP",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TMP"
                          }
                        ]
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<TELL \"tell\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "tell"
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<ZERO? <GETB ,P-VTBL 2>>",
                    "Form": [
                      {
                        "Atom": "ZERO?"
                      },
                      {
                        "Zil": "<GETB ,P-VTBL 2>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ",P-VTBL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-VTBL"
                              }
                            ]
                          },
                          2
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<PRINTB <GET .TMP 0>>",
                    "Form": [
                      {
                        "Atom": "PRINTB"
                      },
                      {
                        "Zil": "<GET .TMP 0>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ".TMP",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TMP"
                              }
                            ]
                          },
                          0
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<WORD-PRINT <GETB .TMP 2> <GETB .TMP 3>>",
                    "Form": [
                      {
                        "Atom": "WORD-PRINT"
                      },
                      {
                        "Zil": "<GETB .TMP 2>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ".TMP",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TMP"
                              }
                            ]
                          },
                          2
                        ]
                      },
                      {
                        "Zil": "<GETB .TMP 3>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ".TMP",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TMP"
                              }
                            ]
                          },
                          3
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<PUTB ,P-VTBL 2 0>",
                    "Form": [
                      {
                        "Atom": "PUTB"
                      },
                      {
                        "Zil": ",P-VTBL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-VTBL"
                          }
                        ]
                      },
                      2,
                      0
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (.DRIVE2 <TELL \" \"> <THING-PRINT T T>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ".DRIVE2",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "DRIVE2"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " "
                    ]
                  },
                  {
                    "Zil": "<THING-PRINT T T>",
                    "Form": [
                      {
                        "Atom": "THING-PRINT"
                      },
                      {
                        "Atom": "T"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SETG P-OFLAG T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-OFLAG"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<PREP-PRINT <COND (.DRIVE1 <GETB .DRIVE1 ,P-SPREP1>) (T <GETB .DRIVE2 ,P-SPREP2>)>>",
              "Form": [
                {
                  "Atom": "PREP-PRINT"
                },
                {
                  "Zil": "<COND (.DRIVE1 <GETB .DRIVE1 ,P-SPREP1>) (T <GETB .DRIVE2 ,P-SPREP2>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": ".DRIVE1",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "DRIVE1"
                          }
                        ]
                      },
                      {
                        "Zil": "<GETB .DRIVE1 ,P-SPREP1>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ".DRIVE1",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "DRIVE1"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-SPREP1",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-SPREP1"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<GETB .DRIVE2 ,P-SPREP2>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ".DRIVE2",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "DRIVE2"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-SPREP2",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-SPREP2"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "?",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:777",
    "Name": "CANT-ORPHAN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"\\\"I don't understand! What are you referring to?\\\"\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "\"I don't understand! What are you referring to?\"",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<RFALSE>",
        "Form": [
          {
            "Atom": "RFALSE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:782",
    "Name": "ORPHAN",
    "ArgSpec": "(D1 D2 \"AUX\" (CNT -1))",
    "Body": [
      {
        "Zil": "<COND (<NOT ,P-MERGED> <PUT ,P-OCLAUSE ,P-MATCHLEN 0>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,P-MERGED>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",P-MERGED",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-MERGED"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-OCLAUSE ,P-MATCHLEN 0>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-OCLAUSE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-OCLAUSE"
                    }
                  ]
                },
                {
                  "Zil": ",P-MATCHLEN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-MATCHLEN"
                    }
                  ]
                },
                0
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<PUT ,P-OVTBL 0 <GET ,P-VTBL 0>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-OVTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-OVTBL"
              }
            ]
          },
          0,
          {
            "Zil": "<GET ,P-VTBL 0>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ",P-VTBL",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-VTBL"
                  }
                ]
              },
              0
            ]
          }
        ]
      },
      {
        "Zil": "<PUTB ,P-OVTBL 2 <GETB ,P-VTBL 2>>",
        "Form": [
          {
            "Atom": "PUTB"
          },
          {
            "Zil": ",P-OVTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-OVTBL"
              }
            ]
          },
          2,
          {
            "Zil": "<GETB ,P-VTBL 2>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": ",P-VTBL",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-VTBL"
                  }
                ]
              },
              2
            ]
          }
        ]
      },
      {
        "Zil": "<PUTB ,P-OVTBL 3 <GETB ,P-VTBL 3>>",
        "Form": [
          {
            "Atom": "PUTB"
          },
          {
            "Zil": ",P-OVTBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-OVTBL"
              }
            ]
          },
          3,
          {
            "Zil": "<GETB ,P-VTBL 3>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": ",P-VTBL",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-VTBL"
                  }
                ]
              },
              3
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<IGRTR? CNT ,P-ITBLLEN> <RETURN>) (T <PUT ,P-OTBL .CNT <GET ,P-ITBL .CNT>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<IGRTR? CNT ,P-ITBLLEN> <RETURN>) (T <PUT ,P-OTBL .CNT <GET ,P-ITBL .CNT>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<IGRTR? CNT ,P-ITBLLEN>",
                  "Form": [
                    {
                      "Atom": "IGRTR?"
                    },
                    {
                      "Atom": "CNT"
                    },
                    {
                      "Zil": ",P-ITBLLEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBLLEN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<PUT ,P-OTBL .CNT <GET ,P-ITBL .CNT>>",
                  "Form": [
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Zil": ",P-OTBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-OTBL"
                        }
                      ]
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    },
                    {
                      "Zil": "<GET ,P-ITBL .CNT>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-ITBL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-ITBL"
                            }
                          ]
                        },
                        {
                          "Zil": ".CNT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "CNT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<EQUAL? ,P-NCN 2> <PUT ,P-CCTBL ,CC-SBPTR ,P-NC2> <PUT ,P-CCTBL ,CC-SEPTR ,P-NC2L> <PUT ,P-CCTBL ,CC-DBPTR ,P-NC2> <PUT ,P-CCTBL ,CC-DEPTR ,P-NC2L> <CLAUSE-COPY ,P-ITBL ,P-OTBL>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,P-NCN 2>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",P-NCN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NCN"
                    }
                  ]
                },
                2
              ]
            },
            {
              "Zil": "<PUT ,P-CCTBL ,CC-SBPTR ,P-NC2>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-CCTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-CCTBL"
                    }
                  ]
                },
                {
                  "Zil": ",CC-SBPTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CC-SBPTR"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC2",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC2"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-CCTBL ,CC-SEPTR ,P-NC2L>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-CCTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-CCTBL"
                    }
                  ]
                },
                {
                  "Zil": ",CC-SEPTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CC-SEPTR"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC2L",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC2L"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-CCTBL ,CC-DBPTR ,P-NC2>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-CCTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-CCTBL"
                    }
                  ]
                },
                {
                  "Zil": ",CC-DBPTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CC-DBPTR"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC2",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC2"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-CCTBL ,CC-DEPTR ,P-NC2L>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-CCTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-CCTBL"
                    }
                  ]
                },
                {
                  "Zil": ",CC-DEPTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CC-DEPTR"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC2L",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC2L"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<CLAUSE-COPY ,P-ITBL ,P-OTBL>",
              "Form": [
                {
                  "Atom": "CLAUSE-COPY"
                },
                {
                  "Zil": ",P-ITBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ITBL"
                    }
                  ]
                },
                {
                  "Zil": ",P-OTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-OTBL"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT <L? ,P-NCN 1>> <PUT ,P-CCTBL ,CC-SBPTR ,P-NC1> <PUT ,P-CCTBL ,CC-SEPTR ,P-NC1L> <PUT ,P-CCTBL ,CC-DBPTR ,P-NC1> <PUT ,P-CCTBL ,CC-DEPTR ,P-NC1L> <CLAUSE-COPY ,P-ITBL ,P-OTBL>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <L? ,P-NCN 1>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<L? ,P-NCN 1>",
                  "Form": [
                    {
                      "Atom": "L?"
                    },
                    {
                      "Zil": ",P-NCN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NCN"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-CCTBL ,CC-SBPTR ,P-NC1>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-CCTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-CCTBL"
                    }
                  ]
                },
                {
                  "Zil": ",CC-SBPTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CC-SBPTR"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC1",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC1"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-CCTBL ,CC-SEPTR ,P-NC1L>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-CCTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-CCTBL"
                    }
                  ]
                },
                {
                  "Zil": ",CC-SEPTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CC-SEPTR"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC1L",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC1L"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-CCTBL ,CC-DBPTR ,P-NC1>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-CCTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-CCTBL"
                    }
                  ]
                },
                {
                  "Zil": ",CC-DBPTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CC-DBPTR"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC1",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC1"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-CCTBL ,CC-DEPTR ,P-NC1L>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-CCTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-CCTBL"
                    }
                  ]
                },
                {
                  "Zil": ",CC-DEPTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CC-DEPTR"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC1L",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC1L"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<CLAUSE-COPY ,P-ITBL ,P-OTBL>",
              "Form": [
                {
                  "Atom": "CLAUSE-COPY"
                },
                {
                  "Zil": ",P-ITBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ITBL"
                    }
                  ]
                },
                {
                  "Zil": ",P-OTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-OTBL"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (.D1 <PUT ,P-OTBL ,P-PREP1 <GETB .D1 ,P-SPREP1>> <PUT ,P-OTBL ,P-NC1 1>) (.D2 <PUT ,P-OTBL ,P-PREP2 <GETB .D2 ,P-SPREP2>> <PUT ,P-OTBL ,P-NC2 1>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ".D1",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "D1"
                }
              ]
            },
            {
              "Zil": "<PUT ,P-OTBL ,P-PREP1 <GETB .D1 ,P-SPREP1>>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-OTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-OTBL"
                    }
                  ]
                },
                {
                  "Zil": ",P-PREP1",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-PREP1"
                    }
                  ]
                },
                {
                  "Zil": "<GETB .D1 ,P-SPREP1>",
                  "Form": [
                    {
                      "Atom": "GETB"
                    },
                    {
                      "Zil": ".D1",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "D1"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-SPREP1",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-SPREP1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-OTBL ,P-NC1 1>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-OTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-OTBL"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC1",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC1"
                    }
                  ]
                },
                1
              ]
            }
          ],
          [
            {
              "Zil": ".D2",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "D2"
                }
              ]
            },
            {
              "Zil": "<PUT ,P-OTBL ,P-PREP2 <GETB .D2 ,P-SPREP2>>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-OTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-OTBL"
                    }
                  ]
                },
                {
                  "Zil": ",P-PREP2",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-PREP2"
                    }
                  ]
                },
                {
                  "Zil": "<GETB .D2 ,P-SPREP2>",
                  "Form": [
                    {
                      "Atom": "GETB"
                    },
                    {
                      "Zil": ".D2",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "D2"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-SPREP2",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-SPREP2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUT ,P-OTBL ,P-NC2 1>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-OTBL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-OTBL"
                    }
                  ]
                },
                {
                  "Zil": ",P-NC2",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NC2"
                    }
                  ]
                },
                1
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:813",
    "Name": "THING-PRINT",
    "ArgSpec": "(PRSO? \"OPT\" (THE? <>) \"AUX\" BEG END)",
    "Body": [
      {
        "Zil": "<COND (.PRSO? <SET BEG <GET ,P-ITBL ,P-NC1>> <SET END <GET ,P-ITBL ,P-NC1L>>) (ELSE <SET BEG <GET ,P-ITBL ,P-NC2>> <SET END <GET ,P-ITBL ,P-NC2L>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ".PRSO?",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "PRSO?"
                }
              ]
            },
            {
              "Zil": "<SET BEG <GET ,P-ITBL ,P-NC1>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "BEG"
                },
                {
                  "Zil": "<GET ,P-ITBL ,P-NC1>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-NC1",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NC1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET END <GET ,P-ITBL ,P-NC1L>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "END"
                },
                {
                  "Zil": "<GET ,P-ITBL ,P-NC1L>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-NC1L",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NC1L"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<SET BEG <GET ,P-ITBL ,P-NC2>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "BEG"
                },
                {
                  "Zil": "<GET ,P-ITBL ,P-NC2>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-NC2",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NC2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET END <GET ,P-ITBL ,P-NC2L>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "END"
                },
                {
                  "Zil": "<GET ,P-ITBL ,P-NC2L>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-NC2L",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NC2L"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<BUFFER-PRINT .BEG .END .THE?>",
        "Form": [
          {
            "Atom": "BUFFER-PRINT"
          },
          {
            "Zil": ".BEG",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "BEG"
              }
            ]
          },
          {
            "Zil": ".END",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "END"
              }
            ]
          },
          {
            "Zil": ".THE?",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "THE?"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:822",
    "Name": "BUFFER-PRINT",
    "ArgSpec": "(BEG END CP \"AUX\" (NOSP T) WRD (FIRST?? T) (PN <>) (Q? <>))",
    "Body": [
      {
        "Zil": "<REPEAT () <COND (<EQUAL? .BEG .END> <RETURN>) (T <SET WRD <GET .BEG 0>> <COND (<EQUAL? .WRD ,W?COMMA> <TELL \", \">) (.NOSP <SET NOSP <>>) (ELSE <TELL \" \">)> <COND (<EQUAL? .WRD ,W?PERIOD ,W?COMMA> <SET NOSP T>) (<EQUAL? .WRD ,W?ME> <PRINTD ,ME> <SET PN T>) (<EQUAL? .WRD ,W?INTNUM> <PRINTN ,P-NUMBER> <SET PN T>) (T <COND (<AND .FIRST?? <NOT .PN> .CP> <TELL \"the \">)> <COND (<OR ,P-OFLAG ,P-MERGED> <PRINTB .WRD>) (<AND <EQUAL? .WRD ,W?IT> <ACCESSIBLE? ,P-IT-OBJECT>> <PRINTD ,P-IT-OBJECT>) (T <WORD-PRINT <GETB .BEG 2> <GETB .BEG 3>>)> <SET FIRST?? <>>)>)> <SET BEG <REST .BEG ,P-WORDLEN>>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<EQUAL? .BEG .END> <RETURN>) (T <SET WRD <GET .BEG 0>> <COND (<EQUAL? .WRD ,W?COMMA> <TELL \", \">) (.NOSP <SET NOSP <>>) (ELSE <TELL \" \">)> <COND (<EQUAL? .WRD ,W?PERIOD ,W?COMMA> <SET NOSP T>) (<EQUAL? .WRD ,W?ME> <PRINTD ,ME> <SET PN T>) (<EQUAL? .WRD ,W?INTNUM> <PRINTN ,P-NUMBER> <SET PN T>) (T <COND (<AND .FIRST?? <NOT .PN> .CP> <TELL \"the \">)> <COND (<OR ,P-OFLAG ,P-MERGED> <PRINTB .WRD>) (<AND <EQUAL? .WRD ,W?IT> <ACCESSIBLE? ,P-IT-OBJECT>> <PRINTD ,P-IT-OBJECT>) (T <WORD-PRINT <GETB .BEG 2> <GETB .BEG 3>>)> <SET FIRST?? <>>)>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<EQUAL? .BEG .END>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".BEG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "BEG"
                        }
                      ]
                    },
                    {
                      "Zil": ".END",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "END"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<SET WRD <GET .BEG 0>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "WRD"
                    },
                    {
                      "Zil": "<GET .BEG 0>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ".BEG",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "BEG"
                            }
                          ]
                        },
                        0
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<EQUAL? .WRD ,W?COMMA> <TELL \", \">) (.NOSP <SET NOSP <>>) (ELSE <TELL \" \">)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<EQUAL? .WRD ,W?COMMA>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?COMMA",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?COMMA"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<TELL \", \">",
                        "Form": [
                          {
                            "Atom": "TELL"
                          },
                          ", "
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": ".NOSP",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NOSP"
                          }
                        ]
                      },
                      {
                        "Zil": "<SET NOSP <>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "NOSP"
                          },
                          {
                            "Zil": "<>",
                            "Form": []
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "ELSE"
                      },
                      {
                        "Zil": "<TELL \" \">",
                        "Form": [
                          {
                            "Atom": "TELL"
                          },
                          " "
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<COND (<EQUAL? .WRD ,W?PERIOD ,W?COMMA> <SET NOSP T>) (<EQUAL? .WRD ,W?ME> <PRINTD ,ME> <SET PN T>) (<EQUAL? .WRD ,W?INTNUM> <PRINTN ,P-NUMBER> <SET PN T>) (T <COND (<AND .FIRST?? <NOT .PN> .CP> <TELL \"the \">)> <COND (<OR ,P-OFLAG ,P-MERGED> <PRINTB .WRD>) (<AND <EQUAL? .WRD ,W?IT> <ACCESSIBLE? ,P-IT-OBJECT>> <PRINTD ,P-IT-OBJECT>) (T <WORD-PRINT <GETB .BEG 2> <GETB .BEG 3>>)> <SET FIRST?? <>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<EQUAL? .WRD ,W?PERIOD ,W?COMMA>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?PERIOD",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?PERIOD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?COMMA",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?COMMA"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET NOSP T>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "NOSP"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<EQUAL? .WRD ,W?ME>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?ME",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?ME"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PRINTD ,ME>",
                        "Form": [
                          {
                            "Atom": "PRINTD"
                          },
                          {
                            "Zil": ",ME",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "ME"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET PN T>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "PN"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<EQUAL? .WRD ,W?INTNUM>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?INTNUM",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?INTNUM"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PRINTN ,P-NUMBER>",
                        "Form": [
                          {
                            "Atom": "PRINTN"
                          },
                          {
                            "Zil": ",P-NUMBER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-NUMBER"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET PN T>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "PN"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<COND (<AND .FIRST?? <NOT .PN> .CP> <TELL \"the \">)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<AND .FIRST?? <NOT .PN> .CP>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": ".FIRST??",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "FIRST??"
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<NOT .PN>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": ".PN",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "PN"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".CP",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "CP"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<TELL \"the \">",
                              "Form": [
                                {
                                  "Atom": "TELL"
                                },
                                "the "
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<COND (<OR ,P-OFLAG ,P-MERGED> <PRINTB .WRD>) (<AND <EQUAL? .WRD ,W?IT> <ACCESSIBLE? ,P-IT-OBJECT>> <PRINTD ,P-IT-OBJECT>) (T <WORD-PRINT <GETB .BEG 2> <GETB .BEG 3>>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<OR ,P-OFLAG ,P-MERGED>",
                              "Form": [
                                {
                                  "Atom": "OR"
                                },
                                {
                                  "Zil": ",P-OFLAG",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-OFLAG"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-MERGED",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-MERGED"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<PRINTB .WRD>",
                              "Form": [
                                {
                                  "Atom": "PRINTB"
                                },
                                {
                                  "Zil": ".WRD",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "WRD"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<AND <EQUAL? .WRD ,W?IT> <ACCESSIBLE? ,P-IT-OBJECT>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<EQUAL? .WRD ,W?IT>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ".WRD",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "WRD"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",W?IT",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "W?IT"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<ACCESSIBLE? ,P-IT-OBJECT>",
                                  "Form": [
                                    {
                                      "Atom": "ACCESSIBLE?"
                                    },
                                    {
                                      "Zil": ",P-IT-OBJECT",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-IT-OBJECT"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<PRINTD ,P-IT-OBJECT>",
                              "Form": [
                                {
                                  "Atom": "PRINTD"
                                },
                                {
                                  "Zil": ",P-IT-OBJECT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-IT-OBJECT"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            {
                              "Zil": "<WORD-PRINT <GETB .BEG 2> <GETB .BEG 3>>",
                              "Form": [
                                {
                                  "Atom": "WORD-PRINT"
                                },
                                {
                                  "Zil": "<GETB .BEG 2>",
                                  "Form": [
                                    {
                                      "Atom": "GETB"
                                    },
                                    {
                                      "Zil": ".BEG",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "BEG"
                                        }
                                      ]
                                    },
                                    2
                                  ]
                                },
                                {
                                  "Zil": "<GETB .BEG 3>",
                                  "Form": [
                                    {
                                      "Atom": "GETB"
                                    },
                                    {
                                      "Zil": ".BEG",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "BEG"
                                        }
                                      ]
                                    },
                                    3
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<SET FIRST?? <>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "FIRST??"
                          },
                          {
                            "Zil": "<>",
                            "Form": []
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<SET BEG <REST .BEG ,P-WORDLEN>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "BEG"
              },
              {
                "Zil": "<REST .BEG ,P-WORDLEN>",
                "Form": [
                  {
                    "Atom": "REST"
                  },
                  {
                    "Zil": ".BEG",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "BEG"
                      }
                    ]
                  },
                  {
                    "Zil": ",P-WORDLEN",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-WORDLEN"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:854",
    "Name": "PREP-PRINT",
    "ArgSpec": "(PREP \"AUX\" WRD)",
    "Body": [
      {
        "Zil": "<COND (<NOT <ZERO? .PREP>> <TELL \" \"> <COND (T <SET WRD <PREP-FIND .PREP>> <PRINTB .WRD>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <ZERO? .PREP>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<ZERO? .PREP>",
                  "Form": [
                    {
                      "Atom": "ZERO?"
                    },
                    {
                      "Zil": ".PREP",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "PREP"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \" \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " "
              ]
            },
            {
              "Zil": "<COND (T <SET WRD <PREP-FIND .PREP>> <PRINTB .WRD>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SET WRD <PREP-FIND .PREP>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "WRD"
                      },
                      {
                        "Zil": "<PREP-FIND .PREP>",
                        "Form": [
                          {
                            "Atom": "PREP-FIND"
                          },
                          {
                            "Zil": ".PREP",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "PREP"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<PRINTB .WRD>",
                    "Form": [
                      {
                        "Atom": "PRINTB"
                      },
                      {
                        "Zil": ".WRD",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "WRD"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:863",
    "Name": "CLAUSE-COPY",
    "ArgSpec": "(SRC DEST \"OPT\" (INSRT <>) \"AUX\" BEG END)",
    "Body": [
      {
        "Zil": "<SET BEG <GET .SRC <GET ,P-CCTBL ,CC-SBPTR>>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "BEG"
          },
          {
            "Zil": "<GET .SRC <GET ,P-CCTBL ,CC-SBPTR>>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ".SRC",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "SRC"
                  }
                ]
              },
              {
                "Zil": "<GET ,P-CCTBL ,CC-SBPTR>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  {
                    "Zil": ",P-CCTBL",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-CCTBL"
                      }
                    ]
                  },
                  {
                    "Zil": ",CC-SBPTR",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CC-SBPTR"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET END <GET .SRC <GET ,P-CCTBL ,CC-SEPTR>>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "END"
          },
          {
            "Zil": "<GET .SRC <GET ,P-CCTBL ,CC-SEPTR>>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ".SRC",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "SRC"
                  }
                ]
              },
              {
                "Zil": "<GET ,P-CCTBL ,CC-SEPTR>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  {
                    "Zil": ",P-CCTBL",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-CCTBL"
                      }
                    ]
                  },
                  {
                    "Zil": ",CC-SEPTR",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CC-SEPTR"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT .DEST <GET ,P-CCTBL ,CC-DBPTR> <REST ,P-OCLAUSE <+ <* <GET ,P-OCLAUSE ,P-MATCHLEN> ,P-LEXELEN> 2>>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ".DEST",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "DEST"
              }
            ]
          },
          {
            "Zil": "<GET ,P-CCTBL ,CC-DBPTR>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ",P-CCTBL",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-CCTBL"
                  }
                ]
              },
              {
                "Zil": ",CC-DBPTR",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "CC-DBPTR"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<REST ,P-OCLAUSE <+ <* <GET ,P-OCLAUSE ,P-MATCHLEN> ,P-LEXELEN> 2>>",
            "Form": [
              {
                "Atom": "REST"
              },
              {
                "Zil": ",P-OCLAUSE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-OCLAUSE"
                  }
                ]
              },
              {
                "Zil": "<+ <* <GET ,P-OCLAUSE ,P-MATCHLEN> ,P-LEXELEN> 2>",
                "Form": [
                  {
                    "Atom": "+"
                  },
                  {
                    "Zil": "<* <GET ,P-OCLAUSE ,P-MATCHLEN> ,P-LEXELEN>",
                    "Form": [
                      {
                        "Atom": "*"
                      },
                      {
                        "Zil": "<GET ,P-OCLAUSE ,P-MATCHLEN>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-OCLAUSE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-OCLAUSE"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-MATCHLEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-MATCHLEN"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",P-LEXELEN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-LEXELEN"
                          }
                        ]
                      }
                    ]
                  },
                  2
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<EQUAL? .BEG .END> <PUT .DEST <GET ,P-CCTBL ,CC-DEPTR> <REST ,P-OCLAUSE <+ <* <GET ,P-OCLAUSE ,P-MATCHLEN> ,P-LEXELEN> 2>>> <RETURN>) (T <COND (<AND .INSRT <EQUAL? ,P-ANAM <GET .BEG 0>>> <CLAUSE-ADD .INSRT>)> <CLAUSE-ADD <GET .BEG 0>>)> <SET BEG <REST .BEG ,P-WORDLEN>>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<EQUAL? .BEG .END> <PUT .DEST <GET ,P-CCTBL ,CC-DEPTR> <REST ,P-OCLAUSE <+ <* <GET ,P-OCLAUSE ,P-MATCHLEN> ,P-LEXELEN> 2>>> <RETURN>) (T <COND (<AND .INSRT <EQUAL? ,P-ANAM <GET .BEG 0>>> <CLAUSE-ADD .INSRT>)> <CLAUSE-ADD <GET .BEG 0>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<EQUAL? .BEG .END>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".BEG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "BEG"
                        }
                      ]
                    },
                    {
                      "Zil": ".END",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "END"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<PUT .DEST <GET ,P-CCTBL ,CC-DEPTR> <REST ,P-OCLAUSE <+ <* <GET ,P-OCLAUSE ,P-MATCHLEN> ,P-LEXELEN> 2>>>",
                  "Form": [
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Zil": ".DEST",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "DEST"
                        }
                      ]
                    },
                    {
                      "Zil": "<GET ,P-CCTBL ,CC-DEPTR>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-CCTBL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-CCTBL"
                            }
                          ]
                        },
                        {
                          "Zil": ",CC-DEPTR",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CC-DEPTR"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<REST ,P-OCLAUSE <+ <* <GET ,P-OCLAUSE ,P-MATCHLEN> ,P-LEXELEN> 2>>",
                      "Form": [
                        {
                          "Atom": "REST"
                        },
                        {
                          "Zil": ",P-OCLAUSE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-OCLAUSE"
                            }
                          ]
                        },
                        {
                          "Zil": "<+ <* <GET ,P-OCLAUSE ,P-MATCHLEN> ,P-LEXELEN> 2>",
                          "Form": [
                            {
                              "Atom": "+"
                            },
                            {
                              "Zil": "<* <GET ,P-OCLAUSE ,P-MATCHLEN> ,P-LEXELEN>",
                              "Form": [
                                {
                                  "Atom": "*"
                                },
                                {
                                  "Zil": "<GET ,P-OCLAUSE ,P-MATCHLEN>",
                                  "Form": [
                                    {
                                      "Atom": "GET"
                                    },
                                    {
                                      "Zil": ",P-OCLAUSE",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-OCLAUSE"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P-MATCHLEN",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-MATCHLEN"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-LEXELEN",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-LEXELEN"
                                    }
                                  ]
                                }
                              ]
                            },
                            2
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<COND (<AND .INSRT <EQUAL? ,P-ANAM <GET .BEG 0>>> <CLAUSE-ADD .INSRT>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<AND .INSRT <EQUAL? ,P-ANAM <GET .BEG 0>>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": ".INSRT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "INSRT"
                              }
                            ]
                          },
                          {
                            "Zil": "<EQUAL? ,P-ANAM <GET .BEG 0>>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ",P-ANAM",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-ANAM"
                                  }
                                ]
                              },
                              {
                                "Zil": "<GET .BEG 0>",
                                "Form": [
                                  {
                                    "Atom": "GET"
                                  },
                                  {
                                    "Zil": ".BEG",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "BEG"
                                      }
                                    ]
                                  },
                                  0
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<CLAUSE-ADD .INSRT>",
                        "Form": [
                          {
                            "Atom": "CLAUSE-ADD"
                          },
                          {
                            "Zil": ".INSRT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "INSRT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<CLAUSE-ADD <GET .BEG 0>>",
                  "Form": [
                    {
                      "Atom": "CLAUSE-ADD"
                    },
                    {
                      "Zil": "<GET .BEG 0>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ".BEG",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "BEG"
                            }
                          ]
                        },
                        0
                      ]
                    }
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<SET BEG <REST .BEG ,P-WORDLEN>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "BEG"
              },
              {
                "Zil": "<REST .BEG ,P-WORDLEN>",
                "Form": [
                  {
                    "Atom": "REST"
                  },
                  {
                    "Zil": ".BEG",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "BEG"
                      }
                    ]
                  },
                  {
                    "Zil": ",P-WORDLEN",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-WORDLEN"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:885",
    "Name": "CLAUSE-ADD",
    "ArgSpec": "(WRD \"AUX\" PTR)",
    "Body": [
      {
        "Zil": "<SET PTR <+ <GET ,P-OCLAUSE ,P-MATCHLEN> 2>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "PTR"
          },
          {
            "Zil": "<+ <GET ,P-OCLAUSE ,P-MATCHLEN> 2>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": "<GET ,P-OCLAUSE ,P-MATCHLEN>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  {
                    "Zil": ",P-OCLAUSE",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-OCLAUSE"
                      }
                    ]
                  },
                  {
                    "Zil": ",P-MATCHLEN",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-MATCHLEN"
                      }
                    ]
                  }
                ]
              },
              2
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-OCLAUSE <- .PTR 1> .WRD>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-OCLAUSE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-OCLAUSE"
              }
            ]
          },
          {
            "Zil": "<- .PTR 1>",
            "Form": [
              {
                "Atom": "-"
              },
              {
                "Zil": ".PTR",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "PTR"
                  }
                ]
              },
              1
            ]
          },
          {
            "Zil": ".WRD",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "WRD"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-OCLAUSE .PTR 0>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-OCLAUSE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-OCLAUSE"
              }
            ]
          },
          {
            "Zil": ".PTR",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "PTR"
              }
            ]
          },
          0
        ]
      },
      {
        "Zil": "<PUT ,P-OCLAUSE ,P-MATCHLEN .PTR>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-OCLAUSE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-OCLAUSE"
              }
            ]
          },
          {
            "Zil": ",P-MATCHLEN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MATCHLEN"
              }
            ]
          },
          {
            "Zil": ".PTR",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "PTR"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:891",
    "Name": "PREP-FIND",
    "ArgSpec": "(PREP \"AUX\" (CNT 0) SIZE)",
    "Body": [
      {
        "Zil": "<SET SIZE <* <GET ,PREPOSITIONS 0> 2>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "SIZE"
          },
          {
            "Zil": "<* <GET ,PREPOSITIONS 0> 2>",
            "Form": [
              {
                "Atom": "*"
              },
              {
                "Zil": "<GET ,PREPOSITIONS 0>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  {
                    "Zil": ",PREPOSITIONS",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "PREPOSITIONS"
                      }
                    ]
                  },
                  0
                ]
              },
              2
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<IGRTR? CNT .SIZE> <RFALSE>) (<EQUAL? <GET ,PREPOSITIONS .CNT> .PREP> <RETURN <GET ,PREPOSITIONS <- .CNT 1>>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<IGRTR? CNT .SIZE> <RFALSE>) (<EQUAL? <GET ,PREPOSITIONS .CNT> .PREP> <RETURN <GET ,PREPOSITIONS <- .CNT 1>>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<IGRTR? CNT .SIZE>",
                  "Form": [
                    {
                      "Atom": "IGRTR?"
                    },
                    {
                      "Atom": "CNT"
                    },
                    {
                      "Zil": ".SIZE",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "SIZE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<EQUAL? <GET ,PREPOSITIONS .CNT> .PREP>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<GET ,PREPOSITIONS .CNT>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",PREPOSITIONS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PREPOSITIONS"
                            }
                          ]
                        },
                        {
                          "Zil": ".CNT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "CNT"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ".PREP",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "PREP"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN <GET ,PREPOSITIONS <- .CNT 1>>>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": "<GET ,PREPOSITIONS <- .CNT 1>>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",PREPOSITIONS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PREPOSITIONS"
                            }
                          ]
                        },
                        {
                          "Zil": "<- .CNT 1>",
                          "Form": [
                            {
                              "Atom": "-"
                            },
                            {
                              "Zil": ".CNT",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "CNT"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:898",
    "Name": "SYNTAX-FOUND",
    "ArgSpec": "(SYN)",
    "Body": [
      {
        "Zil": "<SETG P-SYNTAX .SYN>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-SYNTAX"
          },
          {
            "Zil": ".SYN",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "SYN"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG PRSA <GETB .SYN ,P-SACTION>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "PRSA"
          },
          {
            "Zil": "<GETB .SYN ,P-SACTION>",
            "Form": [
              {
                "Atom": "GETB"
              },
              {
                "Zil": ".SYN",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "SYN"
                  }
                ]
              },
              {
                "Zil": ",P-SACTION",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-SACTION"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:904",
    "Name": "GWIM",
    "ArgSpec": "(GBIT LBIT PREP \"AUX\" OBJ)",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? .GBIT ,RMUNGBIT> <RETURN ,ROOMS>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? .GBIT ,RMUNGBIT>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ".GBIT",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "GBIT"
                    }
                  ]
                },
                {
                  "Zil": ",RMUNGBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "RMUNGBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RETURN ,ROOMS>",
              "Form": [
                {
                  "Atom": "RETURN"
                },
                {
                  "Zil": ",ROOMS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ROOMS"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG P-GWIMBIT .GBIT>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-GWIMBIT"
          },
          {
            "Zil": ".GBIT",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "GBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG P-SLOCBITS .LBIT>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-SLOCBITS"
          },
          {
            "Zil": ".LBIT",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "LBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-MERGE ,P-MATCHLEN 0>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-MERGE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MERGE"
              }
            ]
          },
          {
            "Zil": ",P-MATCHLEN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MATCHLEN"
              }
            ]
          },
          0
        ]
      },
      {
        "Zil": "<COND (<GET-OBJECT ,P-MERGE <>> <SETG P-GWIMBIT 0> <COND (<EQUAL? <GET ,P-MERGE ,P-MATCHLEN> 1> <SET OBJ <GET ,P-MERGE 1>> <TELL \"(\"> <COND (<AND <NOT <ZERO? .PREP>> <NOT ,P-END-ON-PREP>> <PRINTB <SET PREP <PREP-FIND .PREP>>> <COND (<EQUAL? .PREP ,W?OUT> <TELL \" of\">)> <TELL \" \"> <COND (<EQUAL? .OBJ ,HANDS> <TELL \"your hands\">) (T <TELL \"the \" D .OBJ>)> <TELL \")\" CR>) (ELSE <TELL D .OBJ \")\" CR>)> .OBJ)>) (T <SETG P-GWIMBIT 0> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<GET-OBJECT ,P-MERGE <>>",
              "Form": [
                {
                  "Atom": "GET-OBJECT"
                },
                {
                  "Zil": ",P-MERGE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-MERGE"
                    }
                  ]
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG P-GWIMBIT 0>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-GWIMBIT"
                },
                0
              ]
            },
            {
              "Zil": "<COND (<EQUAL? <GET ,P-MERGE ,P-MATCHLEN> 1> <SET OBJ <GET ,P-MERGE 1>> <TELL \"(\"> <COND (<AND <NOT <ZERO? .PREP>> <NOT ,P-END-ON-PREP>> <PRINTB <SET PREP <PREP-FIND .PREP>>> <COND (<EQUAL? .PREP ,W?OUT> <TELL \" of\">)> <TELL \" \"> <COND (<EQUAL? .OBJ ,HANDS> <TELL \"your hands\">) (T <TELL \"the \" D .OBJ>)> <TELL \")\" CR>) (ELSE <TELL D .OBJ \")\" CR>)> .OBJ)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? <GET ,P-MERGE ,P-MATCHLEN> 1>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": "<GET ,P-MERGE ,P-MATCHLEN>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-MERGE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-MERGE"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-MATCHLEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-MATCHLEN"
                              }
                            ]
                          }
                        ]
                      },
                      1
                    ]
                  },
                  {
                    "Zil": "<SET OBJ <GET ,P-MERGE 1>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "OBJ"
                      },
                      {
                        "Zil": "<GET ,P-MERGE 1>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-MERGE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-MERGE"
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"(\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "("
                    ]
                  },
                  {
                    "Zil": "<COND (<AND <NOT <ZERO? .PREP>> <NOT ,P-END-ON-PREP>> <PRINTB <SET PREP <PREP-FIND .PREP>>> <COND (<EQUAL? .PREP ,W?OUT> <TELL \" of\">)> <TELL \" \"> <COND (<EQUAL? .OBJ ,HANDS> <TELL \"your hands\">) (T <TELL \"the \" D .OBJ>)> <TELL \")\" CR>) (ELSE <TELL D .OBJ \")\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<AND <NOT <ZERO? .PREP>> <NOT ,P-END-ON-PREP>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": "<NOT <ZERO? .PREP>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<ZERO? .PREP>",
                                  "Form": [
                                    {
                                      "Atom": "ZERO?"
                                    },
                                    {
                                      "Zil": ".PREP",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "PREP"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<NOT ,P-END-ON-PREP>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": ",P-END-ON-PREP",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-END-ON-PREP"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<PRINTB <SET PREP <PREP-FIND .PREP>>>",
                          "Form": [
                            {
                              "Atom": "PRINTB"
                            },
                            {
                              "Zil": "<SET PREP <PREP-FIND .PREP>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "PREP"
                                },
                                {
                                  "Zil": "<PREP-FIND .PREP>",
                                  "Form": [
                                    {
                                      "Atom": "PREP-FIND"
                                    },
                                    {
                                      "Zil": ".PREP",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "PREP"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<COND (<EQUAL? .PREP ,W?OUT> <TELL \" of\">)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<EQUAL? .PREP ,W?OUT>",
                                "Form": [
                                  {
                                    "Atom": "EQUAL?"
                                  },
                                  {
                                    "Zil": ".PREP",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "PREP"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",W?OUT",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "W?OUT"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<TELL \" of\">",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  " of"
                                ]
                              }
                            ]
                          ]
                        },
                        {
                          "Zil": "<TELL \" \">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            " "
                          ]
                        },
                        {
                          "Zil": "<COND (<EQUAL? .OBJ ,HANDS> <TELL \"your hands\">) (T <TELL \"the \" D .OBJ>)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<EQUAL? .OBJ ,HANDS>",
                                "Form": [
                                  {
                                    "Atom": "EQUAL?"
                                  },
                                  {
                                    "Zil": ".OBJ",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "OBJ"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",HANDS",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "HANDS"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<TELL \"your hands\">",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "your hands"
                                ]
                              }
                            ],
                            [
                              {
                                "Atom": "T"
                              },
                              {
                                "Zil": "<TELL \"the \" D .OBJ>",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "the ",
                                  {
                                    "Atom": "D"
                                  },
                                  {
                                    "Zil": ".OBJ",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "OBJ"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        },
                        {
                          "Zil": "<TELL \")\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            ")",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "ELSE"
                        },
                        {
                          "Zil": "<TELL D .OBJ \")\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ".OBJ",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "OBJ"
                                }
                              ]
                            },
                            ")",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": ".OBJ",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "OBJ"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SETG P-GWIMBIT 0>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-GWIMBIT"
                },
                0
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:931",
    "Name": "SNARF-OBJECTS",
    "ArgSpec": "(\"AUX\" OPTR IPTR L)",
    "Body": [
      {
        "Zil": "<PUT ,P-BUTS ,P-MATCHLEN 0>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-BUTS",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-BUTS"
              }
            ]
          },
          {
            "Zil": ",P-MATCHLEN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MATCHLEN"
              }
            ]
          },
          0
        ]
      },
      {
        "Zil": "<COND (<NOT <EQUAL? <SET IPTR <GET ,P-ITBL ,P-NC2>> 0>> <SETG P-SLOCBITS <GETB ,P-SYNTAX ,P-SLOC2>> <OR <SNARFEM .IPTR <GET ,P-ITBL ,P-NC2L> ,P-PRSI> <RFALSE>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <EQUAL? <SET IPTR <GET ,P-ITBL ,P-NC2>> 0>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<EQUAL? <SET IPTR <GET ,P-ITBL ,P-NC2>> 0>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<SET IPTR <GET ,P-ITBL ,P-NC2>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "IPTR"
                        },
                        {
                          "Zil": "<GET ,P-ITBL ,P-NC2>",
                          "Form": [
                            {
                              "Atom": "GET"
                            },
                            {
                              "Zil": ",P-ITBL",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-ITBL"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-NC2",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-NC2"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    0
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-SLOCBITS <GETB ,P-SYNTAX ,P-SLOC2>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-SLOCBITS"
                },
                {
                  "Zil": "<GETB ,P-SYNTAX ,P-SLOC2>",
                  "Form": [
                    {
                      "Atom": "GETB"
                    },
                    {
                      "Zil": ",P-SYNTAX",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-SYNTAX"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-SLOC2",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-SLOC2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<OR <SNARFEM .IPTR <GET ,P-ITBL ,P-NC2L> ,P-PRSI> <RFALSE>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<SNARFEM .IPTR <GET ,P-ITBL ,P-NC2L> ,P-PRSI>",
                  "Form": [
                    {
                      "Atom": "SNARFEM"
                    },
                    {
                      "Zil": ".IPTR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "IPTR"
                        }
                      ]
                    },
                    {
                      "Zil": "<GET ,P-ITBL ,P-NC2L>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-ITBL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-ITBL"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-NC2L",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-NC2L"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",P-PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-PRSI"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT <EQUAL? <SET OPTR <GET ,P-ITBL ,P-NC1>> 0>> <SETG P-SLOCBITS <GETB ,P-SYNTAX ,P-SLOC1>> <OR <SNARFEM .OPTR <GET ,P-ITBL ,P-NC1L> ,P-PRSO> <RFALSE>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <EQUAL? <SET OPTR <GET ,P-ITBL ,P-NC1>> 0>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<EQUAL? <SET OPTR <GET ,P-ITBL ,P-NC1>> 0>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<SET OPTR <GET ,P-ITBL ,P-NC1>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "OPTR"
                        },
                        {
                          "Zil": "<GET ,P-ITBL ,P-NC1>",
                          "Form": [
                            {
                              "Atom": "GET"
                            },
                            {
                              "Zil": ",P-ITBL",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-ITBL"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-NC1",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-NC1"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    0
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-SLOCBITS <GETB ,P-SYNTAX ,P-SLOC1>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-SLOCBITS"
                },
                {
                  "Zil": "<GETB ,P-SYNTAX ,P-SLOC1>",
                  "Form": [
                    {
                      "Atom": "GETB"
                    },
                    {
                      "Zil": ",P-SYNTAX",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-SYNTAX"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-SLOC1",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-SLOC1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<OR <SNARFEM .OPTR <GET ,P-ITBL ,P-NC1L> ,P-PRSO> <RFALSE>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<SNARFEM .OPTR <GET ,P-ITBL ,P-NC1L> ,P-PRSO>",
                  "Form": [
                    {
                      "Atom": "SNARFEM"
                    },
                    {
                      "Zil": ".OPTR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OPTR"
                        }
                      ]
                    },
                    {
                      "Zil": "<GET ,P-ITBL ,P-NC1L>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-ITBL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-ITBL"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-NC1L",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-NC1L"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",P-PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-PRSO"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT <ZERO? <GET ,P-BUTS ,P-MATCHLEN>>> <SET L <GET ,P-PRSO ,P-MATCHLEN>> <COND (.OPTR <SETG P-PRSO <BUT-MERGE ,P-PRSO>>)> <COND (<AND .IPTR <OR <NOT .OPTR> <EQUAL? .L <GET ,P-PRSO ,P-MATCHLEN>>>> <SETG P-PRSI <BUT-MERGE ,P-PRSI>>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <ZERO? <GET ,P-BUTS ,P-MATCHLEN>>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<ZERO? <GET ,P-BUTS ,P-MATCHLEN>>",
                  "Form": [
                    {
                      "Atom": "ZERO?"
                    },
                    {
                      "Zil": "<GET ,P-BUTS ,P-MATCHLEN>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-BUTS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-BUTS"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-MATCHLEN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-MATCHLEN"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET L <GET ,P-PRSO ,P-MATCHLEN>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "L"
                },
                {
                  "Zil": "<GET ,P-PRSO ,P-MATCHLEN>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-MATCHLEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-MATCHLEN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (.OPTR <SETG P-PRSO <BUT-MERGE ,P-PRSO>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ".OPTR",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "OPTR"
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-PRSO <BUT-MERGE ,P-PRSO>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-PRSO"
                      },
                      {
                        "Zil": "<BUT-MERGE ,P-PRSO>",
                        "Form": [
                          {
                            "Atom": "BUT-MERGE"
                          },
                          {
                            "Zil": ",P-PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-PRSO"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<AND .IPTR <OR <NOT .OPTR> <EQUAL? .L <GET ,P-PRSO ,P-MATCHLEN>>>> <SETG P-PRSI <BUT-MERGE ,P-PRSI>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND .IPTR <OR <NOT .OPTR> <EQUAL? .L <GET ,P-PRSO ,P-MATCHLEN>>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ".IPTR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "IPTR"
                          }
                        ]
                      },
                      {
                        "Zil": "<OR <NOT .OPTR> <EQUAL? .L <GET ,P-PRSO ,P-MATCHLEN>>>",
                        "Form": [
                          {
                            "Atom": "OR"
                          },
                          {
                            "Zil": "<NOT .OPTR>",
                            "Form": [
                              {
                                "Atom": "NOT"
                              },
                              {
                                "Zil": ".OPTR",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "OPTR"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<EQUAL? .L <GET ,P-PRSO ,P-MATCHLEN>>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".L",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "L"
                                  }
                                ]
                              },
                              {
                                "Zil": "<GET ,P-PRSO ,P-MATCHLEN>",
                                "Form": [
                                  {
                                    "Atom": "GET"
                                  },
                                  {
                                    "Zil": ",P-PRSO",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-PRSO"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P-MATCHLEN",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-MATCHLEN"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-PRSI <BUT-MERGE ,P-PRSI>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-PRSI"
                      },
                      {
                        "Zil": "<BUT-MERGE ,P-PRSI>",
                        "Form": [
                          {
                            "Atom": "BUT-MERGE"
                          },
                          {
                            "Zil": ",P-PRSI",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-PRSI"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:948",
    "Name": "BUT-MERGE",
    "ArgSpec": "(TBL \"AUX\" LEN BUTLEN (CNT 1) (MATCHES 0) OBJ NTBL)",
    "Body": [
      {
        "Zil": "<SET LEN <GET .TBL ,P-MATCHLEN>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "LEN"
          },
          {
            "Zil": "<GET .TBL ,P-MATCHLEN>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ".TBL",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "TBL"
                  }
                ]
              },
              {
                "Zil": ",P-MATCHLEN",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-MATCHLEN"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-MERGE ,P-MATCHLEN 0>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-MERGE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MERGE"
              }
            ]
          },
          {
            "Zil": ",P-MATCHLEN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MATCHLEN"
              }
            ]
          },
          0
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<DLESS? LEN 0> <RETURN>) (<ZMEMQ <SET OBJ <GET .TBL .CNT>> ,P-BUTS>) (T <PUT ,P-MERGE <+ .MATCHES 1> .OBJ> <SET MATCHES <+ .MATCHES 1>>)> <SET CNT <+ .CNT 1>>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<DLESS? LEN 0> <RETURN>) (<ZMEMQ <SET OBJ <GET .TBL .CNT>> ,P-BUTS>) (T <PUT ,P-MERGE <+ .MATCHES 1> .OBJ> <SET MATCHES <+ .MATCHES 1>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<DLESS? LEN 0>",
                  "Form": [
                    {
                      "Atom": "DLESS?"
                    },
                    {
                      "Atom": "LEN"
                    },
                    0
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<ZMEMQ <SET OBJ <GET .TBL .CNT>> ,P-BUTS>",
                  "Form": [
                    {
                      "Atom": "ZMEMQ"
                    },
                    {
                      "Zil": "<SET OBJ <GET .TBL .CNT>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "OBJ"
                        },
                        {
                          "Zil": "<GET .TBL .CNT>",
                          "Form": [
                            {
                              "Atom": "GET"
                            },
                            {
                              "Zil": ".TBL",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "TBL"
                                }
                              ]
                            },
                            {
                              "Zil": ".CNT",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "CNT"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",P-BUTS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-BUTS"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<PUT ,P-MERGE <+ .MATCHES 1> .OBJ>",
                  "Form": [
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Zil": ",P-MERGE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-MERGE"
                        }
                      ]
                    },
                    {
                      "Zil": "<+ .MATCHES 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ".MATCHES",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "MATCHES"
                            }
                          ]
                        },
                        1
                      ]
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET MATCHES <+ .MATCHES 1>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "MATCHES"
                    },
                    {
                      "Zil": "<+ .MATCHES 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ".MATCHES",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "MATCHES"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<SET CNT <+ .CNT 1>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "CNT"
              },
              {
                "Zil": "<+ .CNT 1>",
                "Form": [
                  {
                    "Atom": "+"
                  },
                  {
                    "Zil": ".CNT",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "CNT"
                      }
                    ]
                  },
                  1
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,P-MERGE ,P-MATCHLEN .MATCHES>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",P-MERGE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MERGE"
              }
            ]
          },
          {
            "Zil": ",P-MATCHLEN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MATCHLEN"
              }
            ]
          },
          {
            "Zil": ".MATCHES",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "MATCHES"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET NTBL ,P-MERGE>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "NTBL"
          },
          {
            "Zil": ",P-MERGE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MERGE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG P-MERGE .TBL>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-MERGE"
          },
          {
            "Zil": ".TBL",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "TBL"
              }
            ]
          }
        ]
      },
      {
        "Zil": ".NTBL",
        "Form": [
          {
            "Atom": "LVAL"
          },
          {
            "Atom": "NTBL"
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:981",
    "Name": "SNARFEM",
    "ArgSpec": "(PTR EPTR TBL \"AUX\" (BUT <>) LEN WV WRD NW (WAS-ALL <>))",
    "Body": [
      {
        "Zil": "<SETG P-AND <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-AND"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (<EQUAL? ,P-GETFLAGS ,P-ALL> <SET WAS-ALL T>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,P-GETFLAGS ,P-ALL>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",P-GETFLAGS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-GETFLAGS"
                    }
                  ]
                },
                {
                  "Zil": ",P-ALL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ALL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET WAS-ALL T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "WAS-ALL"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG P-GETFLAGS 0>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-GETFLAGS"
          },
          0
        ]
      },
      {
        "Zil": "<PUT .TBL ,P-MATCHLEN 0>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ".TBL",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "TBL"
              }
            ]
          },
          {
            "Zil": ",P-MATCHLEN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MATCHLEN"
              }
            ]
          },
          0
        ]
      },
      {
        "Zil": "<SET WRD <GET .PTR 0>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "WRD"
          },
          {
            "Zil": "<GET .PTR 0>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ".PTR",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "PTR"
                  }
                ]
              },
              0
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<EQUAL? .PTR .EPTR> <SET WV <GET-OBJECT <OR .BUT .TBL>>> <COND (.WAS-ALL <SETG P-GETFLAGS ,P-ALL>)> <RETURN .WV>) (T <COND (<==? .EPTR <REST .PTR ,P-WORDLEN>> <SET NW 0>) (T <SET NW <GET .PTR ,P-LEXELEN>>)> <COND (<EQUAL? .WRD ,W?ALL> <SETG P-GETFLAGS ,P-ALL> <COND (<EQUAL? .NW ,W?OF> <SET PTR <REST .PTR ,P-WORDLEN>>)>) (<EQUAL? .WRD ,W?BUT ,W?EXCEPT> <OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>> <SET BUT ,P-BUTS> <PUT .BUT ,P-MATCHLEN 0>) (<EQUAL? .WRD ,W?A ,W?ONE> <COND (<NOT ,P-ADJ> <SETG P-GETFLAGS ,P-ONE> <COND (<EQUAL? .NW ,W?OF> <SET PTR <REST .PTR ,P-WORDLEN>>)>) (T <SETG P-NAM ,P-ONEOBJ> <OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>> <AND <ZERO? .NW> <RTRUE>>)>) (<AND <EQUAL? .WRD ,W?AND ,W?COMMA> <NOT <EQUAL? .NW ,W?AND ,W?COMMA>>> <SETG P-AND T> <OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>> T) (<WT? .WRD ,PS?BUZZ-WORD>) (<EQUAL? .WRD ,W?AND ,W?COMMA>) (<EQUAL? .WRD ,W?OF> <COND (<ZERO? ,P-GETFLAGS> <SETG P-GETFLAGS ,P-INHIBIT>)>) (<AND <SET WV <WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE>> <NOT ,P-ADJ>> <SETG P-ADJ .WV> <SETG P-ADJN .WRD>) (<WT? .WRD ,PS?OBJECT ,P1?OBJECT> <SETG P-NAM .WRD> <SETG P-ONEOBJ .WRD>)>)> <COND (<NOT <EQUAL? .PTR .EPTR>> <SET PTR <REST .PTR ,P-WORDLEN>> <SET WRD .NW>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<EQUAL? .PTR .EPTR> <SET WV <GET-OBJECT <OR .BUT .TBL>>> <COND (.WAS-ALL <SETG P-GETFLAGS ,P-ALL>)> <RETURN .WV>) (T <COND (<==? .EPTR <REST .PTR ,P-WORDLEN>> <SET NW 0>) (T <SET NW <GET .PTR ,P-LEXELEN>>)> <COND (<EQUAL? .WRD ,W?ALL> <SETG P-GETFLAGS ,P-ALL> <COND (<EQUAL? .NW ,W?OF> <SET PTR <REST .PTR ,P-WORDLEN>>)>) (<EQUAL? .WRD ,W?BUT ,W?EXCEPT> <OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>> <SET BUT ,P-BUTS> <PUT .BUT ,P-MATCHLEN 0>) (<EQUAL? .WRD ,W?A ,W?ONE> <COND (<NOT ,P-ADJ> <SETG P-GETFLAGS ,P-ONE> <COND (<EQUAL? .NW ,W?OF> <SET PTR <REST .PTR ,P-WORDLEN>>)>) (T <SETG P-NAM ,P-ONEOBJ> <OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>> <AND <ZERO? .NW> <RTRUE>>)>) (<AND <EQUAL? .WRD ,W?AND ,W?COMMA> <NOT <EQUAL? .NW ,W?AND ,W?COMMA>>> <SETG P-AND T> <OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>> T) (<WT? .WRD ,PS?BUZZ-WORD>) (<EQUAL? .WRD ,W?AND ,W?COMMA>) (<EQUAL? .WRD ,W?OF> <COND (<ZERO? ,P-GETFLAGS> <SETG P-GETFLAGS ,P-INHIBIT>)>) (<AND <SET WV <WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE>> <NOT ,P-ADJ>> <SETG P-ADJ .WV> <SETG P-ADJN .WRD>) (<WT? .WRD ,PS?OBJECT ,P1?OBJECT> <SETG P-NAM .WRD> <SETG P-ONEOBJ .WRD>)>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<EQUAL? .PTR .EPTR>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".PTR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "PTR"
                        }
                      ]
                    },
                    {
                      "Zil": ".EPTR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "EPTR"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET WV <GET-OBJECT <OR .BUT .TBL>>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "WV"
                    },
                    {
                      "Zil": "<GET-OBJECT <OR .BUT .TBL>>",
                      "Form": [
                        {
                          "Atom": "GET-OBJECT"
                        },
                        {
                          "Zil": "<OR .BUT .TBL>",
                          "Form": [
                            {
                              "Atom": "OR"
                            },
                            {
                              "Zil": ".BUT",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "BUT"
                                }
                              ]
                            },
                            {
                              "Zil": ".TBL",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "TBL"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (.WAS-ALL <SETG P-GETFLAGS ,P-ALL>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": ".WAS-ALL",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "WAS-ALL"
                          }
                        ]
                      },
                      {
                        "Zil": "<SETG P-GETFLAGS ,P-ALL>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-GETFLAGS"
                          },
                          {
                            "Zil": ",P-ALL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-ALL"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<RETURN .WV>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": ".WV",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "WV"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<COND (<==? .EPTR <REST .PTR ,P-WORDLEN>> <SET NW 0>) (T <SET NW <GET .PTR ,P-LEXELEN>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<==? .EPTR <REST .PTR ,P-WORDLEN>>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ".EPTR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "EPTR"
                              }
                            ]
                          },
                          {
                            "Zil": "<REST .PTR ,P-WORDLEN>",
                            "Form": [
                              {
                                "Atom": "REST"
                              },
                              {
                                "Zil": ".PTR",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "PTR"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-WORDLEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-WORDLEN"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET NW 0>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "NW"
                          },
                          0
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<SET NW <GET .PTR ,P-LEXELEN>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "NW"
                          },
                          {
                            "Zil": "<GET .PTR ,P-LEXELEN>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ".PTR",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "PTR"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-LEXELEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-LEXELEN"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<COND (<EQUAL? .WRD ,W?ALL> <SETG P-GETFLAGS ,P-ALL> <COND (<EQUAL? .NW ,W?OF> <SET PTR <REST .PTR ,P-WORDLEN>>)>) (<EQUAL? .WRD ,W?BUT ,W?EXCEPT> <OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>> <SET BUT ,P-BUTS> <PUT .BUT ,P-MATCHLEN 0>) (<EQUAL? .WRD ,W?A ,W?ONE> <COND (<NOT ,P-ADJ> <SETG P-GETFLAGS ,P-ONE> <COND (<EQUAL? .NW ,W?OF> <SET PTR <REST .PTR ,P-WORDLEN>>)>) (T <SETG P-NAM ,P-ONEOBJ> <OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>> <AND <ZERO? .NW> <RTRUE>>)>) (<AND <EQUAL? .WRD ,W?AND ,W?COMMA> <NOT <EQUAL? .NW ,W?AND ,W?COMMA>>> <SETG P-AND T> <OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>> T) (<WT? .WRD ,PS?BUZZ-WORD>) (<EQUAL? .WRD ,W?AND ,W?COMMA>) (<EQUAL? .WRD ,W?OF> <COND (<ZERO? ,P-GETFLAGS> <SETG P-GETFLAGS ,P-INHIBIT>)>) (<AND <SET WV <WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE>> <NOT ,P-ADJ>> <SETG P-ADJ .WV> <SETG P-ADJN .WRD>) (<WT? .WRD ,PS?OBJECT ,P1?OBJECT> <SETG P-NAM .WRD> <SETG P-ONEOBJ .WRD>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<EQUAL? .WRD ,W?ALL>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?ALL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?ALL"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SETG P-GETFLAGS ,P-ALL>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-GETFLAGS"
                          },
                          {
                            "Zil": ",P-ALL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-ALL"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<EQUAL? .NW ,W?OF> <SET PTR <REST .PTR ,P-WORDLEN>>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<EQUAL? .NW ,W?OF>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".NW",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "NW"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",W?OF",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "W?OF"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET PTR <REST .PTR ,P-WORDLEN>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "PTR"
                                },
                                {
                                  "Zil": "<REST .PTR ,P-WORDLEN>",
                                  "Form": [
                                    {
                                      "Atom": "REST"
                                    },
                                    {
                                      "Zil": ".PTR",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "PTR"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P-WORDLEN",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-WORDLEN"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<EQUAL? .WRD ,W?BUT ,W?EXCEPT>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?BUT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?BUT"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?EXCEPT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?EXCEPT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>>",
                        "Form": [
                          {
                            "Atom": "OR"
                          },
                          {
                            "Zil": "<GET-OBJECT <OR .BUT .TBL>>",
                            "Form": [
                              {
                                "Atom": "GET-OBJECT"
                              },
                              {
                                "Zil": "<OR .BUT .TBL>",
                                "Form": [
                                  {
                                    "Atom": "OR"
                                  },
                                  {
                                    "Zil": ".BUT",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "BUT"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ".TBL",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "TBL"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<RFALSE>",
                            "Form": [
                              {
                                "Atom": "RFALSE"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET BUT ,P-BUTS>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "BUT"
                          },
                          {
                            "Zil": ",P-BUTS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-BUTS"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PUT .BUT ,P-MATCHLEN 0>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ".BUT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "BUT"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-MATCHLEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-MATCHLEN"
                              }
                            ]
                          },
                          0
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<EQUAL? .WRD ,W?A ,W?ONE>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?A",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?A"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?ONE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?ONE"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<NOT ,P-ADJ> <SETG P-GETFLAGS ,P-ONE> <COND (<EQUAL? .NW ,W?OF> <SET PTR <REST .PTR ,P-WORDLEN>>)>) (T <SETG P-NAM ,P-ONEOBJ> <OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>> <AND <ZERO? .NW> <RTRUE>>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<NOT ,P-ADJ>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": ",P-ADJ",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ADJ"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-GETFLAGS ,P-ONE>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-GETFLAGS"
                                },
                                {
                                  "Zil": ",P-ONE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ONE"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<EQUAL? .NW ,W?OF> <SET PTR <REST .PTR ,P-WORDLEN>>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<EQUAL? .NW ,W?OF>",
                                    "Form": [
                                      {
                                        "Atom": "EQUAL?"
                                      },
                                      {
                                        "Zil": ".NW",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "NW"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",W?OF",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "W?OF"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SET PTR <REST .PTR ,P-WORDLEN>>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "PTR"
                                      },
                                      {
                                        "Zil": "<REST .PTR ,P-WORDLEN>",
                                        "Form": [
                                          {
                                            "Atom": "REST"
                                          },
                                          {
                                            "Zil": ".PTR",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "PTR"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",P-WORDLEN",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-WORDLEN"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            {
                              "Zil": "<SETG P-NAM ,P-ONEOBJ>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-NAM"
                                },
                                {
                                  "Zil": ",P-ONEOBJ",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ONEOBJ"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>>",
                              "Form": [
                                {
                                  "Atom": "OR"
                                },
                                {
                                  "Zil": "<GET-OBJECT <OR .BUT .TBL>>",
                                  "Form": [
                                    {
                                      "Atom": "GET-OBJECT"
                                    },
                                    {
                                      "Zil": "<OR .BUT .TBL>",
                                      "Form": [
                                        {
                                          "Atom": "OR"
                                        },
                                        {
                                          "Zil": ".BUT",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "BUT"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ".TBL",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "TBL"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<RFALSE>",
                                  "Form": [
                                    {
                                      "Atom": "RFALSE"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<AND <ZERO? .NW> <RTRUE>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<ZERO? .NW>",
                                  "Form": [
                                    {
                                      "Atom": "ZERO?"
                                    },
                                    {
                                      "Zil": ".NW",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "NW"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<RTRUE>",
                                  "Form": [
                                    {
                                      "Atom": "RTRUE"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<AND <EQUAL? .WRD ,W?AND ,W?COMMA> <NOT <EQUAL? .NW ,W?AND ,W?COMMA>>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<EQUAL? .WRD ,W?AND ,W?COMMA>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".WRD",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "WRD"
                                  }
                                ]
                              },
                              {
                                "Zil": ",W?AND",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "W?AND"
                                  }
                                ]
                              },
                              {
                                "Zil": ",W?COMMA",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "W?COMMA"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<NOT <EQUAL? .NW ,W?AND ,W?COMMA>>",
                            "Form": [
                              {
                                "Atom": "NOT"
                              },
                              {
                                "Zil": "<EQUAL? .NW ,W?AND ,W?COMMA>",
                                "Form": [
                                  {
                                    "Atom": "EQUAL?"
                                  },
                                  {
                                    "Zil": ".NW",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "NW"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",W?AND",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "W?AND"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",W?COMMA",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "W?COMMA"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SETG P-AND T>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-AND"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      },
                      {
                        "Zil": "<OR <GET-OBJECT <OR .BUT .TBL>> <RFALSE>>",
                        "Form": [
                          {
                            "Atom": "OR"
                          },
                          {
                            "Zil": "<GET-OBJECT <OR .BUT .TBL>>",
                            "Form": [
                              {
                                "Atom": "GET-OBJECT"
                              },
                              {
                                "Zil": "<OR .BUT .TBL>",
                                "Form": [
                                  {
                                    "Atom": "OR"
                                  },
                                  {
                                    "Zil": ".BUT",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "BUT"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ".TBL",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "TBL"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<RFALSE>",
                            "Form": [
                              {
                                "Atom": "RFALSE"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Atom": "T"
                      }
                    ],
                    [
                      {
                        "Zil": "<WT? .WRD ,PS?BUZZ-WORD>",
                        "Form": [
                          {
                            "Atom": "WT?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",PS?BUZZ-WORD",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PS?BUZZ-WORD"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<EQUAL? .WRD ,W?AND ,W?COMMA>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?AND",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?AND"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?COMMA",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?COMMA"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<EQUAL? .WRD ,W?OF>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",W?OF",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "W?OF"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<ZERO? ,P-GETFLAGS> <SETG P-GETFLAGS ,P-INHIBIT>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<ZERO? ,P-GETFLAGS>",
                              "Form": [
                                {
                                  "Atom": "ZERO?"
                                },
                                {
                                  "Zil": ",P-GETFLAGS",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-GETFLAGS"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-GETFLAGS ,P-INHIBIT>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-GETFLAGS"
                                },
                                {
                                  "Zil": ",P-INHIBIT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-INHIBIT"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<AND <SET WV <WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE>> <NOT ,P-ADJ>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<SET WV <WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "WV"
                              },
                              {
                                "Zil": "<WT? .WRD ,PS?ADJECTIVE ,P1?ADJECTIVE>",
                                "Form": [
                                  {
                                    "Atom": "WT?"
                                  },
                                  {
                                    "Zil": ".WRD",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "WRD"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",PS?ADJECTIVE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "PS?ADJECTIVE"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P1?ADJECTIVE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P1?ADJECTIVE"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<NOT ,P-ADJ>",
                            "Form": [
                              {
                                "Atom": "NOT"
                              },
                              {
                                "Zil": ",P-ADJ",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-ADJ"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SETG P-ADJ .WV>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-ADJ"
                          },
                          {
                            "Zil": ".WV",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WV"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SETG P-ADJN .WRD>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-ADJN"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<WT? .WRD ,PS?OBJECT ,P1?OBJECT>",
                        "Form": [
                          {
                            "Atom": "WT?"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          },
                          {
                            "Zil": ",PS?OBJECT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PS?OBJECT"
                              }
                            ]
                          },
                          {
                            "Zil": ",P1?OBJECT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P1?OBJECT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SETG P-NAM .WRD>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-NAM"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SETG P-ONEOBJ .WRD>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-ONEOBJ"
                          },
                          {
                            "Zil": ".WRD",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WRD"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<COND (<NOT <EQUAL? .PTR .EPTR>> <SET PTR <REST .PTR ,P-WORDLEN>> <SET WRD .NW>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<NOT <EQUAL? .PTR .EPTR>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? .PTR .EPTR>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ".PTR",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "PTR"
                            }
                          ]
                        },
                        {
                          "Zil": ".EPTR",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "EPTR"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET PTR <REST .PTR ,P-WORDLEN>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "PTR"
                    },
                    {
                      "Zil": "<REST .PTR ,P-WORDLEN>",
                      "Form": [
                        {
                          "Atom": "REST"
                        },
                        {
                          "Zil": ".PTR",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "PTR"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-WORDLEN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-WORDLEN"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET WRD .NW>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "WRD"
                    },
                    {
                      "Zil": ".NW",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "NW"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1043",
    "Name": "GET-OBJECT",
    "ArgSpec": "(TBL \"OPT\" (VRB T) \"AUX\" BITS LEN XBITS TLEN (GCHECK <>) (OLEN 0) OBJ)",
    "Body": [
      {
        "Zil": "<SET XBITS ,P-SLOCBITS>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "XBITS"
          },
          {
            "Zil": ",P-SLOCBITS",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-SLOCBITS"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET TLEN <GET .TBL ,P-MATCHLEN>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "TLEN"
          },
          {
            "Zil": "<GET .TBL ,P-MATCHLEN>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ".TBL",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "TBL"
                  }
                ]
              },
              {
                "Zil": ",P-MATCHLEN",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-MATCHLEN"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<BTST ,P-GETFLAGS ,P-INHIBIT> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<BTST ,P-GETFLAGS ,P-INHIBIT>",
              "Form": [
                {
                  "Atom": "BTST"
                },
                {
                  "Zil": ",P-GETFLAGS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-GETFLAGS"
                    }
                  ]
                },
                {
                  "Zil": ",P-INHIBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-INHIBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<AND <NOT ,P-NAM> ,P-ADJ> <COND (<WT? ,P-ADJN ,PS?OBJECT ,P1?OBJECT> <SETG P-NAM ,P-ADJN> <SETG P-ADJ <>>) (<SET BITS <WT? ,P-ADJN ,PS?DIRECTION ,P1?DIRECTION>> <SETG P-ADJ <>> <PUT .TBL ,P-MATCHLEN 1> <PUT .TBL 1 ,INTDIR> <SETG P-DIRECTION .BITS> <RTRUE>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <NOT ,P-NAM> ,P-ADJ>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT ,P-NAM>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",P-NAM",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NAM"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",P-ADJ",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ADJ"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<WT? ,P-ADJN ,PS?OBJECT ,P1?OBJECT> <SETG P-NAM ,P-ADJN> <SETG P-ADJ <>>) (<SET BITS <WT? ,P-ADJN ,PS?DIRECTION ,P1?DIRECTION>> <SETG P-ADJ <>> <PUT .TBL ,P-MATCHLEN 1> <PUT .TBL 1 ,INTDIR> <SETG P-DIRECTION .BITS> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<WT? ,P-ADJN ,PS?OBJECT ,P1?OBJECT>",
                    "Form": [
                      {
                        "Atom": "WT?"
                      },
                      {
                        "Zil": ",P-ADJN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-ADJN"
                          }
                        ]
                      },
                      {
                        "Zil": ",PS?OBJECT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PS?OBJECT"
                          }
                        ]
                      },
                      {
                        "Zil": ",P1?OBJECT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P1?OBJECT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-NAM ,P-ADJN>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-NAM"
                      },
                      {
                        "Zil": ",P-ADJN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-ADJN"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-ADJ <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-ADJ"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<SET BITS <WT? ,P-ADJN ,PS?DIRECTION ,P1?DIRECTION>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "BITS"
                      },
                      {
                        "Zil": "<WT? ,P-ADJN ,PS?DIRECTION ,P1?DIRECTION>",
                        "Form": [
                          {
                            "Atom": "WT?"
                          },
                          {
                            "Zil": ",P-ADJN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-ADJN"
                              }
                            ]
                          },
                          {
                            "Zil": ",PS?DIRECTION",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PS?DIRECTION"
                              }
                            ]
                          },
                          {
                            "Zil": ",P1?DIRECTION",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P1?DIRECTION"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-ADJ <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-ADJ"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<PUT .TBL ,P-MATCHLEN 1>",
                    "Form": [
                      {
                        "Atom": "PUT"
                      },
                      {
                        "Zil": ".TBL",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TBL"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-MATCHLEN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-MATCHLEN"
                          }
                        ]
                      },
                      1
                    ]
                  },
                  {
                    "Zil": "<PUT .TBL 1 ,INTDIR>",
                    "Form": [
                      {
                        "Atom": "PUT"
                      },
                      {
                        "Zil": ".TBL",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TBL"
                          }
                        ]
                      },
                      1,
                      {
                        "Zil": ",INTDIR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "INTDIR"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-DIRECTION .BITS>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-DIRECTION"
                      },
                      {
                        "Zil": ".BITS",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "BITS"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<AND <NOT ,P-NAM> <NOT ,P-ADJ> <NOT <EQUAL? ,P-GETFLAGS ,P-ALL>> <ZERO? ,P-GWIMBIT>> <COND (.VRB <TELL \"There seems to be a noun missing in that sentence!\" CR>)> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <NOT ,P-NAM> <NOT ,P-ADJ> <NOT <EQUAL? ,P-GETFLAGS ,P-ALL>> <ZERO? ,P-GWIMBIT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT ,P-NAM>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",P-NAM",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NAM"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,P-ADJ>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",P-ADJ",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ADJ"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <EQUAL? ,P-GETFLAGS ,P-ALL>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? ,P-GETFLAGS ,P-ALL>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ",P-GETFLAGS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-GETFLAGS"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-ALL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-ALL"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<ZERO? ,P-GWIMBIT>",
                  "Form": [
                    {
                      "Atom": "ZERO?"
                    },
                    {
                      "Zil": ",P-GWIMBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-GWIMBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (.VRB <TELL \"There seems to be a noun missing in that sentence!\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ".VRB",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "VRB"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"There seems to be a noun missing in that sentence!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There seems to be a noun missing in that sentence!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<OR <NOT <EQUAL? ,P-GETFLAGS ,P-ALL>> <ZERO? ,P-SLOCBITS>> <SETG P-SLOCBITS -1>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <NOT <EQUAL? ,P-GETFLAGS ,P-ALL>> <ZERO? ,P-SLOCBITS>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<NOT <EQUAL? ,P-GETFLAGS ,P-ALL>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? ,P-GETFLAGS ,P-ALL>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ",P-GETFLAGS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-GETFLAGS"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-ALL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-ALL"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<ZERO? ,P-SLOCBITS>",
                  "Form": [
                    {
                      "Atom": "ZERO?"
                    },
                    {
                      "Zil": ",P-SLOCBITS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-SLOCBITS"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-SLOCBITS -1>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-SLOCBITS"
                },
                -1
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG P-TABLE .TBL>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-TABLE"
          },
          {
            "Zil": ".TBL",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "TBL"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PROG () <COND (.GCHECK <GLOBAL-CHECK .TBL>) (T <COND (,LIT <FCLEAR ,PLAYER ,TRANSBIT> <DO-SL ,HERE ,SOG ,SIR> <FSET ,PLAYER ,TRANSBIT>)> <DO-SL ,PLAYER ,SH ,SC>)> <SET LEN <- <GET .TBL ,P-MATCHLEN> .TLEN>> <COND (<BTST ,P-GETFLAGS ,P-ALL>) (<AND <BTST ,P-GETFLAGS ,P-ONE> <NOT <ZERO? .LEN>>> <COND (<NOT <EQUAL? .LEN 1>> <PUT .TBL 1 <GET .TBL <RANDOM .LEN>>> <TELL \"(How about the \"> <PRINTD <GET .TBL 1>> <TELL \"?)\" CR>)> <PUT .TBL ,P-MATCHLEN 1>) (<OR <G? .LEN 1> <AND <ZERO? .LEN> <NOT <EQUAL? ,P-SLOCBITS -1>>>> <COND (<EQUAL? ,P-SLOCBITS -1> <SETG P-SLOCBITS .XBITS> <SET OLEN .LEN> <PUT .TBL ,P-MATCHLEN <- <GET .TBL ,P-MATCHLEN> .LEN>> <AGAIN>) (T <COND (<ZERO? .LEN> <SET LEN .OLEN>)> <COND (<NOT <EQUAL? ,WINNER ,PLAYER>> <CANT-ORPHAN> <RFALSE>) (<AND .VRB ,P-NAM> <WHICH-PRINT .TLEN .LEN .TBL> <SETG P-ACLAUSE <COND (<EQUAL? .TBL ,P-PRSO> ,P-NC1) (T ,P-NC2)>> <SETG P-AADJ ,P-ADJ> <SETG P-ANAM ,P-NAM> <ORPHAN <> <>> <SETG P-OFLAG T>) (.VRB <TELL \"There seems to be a noun missing in that sentence!\" CR>)> <SETG P-NAM <>> <SETG P-ADJ <>> <RFALSE>)>)> <COND (<AND <ZERO? .LEN> .GCHECK> <COND (.VRB <SETG P-SLOCBITS .XBITS> <COND (<OR ,LIT <VERB? TELL>> <OBJ-FOUND ,NOT-HERE-OBJECT .TBL> <SETG P-XNAM ,P-NAM> <SETG P-XADJ ,P-ADJ> <SETG P-XADJN ,P-ADJN> <SETG P-NAM <>> <SETG P-ADJ <>> <SETG P-ADJN <>> <RTRUE>) (T <TELL \"It's too dark to see!\" CR>)>)> <SETG P-NAM <>> <SETG P-ADJ <>> <RFALSE>) (<ZERO? .LEN> <SET GCHECK T> <AGAIN>)> <SETG P-SLOCBITS .XBITS> <SETG P-NAM <>> <SETG P-ADJ <>> <RTRUE>>",
        "Form": [
          {
            "Atom": "PROG"
          },
          [],
          {
            "Zil": "<COND (.GCHECK <GLOBAL-CHECK .TBL>) (T <COND (,LIT <FCLEAR ,PLAYER ,TRANSBIT> <DO-SL ,HERE ,SOG ,SIR> <FSET ,PLAYER ,TRANSBIT>)> <DO-SL ,PLAYER ,SH ,SC>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": ".GCHECK",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "GCHECK"
                    }
                  ]
                },
                {
                  "Zil": "<GLOBAL-CHECK .TBL>",
                  "Form": [
                    {
                      "Atom": "GLOBAL-CHECK"
                    },
                    {
                      "Zil": ".TBL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TBL"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<COND (,LIT <FCLEAR ,PLAYER ,TRANSBIT> <DO-SL ,HERE ,SOG ,SIR> <FSET ,PLAYER ,TRANSBIT>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": ",LIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "LIT"
                          }
                        ]
                      },
                      {
                        "Zil": "<FCLEAR ,PLAYER ,TRANSBIT>",
                        "Form": [
                          {
                            "Atom": "FCLEAR"
                          },
                          {
                            "Zil": ",PLAYER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PLAYER"
                              }
                            ]
                          },
                          {
                            "Zil": ",TRANSBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "TRANSBIT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<DO-SL ,HERE ,SOG ,SIR>",
                        "Form": [
                          {
                            "Atom": "DO-SL"
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          },
                          {
                            "Zil": ",SOG",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SOG"
                              }
                            ]
                          },
                          {
                            "Zil": ",SIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SIR"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<FSET ,PLAYER ,TRANSBIT>",
                        "Form": [
                          {
                            "Atom": "FSET"
                          },
                          {
                            "Zil": ",PLAYER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PLAYER"
                              }
                            ]
                          },
                          {
                            "Zil": ",TRANSBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "TRANSBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<DO-SL ,PLAYER ,SH ,SC>",
                  "Form": [
                    {
                      "Atom": "DO-SL"
                    },
                    {
                      "Zil": ",PLAYER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PLAYER"
                        }
                      ]
                    },
                    {
                      "Zil": ",SH",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SH"
                        }
                      ]
                    },
                    {
                      "Zil": ",SC",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SC"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<SET LEN <- <GET .TBL ,P-MATCHLEN> .TLEN>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "LEN"
              },
              {
                "Zil": "<- <GET .TBL ,P-MATCHLEN> .TLEN>",
                "Form": [
                  {
                    "Atom": "-"
                  },
                  {
                    "Zil": "<GET .TBL ,P-MATCHLEN>",
                    "Form": [
                      {
                        "Atom": "GET"
                      },
                      {
                        "Zil": ".TBL",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TBL"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-MATCHLEN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-MATCHLEN"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": ".TLEN",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "TLEN"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<COND (<BTST ,P-GETFLAGS ,P-ALL>) (<AND <BTST ,P-GETFLAGS ,P-ONE> <NOT <ZERO? .LEN>>> <COND (<NOT <EQUAL? .LEN 1>> <PUT .TBL 1 <GET .TBL <RANDOM .LEN>>> <TELL \"(How about the \"> <PRINTD <GET .TBL 1>> <TELL \"?)\" CR>)> <PUT .TBL ,P-MATCHLEN 1>) (<OR <G? .LEN 1> <AND <ZERO? .LEN> <NOT <EQUAL? ,P-SLOCBITS -1>>>> <COND (<EQUAL? ,P-SLOCBITS -1> <SETG P-SLOCBITS .XBITS> <SET OLEN .LEN> <PUT .TBL ,P-MATCHLEN <- <GET .TBL ,P-MATCHLEN> .LEN>> <AGAIN>) (T <COND (<ZERO? .LEN> <SET LEN .OLEN>)> <COND (<NOT <EQUAL? ,WINNER ,PLAYER>> <CANT-ORPHAN> <RFALSE>) (<AND .VRB ,P-NAM> <WHICH-PRINT .TLEN .LEN .TBL> <SETG P-ACLAUSE <COND (<EQUAL? .TBL ,P-PRSO> ,P-NC1) (T ,P-NC2)>> <SETG P-AADJ ,P-ADJ> <SETG P-ANAM ,P-NAM> <ORPHAN <> <>> <SETG P-OFLAG T>) (.VRB <TELL \"There seems to be a noun missing in that sentence!\" CR>)> <SETG P-NAM <>> <SETG P-ADJ <>> <RFALSE>)>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<BTST ,P-GETFLAGS ,P-ALL>",
                  "Form": [
                    {
                      "Atom": "BTST"
                    },
                    {
                      "Zil": ",P-GETFLAGS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-GETFLAGS"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-ALL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ALL"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<AND <BTST ,P-GETFLAGS ,P-ONE> <NOT <ZERO? .LEN>>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<BTST ,P-GETFLAGS ,P-ONE>",
                      "Form": [
                        {
                          "Atom": "BTST"
                        },
                        {
                          "Zil": ",P-GETFLAGS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-GETFLAGS"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-ONE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-ONE"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<NOT <ZERO? .LEN>>",
                      "Form": [
                        {
                          "Atom": "NOT"
                        },
                        {
                          "Zil": "<ZERO? .LEN>",
                          "Form": [
                            {
                              "Atom": "ZERO?"
                            },
                            {
                              "Zil": ".LEN",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "LEN"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<NOT <EQUAL? .LEN 1>> <PUT .TBL 1 <GET .TBL <RANDOM .LEN>>> <TELL \"(How about the \"> <PRINTD <GET .TBL 1>> <TELL \"?)\" CR>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT <EQUAL? .LEN 1>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<EQUAL? .LEN 1>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".LEN",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "LEN"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PUT .TBL 1 <GET .TBL <RANDOM .LEN>>>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ".TBL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TBL"
                              }
                            ]
                          },
                          1,
                          {
                            "Zil": "<GET .TBL <RANDOM .LEN>>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ".TBL",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "TBL"
                                  }
                                ]
                              },
                              {
                                "Zil": "<RANDOM .LEN>",
                                "Form": [
                                  {
                                    "Atom": "RANDOM"
                                  },
                                  {
                                    "Zil": ".LEN",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "LEN"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<TELL \"(How about the \">",
                        "Form": [
                          {
                            "Atom": "TELL"
                          },
                          "(How about the "
                        ]
                      },
                      {
                        "Zil": "<PRINTD <GET .TBL 1>>",
                        "Form": [
                          {
                            "Atom": "PRINTD"
                          },
                          {
                            "Zil": "<GET .TBL 1>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ".TBL",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "TBL"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<TELL \"?)\" CR>",
                        "Form": [
                          {
                            "Atom": "TELL"
                          },
                          "?)",
                          {
                            "Atom": "CR"
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<PUT .TBL ,P-MATCHLEN 1>",
                  "Form": [
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Zil": ".TBL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-MATCHLEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-MATCHLEN"
                        }
                      ]
                    },
                    1
                  ]
                }
              ],
              [
                {
                  "Zil": "<OR <G? .LEN 1> <AND <ZERO? .LEN> <NOT <EQUAL? ,P-SLOCBITS -1>>>>",
                  "Form": [
                    {
                      "Atom": "OR"
                    },
                    {
                      "Zil": "<G? .LEN 1>",
                      "Form": [
                        {
                          "Atom": "G?"
                        },
                        {
                          "Zil": ".LEN",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "LEN"
                            }
                          ]
                        },
                        1
                      ]
                    },
                    {
                      "Zil": "<AND <ZERO? .LEN> <NOT <EQUAL? ,P-SLOCBITS -1>>>",
                      "Form": [
                        {
                          "Atom": "AND"
                        },
                        {
                          "Zil": "<ZERO? .LEN>",
                          "Form": [
                            {
                              "Atom": "ZERO?"
                            },
                            {
                              "Zil": ".LEN",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "LEN"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<NOT <EQUAL? ,P-SLOCBITS -1>>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": "<EQUAL? ,P-SLOCBITS -1>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ",P-SLOCBITS",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-SLOCBITS"
                                    }
                                  ]
                                },
                                -1
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<EQUAL? ,P-SLOCBITS -1> <SETG P-SLOCBITS .XBITS> <SET OLEN .LEN> <PUT .TBL ,P-MATCHLEN <- <GET .TBL ,P-MATCHLEN> .LEN>> <AGAIN>) (T <COND (<ZERO? .LEN> <SET LEN .OLEN>)> <COND (<NOT <EQUAL? ,WINNER ,PLAYER>> <CANT-ORPHAN> <RFALSE>) (<AND .VRB ,P-NAM> <WHICH-PRINT .TLEN .LEN .TBL> <SETG P-ACLAUSE <COND (<EQUAL? .TBL ,P-PRSO> ,P-NC1) (T ,P-NC2)>> <SETG P-AADJ ,P-ADJ> <SETG P-ANAM ,P-NAM> <ORPHAN <> <>> <SETG P-OFLAG T>) (.VRB <TELL \"There seems to be a noun missing in that sentence!\" CR>)> <SETG P-NAM <>> <SETG P-ADJ <>> <RFALSE>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<EQUAL? ,P-SLOCBITS -1>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",P-SLOCBITS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-SLOCBITS"
                              }
                            ]
                          },
                          -1
                        ]
                      },
                      {
                        "Zil": "<SETG P-SLOCBITS .XBITS>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-SLOCBITS"
                          },
                          {
                            "Zil": ".XBITS",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "XBITS"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET OLEN .LEN>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "OLEN"
                          },
                          {
                            "Zil": ".LEN",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "LEN"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PUT .TBL ,P-MATCHLEN <- <GET .TBL ,P-MATCHLEN> .LEN>>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ".TBL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TBL"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-MATCHLEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-MATCHLEN"
                              }
                            ]
                          },
                          {
                            "Zil": "<- <GET .TBL ,P-MATCHLEN> .LEN>",
                            "Form": [
                              {
                                "Atom": "-"
                              },
                              {
                                "Zil": "<GET .TBL ,P-MATCHLEN>",
                                "Form": [
                                  {
                                    "Atom": "GET"
                                  },
                                  {
                                    "Zil": ".TBL",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "TBL"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P-MATCHLEN",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-MATCHLEN"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": ".LEN",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "LEN"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<AGAIN>",
                        "Form": [
                          {
                            "Atom": "AGAIN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<COND (<ZERO? .LEN> <SET LEN .OLEN>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<ZERO? .LEN>",
                              "Form": [
                                {
                                  "Atom": "ZERO?"
                                },
                                {
                                  "Zil": ".LEN",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "LEN"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET LEN .OLEN>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "LEN"
                                },
                                {
                                  "Zil": ".OLEN",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "OLEN"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<COND (<NOT <EQUAL? ,WINNER ,PLAYER>> <CANT-ORPHAN> <RFALSE>) (<AND .VRB ,P-NAM> <WHICH-PRINT .TLEN .LEN .TBL> <SETG P-ACLAUSE <COND (<EQUAL? .TBL ,P-PRSO> ,P-NC1) (T ,P-NC2)>> <SETG P-AADJ ,P-ADJ> <SETG P-ANAM ,P-NAM> <ORPHAN <> <>> <SETG P-OFLAG T>) (.VRB <TELL \"There seems to be a noun missing in that sentence!\" CR>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<NOT <EQUAL? ,WINNER ,PLAYER>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<EQUAL? ,WINNER ,PLAYER>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ",WINNER",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "WINNER"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PLAYER",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PLAYER"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<CANT-ORPHAN>",
                              "Form": [
                                {
                                  "Atom": "CANT-ORPHAN"
                                }
                              ]
                            },
                            {
                              "Zil": "<RFALSE>",
                              "Form": [
                                {
                                  "Atom": "RFALSE"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<AND .VRB ,P-NAM>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": ".VRB",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "VRB"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P-NAM",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-NAM"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<WHICH-PRINT .TLEN .LEN .TBL>",
                              "Form": [
                                {
                                  "Atom": "WHICH-PRINT"
                                },
                                {
                                  "Zil": ".TLEN",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "TLEN"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".LEN",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "LEN"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".TBL",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "TBL"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-ACLAUSE <COND (<EQUAL? .TBL ,P-PRSO> ,P-NC1) (T ,P-NC2)>>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-ACLAUSE"
                                },
                                {
                                  "Zil": "<COND (<EQUAL? .TBL ,P-PRSO> ,P-NC1) (T ,P-NC2)>",
                                  "Form": [
                                    {
                                      "Atom": "COND"
                                    },
                                    [
                                      {
                                        "Zil": "<EQUAL? .TBL ,P-PRSO>",
                                        "Form": [
                                          {
                                            "Atom": "EQUAL?"
                                          },
                                          {
                                            "Zil": ".TBL",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "TBL"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",P-PRSO",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-PRSO"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",P-NC1",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-NC1"
                                          }
                                        ]
                                      }
                                    ],
                                    [
                                      {
                                        "Atom": "T"
                                      },
                                      {
                                        "Zil": ",P-NC2",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-NC2"
                                          }
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-AADJ ,P-ADJ>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-AADJ"
                                },
                                {
                                  "Zil": ",P-ADJ",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ADJ"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-ANAM ,P-NAM>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-ANAM"
                                },
                                {
                                  "Zil": ",P-NAM",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-NAM"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<ORPHAN <> <>>",
                              "Form": [
                                {
                                  "Atom": "ORPHAN"
                                },
                                {
                                  "Zil": "<>",
                                  "Form": []
                                },
                                {
                                  "Zil": "<>",
                                  "Form": []
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-OFLAG T>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-OFLAG"
                                },
                                {
                                  "Atom": "T"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": ".VRB",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "VRB"
                                }
                              ]
                            },
                            {
                              "Zil": "<TELL \"There seems to be a noun missing in that sentence!\" CR>",
                              "Form": [
                                {
                                  "Atom": "TELL"
                                },
                                "There seems to be a noun missing in that sentence!",
                                {
                                  "Atom": "CR"
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<SETG P-NAM <>>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-NAM"
                          },
                          {
                            "Zil": "<>",
                            "Form": []
                          }
                        ]
                      },
                      {
                        "Zil": "<SETG P-ADJ <>>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-ADJ"
                          },
                          {
                            "Zil": "<>",
                            "Form": []
                          }
                        ]
                      },
                      {
                        "Zil": "<RFALSE>",
                        "Form": [
                          {
                            "Atom": "RFALSE"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<COND (<AND <ZERO? .LEN> .GCHECK> <COND (.VRB <SETG P-SLOCBITS .XBITS> <COND (<OR ,LIT <VERB? TELL>> <OBJ-FOUND ,NOT-HERE-OBJECT .TBL> <SETG P-XNAM ,P-NAM> <SETG P-XADJ ,P-ADJ> <SETG P-XADJN ,P-ADJN> <SETG P-NAM <>> <SETG P-ADJ <>> <SETG P-ADJN <>> <RTRUE>) (T <TELL \"It's too dark to see!\" CR>)>)> <SETG P-NAM <>> <SETG P-ADJ <>> <RFALSE>) (<ZERO? .LEN> <SET GCHECK T> <AGAIN>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<AND <ZERO? .LEN> .GCHECK>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<ZERO? .LEN>",
                      "Form": [
                        {
                          "Atom": "ZERO?"
                        },
                        {
                          "Zil": ".LEN",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "LEN"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ".GCHECK",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "GCHECK"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (.VRB <SETG P-SLOCBITS .XBITS> <COND (<OR ,LIT <VERB? TELL>> <OBJ-FOUND ,NOT-HERE-OBJECT .TBL> <SETG P-XNAM ,P-NAM> <SETG P-XADJ ,P-ADJ> <SETG P-XADJN ,P-ADJN> <SETG P-NAM <>> <SETG P-ADJ <>> <SETG P-ADJN <>> <RTRUE>) (T <TELL \"It's too dark to see!\" CR>)>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": ".VRB",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "VRB"
                          }
                        ]
                      },
                      {
                        "Zil": "<SETG P-SLOCBITS .XBITS>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "P-SLOCBITS"
                          },
                          {
                            "Zil": ".XBITS",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "XBITS"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<OR ,LIT <VERB? TELL>> <OBJ-FOUND ,NOT-HERE-OBJECT .TBL> <SETG P-XNAM ,P-NAM> <SETG P-XADJ ,P-ADJ> <SETG P-XADJN ,P-ADJN> <SETG P-NAM <>> <SETG P-ADJ <>> <SETG P-ADJN <>> <RTRUE>) (T <TELL \"It's too dark to see!\" CR>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<OR ,LIT <VERB? TELL>>",
                              "Form": [
                                {
                                  "Atom": "OR"
                                },
                                {
                                  "Zil": ",LIT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "LIT"
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<VERB? TELL>",
                                  "Form": [
                                    {
                                      "Atom": "VERB?"
                                    },
                                    {
                                      "Atom": "TELL"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<OBJ-FOUND ,NOT-HERE-OBJECT .TBL>",
                              "Form": [
                                {
                                  "Atom": "OBJ-FOUND"
                                },
                                {
                                  "Zil": ",NOT-HERE-OBJECT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "NOT-HERE-OBJECT"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".TBL",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "TBL"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-XNAM ,P-NAM>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-XNAM"
                                },
                                {
                                  "Zil": ",P-NAM",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-NAM"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-XADJ ,P-ADJ>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-XADJ"
                                },
                                {
                                  "Zil": ",P-ADJ",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ADJ"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-XADJN ,P-ADJN>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-XADJN"
                                },
                                {
                                  "Zil": ",P-ADJN",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-ADJN"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-NAM <>>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-NAM"
                                },
                                {
                                  "Zil": "<>",
                                  "Form": []
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-ADJ <>>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-ADJ"
                                },
                                {
                                  "Zil": "<>",
                                  "Form": []
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG P-ADJN <>>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-ADJN"
                                },
                                {
                                  "Zil": "<>",
                                  "Form": []
                                }
                              ]
                            },
                            {
                              "Zil": "<RTRUE>",
                              "Form": [
                                {
                                  "Atom": "RTRUE"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            {
                              "Zil": "<TELL \"It's too dark to see!\" CR>",
                              "Form": [
                                {
                                  "Atom": "TELL"
                                },
                                "It's too dark to see!",
                                {
                                  "Atom": "CR"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<SETG P-NAM <>>",
                  "Form": [
                    {
                      "Atom": "SETG"
                    },
                    {
                      "Atom": "P-NAM"
                    },
                    {
                      "Zil": "<>",
                      "Form": []
                    }
                  ]
                },
                {
                  "Zil": "<SETG P-ADJ <>>",
                  "Form": [
                    {
                      "Atom": "SETG"
                    },
                    {
                      "Atom": "P-ADJ"
                    },
                    {
                      "Zil": "<>",
                      "Form": []
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<ZERO? .LEN>",
                  "Form": [
                    {
                      "Atom": "ZERO?"
                    },
                    {
                      "Zil": ".LEN",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "LEN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET GCHECK T>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "GCHECK"
                    },
                    {
                      "Atom": "T"
                    }
                  ]
                },
                {
                  "Zil": "<AGAIN>",
                  "Form": [
                    {
                      "Atom": "AGAIN"
                    }
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<SETG P-SLOCBITS .XBITS>",
            "Form": [
              {
                "Atom": "SETG"
              },
              {
                "Atom": "P-SLOCBITS"
              },
              {
                "Zil": ".XBITS",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "XBITS"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<SETG P-NAM <>>",
            "Form": [
              {
                "Atom": "SETG"
              },
              {
                "Atom": "P-NAM"
              },
              {
                "Zil": "<>",
                "Form": []
              }
            ]
          },
          {
            "Zil": "<SETG P-ADJ <>>",
            "Form": [
              {
                "Atom": "SETG"
              },
              {
                "Atom": "P-ADJ"
              },
              {
                "Zil": "<>",
                "Form": []
              }
            ]
          },
          {
            "Zil": "<RTRUE>",
            "Form": [
              {
                "Atom": "RTRUE"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1171",
    "Name": "WHICH-PRINT",
    "ArgSpec": "(TLEN LEN TBL \"AUX\" OBJ RLEN)",
    "Body": [
      {
        "Zil": "<SET RLEN .LEN>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "RLEN"
          },
          {
            "Zil": ".LEN",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "LEN"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \"Which \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Which "
        ]
      },
      {
        "Zil": "<COND (<OR ,P-OFLAG ,P-MERGED ,P-AND> <PRINTB <COND (,P-NAM ,P-NAM) (,P-ADJ ,P-ADJN) (ELSE ,W?ONE)>>) (ELSE <THING-PRINT <EQUAL? .TBL ,P-PRSO>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR ,P-OFLAG ,P-MERGED ,P-AND>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": ",P-OFLAG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-OFLAG"
                    }
                  ]
                },
                {
                  "Zil": ",P-MERGED",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-MERGED"
                    }
                  ]
                },
                {
                  "Zil": ",P-AND",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-AND"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PRINTB <COND (,P-NAM ,P-NAM) (,P-ADJ ,P-ADJN) (ELSE ,W?ONE)>>",
              "Form": [
                {
                  "Atom": "PRINTB"
                },
                {
                  "Zil": "<COND (,P-NAM ,P-NAM) (,P-ADJ ,P-ADJN) (ELSE ,W?ONE)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": ",P-NAM",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-NAM"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-NAM",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-NAM"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": ",P-ADJ",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-ADJ"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-ADJN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-ADJN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "ELSE"
                      },
                      {
                        "Zil": ",W?ONE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "W?ONE"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<THING-PRINT <EQUAL? .TBL ,P-PRSO>>",
              "Form": [
                {
                  "Atom": "THING-PRINT"
                },
                {
                  "Zil": "<EQUAL? .TBL ,P-PRSO>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".TBL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-PRSO"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<TELL \" do you mean, \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          " do you mean, "
        ]
      },
      {
        "Zil": "<REPEAT () <SET TLEN <+ .TLEN 1>> <SET OBJ <GET .TBL .TLEN>> <TELL \"the \" D .OBJ> <COND (<EQUAL? .LEN 2> <COND (<NOT <EQUAL? .RLEN 2>> <TELL \",\">)> <TELL \" or \">) (<G? .LEN 2> <TELL \", \">)> <COND (<L? <SET LEN <- .LEN 1>> 1> <TELL \"?\" CR> <RETURN>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<SET TLEN <+ .TLEN 1>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "TLEN"
              },
              {
                "Zil": "<+ .TLEN 1>",
                "Form": [
                  {
                    "Atom": "+"
                  },
                  {
                    "Zil": ".TLEN",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "TLEN"
                      }
                    ]
                  },
                  1
                ]
              }
            ]
          },
          {
            "Zil": "<SET OBJ <GET .TBL .TLEN>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "OBJ"
              },
              {
                "Zil": "<GET .TBL .TLEN>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  {
                    "Zil": ".TBL",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "TBL"
                      }
                    ]
                  },
                  {
                    "Zil": ".TLEN",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "TLEN"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<TELL \"the \" D .OBJ>",
            "Form": [
              {
                "Atom": "TELL"
              },
              "the ",
              {
                "Atom": "D"
              },
              {
                "Zil": ".OBJ",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "OBJ"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<COND (<EQUAL? .LEN 2> <COND (<NOT <EQUAL? .RLEN 2>> <TELL \",\">)> <TELL \" or \">) (<G? .LEN 2> <TELL \", \">)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<EQUAL? .LEN 2>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".LEN",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "LEN"
                        }
                      ]
                    },
                    2
                  ]
                },
                {
                  "Zil": "<COND (<NOT <EQUAL? .RLEN 2>> <TELL \",\">)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT <EQUAL? .RLEN 2>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<EQUAL? .RLEN 2>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".RLEN",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "RLEN"
                                  }
                                ]
                              },
                              2
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<TELL \",\">",
                        "Form": [
                          {
                            "Atom": "TELL"
                          },
                          ","
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<TELL \" or \">",
                  "Form": [
                    {
                      "Atom": "TELL"
                    },
                    " or "
                  ]
                }
              ],
              [
                {
                  "Zil": "<G? .LEN 2>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": ".LEN",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "LEN"
                        }
                      ]
                    },
                    2
                  ]
                },
                {
                  "Zil": "<TELL \", \">",
                  "Form": [
                    {
                      "Atom": "TELL"
                    },
                    ", "
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<COND (<L? <SET LEN <- .LEN 1>> 1> <TELL \"?\" CR> <RETURN>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<L? <SET LEN <- .LEN 1>> 1>",
                  "Form": [
                    {
                      "Atom": "L?"
                    },
                    {
                      "Zil": "<SET LEN <- .LEN 1>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "LEN"
                        },
                        {
                          "Zil": "<- .LEN 1>",
                          "Form": [
                            {
                              "Atom": "-"
                            },
                            {
                              "Zil": ".LEN",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "LEN"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    },
                    1
                  ]
                },
                {
                  "Zil": "<TELL \"?\" CR>",
                  "Form": [
                    {
                      "Atom": "TELL"
                    },
                    "?",
                    {
                      "Atom": "CR"
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1194",
    "Name": "GLOBAL-CHECK",
    "ArgSpec": "(TBL \"AUX\" LEN RMG RMGL (CNT 0) OBJ OBITS FOO)",
    "Body": [
      {
        "Zil": "<SET LEN <GET .TBL ,P-MATCHLEN>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "LEN"
          },
          {
            "Zil": "<GET .TBL ,P-MATCHLEN>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ".TBL",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "TBL"
                  }
                ]
              },
              {
                "Zil": ",P-MATCHLEN",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-MATCHLEN"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET OBITS ,P-SLOCBITS>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OBITS"
          },
          {
            "Zil": ",P-SLOCBITS",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-SLOCBITS"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<SET RMG <GETPT ,HERE ,P?GLOBAL>> <SET RMGL <- <PTSIZE .RMG> 1>> <REPEAT () <COND (<THIS-IT? <SET OBJ <GETB .RMG .CNT>> .TBL> <OBJ-FOUND .OBJ .TBL>)> <COND (<IGRTR? CNT .RMGL> <RETURN>)>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET RMG <GETPT ,HERE ,P?GLOBAL>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "RMG"
                },
                {
                  "Zil": "<GETPT ,HERE ,P?GLOBAL>",
                  "Form": [
                    {
                      "Atom": "GETPT"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?GLOBAL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?GLOBAL"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET RMGL <- <PTSIZE .RMG> 1>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "RMGL"
                },
                {
                  "Zil": "<- <PTSIZE .RMG> 1>",
                  "Form": [
                    {
                      "Atom": "-"
                    },
                    {
                      "Zil": "<PTSIZE .RMG>",
                      "Form": [
                        {
                          "Atom": "PTSIZE"
                        },
                        {
                          "Zil": ".RMG",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "RMG"
                            }
                          ]
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            },
            {
              "Zil": "<REPEAT () <COND (<THIS-IT? <SET OBJ <GETB .RMG .CNT>> .TBL> <OBJ-FOUND .OBJ .TBL>)> <COND (<IGRTR? CNT .RMGL> <RETURN>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<THIS-IT? <SET OBJ <GETB .RMG .CNT>> .TBL> <OBJ-FOUND .OBJ .TBL>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<THIS-IT? <SET OBJ <GETB .RMG .CNT>> .TBL>",
                        "Form": [
                          {
                            "Atom": "THIS-IT?"
                          },
                          {
                            "Zil": "<SET OBJ <GETB .RMG .CNT>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "OBJ"
                              },
                              {
                                "Zil": "<GETB .RMG .CNT>",
                                "Form": [
                                  {
                                    "Atom": "GETB"
                                  },
                                  {
                                    "Zil": ".RMG",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "RMG"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ".CNT",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "CNT"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": ".TBL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TBL"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<OBJ-FOUND .OBJ .TBL>",
                        "Form": [
                          {
                            "Atom": "OBJ-FOUND"
                          },
                          {
                            "Zil": ".OBJ",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "OBJ"
                              }
                            ]
                          },
                          {
                            "Zil": ".TBL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TBL"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<COND (<IGRTR? CNT .RMGL> <RETURN>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<IGRTR? CNT .RMGL>",
                        "Form": [
                          {
                            "Atom": "IGRTR?"
                          },
                          {
                            "Atom": "CNT"
                          },
                          {
                            "Zil": ".RMGL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "RMGL"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<SET RMG <GETPT ,HERE ,P?PSEUDO>> <SET RMGL <- </ <PTSIZE .RMG> 4> 1>> <SET CNT 0> <REPEAT () <COND (<EQUAL? ,P-NAM <GET .RMG <* .CNT 2>>> <PUTP ,PSEUDO-OBJECT ,P?ACTION <GET .RMG <+ <* .CNT 2> 1>>> <SET FOO <BACK <GETPT ,PSEUDO-OBJECT ,P?ACTION> 5>> <PUT .FOO 0 <GET ,P-NAM 0>> <PUT .FOO 1 <GET ,P-NAM 1>> <OBJ-FOUND ,PSEUDO-OBJECT .TBL> <RETURN>) (<IGRTR? CNT .RMGL> <RETURN>)>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET RMG <GETPT ,HERE ,P?PSEUDO>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "RMG"
                },
                {
                  "Zil": "<GETPT ,HERE ,P?PSEUDO>",
                  "Form": [
                    {
                      "Atom": "GETPT"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?PSEUDO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?PSEUDO"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET RMGL <- </ <PTSIZE .RMG> 4> 1>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "RMGL"
                },
                {
                  "Zil": "<- </ <PTSIZE .RMG> 4> 1>",
                  "Form": [
                    {
                      "Atom": "-"
                    },
                    {
                      "Zil": "</ <PTSIZE .RMG> 4>",
                      "Form": [
                        {
                          "Atom": "/"
                        },
                        {
                          "Zil": "<PTSIZE .RMG>",
                          "Form": [
                            {
                              "Atom": "PTSIZE"
                            },
                            {
                              "Zil": ".RMG",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "RMG"
                                }
                              ]
                            }
                          ]
                        },
                        4
                      ]
                    },
                    1
                  ]
                }
              ]
            },
            {
              "Zil": "<SET CNT 0>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CNT"
                },
                0
              ]
            },
            {
              "Zil": "<REPEAT () <COND (<EQUAL? ,P-NAM <GET .RMG <* .CNT 2>>> <PUTP ,PSEUDO-OBJECT ,P?ACTION <GET .RMG <+ <* .CNT 2> 1>>> <SET FOO <BACK <GETPT ,PSEUDO-OBJECT ,P?ACTION> 5>> <PUT .FOO 0 <GET ,P-NAM 0>> <PUT .FOO 1 <GET ,P-NAM 1>> <OBJ-FOUND ,PSEUDO-OBJECT .TBL> <RETURN>) (<IGRTR? CNT .RMGL> <RETURN>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<EQUAL? ,P-NAM <GET .RMG <* .CNT 2>>> <PUTP ,PSEUDO-OBJECT ,P?ACTION <GET .RMG <+ <* .CNT 2> 1>>> <SET FOO <BACK <GETPT ,PSEUDO-OBJECT ,P?ACTION> 5>> <PUT .FOO 0 <GET ,P-NAM 0>> <PUT .FOO 1 <GET ,P-NAM 1>> <OBJ-FOUND ,PSEUDO-OBJECT .TBL> <RETURN>) (<IGRTR? CNT .RMGL> <RETURN>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<EQUAL? ,P-NAM <GET .RMG <* .CNT 2>>>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",P-NAM",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-NAM"
                              }
                            ]
                          },
                          {
                            "Zil": "<GET .RMG <* .CNT 2>>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ".RMG",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "RMG"
                                  }
                                ]
                              },
                              {
                                "Zil": "<* .CNT 2>",
                                "Form": [
                                  {
                                    "Atom": "*"
                                  },
                                  {
                                    "Zil": ".CNT",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "CNT"
                                      }
                                    ]
                                  },
                                  2
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PUTP ,PSEUDO-OBJECT ,P?ACTION <GET .RMG <+ <* .CNT 2> 1>>>",
                        "Form": [
                          {
                            "Atom": "PUTP"
                          },
                          {
                            "Zil": ",PSEUDO-OBJECT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PSEUDO-OBJECT"
                              }
                            ]
                          },
                          {
                            "Zil": ",P?ACTION",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P?ACTION"
                              }
                            ]
                          },
                          {
                            "Zil": "<GET .RMG <+ <* .CNT 2> 1>>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ".RMG",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "RMG"
                                  }
                                ]
                              },
                              {
                                "Zil": "<+ <* .CNT 2> 1>",
                                "Form": [
                                  {
                                    "Atom": "+"
                                  },
                                  {
                                    "Zil": "<* .CNT 2>",
                                    "Form": [
                                      {
                                        "Atom": "*"
                                      },
                                      {
                                        "Zil": ".CNT",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "CNT"
                                          }
                                        ]
                                      },
                                      2
                                    ]
                                  },
                                  1
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET FOO <BACK <GETPT ,PSEUDO-OBJECT ,P?ACTION> 5>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "FOO"
                          },
                          {
                            "Zil": "<BACK <GETPT ,PSEUDO-OBJECT ,P?ACTION> 5>",
                            "Form": [
                              {
                                "Atom": "BACK"
                              },
                              {
                                "Zil": "<GETPT ,PSEUDO-OBJECT ,P?ACTION>",
                                "Form": [
                                  {
                                    "Atom": "GETPT"
                                  },
                                  {
                                    "Zil": ",PSEUDO-OBJECT",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "PSEUDO-OBJECT"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P?ACTION",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P?ACTION"
                                      }
                                    ]
                                  }
                                ]
                              },
                              5
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PUT .FOO 0 <GET ,P-NAM 0>>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ".FOO",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "FOO"
                              }
                            ]
                          },
                          0,
                          {
                            "Zil": "<GET ,P-NAM 0>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",P-NAM",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-NAM"
                                  }
                                ]
                              },
                              0
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PUT .FOO 1 <GET ,P-NAM 1>>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ".FOO",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "FOO"
                              }
                            ]
                          },
                          1,
                          {
                            "Zil": "<GET ,P-NAM 1>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",P-NAM",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-NAM"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<OBJ-FOUND ,PSEUDO-OBJECT .TBL>",
                        "Form": [
                          {
                            "Atom": "OBJ-FOUND"
                          },
                          {
                            "Zil": ",PSEUDO-OBJECT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PSEUDO-OBJECT"
                              }
                            ]
                          },
                          {
                            "Zil": ".TBL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TBL"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<IGRTR? CNT .RMGL>",
                        "Form": [
                          {
                            "Atom": "IGRTR?"
                          },
                          {
                            "Atom": "CNT"
                          },
                          {
                            "Zil": ".RMGL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "RMGL"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<EQUAL? <GET .TBL ,P-MATCHLEN> .LEN> <SETG P-SLOCBITS -1> <SETG P-TABLE .TBL> <DO-SL ,GLOBAL-OBJECTS 1 1> <SETG P-SLOCBITS .OBITS> <COND (<AND <ZERO? <GET .TBL ,P-MATCHLEN>> <EQUAL? ,PRSA ,V?LOOK-INSIDE ,V?SEARCH ,V?EXAMINE>> <DO-SL ,ROOMS 1 1>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? <GET .TBL ,P-MATCHLEN> .LEN>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": "<GET .TBL ,P-MATCHLEN>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ".TBL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-MATCHLEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-MATCHLEN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ".LEN",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "LEN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-SLOCBITS -1>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-SLOCBITS"
                },
                -1
              ]
            },
            {
              "Zil": "<SETG P-TABLE .TBL>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-TABLE"
                },
                {
                  "Zil": ".TBL",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "TBL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<DO-SL ,GLOBAL-OBJECTS 1 1>",
              "Form": [
                {
                  "Atom": "DO-SL"
                },
                {
                  "Zil": ",GLOBAL-OBJECTS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GLOBAL-OBJECTS"
                    }
                  ]
                },
                1,
                1
              ]
            },
            {
              "Zil": "<SETG P-SLOCBITS .OBITS>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-SLOCBITS"
                },
                {
                  "Zil": ".OBITS",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBITS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND <ZERO? <GET .TBL ,P-MATCHLEN>> <EQUAL? ,PRSA ,V?LOOK-INSIDE ,V?SEARCH ,V?EXAMINE>> <DO-SL ,ROOMS 1 1>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <ZERO? <GET .TBL ,P-MATCHLEN>> <EQUAL? ,PRSA ,V?LOOK-INSIDE ,V?SEARCH ,V?EXAMINE>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<ZERO? <GET .TBL ,P-MATCHLEN>>",
                        "Form": [
                          {
                            "Atom": "ZERO?"
                          },
                          {
                            "Zil": "<GET .TBL ,P-MATCHLEN>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ".TBL",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "TBL"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P-MATCHLEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P-MATCHLEN"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<EQUAL? ,PRSA ,V?LOOK-INSIDE ,V?SEARCH ,V?EXAMINE>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",PRSA",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSA"
                              }
                            ]
                          },
                          {
                            "Zil": ",V?LOOK-INSIDE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "V?LOOK-INSIDE"
                              }
                            ]
                          },
                          {
                            "Zil": ",V?SEARCH",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "V?SEARCH"
                              }
                            ]
                          },
                          {
                            "Zil": ",V?EXAMINE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "V?EXAMINE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<DO-SL ,ROOMS 1 1>",
                    "Form": [
                      {
                        "Atom": "DO-SL"
                      },
                      {
                        "Zil": ",ROOMS",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ROOMS"
                          }
                        ]
                      },
                      1,
                      1
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1227",
    "Name": "DO-SL",
    "ArgSpec": "(OBJ BIT1 BIT2 \"AUX\" BTS)",
    "Body": [
      {
        "Zil": "<COND (<BTST ,P-SLOCBITS <+ .BIT1 .BIT2>> <SEARCH-LIST .OBJ ,P-TABLE ,P-SRCALL>) (T <COND (<BTST ,P-SLOCBITS .BIT1> <SEARCH-LIST .OBJ ,P-TABLE ,P-SRCTOP>) (<BTST ,P-SLOCBITS .BIT2> <SEARCH-LIST .OBJ ,P-TABLE ,P-SRCBOT>) (T <RTRUE>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<BTST ,P-SLOCBITS <+ .BIT1 .BIT2>>",
              "Form": [
                {
                  "Atom": "BTST"
                },
                {
                  "Zil": ",P-SLOCBITS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-SLOCBITS"
                    }
                  ]
                },
                {
                  "Zil": "<+ .BIT1 .BIT2>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ".BIT1",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "BIT1"
                        }
                      ]
                    },
                    {
                      "Zil": ".BIT2",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "BIT2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SEARCH-LIST .OBJ ,P-TABLE ,P-SRCALL>",
              "Form": [
                {
                  "Atom": "SEARCH-LIST"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": ",P-TABLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-TABLE"
                    }
                  ]
                },
                {
                  "Zil": ",P-SRCALL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-SRCALL"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<COND (<BTST ,P-SLOCBITS .BIT1> <SEARCH-LIST .OBJ ,P-TABLE ,P-SRCTOP>) (<BTST ,P-SLOCBITS .BIT2> <SEARCH-LIST .OBJ ,P-TABLE ,P-SRCBOT>) (T <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<BTST ,P-SLOCBITS .BIT1>",
                    "Form": [
                      {
                        "Atom": "BTST"
                      },
                      {
                        "Zil": ",P-SLOCBITS",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-SLOCBITS"
                          }
                        ]
                      },
                      {
                        "Zil": ".BIT1",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "BIT1"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SEARCH-LIST .OBJ ,P-TABLE ,P-SRCTOP>",
                    "Form": [
                      {
                        "Atom": "SEARCH-LIST"
                      },
                      {
                        "Zil": ".OBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OBJ"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-TABLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-TABLE"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-SRCTOP",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-SRCTOP"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<BTST ,P-SLOCBITS .BIT2>",
                    "Form": [
                      {
                        "Atom": "BTST"
                      },
                      {
                        "Zil": ",P-SLOCBITS",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-SLOCBITS"
                          }
                        ]
                      },
                      {
                        "Zil": ".BIT2",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "BIT2"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SEARCH-LIST .OBJ ,P-TABLE ,P-SRCBOT>",
                    "Form": [
                      {
                        "Atom": "SEARCH-LIST"
                      },
                      {
                        "Zil": ".OBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OBJ"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-TABLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-TABLE"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-SRCBOT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-SRCBOT"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1241",
    "Name": "SEARCH-LIST",
    "ArgSpec": "(OBJ TBL LVL \"AUX\" FLS NOBJ)",
    "Body": [
      {
        "Zil": "<COND (<SET OBJ <FIRST? .OBJ>> <REPEAT () <COND (<AND <NOT <EQUAL? .LVL ,P-SRCBOT>> <GETPT .OBJ ,P?SYNONYM> <THIS-IT? .OBJ .TBL>> <OBJ-FOUND .OBJ .TBL>)> <COND (<AND <OR <NOT <EQUAL? .LVL ,P-SRCTOP>> <FSET? .OBJ ,SEARCHBIT> <FSET? .OBJ ,SURFACEBIT>> <SET NOBJ <FIRST? .OBJ>> <OR <FSET? .OBJ ,OPENBIT> <FSET? .OBJ ,TRANSBIT>>> <SET FLS <SEARCH-LIST .OBJ .TBL <COND (<FSET? .OBJ ,SURFACEBIT> ,P-SRCALL) (<FSET? .OBJ ,SEARCHBIT> ,P-SRCALL) (T ,P-SRCTOP)>>>)> <COND (<SET OBJ <NEXT? .OBJ>>) (T <RETURN>)>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET OBJ <FIRST? .OBJ>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "OBJ"
                },
                {
                  "Zil": "<FIRST? .OBJ>",
                  "Form": [
                    {
                      "Atom": "FIRST?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REPEAT () <COND (<AND <NOT <EQUAL? .LVL ,P-SRCBOT>> <GETPT .OBJ ,P?SYNONYM> <THIS-IT? .OBJ .TBL>> <OBJ-FOUND .OBJ .TBL>)> <COND (<AND <OR <NOT <EQUAL? .LVL ,P-SRCTOP>> <FSET? .OBJ ,SEARCHBIT> <FSET? .OBJ ,SURFACEBIT>> <SET NOBJ <FIRST? .OBJ>> <OR <FSET? .OBJ ,OPENBIT> <FSET? .OBJ ,TRANSBIT>>> <SET FLS <SEARCH-LIST .OBJ .TBL <COND (<FSET? .OBJ ,SURFACEBIT> ,P-SRCALL) (<FSET? .OBJ ,SEARCHBIT> ,P-SRCALL) (T ,P-SRCTOP)>>>)> <COND (<SET OBJ <NEXT? .OBJ>>) (T <RETURN>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<AND <NOT <EQUAL? .LVL ,P-SRCBOT>> <GETPT .OBJ ,P?SYNONYM> <THIS-IT? .OBJ .TBL>> <OBJ-FOUND .OBJ .TBL>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<AND <NOT <EQUAL? .LVL ,P-SRCBOT>> <GETPT .OBJ ,P?SYNONYM> <THIS-IT? .OBJ .TBL>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<NOT <EQUAL? .LVL ,P-SRCBOT>>",
                            "Form": [
                              {
                                "Atom": "NOT"
                              },
                              {
                                "Zil": "<EQUAL? .LVL ,P-SRCBOT>",
                                "Form": [
                                  {
                                    "Atom": "EQUAL?"
                                  },
                                  {
                                    "Zil": ".LVL",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "LVL"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P-SRCBOT",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P-SRCBOT"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<GETPT .OBJ ,P?SYNONYM>",
                            "Form": [
                              {
                                "Atom": "GETPT"
                              },
                              {
                                "Zil": ".OBJ",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "OBJ"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P?SYNONYM",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P?SYNONYM"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<THIS-IT? .OBJ .TBL>",
                            "Form": [
                              {
                                "Atom": "THIS-IT?"
                              },
                              {
                                "Zil": ".OBJ",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "OBJ"
                                  }
                                ]
                              },
                              {
                                "Zil": ".TBL",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "TBL"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<OBJ-FOUND .OBJ .TBL>",
                        "Form": [
                          {
                            "Atom": "OBJ-FOUND"
                          },
                          {
                            "Zil": ".OBJ",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "OBJ"
                              }
                            ]
                          },
                          {
                            "Zil": ".TBL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TBL"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<COND (<AND <OR <NOT <EQUAL? .LVL ,P-SRCTOP>> <FSET? .OBJ ,SEARCHBIT> <FSET? .OBJ ,SURFACEBIT>> <SET NOBJ <FIRST? .OBJ>> <OR <FSET? .OBJ ,OPENBIT> <FSET? .OBJ ,TRANSBIT>>> <SET FLS <SEARCH-LIST .OBJ .TBL <COND (<FSET? .OBJ ,SURFACEBIT> ,P-SRCALL) (<FSET? .OBJ ,SEARCHBIT> ,P-SRCALL) (T ,P-SRCTOP)>>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<AND <OR <NOT <EQUAL? .LVL ,P-SRCTOP>> <FSET? .OBJ ,SEARCHBIT> <FSET? .OBJ ,SURFACEBIT>> <SET NOBJ <FIRST? .OBJ>> <OR <FSET? .OBJ ,OPENBIT> <FSET? .OBJ ,TRANSBIT>>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<OR <NOT <EQUAL? .LVL ,P-SRCTOP>> <FSET? .OBJ ,SEARCHBIT> <FSET? .OBJ ,SURFACEBIT>>",
                            "Form": [
                              {
                                "Atom": "OR"
                              },
                              {
                                "Zil": "<NOT <EQUAL? .LVL ,P-SRCTOP>>",
                                "Form": [
                                  {
                                    "Atom": "NOT"
                                  },
                                  {
                                    "Zil": "<EQUAL? .LVL ,P-SRCTOP>",
                                    "Form": [
                                      {
                                        "Atom": "EQUAL?"
                                      },
                                      {
                                        "Zil": ".LVL",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "LVL"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",P-SRCTOP",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-SRCTOP"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<FSET? .OBJ ,SEARCHBIT>",
                                "Form": [
                                  {
                                    "Atom": "FSET?"
                                  },
                                  {
                                    "Zil": ".OBJ",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "OBJ"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",SEARCHBIT",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "SEARCHBIT"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<FSET? .OBJ ,SURFACEBIT>",
                                "Form": [
                                  {
                                    "Atom": "FSET?"
                                  },
                                  {
                                    "Zil": ".OBJ",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "OBJ"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",SURFACEBIT",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "SURFACEBIT"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<SET NOBJ <FIRST? .OBJ>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "NOBJ"
                              },
                              {
                                "Zil": "<FIRST? .OBJ>",
                                "Form": [
                                  {
                                    "Atom": "FIRST?"
                                  },
                                  {
                                    "Zil": ".OBJ",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "OBJ"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<OR <FSET? .OBJ ,OPENBIT> <FSET? .OBJ ,TRANSBIT>>",
                            "Form": [
                              {
                                "Atom": "OR"
                              },
                              {
                                "Zil": "<FSET? .OBJ ,OPENBIT>",
                                "Form": [
                                  {
                                    "Atom": "FSET?"
                                  },
                                  {
                                    "Zil": ".OBJ",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "OBJ"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",OPENBIT",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "OPENBIT"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<FSET? .OBJ ,TRANSBIT>",
                                "Form": [
                                  {
                                    "Atom": "FSET?"
                                  },
                                  {
                                    "Zil": ".OBJ",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "OBJ"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",TRANSBIT",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "TRANSBIT"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET FLS <SEARCH-LIST .OBJ .TBL <COND (<FSET? .OBJ ,SURFACEBIT> ,P-SRCALL) (<FSET? .OBJ ,SEARCHBIT> ,P-SRCALL) (T ,P-SRCTOP)>>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "FLS"
                          },
                          {
                            "Zil": "<SEARCH-LIST .OBJ .TBL <COND (<FSET? .OBJ ,SURFACEBIT> ,P-SRCALL) (<FSET? .OBJ ,SEARCHBIT> ,P-SRCALL) (T ,P-SRCTOP)>>",
                            "Form": [
                              {
                                "Atom": "SEARCH-LIST"
                              },
                              {
                                "Zil": ".OBJ",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "OBJ"
                                  }
                                ]
                              },
                              {
                                "Zil": ".TBL",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "TBL"
                                  }
                                ]
                              },
                              {
                                "Zil": "<COND (<FSET? .OBJ ,SURFACEBIT> ,P-SRCALL) (<FSET? .OBJ ,SEARCHBIT> ,P-SRCALL) (T ,P-SRCTOP)>",
                                "Form": [
                                  {
                                    "Atom": "COND"
                                  },
                                  [
                                    {
                                      "Zil": "<FSET? .OBJ ,SURFACEBIT>",
                                      "Form": [
                                        {
                                          "Atom": "FSET?"
                                        },
                                        {
                                          "Zil": ".OBJ",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "OBJ"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",SURFACEBIT",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "SURFACEBIT"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P-SRCALL",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-SRCALL"
                                        }
                                      ]
                                    }
                                  ],
                                  [
                                    {
                                      "Zil": "<FSET? .OBJ ,SEARCHBIT>",
                                      "Form": [
                                        {
                                          "Atom": "FSET?"
                                        },
                                        {
                                          "Zil": ".OBJ",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "OBJ"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",SEARCHBIT",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "SEARCHBIT"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P-SRCALL",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-SRCALL"
                                        }
                                      ]
                                    }
                                  ],
                                  [
                                    {
                                      "Atom": "T"
                                    },
                                    {
                                      "Zil": ",P-SRCTOP",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-SRCTOP"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<COND (<SET OBJ <NEXT? .OBJ>>) (T <RETURN>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<SET OBJ <NEXT? .OBJ>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "OBJ"
                          },
                          {
                            "Zil": "<NEXT? .OBJ>",
                            "Form": [
                              {
                                "Atom": "NEXT?"
                              },
                              {
                                "Zil": ".OBJ",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "OBJ"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1264",
    "Name": "OBJ-FOUND",
    "ArgSpec": "(OBJ TBL \"AUX\" PTR)",
    "Body": [
      {
        "Zil": "<SET PTR <GET .TBL ,P-MATCHLEN>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "PTR"
          },
          {
            "Zil": "<GET .TBL ,P-MATCHLEN>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ".TBL",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "TBL"
                  }
                ]
              },
              {
                "Zil": ",P-MATCHLEN",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-MATCHLEN"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT .TBL <+ .PTR 1> .OBJ>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ".TBL",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "TBL"
              }
            ]
          },
          {
            "Zil": "<+ .PTR 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ".PTR",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "PTR"
                  }
                ]
              },
              1
            ]
          },
          {
            "Zil": ".OBJ",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "OBJ"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT .TBL ,P-MATCHLEN <+ .PTR 1>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ".TBL",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "TBL"
              }
            ]
          },
          {
            "Zil": ",P-MATCHLEN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-MATCHLEN"
              }
            ]
          },
          {
            "Zil": "<+ .PTR 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ".PTR",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "PTR"
                  }
                ]
              },
              1
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1269",
    "Name": "TAKE-CHECK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<AND <ITAKE-CHECK ,P-PRSO <GETB ,P-SYNTAX ,P-SLOC1>> <ITAKE-CHECK ,P-PRSI <GETB ,P-SYNTAX ,P-SLOC2>>>",
        "Form": [
          {
            "Atom": "AND"
          },
          {
            "Zil": "<ITAKE-CHECK ,P-PRSO <GETB ,P-SYNTAX ,P-SLOC1>>",
            "Form": [
              {
                "Atom": "ITAKE-CHECK"
              },
              {
                "Zil": ",P-PRSO",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-PRSO"
                  }
                ]
              },
              {
                "Zil": "<GETB ,P-SYNTAX ,P-SLOC1>",
                "Form": [
                  {
                    "Atom": "GETB"
                  },
                  {
                    "Zil": ",P-SYNTAX",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-SYNTAX"
                      }
                    ]
                  },
                  {
                    "Zil": ",P-SLOC1",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-SLOC1"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<ITAKE-CHECK ,P-PRSI <GETB ,P-SYNTAX ,P-SLOC2>>",
            "Form": [
              {
                "Atom": "ITAKE-CHECK"
              },
              {
                "Zil": ",P-PRSI",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-PRSI"
                  }
                ]
              },
              {
                "Zil": "<GETB ,P-SYNTAX ,P-SLOC2>",
                "Form": [
                  {
                    "Atom": "GETB"
                  },
                  {
                    "Zil": ",P-SYNTAX",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-SYNTAX"
                      }
                    ]
                  },
                  {
                    "Zil": ",P-SLOC2",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-SLOC2"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1273",
    "Name": "ITAKE-CHECK",
    "ArgSpec": "(TBL IBITS \"AUX\" PTR OBJ TAKEN)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<COND (<AND <SET PTR <GET .TBL ,P-MATCHLEN>> <OR <BTST .IBITS ,SHAVE> <BTST .IBITS ,STAKE>>> <REPEAT () <COND (<L? <SET PTR <- .PTR 1>> 0> <RETURN>) (T <SET OBJ <GET .TBL <+ .PTR 1>>> <COND (<EQUAL? .OBJ ,IT> <COND (<NOT <ACCESSIBLE? ,P-IT-OBJECT>> <TELL \"I don't see what you're referring to.\" CR> <RFALSE>) (T <SET OBJ ,P-IT-OBJECT>)>)> <COND (<AND <NOT <HELD? .OBJ>> <NOT <EQUAL? .OBJ ,HANDS ,ME>>> <SETG PRSO .OBJ> <COND (<FSET? .OBJ ,TRYTAKEBIT> <SET TAKEN T>) (<NOT <EQUAL? ,WINNER ,ADVENTURER>> <SET TAKEN <>>) (<AND <BTST .IBITS ,STAKE> <EQUAL? <ITAKE <>> T>> <SET TAKEN <>>) (T <SET TAKEN T>)> <COND (<AND .TAKEN <BTST .IBITS ,SHAVE> <EQUAL? ,WINNER ,ADVENTURER>> <COND (<EQUAL? .OBJ ,NOT-HERE-OBJECT> <TELL \"You don't have that!\" CR> <RFALSE>)> <TELL \"You don't have the \"> <PRINTD .OBJ> <TELL \".\" CR> <RFALSE>) (<AND <NOT .TAKEN> <EQUAL? ,WINNER ,ADVENTURER>> <TELL \"(Taken)\" CR>)>)>)>>) (T)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <SET PTR <GET .TBL ,P-MATCHLEN>> <OR <BTST .IBITS ,SHAVE> <BTST .IBITS ,STAKE>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<SET PTR <GET .TBL ,P-MATCHLEN>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "PTR"
                    },
                    {
                      "Zil": "<GET .TBL ,P-MATCHLEN>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ".TBL",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TBL"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-MATCHLEN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-MATCHLEN"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<OR <BTST .IBITS ,SHAVE> <BTST .IBITS ,STAKE>>",
                  "Form": [
                    {
                      "Atom": "OR"
                    },
                    {
                      "Zil": "<BTST .IBITS ,SHAVE>",
                      "Form": [
                        {
                          "Atom": "BTST"
                        },
                        {
                          "Zil": ".IBITS",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "IBITS"
                            }
                          ]
                        },
                        {
                          "Zil": ",SHAVE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "SHAVE"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<BTST .IBITS ,STAKE>",
                      "Form": [
                        {
                          "Atom": "BTST"
                        },
                        {
                          "Zil": ".IBITS",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "IBITS"
                            }
                          ]
                        },
                        {
                          "Zil": ",STAKE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "STAKE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REPEAT () <COND (<L? <SET PTR <- .PTR 1>> 0> <RETURN>) (T <SET OBJ <GET .TBL <+ .PTR 1>>> <COND (<EQUAL? .OBJ ,IT> <COND (<NOT <ACCESSIBLE? ,P-IT-OBJECT>> <TELL \"I don't see what you're referring to.\" CR> <RFALSE>) (T <SET OBJ ,P-IT-OBJECT>)>)> <COND (<AND <NOT <HELD? .OBJ>> <NOT <EQUAL? .OBJ ,HANDS ,ME>>> <SETG PRSO .OBJ> <COND (<FSET? .OBJ ,TRYTAKEBIT> <SET TAKEN T>) (<NOT <EQUAL? ,WINNER ,ADVENTURER>> <SET TAKEN <>>) (<AND <BTST .IBITS ,STAKE> <EQUAL? <ITAKE <>> T>> <SET TAKEN <>>) (T <SET TAKEN T>)> <COND (<AND .TAKEN <BTST .IBITS ,SHAVE> <EQUAL? ,WINNER ,ADVENTURER>> <COND (<EQUAL? .OBJ ,NOT-HERE-OBJECT> <TELL \"You don't have that!\" CR> <RFALSE>)> <TELL \"You don't have the \"> <PRINTD .OBJ> <TELL \".\" CR> <RFALSE>) (<AND <NOT .TAKEN> <EQUAL? ,WINNER ,ADVENTURER>> <TELL \"(Taken)\" CR>)>)>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<L? <SET PTR <- .PTR 1>> 0> <RETURN>) (T <SET OBJ <GET .TBL <+ .PTR 1>>> <COND (<EQUAL? .OBJ ,IT> <COND (<NOT <ACCESSIBLE? ,P-IT-OBJECT>> <TELL \"I don't see what you're referring to.\" CR> <RFALSE>) (T <SET OBJ ,P-IT-OBJECT>)>)> <COND (<AND <NOT <HELD? .OBJ>> <NOT <EQUAL? .OBJ ,HANDS ,ME>>> <SETG PRSO .OBJ> <COND (<FSET? .OBJ ,TRYTAKEBIT> <SET TAKEN T>) (<NOT <EQUAL? ,WINNER ,ADVENTURER>> <SET TAKEN <>>) (<AND <BTST .IBITS ,STAKE> <EQUAL? <ITAKE <>> T>> <SET TAKEN <>>) (T <SET TAKEN T>)> <COND (<AND .TAKEN <BTST .IBITS ,SHAVE> <EQUAL? ,WINNER ,ADVENTURER>> <COND (<EQUAL? .OBJ ,NOT-HERE-OBJECT> <TELL \"You don't have that!\" CR> <RFALSE>)> <TELL \"You don't have the \"> <PRINTD .OBJ> <TELL \".\" CR> <RFALSE>) (<AND <NOT .TAKEN> <EQUAL? ,WINNER ,ADVENTURER>> <TELL \"(Taken)\" CR>)>)>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<L? <SET PTR <- .PTR 1>> 0>",
                        "Form": [
                          {
                            "Atom": "L?"
                          },
                          {
                            "Zil": "<SET PTR <- .PTR 1>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "PTR"
                              },
                              {
                                "Zil": "<- .PTR 1>",
                                "Form": [
                                  {
                                    "Atom": "-"
                                  },
                                  {
                                    "Zil": ".PTR",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "PTR"
                                      }
                                    ]
                                  },
                                  1
                                ]
                              }
                            ]
                          },
                          0
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<SET OBJ <GET .TBL <+ .PTR 1>>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "OBJ"
                          },
                          {
                            "Zil": "<GET .TBL <+ .PTR 1>>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ".TBL",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "TBL"
                                  }
                                ]
                              },
                              {
                                "Zil": "<+ .PTR 1>",
                                "Form": [
                                  {
                                    "Atom": "+"
                                  },
                                  {
                                    "Zil": ".PTR",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "PTR"
                                      }
                                    ]
                                  },
                                  1
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<EQUAL? .OBJ ,IT> <COND (<NOT <ACCESSIBLE? ,P-IT-OBJECT>> <TELL \"I don't see what you're referring to.\" CR> <RFALSE>) (T <SET OBJ ,P-IT-OBJECT>)>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<EQUAL? .OBJ ,IT>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".OBJ",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "OBJ"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",IT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "IT"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<NOT <ACCESSIBLE? ,P-IT-OBJECT>> <TELL \"I don't see what you're referring to.\" CR> <RFALSE>) (T <SET OBJ ,P-IT-OBJECT>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<NOT <ACCESSIBLE? ,P-IT-OBJECT>>",
                                    "Form": [
                                      {
                                        "Atom": "NOT"
                                      },
                                      {
                                        "Zil": "<ACCESSIBLE? ,P-IT-OBJECT>",
                                        "Form": [
                                          {
                                            "Atom": "ACCESSIBLE?"
                                          },
                                          {
                                            "Zil": ",P-IT-OBJECT",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-IT-OBJECT"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<TELL \"I don't see what you're referring to.\" CR>",
                                    "Form": [
                                      {
                                        "Atom": "TELL"
                                      },
                                      "I don't see what you're referring to.",
                                      {
                                        "Atom": "CR"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RFALSE>",
                                    "Form": [
                                      {
                                        "Atom": "RFALSE"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  {
                                    "Zil": "<SET OBJ ,P-IT-OBJECT>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "OBJ"
                                      },
                                      {
                                        "Zil": ",P-IT-OBJECT",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "P-IT-OBJECT"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<COND (<AND <NOT <HELD? .OBJ>> <NOT <EQUAL? .OBJ ,HANDS ,ME>>> <SETG PRSO .OBJ> <COND (<FSET? .OBJ ,TRYTAKEBIT> <SET TAKEN T>) (<NOT <EQUAL? ,WINNER ,ADVENTURER>> <SET TAKEN <>>) (<AND <BTST .IBITS ,STAKE> <EQUAL? <ITAKE <>> T>> <SET TAKEN <>>) (T <SET TAKEN T>)> <COND (<AND .TAKEN <BTST .IBITS ,SHAVE> <EQUAL? ,WINNER ,ADVENTURER>> <COND (<EQUAL? .OBJ ,NOT-HERE-OBJECT> <TELL \"You don't have that!\" CR> <RFALSE>)> <TELL \"You don't have the \"> <PRINTD .OBJ> <TELL \".\" CR> <RFALSE>) (<AND <NOT .TAKEN> <EQUAL? ,WINNER ,ADVENTURER>> <TELL \"(Taken)\" CR>)>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<AND <NOT <HELD? .OBJ>> <NOT <EQUAL? .OBJ ,HANDS ,ME>>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<NOT <HELD? .OBJ>>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": "<HELD? .OBJ>",
                                      "Form": [
                                        {
                                          "Atom": "HELD?"
                                        },
                                        {
                                          "Zil": ".OBJ",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "OBJ"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<NOT <EQUAL? .OBJ ,HANDS ,ME>>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": "<EQUAL? .OBJ ,HANDS ,ME>",
                                      "Form": [
                                        {
                                          "Atom": "EQUAL?"
                                        },
                                        {
                                          "Zil": ".OBJ",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "OBJ"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",HANDS",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "HANDS"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",ME",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "ME"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG PRSO .OBJ>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "PRSO"
                                },
                                {
                                  "Zil": ".OBJ",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "OBJ"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<FSET? .OBJ ,TRYTAKEBIT> <SET TAKEN T>) (<NOT <EQUAL? ,WINNER ,ADVENTURER>> <SET TAKEN <>>) (<AND <BTST .IBITS ,STAKE> <EQUAL? <ITAKE <>> T>> <SET TAKEN <>>) (T <SET TAKEN T>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<FSET? .OBJ ,TRYTAKEBIT>",
                                    "Form": [
                                      {
                                        "Atom": "FSET?"
                                      },
                                      {
                                        "Zil": ".OBJ",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "OBJ"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",TRYTAKEBIT",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "TRYTAKEBIT"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SET TAKEN T>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "TAKEN"
                                      },
                                      {
                                        "Atom": "T"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Zil": "<NOT <EQUAL? ,WINNER ,ADVENTURER>>",
                                    "Form": [
                                      {
                                        "Atom": "NOT"
                                      },
                                      {
                                        "Zil": "<EQUAL? ,WINNER ,ADVENTURER>",
                                        "Form": [
                                          {
                                            "Atom": "EQUAL?"
                                          },
                                          {
                                            "Zil": ",WINNER",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "WINNER"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",ADVENTURER",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "ADVENTURER"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SET TAKEN <>>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "TAKEN"
                                      },
                                      {
                                        "Zil": "<>",
                                        "Form": []
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Zil": "<AND <BTST .IBITS ,STAKE> <EQUAL? <ITAKE <>> T>>",
                                    "Form": [
                                      {
                                        "Atom": "AND"
                                      },
                                      {
                                        "Zil": "<BTST .IBITS ,STAKE>",
                                        "Form": [
                                          {
                                            "Atom": "BTST"
                                          },
                                          {
                                            "Zil": ".IBITS",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "IBITS"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",STAKE",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "STAKE"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": "<EQUAL? <ITAKE <>> T>",
                                        "Form": [
                                          {
                                            "Atom": "EQUAL?"
                                          },
                                          {
                                            "Zil": "<ITAKE <>>",
                                            "Form": [
                                              {
                                                "Atom": "ITAKE"
                                              },
                                              {
                                                "Zil": "<>",
                                                "Form": []
                                              }
                                            ]
                                          },
                                          {
                                            "Atom": "T"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<SET TAKEN <>>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "TAKEN"
                                      },
                                      {
                                        "Zil": "<>",
                                        "Form": []
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  {
                                    "Zil": "<SET TAKEN T>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "TAKEN"
                                      },
                                      {
                                        "Atom": "T"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            },
                            {
                              "Zil": "<COND (<AND .TAKEN <BTST .IBITS ,SHAVE> <EQUAL? ,WINNER ,ADVENTURER>> <COND (<EQUAL? .OBJ ,NOT-HERE-OBJECT> <TELL \"You don't have that!\" CR> <RFALSE>)> <TELL \"You don't have the \"> <PRINTD .OBJ> <TELL \".\" CR> <RFALSE>) (<AND <NOT .TAKEN> <EQUAL? ,WINNER ,ADVENTURER>> <TELL \"(Taken)\" CR>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<AND .TAKEN <BTST .IBITS ,SHAVE> <EQUAL? ,WINNER ,ADVENTURER>>",
                                    "Form": [
                                      {
                                        "Atom": "AND"
                                      },
                                      {
                                        "Zil": ".TAKEN",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "TAKEN"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": "<BTST .IBITS ,SHAVE>",
                                        "Form": [
                                          {
                                            "Atom": "BTST"
                                          },
                                          {
                                            "Zil": ".IBITS",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "IBITS"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",SHAVE",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "SHAVE"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": "<EQUAL? ,WINNER ,ADVENTURER>",
                                        "Form": [
                                          {
                                            "Atom": "EQUAL?"
                                          },
                                          {
                                            "Zil": ",WINNER",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "WINNER"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",ADVENTURER",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "ADVENTURER"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<COND (<EQUAL? .OBJ ,NOT-HERE-OBJECT> <TELL \"You don't have that!\" CR> <RFALSE>)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": "<EQUAL? .OBJ ,NOT-HERE-OBJECT>",
                                          "Form": [
                                            {
                                              "Atom": "EQUAL?"
                                            },
                                            {
                                              "Zil": ".OBJ",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "OBJ"
                                                }
                                              ]
                                            },
                                            {
                                              "Zil": ",NOT-HERE-OBJECT",
                                              "Form": [
                                                {
                                                  "Atom": "GVAL"
                                                },
                                                {
                                                  "Atom": "NOT-HERE-OBJECT"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<TELL \"You don't have that!\" CR>",
                                          "Form": [
                                            {
                                              "Atom": "TELL"
                                            },
                                            "You don't have that!",
                                            {
                                              "Atom": "CR"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<RFALSE>",
                                          "Form": [
                                            {
                                              "Atom": "RFALSE"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  },
                                  {
                                    "Zil": "<TELL \"You don't have the \">",
                                    "Form": [
                                      {
                                        "Atom": "TELL"
                                      },
                                      "You don't have the "
                                    ]
                                  },
                                  {
                                    "Zil": "<PRINTD .OBJ>",
                                    "Form": [
                                      {
                                        "Atom": "PRINTD"
                                      },
                                      {
                                        "Zil": ".OBJ",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "OBJ"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<TELL \".\" CR>",
                                    "Form": [
                                      {
                                        "Atom": "TELL"
                                      },
                                      ".",
                                      {
                                        "Atom": "CR"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RFALSE>",
                                    "Form": [
                                      {
                                        "Atom": "RFALSE"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Zil": "<AND <NOT .TAKEN> <EQUAL? ,WINNER ,ADVENTURER>>",
                                    "Form": [
                                      {
                                        "Atom": "AND"
                                      },
                                      {
                                        "Zil": "<NOT .TAKEN>",
                                        "Form": [
                                          {
                                            "Atom": "NOT"
                                          },
                                          {
                                            "Zil": ".TAKEN",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "TAKEN"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": "<EQUAL? ,WINNER ,ADVENTURER>",
                                        "Form": [
                                          {
                                            "Atom": "EQUAL?"
                                          },
                                          {
                                            "Zil": ",WINNER",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "WINNER"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ",ADVENTURER",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "ADVENTURER"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<TELL \"(Taken)\" CR>",
                                    "Form": [
                                      {
                                        "Atom": "TELL"
                                      },
                                      "(Taken)",
                                      {
                                        "Atom": "CR"
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1319",
    "Name": "MANY-CHECK",
    "ArgSpec": "(\"AUX\" (LOSS <>) TMP)",
    "Body": [
      {
        "Zil": "<COND (<AND <G? <GET ,P-PRSO ,P-MATCHLEN> 1> <NOT <BTST <GETB ,P-SYNTAX ,P-SLOC1> ,SMANY>>> <SET LOSS 1>) (<AND <G? <GET ,P-PRSI ,P-MATCHLEN> 1> <NOT <BTST <GETB ,P-SYNTAX ,P-SLOC2> ,SMANY>>> <SET LOSS 2>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <G? <GET ,P-PRSO ,P-MATCHLEN> 1> <NOT <BTST <GETB ,P-SYNTAX ,P-SLOC1> ,SMANY>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<G? <GET ,P-PRSO ,P-MATCHLEN> 1>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": "<GET ,P-PRSO ,P-MATCHLEN>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-MATCHLEN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-MATCHLEN"
                            }
                          ]
                        }
                      ]
                    },
                    1
                  ]
                },
                {
                  "Zil": "<NOT <BTST <GETB ,P-SYNTAX ,P-SLOC1> ,SMANY>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<BTST <GETB ,P-SYNTAX ,P-SLOC1> ,SMANY>",
                      "Form": [
                        {
                          "Atom": "BTST"
                        },
                        {
                          "Zil": "<GETB ,P-SYNTAX ,P-SLOC1>",
                          "Form": [
                            {
                              "Atom": "GETB"
                            },
                            {
                              "Zil": ",P-SYNTAX",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-SYNTAX"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-SLOC1",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-SLOC1"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": ",SMANY",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "SMANY"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET LOSS 1>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "LOSS"
                },
                1
              ]
            }
          ],
          [
            {
              "Zil": "<AND <G? <GET ,P-PRSI ,P-MATCHLEN> 1> <NOT <BTST <GETB ,P-SYNTAX ,P-SLOC2> ,SMANY>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<G? <GET ,P-PRSI ,P-MATCHLEN> 1>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": "<GET ,P-PRSI ,P-MATCHLEN>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-PRSI",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-PRSI"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-MATCHLEN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-MATCHLEN"
                            }
                          ]
                        }
                      ]
                    },
                    1
                  ]
                },
                {
                  "Zil": "<NOT <BTST <GETB ,P-SYNTAX ,P-SLOC2> ,SMANY>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<BTST <GETB ,P-SYNTAX ,P-SLOC2> ,SMANY>",
                      "Form": [
                        {
                          "Atom": "BTST"
                        },
                        {
                          "Zil": "<GETB ,P-SYNTAX ,P-SLOC2>",
                          "Form": [
                            {
                              "Atom": "GETB"
                            },
                            {
                              "Zil": ",P-SYNTAX",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-SYNTAX"
                                }
                              ]
                            },
                            {
                              "Zil": ",P-SLOC2",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-SLOC2"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": ",SMANY",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "SMANY"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET LOSS 2>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "LOSS"
                },
                2
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (.LOSS <TELL \"You can't use multiple \"> <COND (<EQUAL? .LOSS 2> <TELL \"in\">)> <TELL \"direct objects with \\\"\"> <SET TMP <GET ,P-ITBL ,P-VERBN>> <COND (<ZERO? .TMP> <TELL \"tell\">) (<OR ,P-OFLAG ,P-MERGED> <PRINTB <GET .TMP 0>>) (T <WORD-PRINT <GETB .TMP 2> <GETB .TMP 3>>)> <TELL \"\\\".\" CR> <RFALSE>) (T)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ".LOSS",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "LOSS"
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't use multiple \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't use multiple "
              ]
            },
            {
              "Zil": "<COND (<EQUAL? .LOSS 2> <TELL \"in\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? .LOSS 2>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ".LOSS",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "LOSS"
                          }
                        ]
                      },
                      2
                    ]
                  },
                  {
                    "Zil": "<TELL \"in\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "in"
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \"direct objects with \\\"\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "direct objects with \""
              ]
            },
            {
              "Zil": "<SET TMP <GET ,P-ITBL ,P-VERBN>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TMP"
                },
                {
                  "Zil": "<GET ,P-ITBL ,P-VERBN>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-VERBN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-VERBN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<ZERO? .TMP> <TELL \"tell\">) (<OR ,P-OFLAG ,P-MERGED> <PRINTB <GET .TMP 0>>) (T <WORD-PRINT <GETB .TMP 2> <GETB .TMP 3>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<ZERO? .TMP>",
                    "Form": [
                      {
                        "Atom": "ZERO?"
                      },
                      {
                        "Zil": ".TMP",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TMP"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"tell\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "tell"
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<OR ,P-OFLAG ,P-MERGED>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": ",P-OFLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-OFLAG"
                          }
                        ]
                      },
                      {
                        "Zil": ",P-MERGED",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-MERGED"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<PRINTB <GET .TMP 0>>",
                    "Form": [
                      {
                        "Atom": "PRINTB"
                      },
                      {
                        "Zil": "<GET .TMP 0>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ".TMP",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TMP"
                              }
                            ]
                          },
                          0
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<WORD-PRINT <GETB .TMP 2> <GETB .TMP 3>>",
                    "Form": [
                      {
                        "Atom": "WORD-PRINT"
                      },
                      {
                        "Zil": "<GETB .TMP 2>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ".TMP",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TMP"
                              }
                            ]
                          },
                          2
                        ]
                      },
                      {
                        "Zil": "<GETB .TMP 3>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ".TMP",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TMP"
                              }
                            ]
                          },
                          3
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \"\\\".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "\".",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1340",
    "Name": "ZMEMQ",
    "ArgSpec": "(ITM TBL \"OPT\" (SIZE -1) \"AUX\" (CNT 1))",
    "Body": [
      {
        "Zil": "<COND (<NOT .TBL> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT .TBL>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ".TBL",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "TBL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT <L? .SIZE 0>> <SET CNT 0>) (ELSE <SET SIZE <GET .TBL 0>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <L? .SIZE 0>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<L? .SIZE 0>",
                  "Form": [
                    {
                      "Atom": "L?"
                    },
                    {
                      "Zil": ".SIZE",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "SIZE"
                        }
                      ]
                    },
                    0
                  ]
                }
              ]
            },
            {
              "Zil": "<SET CNT 0>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CNT"
                },
                0
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<SET SIZE <GET .TBL 0>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "SIZE"
                },
                {
                  "Zil": "<GET .TBL 0>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ".TBL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TBL"
                        }
                      ]
                    },
                    0
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<EQUAL? .ITM <GET .TBL .CNT>> <RETURN <REST .TBL <* .CNT 2>>>) (<IGRTR? CNT .SIZE> <RFALSE>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<EQUAL? .ITM <GET .TBL .CNT>> <RETURN <REST .TBL <* .CNT 2>>>) (<IGRTR? CNT .SIZE> <RFALSE>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<EQUAL? .ITM <GET .TBL .CNT>>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".ITM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "ITM"
                        }
                      ]
                    },
                    {
                      "Zil": "<GET .TBL .CNT>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ".TBL",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TBL"
                            }
                          ]
                        },
                        {
                          "Zil": ".CNT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "CNT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN <REST .TBL <* .CNT 2>>>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": "<REST .TBL <* .CNT 2>>",
                      "Form": [
                        {
                          "Atom": "REST"
                        },
                        {
                          "Zil": ".TBL",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TBL"
                            }
                          ]
                        },
                        {
                          "Zil": "<* .CNT 2>",
                          "Form": [
                            {
                              "Atom": "*"
                            },
                            {
                              "Zil": ".CNT",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "CNT"
                                }
                              ]
                            },
                            2
                          ]
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<IGRTR? CNT .SIZE>",
                  "Form": [
                    {
                      "Atom": "IGRTR?"
                    },
                    {
                      "Atom": "CNT"
                    },
                    {
                      "Zil": ".SIZE",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "SIZE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1349",
    "Name": "ZMEMQB",
    "ArgSpec": "(ITM TBL SIZE \"AUX\" (CNT 0))",
    "Body": [
      {
        "Zil": "<REPEAT () <COND (<EQUAL? .ITM <GETB .TBL .CNT>> <RTRUE>) (<IGRTR? CNT .SIZE> <RFALSE>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<EQUAL? .ITM <GETB .TBL .CNT>> <RTRUE>) (<IGRTR? CNT .SIZE> <RFALSE>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<EQUAL? .ITM <GETB .TBL .CNT>>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".ITM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "ITM"
                        }
                      ]
                    },
                    {
                      "Zil": "<GETB .TBL .CNT>",
                      "Form": [
                        {
                          "Atom": "GETB"
                        },
                        {
                          "Zil": ".TBL",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TBL"
                            }
                          ]
                        },
                        {
                          "Zil": ".CNT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "CNT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RTRUE>",
                  "Form": [
                    {
                      "Atom": "RTRUE"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<IGRTR? CNT .SIZE>",
                  "Form": [
                    {
                      "Atom": "IGRTR?"
                    },
                    {
                      "Atom": "CNT"
                    },
                    {
                      "Zil": ".SIZE",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "SIZE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1358",
    "Name": "LIT?",
    "ArgSpec": "(RM \"OPT\" (RMBIT T) \"AUX\" OHERE (LIT <>))",
    "Body": [
      {
        "Zil": "<COND (<AND ,ALWAYS-LIT <EQUAL? ,WINNER ,PLAYER>> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND ,ALWAYS-LIT <EQUAL? ,WINNER ,PLAYER>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ",ALWAYS-LIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ALWAYS-LIT"
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,WINNER ,PLAYER>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    },
                    {
                      "Zil": ",PLAYER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PLAYER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG P-GWIMBIT ,ONBIT>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-GWIMBIT"
          },
          {
            "Zil": ",ONBIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "ONBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET OHERE ,HERE>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OHERE"
          },
          {
            "Zil": ",HERE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "HERE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG HERE .RM>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "HERE"
          },
          {
            "Zil": ".RM",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "RM"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND .RMBIT <FSET? .RM ,ONBIT>> <SET LIT T>) (T <PUT ,P-MERGE ,P-MATCHLEN 0> <SETG P-TABLE ,P-MERGE> <SETG P-SLOCBITS -1> <COND (<EQUAL? .OHERE .RM> <DO-SL ,WINNER 1 1> <COND (<AND <NOT <EQUAL? ,WINNER ,PLAYER>> <IN? ,PLAYER .RM>> <DO-SL ,PLAYER 1 1>)>)> <DO-SL .RM 1 1> <COND (<G? <GET ,P-TABLE ,P-MATCHLEN> 0> <SET LIT T>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND .RMBIT <FSET? .RM ,ONBIT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ".RMBIT",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RMBIT"
                    }
                  ]
                },
                {
                  "Zil": "<FSET? .RM ,ONBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ".RM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RM"
                        }
                      ]
                    },
                    {
                      "Zil": ",ONBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ONBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET LIT T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "LIT"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<PUT ,P-MERGE ,P-MATCHLEN 0>",
              "Form": [
                {
                  "Atom": "PUT"
                },
                {
                  "Zil": ",P-MERGE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-MERGE"
                    }
                  ]
                },
                {
                  "Zil": ",P-MATCHLEN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-MATCHLEN"
                    }
                  ]
                },
                0
              ]
            },
            {
              "Zil": "<SETG P-TABLE ,P-MERGE>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-TABLE"
                },
                {
                  "Zil": ",P-MERGE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-MERGE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-SLOCBITS -1>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-SLOCBITS"
                },
                -1
              ]
            },
            {
              "Zil": "<COND (<EQUAL? .OHERE .RM> <DO-SL ,WINNER 1 1> <COND (<AND <NOT <EQUAL? ,WINNER ,PLAYER>> <IN? ,PLAYER .RM>> <DO-SL ,PLAYER 1 1>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? .OHERE .RM>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ".OHERE",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OHERE"
                          }
                        ]
                      },
                      {
                        "Zil": ".RM",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "RM"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<DO-SL ,WINNER 1 1>",
                    "Form": [
                      {
                        "Atom": "DO-SL"
                      },
                      {
                        "Zil": ",WINNER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WINNER"
                          }
                        ]
                      },
                      1,
                      1
                    ]
                  },
                  {
                    "Zil": "<COND (<AND <NOT <EQUAL? ,WINNER ,PLAYER>> <IN? ,PLAYER .RM>> <DO-SL ,PLAYER 1 1>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<AND <NOT <EQUAL? ,WINNER ,PLAYER>> <IN? ,PLAYER .RM>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": "<NOT <EQUAL? ,WINNER ,PLAYER>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<EQUAL? ,WINNER ,PLAYER>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ",WINNER",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "WINNER"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PLAYER",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PLAYER"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<IN? ,PLAYER .RM>",
                              "Form": [
                                {
                                  "Atom": "IN?"
                                },
                                {
                                  "Zil": ",PLAYER",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PLAYER"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".RM",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "RM"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<DO-SL ,PLAYER 1 1>",
                          "Form": [
                            {
                              "Atom": "DO-SL"
                            },
                            {
                              "Zil": ",PLAYER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PLAYER"
                                }
                              ]
                            },
                            1,
                            1
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<DO-SL .RM 1 1>",
              "Form": [
                {
                  "Atom": "DO-SL"
                },
                {
                  "Zil": ".RM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RM"
                    }
                  ]
                },
                1,
                1
              ]
            },
            {
              "Zil": "<COND (<G? <GET ,P-TABLE ,P-MATCHLEN> 0> <SET LIT T>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<G? <GET ,P-TABLE ,P-MATCHLEN> 0>",
                    "Form": [
                      {
                        "Atom": "G?"
                      },
                      {
                        "Zil": "<GET ,P-TABLE ,P-MATCHLEN>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",P-TABLE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-TABLE"
                              }
                            ]
                          },
                          {
                            "Zil": ",P-MATCHLEN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-MATCHLEN"
                              }
                            ]
                          }
                        ]
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<SET LIT T>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "LIT"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG HERE .OHERE>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "HERE"
          },
          {
            "Zil": ".OHERE",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "OHERE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG P-GWIMBIT 0>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-GWIMBIT"
          },
          0
        ]
      },
      {
        "Zil": ".LIT",
        "Form": [
          {
            "Atom": "LVAL"
          },
          {
            "Atom": "LIT"
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1396",
    "Name": "THIS-IT?",
    "ArgSpec": "(OBJ TBL \"AUX\" SYNS)",
    "Body": [
      {
        "Zil": "<COND (<FSET? .OBJ ,INVISIBLE> <RFALSE>) (<AND ,P-NAM <NOT <ZMEMQ ,P-NAM <SET SYNS <GETPT .OBJ ,P?SYNONYM>> <- </ <PTSIZE .SYNS> 2> 1>>>> <RFALSE>) (<AND ,P-ADJ <OR <NOT <SET SYNS <GETPT .OBJ ,P?ADJECTIVE>>> <NOT <ZMEMQB ,P-ADJ .SYNS <- <PTSIZE .SYNS> 1>>>>> <RFALSE>) (<AND <NOT <ZERO? ,P-GWIMBIT>> <NOT <FSET? .OBJ ,P-GWIMBIT>>> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? .OBJ ,INVISIBLE>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": ",INVISIBLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "INVISIBLE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND ,P-NAM <NOT <ZMEMQ ,P-NAM <SET SYNS <GETPT .OBJ ,P?SYNONYM>> <- </ <PTSIZE .SYNS> 2> 1>>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ",P-NAM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-NAM"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <ZMEMQ ,P-NAM <SET SYNS <GETPT .OBJ ,P?SYNONYM>> <- </ <PTSIZE .SYNS> 2> 1>>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<ZMEMQ ,P-NAM <SET SYNS <GETPT .OBJ ,P?SYNONYM>> <- </ <PTSIZE .SYNS> 2> 1>>",
                      "Form": [
                        {
                          "Atom": "ZMEMQ"
                        },
                        {
                          "Zil": ",P-NAM",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-NAM"
                            }
                          ]
                        },
                        {
                          "Zil": "<SET SYNS <GETPT .OBJ ,P?SYNONYM>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "SYNS"
                            },
                            {
                              "Zil": "<GETPT .OBJ ,P?SYNONYM>",
                              "Form": [
                                {
                                  "Atom": "GETPT"
                                },
                                {
                                  "Zil": ".OBJ",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "OBJ"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P?SYNONYM",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P?SYNONYM"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<- </ <PTSIZE .SYNS> 2> 1>",
                          "Form": [
                            {
                              "Atom": "-"
                            },
                            {
                              "Zil": "</ <PTSIZE .SYNS> 2>",
                              "Form": [
                                {
                                  "Atom": "/"
                                },
                                {
                                  "Zil": "<PTSIZE .SYNS>",
                                  "Form": [
                                    {
                                      "Atom": "PTSIZE"
                                    },
                                    {
                                      "Zil": ".SYNS",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "SYNS"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                2
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND ,P-ADJ <OR <NOT <SET SYNS <GETPT .OBJ ,P?ADJECTIVE>>> <NOT <ZMEMQB ,P-ADJ .SYNS <- <PTSIZE .SYNS> 1>>>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ",P-ADJ",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-ADJ"
                    }
                  ]
                },
                {
                  "Zil": "<OR <NOT <SET SYNS <GETPT .OBJ ,P?ADJECTIVE>>> <NOT <ZMEMQB ,P-ADJ .SYNS <- <PTSIZE .SYNS> 1>>>>",
                  "Form": [
                    {
                      "Atom": "OR"
                    },
                    {
                      "Zil": "<NOT <SET SYNS <GETPT .OBJ ,P?ADJECTIVE>>>",
                      "Form": [
                        {
                          "Atom": "NOT"
                        },
                        {
                          "Zil": "<SET SYNS <GETPT .OBJ ,P?ADJECTIVE>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "SYNS"
                            },
                            {
                              "Zil": "<GETPT .OBJ ,P?ADJECTIVE>",
                              "Form": [
                                {
                                  "Atom": "GETPT"
                                },
                                {
                                  "Zil": ".OBJ",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "OBJ"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P?ADJECTIVE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P?ADJECTIVE"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<NOT <ZMEMQB ,P-ADJ .SYNS <- <PTSIZE .SYNS> 1>>>",
                      "Form": [
                        {
                          "Atom": "NOT"
                        },
                        {
                          "Zil": "<ZMEMQB ,P-ADJ .SYNS <- <PTSIZE .SYNS> 1>>",
                          "Form": [
                            {
                              "Atom": "ZMEMQB"
                            },
                            {
                              "Zil": ",P-ADJ",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-ADJ"
                                }
                              ]
                            },
                            {
                              "Zil": ".SYNS",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "SYNS"
                                }
                              ]
                            },
                            {
                              "Zil": "<- <PTSIZE .SYNS> 1>",
                              "Form": [
                                {
                                  "Atom": "-"
                                },
                                {
                                  "Zil": "<PTSIZE .SYNS>",
                                  "Form": [
                                    {
                                      "Atom": "PTSIZE"
                                    },
                                    {
                                      "Zil": ".SYNS",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "SYNS"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                1
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <NOT <ZERO? ,P-GWIMBIT>> <NOT <FSET? .OBJ ,P-GWIMBIT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT <ZERO? ,P-GWIMBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<ZERO? ,P-GWIMBIT>",
                      "Form": [
                        {
                          "Atom": "ZERO?"
                        },
                        {
                          "Zil": ",P-GWIMBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-GWIMBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? .OBJ ,P-GWIMBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? .OBJ ,P-GWIMBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ".OBJ",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "OBJ"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-GWIMBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-GWIMBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1411",
    "Name": "ACCESSIBLE?",
    "ArgSpec": "(OBJ \"AUX\" (L <LOC .OBJ>))",
    "Body": [
      {
        "Zil": "<COND (<FSET? .OBJ ,INVISIBLE> <RFALSE>) (<NOT .L> <RFALSE>) (<EQUAL? .L ,GLOBAL-OBJECTS> <RTRUE>) (<AND <EQUAL? .L ,LOCAL-GLOBALS> <GLOBAL-IN? .OBJ ,HERE>> <RTRUE>) (<NOT <EQUAL? <META-LOC .OBJ> ,HERE <LOC ,WINNER>>> <RFALSE>) (<EQUAL? .L ,WINNER ,HERE <LOC ,WINNER>> <RTRUE>) (<AND <FSET? .L ,OPENBIT> <ACCESSIBLE? .L>> <RTRUE>) (T <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? .OBJ ,INVISIBLE>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": ",INVISIBLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "INVISIBLE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT .L>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ".L",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "L"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? .L ,GLOBAL-OBJECTS>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ".L",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "L"
                    }
                  ]
                },
                {
                  "Zil": ",GLOBAL-OBJECTS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GLOBAL-OBJECTS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <EQUAL? .L ,LOCAL-GLOBALS> <GLOBAL-IN? .OBJ ,HERE>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<EQUAL? .L ,LOCAL-GLOBALS>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".L",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "L"
                        }
                      ]
                    },
                    {
                      "Zil": ",LOCAL-GLOBALS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "LOCAL-GLOBALS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<GLOBAL-IN? .OBJ ,HERE>",
                  "Form": [
                    {
                      "Atom": "GLOBAL-IN?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <EQUAL? <META-LOC .OBJ> ,HERE <LOC ,WINNER>>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<EQUAL? <META-LOC .OBJ> ,HERE <LOC ,WINNER>>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<META-LOC .OBJ>",
                      "Form": [
                        {
                          "Atom": "META-LOC"
                        },
                        {
                          "Zil": ".OBJ",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "OBJ"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": "<LOC ,WINNER>",
                      "Form": [
                        {
                          "Atom": "LOC"
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? .L ,WINNER ,HERE <LOC ,WINNER>>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ".L",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "L"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": "<LOC ,WINNER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <FSET? .L ,OPENBIT> <ACCESSIBLE? .L>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<FSET? .L ,OPENBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ".L",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "L"
                        }
                      ]
                    },
                    {
                      "Zil": ",OPENBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "OPENBIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<ACCESSIBLE? .L>",
                  "Form": [
                    {
                      "Atom": "ACCESSIBLE?"
                    },
                    {
                      "Zil": ".L",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "L"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GPARSER.zil:1437",
    "Name": "META-LOC",
    "ArgSpec": "(OBJ)",
    "Body": [
      {
        "Zil": "<REPEAT () <COND (<NOT .OBJ> <RFALSE>) (<IN? .OBJ ,GLOBAL-OBJECTS> <RETURN ,GLOBAL-OBJECTS>)> <COND (<IN? .OBJ ,ROOMS> <RETURN .OBJ>) (T <SET OBJ <LOC .OBJ>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<NOT .OBJ> <RFALSE>) (<IN? .OBJ ,GLOBAL-OBJECTS> <RETURN ,GLOBAL-OBJECTS>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<NOT .OBJ>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<IN? .OBJ ,GLOBAL-OBJECTS>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    },
                    {
                      "Zil": ",GLOBAL-OBJECTS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "GLOBAL-OBJECTS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN ,GLOBAL-OBJECTS>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": ",GLOBAL-OBJECTS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "GLOBAL-OBJECTS"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<COND (<IN? .OBJ ,ROOMS> <RETURN .OBJ>) (T <SET OBJ <LOC .OBJ>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<IN? .OBJ ,ROOMS>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    },
                    {
                      "Zil": ",ROOMS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ROOMS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN .OBJ>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<SET OBJ <LOC .OBJ>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "OBJ"
                    },
                    {
                      "Zil": "<LOC .OBJ>",
                      "Form": [
                        {
                          "Atom": "LOC"
                        },
                        {
                          "Zil": ".OBJ",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "OBJ"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3DUNGEON.zil:921",
    "Name": "GO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<QUEUE I-LANTERN 200>",
        "Form": [
          {
            "Atom": "QUEUE"
          },
          {
            "Atom": "I-LANTERN"
          },
          200
        ]
      },
      {
        "Zil": "<SETG CURRENT-LAMP ,LAMP>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "CURRENT-LAMP"
          },
          {
            "Zil": ",LAMP",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "LAMP"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,CPOBJS <* 8 21> 1>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",CPOBJS",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CPOBJS"
              }
            ]
          },
          {
            "Zil": "<* 8 21>",
            "Form": [
              {
                "Atom": "*"
              },
              8,
              21
            ]
          },
          1
        ]
      },
      {
        "Zil": "<PUT ,CPOBJS <+ <* 8 21> 1> ,LORE-BOOK>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",CPOBJS",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CPOBJS"
              }
            ]
          },
          {
            "Zil": "<+ <* 8 21> 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": "<* 8 21>",
                "Form": [
                  {
                    "Atom": "*"
                  },
                  8,
                  21
                ]
              },
              1
            ]
          },
          {
            "Zil": ",LORE-BOOK",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "LORE-BOOK"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,CPOBJS <* 8 32> 1>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",CPOBJS",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CPOBJS"
              }
            ]
          },
          {
            "Zil": "<* 8 32>",
            "Form": [
              {
                "Atom": "*"
              },
              8,
              32
            ]
          },
          1
        ]
      },
      {
        "Zil": "<PUT ,CPOBJS <+ <* 8 32> 1> ,CP-SLOT>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",CPOBJS",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CPOBJS"
              }
            ]
          },
          {
            "Zil": "<+ <* 8 32> 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": "<* 8 32>",
                "Form": [
                  {
                    "Atom": "*"
                  },
                  8,
                  32
                ]
              },
              1
            ]
          },
          {
            "Zil": ",CP-SLOT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CP-SLOT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG LIT T>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "LIT"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<SETG WINNER ,ADVENTURER>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "WINNER"
          },
          {
            "Zil": ",ADVENTURER",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "ADVENTURER"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG PLAYER ,WINNER>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "PLAYER"
          },
          {
            "Zil": ",WINNER",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "WINNER"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG MLOC ,MRB>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "MLOC"
          },
          {
            "Zil": ",MRB",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "MRB"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG HERE ,ZORK2-STAIR>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "HERE"
          },
          {
            "Zil": ",ZORK2-STAIR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "ZORK2-STAIR"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<MOVE ,WINNER ,HERE>",
        "Form": [
          {
            "Atom": "MOVE"
          },
          {
            "Zil": ",WINNER",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "WINNER"
              }
            ]
          },
          {
            "Zil": ",HERE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "HERE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<ENABLE <QUEUE I-VIEW-CHANGE 4>>",
        "Form": [
          {
            "Atom": "ENABLE"
          },
          {
            "Zil": "<QUEUE I-VIEW-CHANGE 4>",
            "Form": [
              {
                "Atom": "QUEUE"
              },
              {
                "Atom": "I-VIEW-CHANGE"
              },
              4
            ]
          }
        ]
      },
      {
        "Zil": "<SETG P-IT-OBJECT <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-IT-OBJECT"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (<NOT <FSET? ,HERE ,TOUCHBIT>> <TELL \"As in a dream, you see yourself tumbling down a great, dark staircase.\r\nAll about you are shadowy images of struggles against fierce opponents\r\nand diabolical traps. These give way to another round of images: of\r\nimposing stone figures, a cool, clear lake, and, now, of an old, yet\r\noddly youthful man. He turns toward you slowly, his long, silver hair\r\ndancing about him in a fresh breeze. \\\"You have reached the final test,\r\nmy friend! You are proved clever and powerful, but this is not yet\r\nenough! Seek me when you feel yourself worthy!\\\" The dream dissolves\r\naround you as his last words echo through the void....\" CR> <CRLF> <V-VERSION> <CRLF>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <FSET? ,HERE ,TOUCHBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,HERE ,TOUCHBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",TOUCHBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TOUCHBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"As in a dream, you see yourself tumbling down a great, dark staircase.\r\nAll about you are shadowy images of struggles against fierce opponents\r\nand diabolical traps. These give way to another round of images: of\r\nimposing stone figures, a cool, clear lake, and, now, of an old, yet\r\noddly youthful man. He turns toward you slowly, his long, silver hair\r\ndancing about him in a fresh breeze. \\\"You have reached the final test,\r\nmy friend! You are proved clever and powerful, but this is not yet\r\nenough! Seek me when you feel yourself worthy!\\\" The dream dissolves\r\naround you as his last words echo through the void....\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "As in a dream, you see yourself tumbling down a great, dark staircase.\r\nAll about you are shadowy images of struggles against fierce opponents\r\nand diabolical traps. These give way to another round of images: of\r\nimposing stone figures, a cool, clear lake, and, now, of an old, yet\r\noddly youthful man. He turns toward you slowly, his long, silver hair\r\ndancing about him in a fresh breeze. \"You have reached the final test,\r\nmy friend! You are proved clever and powerful, but this is not yet\r\nenough! Seek me when you feel yourself worthy!\" The dream dissolves\r\naround you as his last words echo through the void....",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            },
            {
              "Zil": "<V-VERSION>",
              "Form": [
                {
                  "Atom": "V-VERSION"
                }
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<MOVE ,WINNER ,HERE>",
        "Form": [
          {
            "Atom": "MOVE"
          },
          {
            "Zil": ",WINNER",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "WINNER"
              }
            ]
          },
          {
            "Zil": ",HERE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "HERE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<MOVE ,LAMP ,HERE>",
        "Form": [
          {
            "Atom": "MOVE"
          },
          {
            "Zil": ",LAMP",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "LAMP"
              }
            ]
          },
          {
            "Zil": ",HERE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "HERE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<V-LOOK>",
        "Form": [
          {
            "Atom": "V-LOOK"
          }
        ]
      },
      {
        "Zil": "<MAIN-LOOP>",
        "Form": [
          {
            "Atom": "MAIN-LOOP"
          }
        ]
      },
      {
        "Zil": "<AGAIN>",
        "Form": [
          {
            "Atom": "AGAIN"
          }
        ]
      }
    ]
  },
  {
    "Source": "GGLOBALS.zil:52",
    "Name": "NOT-HERE-OBJECT-F",
    "ArgSpec": "(\"AUX\" TBL (PRSO? T) OBJ)",
    "Body": [
      {
        "Zil": "<COND (<AND <EQUAL? ,PRSO ,NOT-HERE-OBJECT> <EQUAL? ,PRSI ,NOT-HERE-OBJECT>> <TELL \"Those things aren't here!\" CR> <RTRUE>) (<EQUAL? ,PRSO ,NOT-HERE-OBJECT> <SET TBL ,P-PRSO>) (T <SET TBL ,P-PRSI> <SET PRSO? <>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <EQUAL? ,PRSO ,NOT-HERE-OBJECT> <EQUAL? ,PRSI ,NOT-HERE-OBJECT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<EQUAL? ,PRSO ,NOT-HERE-OBJECT>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",NOT-HERE-OBJECT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "NOT-HERE-OBJECT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,PRSI ,NOT-HERE-OBJECT>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",NOT-HERE-OBJECT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "NOT-HERE-OBJECT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Those things aren't here!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Those things aren't here!",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,PRSO ,NOT-HERE-OBJECT>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",NOT-HERE-OBJECT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "NOT-HERE-OBJECT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET TBL ,P-PRSO>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TBL"
                },
                {
                  "Zil": ",P-PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-PRSO"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SET TBL ,P-PRSI>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TBL"
                },
                {
                  "Zil": ",P-PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-PRSI"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET PRSO? <>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "PRSO?"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG P-CONT <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-CONT"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<SETG QUOTE-FLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "QUOTE-FLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (<EQUAL? ,WINNER ,PLAYER> <TELL \"You can't see any \"> <NOT-HERE-PRINT .PRSO?> <TELL \" here!\" CR>) (T <TELL \"The \" D ,WINNER \" seems confused. \\\"I don't see any \"> <NOT-HERE-PRINT .PRSO?> <TELL \" here!\\\"\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,WINNER ,PLAYER>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                },
                {
                  "Zil": ",PLAYER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PLAYER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't see any \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't see any "
              ]
            },
            {
              "Zil": "<NOT-HERE-PRINT .PRSO?>",
              "Form": [
                {
                  "Atom": "NOT-HERE-PRINT"
                },
                {
                  "Zil": ".PRSO?",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "PRSO?"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \" here!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " here!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"The \" D ,WINNER \" seems confused. \\\"I don't see any \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                },
                " seems confused. \"I don't see any "
              ]
            },
            {
              "Zil": "<NOT-HERE-PRINT .PRSO?>",
              "Form": [
                {
                  "Atom": "NOT-HERE-PRINT"
                },
                {
                  "Zil": ".PRSO?",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "PRSO?"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \" here!\\\"\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " here!\"",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GGLOBALS.zil:109",
    "Name": "NOT-HERE-PRINT",
    "ArgSpec": "(PRSO?)",
    "Body": [
      {
        "Zil": "<COND (,P-OFLAG <COND (,P-XADJ <PRINTB ,P-XADJN>)> <COND (,P-XNAM <PRINTB ,P-XNAM>)>) (.PRSO? <BUFFER-PRINT <GET ,P-ITBL ,P-NC1> <GET ,P-ITBL ,P-NC1L> <>>) (T <BUFFER-PRINT <GET ,P-ITBL ,P-NC2> <GET ,P-ITBL ,P-NC2L> <>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",P-OFLAG",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "P-OFLAG"
                }
              ]
            },
            {
              "Zil": "<COND (,P-XADJ <PRINTB ,P-XADJN>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",P-XADJ",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-XADJ"
                      }
                    ]
                  },
                  {
                    "Zil": "<PRINTB ,P-XADJN>",
                    "Form": [
                      {
                        "Atom": "PRINTB"
                      },
                      {
                        "Zil": ",P-XADJN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-XADJN"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (,P-XNAM <PRINTB ,P-XNAM>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",P-XNAM",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-XNAM"
                      }
                    ]
                  },
                  {
                    "Zil": "<PRINTB ,P-XNAM>",
                    "Form": [
                      {
                        "Atom": "PRINTB"
                      },
                      {
                        "Zil": ",P-XNAM",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-XNAM"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": ".PRSO?",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "PRSO?"
                }
              ]
            },
            {
              "Zil": "<BUFFER-PRINT <GET ,P-ITBL ,P-NC1> <GET ,P-ITBL ,P-NC1L> <>>",
              "Form": [
                {
                  "Atom": "BUFFER-PRINT"
                },
                {
                  "Zil": "<GET ,P-ITBL ,P-NC1>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-NC1",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NC1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<GET ,P-ITBL ,P-NC1L>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-NC1L",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NC1L"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<BUFFER-PRINT <GET ,P-ITBL ,P-NC2> <GET ,P-ITBL ,P-NC2L> <>>",
              "Form": [
                {
                  "Atom": "BUFFER-PRINT"
                },
                {
                  "Zil": "<GET ,P-ITBL ,P-NC2>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-NC2",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NC2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<GET ,P-ITBL ,P-NC2L>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-ITBL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-ITBL"
                        }
                      ]
                    },
                    {
                      "Zil": ",P-NC2L",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NC2L"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GGLOBALS.zil:118",
    "Name": "NULL-F",
    "ArgSpec": "(\"OPT\" A1 A2)",
    "Body": [
      {
        "Zil": "<RFALSE>",
        "Form": [
          {
            "Atom": "RFALSE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GGLOBALS.zil:143",
    "Name": "STAIRS-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? THROUGH> <TELL \"You should say whether you want to go up or down.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? THROUGH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "THROUGH"
                }
              ]
            },
            {
              "Zil": "<TELL \"You should say whether you want to go up or down.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You should say whether you want to go up or down.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GGLOBALS.zil:155",
    "Name": "SAILOR-FCN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? TELL> <SETG P-CONT <>> <SETG QUOTE-FLAG <>> <TELL \"You can't talk to the sailor that way.\" CR>) (<VERB? EXAMINE> <COND (<NOT <FSET? ,VIKING-SHIP ,INVISIBLE>> <TELL \"He looks like a sailor.\" CR> <RTRUE>)> <TELL \"There is no sailor to be seen.\" CR>) (<VERB? HELLO> <SETG HS <+ ,HS 1>> <COND (<NOT <FSET? ,VIKING-SHIP ,INVISIBLE>> <TELL \"The seaman looks up and maneuvers the boat toward shore. He cries out \\\"I\r\nhave waited three ages for someone to say those words and save me from\r\nsailing this endless ocean. Please accept this gift. You may find it\r\nuseful!\\\" He throws something which falls near you in the sand, then sails\r\noff toward the west, singing a lively, but somewhat uncouth, sailor song.\" CR> <FSET ,VIKING-SHIP ,INVISIBLE> <MOVE ,VIAL ,HERE>) (<==? ,HERE ,FLATHEAD-OCEAN> <COND (,SHIP-GONE <TELL \"Nothing happens anymore.\" CR>) (T <TELL \"Nothing happens yet.\" CR>)>) (T <TELL \"Nothing happens here.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? TELL>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TELL"
                }
              ]
            },
            {
              "Zil": "<SETG P-CONT <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-CONT"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG QUOTE-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "QUOTE-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't talk to the sailor that way.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't talk to the sailor that way.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <FSET? ,VIKING-SHIP ,INVISIBLE>> <TELL \"He looks like a sailor.\" CR> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <FSET? ,VIKING-SHIP ,INVISIBLE>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? ,VIKING-SHIP ,INVISIBLE>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",VIKING-SHIP",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "VIKING-SHIP"
                              }
                            ]
                          },
                          {
                            "Zil": ",INVISIBLE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "INVISIBLE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"He looks like a sailor.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "He looks like a sailor.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \"There is no sailor to be seen.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is no sailor to be seen.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? HELLO>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "HELLO"
                }
              ]
            },
            {
              "Zil": "<SETG HS <+ ,HS 1>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "HS"
                },
                {
                  "Zil": "<+ ,HS 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ",HS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HS"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <FSET? ,VIKING-SHIP ,INVISIBLE>> <TELL \"The seaman looks up and maneuvers the boat toward shore. He cries out \\\"I\r\nhave waited three ages for someone to say those words and save me from\r\nsailing this endless ocean. Please accept this gift. You may find it\r\nuseful!\\\" He throws something which falls near you in the sand, then sails\r\noff toward the west, singing a lively, but somewhat uncouth, sailor song.\" CR> <FSET ,VIKING-SHIP ,INVISIBLE> <MOVE ,VIAL ,HERE>) (<==? ,HERE ,FLATHEAD-OCEAN> <COND (,SHIP-GONE <TELL \"Nothing happens anymore.\" CR>) (T <TELL \"Nothing happens yet.\" CR>)>) (T <TELL \"Nothing happens here.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <FSET? ,VIKING-SHIP ,INVISIBLE>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? ,VIKING-SHIP ,INVISIBLE>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",VIKING-SHIP",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "VIKING-SHIP"
                              }
                            ]
                          },
                          {
                            "Zil": ",INVISIBLE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "INVISIBLE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The seaman looks up and maneuvers the boat toward shore. He cries out \\\"I\r\nhave waited three ages for someone to say those words and save me from\r\nsailing this endless ocean. Please accept this gift. You may find it\r\nuseful!\\\" He throws something which falls near you in the sand, then sails\r\noff toward the west, singing a lively, but somewhat uncouth, sailor song.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The seaman looks up and maneuvers the boat toward shore. He cries out \"I\r\nhave waited three ages for someone to say those words and save me from\r\nsailing this endless ocean. Please accept this gift. You may find it\r\nuseful!\" He throws something which falls near you in the sand, then sails\r\noff toward the west, singing a lively, but somewhat uncouth, sailor song.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<FSET ,VIKING-SHIP ,INVISIBLE>",
                    "Form": [
                      {
                        "Atom": "FSET"
                      },
                      {
                        "Zil": ",VIKING-SHIP",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "VIKING-SHIP"
                          }
                        ]
                      },
                      {
                        "Zil": ",INVISIBLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "INVISIBLE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<MOVE ,VIAL ,HERE>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ",VIAL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "VIAL"
                          }
                        ]
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<==? ,HERE ,FLATHEAD-OCEAN>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",FLATHEAD-OCEAN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "FLATHEAD-OCEAN"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (,SHIP-GONE <TELL \"Nothing happens anymore.\" CR>) (T <TELL \"Nothing happens yet.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ",SHIP-GONE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "SHIP-GONE"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"Nothing happens anymore.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Nothing happens anymore.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"Nothing happens yet.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Nothing happens yet.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"Nothing happens here.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Nothing happens here.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GGLOBALS.zil:203",
    "Name": "GROUND-FUNCTION",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? PUT PUT-ON> <EQUAL? ,PRSI ,GROUND>> <PERFORM ,V?DROP ,PRSO> <RTRUE>) (<NULL-F> <RFALSE>) (<VERB? DIG> <TELL \"The ground is too hard for digging here.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? PUT PUT-ON> <EQUAL? ,PRSI ,GROUND>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT PUT-ON>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Atom": "PUT-ON"
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,PRSI ,GROUND>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",GROUND",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "GROUND"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?DROP ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?DROP",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?DROP"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? DIG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "DIG"
                }
              ]
            },
            {
              "Zil": "<TELL \"The ground is too hard for digging here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ground is too hard for digging here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GGLOBALS.zil:224",
    "Name": "GRUE-FUNCTION",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE> <TELL \"The grue is a sinister, lurking presence in the dark places of the\r\nearth. Its favorite diet is adventurers, but its insatiable\r\nappetite is tempered by its fear of light. No grue has ever been\r\nseen by the light of day, and few have survived its fearsome jaws\r\nto tell the tale.\" CR>) (<VERB? FIND> <TELL \"There is no grue here, but I'm sure there is at least one lurking\r\nin the darkness nearby. I wouldn't let my light go out if I were\r\nyou!\" CR>) (<VERB? LISTEN> <TELL \"It makes no sound but is always lurking in the darkness nearby.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The grue is a sinister, lurking presence in the dark places of the\r\nearth. Its favorite diet is adventurers, but its insatiable\r\nappetite is tempered by its fear of light. No grue has ever been\r\nseen by the light of day, and few have survived its fearsome jaws\r\nto tell the tale.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The grue is a sinister, lurking presence in the dark places of the\r\nearth. Its favorite diet is adventurers, but its insatiable\r\nappetite is tempered by its fear of light. No grue has ever been\r\nseen by the light of day, and few have survived its fearsome jaws\r\nto tell the tale.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? FIND>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "FIND"
                }
              ]
            },
            {
              "Zil": "<TELL \"There is no grue here, but I'm sure there is at least one lurking\r\nin the darkness nearby. I wouldn't let my light go out if I were\r\nyou!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is no grue here, but I'm sure there is at least one lurking\r\nin the darkness nearby. I wouldn't let my light go out if I were\r\nyou!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LISTEN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LISTEN"
                }
              ]
            },
            {
              "Zil": "<TELL \"It makes no sound but is always lurking in the darkness nearby.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It makes no sound but is always lurking in the darkness nearby.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GGLOBALS.zil:254",
    "Name": "CRETIN-FCN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? TELL> <SETG P-CONT <>> <SETG QUOTE-FLAG <>> <TELL \"Talking to yourself is said to be a sign of impending mental collapse.\" CR>) (<AND <VERB? GIVE> <EQUAL? ,PRSI ,ME>> <PERFORM ,V?TAKE ,PRSO> <RTRUE>) (<VERB? MAKE> <TELL \"Only you can do that.\" CR>) (<VERB? DISEMBARK> <TELL \"You'll have to do that on your own.\" CR>) (<VERB? EAT> <TELL \"Auto-cannibalism is not the answer.\" CR>) (<VERB? ATTACK MUNG> <COND (<AND ,PRSI <FSET? ,PRSI ,WEAPONBIT>> <JIGS-UP \"If you insist.... Poof, you're dead!\">) (T <TELL \"Suicide is not the answer.\" CR>)>) (<VERB? THROW> <COND (<==? ,PRSO ,ME> <TELL \"Why don't you just walk like normal people?\" CR>)>) (<VERB? TAKE> <TELL \"How romantic!\" CR>) (<VERB? EXAMINE> <COND (,INVIS <TELL \"A good trick, as you are currently invisible.\" CR>) (T <TELL \"What you can see looks pretty much as usual, sorry to say.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? TELL>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TELL"
                }
              ]
            },
            {
              "Zil": "<SETG P-CONT <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-CONT"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG QUOTE-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "QUOTE-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<TELL \"Talking to yourself is said to be a sign of impending mental collapse.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Talking to yourself is said to be a sign of impending mental collapse.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? GIVE> <EQUAL? ,PRSI ,ME>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? GIVE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "GIVE"
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,PRSI ,ME>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",ME",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ME"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?TAKE ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?TAKE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?TAKE"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? MAKE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "MAKE"
                }
              ]
            },
            {
              "Zil": "<TELL \"Only you can do that.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Only you can do that.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? DISEMBARK>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "DISEMBARK"
                }
              ]
            },
            {
              "Zil": "<TELL \"You'll have to do that on your own.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You'll have to do that on your own.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EAT>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EAT"
                }
              ]
            },
            {
              "Zil": "<TELL \"Auto-cannibalism is not the answer.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Auto-cannibalism is not the answer.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? ATTACK MUNG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "ATTACK"
                },
                {
                  "Atom": "MUNG"
                }
              ]
            },
            {
              "Zil": "<COND (<AND ,PRSI <FSET? ,PRSI ,WEAPONBIT>> <JIGS-UP \"If you insist.... Poof, you're dead!\">) (T <TELL \"Suicide is not the answer.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND ,PRSI <FSET? ,PRSI ,WEAPONBIT>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      {
                        "Zil": "<FSET? ,PRSI ,WEAPONBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",PRSI",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSI"
                              }
                            ]
                          },
                          {
                            "Zil": ",WEAPONBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WEAPONBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<JIGS-UP \"If you insist.... Poof, you're dead!\">",
                    "Form": [
                      {
                        "Atom": "JIGS-UP"
                      },
                      "If you insist.... Poof, you're dead!"
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"Suicide is not the answer.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Suicide is not the answer.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? THROW>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "THROW"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,PRSO ,ME> <TELL \"Why don't you just walk like normal people?\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,PRSO ,ME>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",ME",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ME"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Why don't you just walk like normal people?\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Why don't you just walk like normal people?",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? TAKE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TAKE"
                }
              ]
            },
            {
              "Zil": "<TELL \"How romantic!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "How romantic!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<COND (,INVIS <TELL \"A good trick, as you are currently invisible.\" CR>) (T <TELL \"What you can see looks pretty much as usual, sorry to say.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",INVIS",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "INVIS"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"A good trick, as you are currently invisible.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "A good trick, as you are currently invisible.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"What you can see looks pretty much as usual, sorry to say.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "What you can see looks pretty much as usual, sorry to say.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GGLOBALS.zil:315",
    "Name": "PATH-OBJECT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? TAKE FOLLOW> <TELL \"You must specify a direction to go.\" CR>) (<VERB? FIND> <TELL \"I can't help you there....\" CR>) (<VERB? DIG> <TELL \"Not a chance.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? TAKE FOLLOW>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TAKE"
                },
                {
                  "Atom": "FOLLOW"
                }
              ]
            },
            {
              "Zil": "<TELL \"You must specify a direction to go.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You must specify a direction to go.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? FIND>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "FIND"
                }
              ]
            },
            {
              "Zil": "<TELL \"I can't help you there....\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "I can't help you there....",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? DIG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "DIG"
                }
              ]
            },
            {
              "Zil": "<TELL \"Not a chance.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Not a chance.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GGLOBALS.zil:329",
    "Name": "ZORKMID-FUNCTION",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE> <TELL \"The zorkmid is the unit of currency of the Great Underground Empire.\" CR>) (<VERB? FIND> <TELL \"The best way to find zorkmids is to go out and look for them.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The zorkmid is the unit of currency of the Great Underground Empire.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The zorkmid is the unit of currency of the Great Underground Empire.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? FIND>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "FIND"
                }
              ]
            },
            {
              "Zil": "<TELL \"The best way to find zorkmids is to go out and look for them.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The best way to find zorkmids is to go out and look for them.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:13",
    "Name": "V-VERBOSE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG VERBOSE T>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "VERBOSE"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<SETG SUPER-BRIEF <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "SUPER-BRIEF"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<TELL \"Maximum verbosity.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Maximum verbosity.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:18",
    "Name": "V-BRIEF",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG VERBOSE <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "VERBOSE"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<SETG SUPER-BRIEF <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "SUPER-BRIEF"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<TELL \"Brief descriptions.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Brief descriptions.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:23",
    "Name": "V-SUPER-BRIEF",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG SUPER-BRIEF T>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "SUPER-BRIEF"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<TELL \"Superbrief descriptions.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Superbrief descriptions.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:29",
    "Name": "V-INVENTORY",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FIRST? ,WINNER> <PRINT-CONT ,WINNER>) (T <TELL \"You are empty-handed.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FIRST? ,WINNER>",
              "Form": [
                {
                  "Atom": "FIRST?"
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PRINT-CONT ,WINNER>",
              "Form": [
                {
                  "Atom": "PRINT-CONT"
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You are empty-handed.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are empty-handed.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:33",
    "Name": "FINISH",
    "ArgSpec": "(\"AUX\" WRD)",
    "Body": [
      {
        "Zil": "<V-SCORE>",
        "Form": [
          {
            "Atom": "V-SCORE"
          }
        ]
      },
      {
        "Zil": "<REPEAT () <CRLF> <TELL \"Would you like to restart the game from the beginning, restore a saved\r\ngame position, or end this session of the game?|\r\n(Type RESTART, RESTORE, or QUIT):|\r\n>\"> <READ ,P-INBUF ,P-LEXV> <SET WRD <GET ,P-LEXV 1>> <COND (<EQUAL? .WRD ,W?RESTART> <RESTART> <TELL \"Failed.\" CR>) (<EQUAL? .WRD ,W?RESTORE> <COND (<RESTORE> <TELL \"Ok.\" CR>) (T <TELL \"Failed.\" CR>)>) (<EQUAL? .WRD ,W?QUIT ,W?Q> <QUIT>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<CRLF>",
            "Form": [
              {
                "Atom": "CRLF"
              }
            ]
          },
          {
            "Zil": "<TELL \"Would you like to restart the game from the beginning, restore a saved\r\ngame position, or end this session of the game?|\r\n(Type RESTART, RESTORE, or QUIT):|\r\n>\">",
            "Form": [
              {
                "Atom": "TELL"
              },
              "Would you like to restart the game from the beginning, restore a saved\r\ngame position, or end this session of the game?|\r\n(Type RESTART, RESTORE, or QUIT):|\r\n>"
            ]
          },
          {
            "Zil": "<READ ,P-INBUF ,P-LEXV>",
            "Form": [
              {
                "Atom": "READ"
              },
              {
                "Zil": ",P-INBUF",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-INBUF"
                  }
                ]
              },
              {
                "Zil": ",P-LEXV",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-LEXV"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<SET WRD <GET ,P-LEXV 1>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "WRD"
              },
              {
                "Zil": "<GET ,P-LEXV 1>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  {
                    "Zil": ",P-LEXV",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-LEXV"
                      }
                    ]
                  },
                  1
                ]
              }
            ]
          },
          {
            "Zil": "<COND (<EQUAL? .WRD ,W?RESTART> <RESTART> <TELL \"Failed.\" CR>) (<EQUAL? .WRD ,W?RESTORE> <COND (<RESTORE> <TELL \"Ok.\" CR>) (T <TELL \"Failed.\" CR>)>) (<EQUAL? .WRD ,W?QUIT ,W?Q> <QUIT>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<EQUAL? .WRD ,W?RESTART>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".WRD",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "WRD"
                        }
                      ]
                    },
                    {
                      "Zil": ",W?RESTART",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "W?RESTART"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RESTART>",
                  "Form": [
                    {
                      "Atom": "RESTART"
                    }
                  ]
                },
                {
                  "Zil": "<TELL \"Failed.\" CR>",
                  "Form": [
                    {
                      "Atom": "TELL"
                    },
                    "Failed.",
                    {
                      "Atom": "CR"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<EQUAL? .WRD ,W?RESTORE>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".WRD",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "WRD"
                        }
                      ]
                    },
                    {
                      "Zil": ",W?RESTORE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "W?RESTORE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<RESTORE> <TELL \"Ok.\" CR>) (T <TELL \"Failed.\" CR>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<RESTORE>",
                        "Form": [
                          {
                            "Atom": "RESTORE"
                          }
                        ]
                      },
                      {
                        "Zil": "<TELL \"Ok.\" CR>",
                        "Form": [
                          {
                            "Atom": "TELL"
                          },
                          "Ok.",
                          {
                            "Atom": "CR"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<TELL \"Failed.\" CR>",
                        "Form": [
                          {
                            "Atom": "TELL"
                          },
                          "Failed.",
                          {
                            "Atom": "CR"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ],
              [
                {
                  "Zil": "<EQUAL? .WRD ,W?QUIT ,W?Q>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".WRD",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "WRD"
                        }
                      ]
                    },
                    {
                      "Zil": ",W?QUIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "W?QUIT"
                        }
                      ]
                    },
                    {
                      "Zil": ",W?Q",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "W?Q"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<QUIT>",
                  "Form": [
                    {
                      "Atom": "QUIT"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:55",
    "Name": "V-QUIT",
    "ArgSpec": "(\"AUX\" SCOR)",
    "Body": [
      {
        "Zil": "<V-SCORE>",
        "Form": [
          {
            "Atom": "V-SCORE"
          }
        ]
      },
      {
        "Zil": "<TELL \"Do you wish to leave the game? (Y is affirmative): \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Do you wish to leave the game? (Y is affirmative): "
        ]
      },
      {
        "Zil": "<COND (<YES?> <QUIT>) (ELSE <TELL \"Ok.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<YES?>",
              "Form": [
                {
                  "Atom": "YES?"
                }
              ]
            },
            {
              "Zil": "<QUIT>",
              "Form": [
                {
                  "Atom": "QUIT"
                }
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<TELL \"Ok.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Ok.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:63",
    "Name": "V-RESTART",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<V-SCORE T>",
        "Form": [
          {
            "Atom": "V-SCORE"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<TELL \"Do you wish to restart? (Y is affirmative): \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Do you wish to restart? (Y is affirmative): "
        ]
      },
      {
        "Zil": "<COND (<YES?> <TELL \"Restarting.\" CR> <RESTART> <TELL \"Failed.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<YES?>",
              "Form": [
                {
                  "Atom": "YES?"
                }
              ]
            },
            {
              "Zil": "<TELL \"Restarting.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Restarting.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RESTART>",
              "Form": [
                {
                  "Atom": "RESTART"
                }
              ]
            },
            {
              "Zil": "<TELL \"Failed.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Failed.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:71",
    "Name": "V-RESTORE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<RESTORE> <TELL \"Ok.\" CR> <V-FIRST-LOOK>) (T <TELL \"Failed.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<RESTORE>",
              "Form": [
                {
                  "Atom": "RESTORE"
                }
              ]
            },
            {
              "Zil": "<TELL \"Ok.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Ok.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<V-FIRST-LOOK>",
              "Form": [
                {
                  "Atom": "V-FIRST-LOOK"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Failed.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Failed.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:78",
    "Name": "V-SAVE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<SAVE> <TELL \"Ok.\" CR>) (T <TELL \"Failed.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SAVE>",
              "Form": [
                {
                  "Atom": "SAVE"
                }
              ]
            },
            {
              "Zil": "<TELL \"Ok.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Ok.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Failed.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Failed.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:86",
    "Name": "V-SCRIPT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<PUT 0 8 <BOR <GET 0 8> 1>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          0,
          8,
          {
            "Zil": "<BOR <GET 0 8> 1>",
            "Form": [
              {
                "Atom": "BOR"
              },
              {
                "Zil": "<GET 0 8>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  0,
                  8
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \"Here begins a transcript of interaction with\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Here begins a transcript of interaction with",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<V-VERSION>",
        "Form": [
          {
            "Atom": "V-VERSION"
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:92",
    "Name": "V-UNSCRIPT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Here ends a transcript of interaction with\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Here ends a transcript of interaction with",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<V-VERSION>",
        "Form": [
          {
            "Atom": "V-VERSION"
          }
        ]
      },
      {
        "Zil": "<PUT 0 8 <BAND <GET 0 8> -2>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          0,
          8,
          {
            "Zil": "<BAND <GET 0 8> -2>",
            "Form": [
              {
                "Atom": "BAND"
              },
              {
                "Zil": "<GET 0 8>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  0,
                  8
                ]
              },
              -2
            ]
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:98",
    "Name": "V-VERSION",
    "ArgSpec": "(\"AUX\" (CNT 17))",
    "Body": [
      {
        "Zil": "<TELL \"ZORK III: The Dungeon Master|\r\nInfocom interactive fiction - a fantasy story|\r\nCopyright 1982, 1983, 1984, 1986\">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "ZORK III: The Dungeon Master|\r\nInfocom interactive fiction - a fantasy story|\r\nCopyright 1982, 1983, 1984, 1986"
        ]
      },
      {
        "Zil": "<TELL \" Infocom, Inc. All rights reserved.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          " Infocom, Inc. All rights reserved.",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<TELL \"ZORK is a registered trademark of Infocom, Inc.|\r\nRelease \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "ZORK is a registered trademark of Infocom, Inc.|\r\nRelease "
        ]
      },
      {
        "Zil": "<PRINTN <BAND <GET 0 1> 2047>>",
        "Form": [
          {
            "Atom": "PRINTN"
          },
          {
            "Zil": "<BAND <GET 0 1> 2047>",
            "Form": [
              {
                "Atom": "BAND"
              },
              {
                "Zil": "<GET 0 1>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  0,
                  1
                ]
              },
              2047
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \" / Serial number \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          " / Serial number "
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> 23> <RETURN>) (T <PRINTC <GETB 0 .CNT>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<G? <SET CNT <+ .CNT 1>> 23> <RETURN>) (T <PRINTC <GETB 0 .CNT>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<G? <SET CNT <+ .CNT 1>> 23>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": "<SET CNT <+ .CNT 1>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "CNT"
                        },
                        {
                          "Zil": "<+ .CNT 1>",
                          "Form": [
                            {
                              "Atom": "+"
                            },
                            {
                              "Zil": ".CNT",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "CNT"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    },
                    23
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<PRINTC <GETB 0 .CNT>>",
                  "Form": [
                    {
                      "Atom": "PRINTC"
                    },
                    {
                      "Zil": "<GETB 0 .CNT>",
                      "Form": [
                        {
                          "Atom": "GETB"
                        },
                        0,
                        {
                          "Zil": ".CNT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "CNT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Zil": "<CRLF>",
        "Form": [
          {
            "Atom": "CRLF"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:123",
    "Name": "V-VERIFY",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Verifying disk...\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Verifying disk...",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<COND (<VERIFY> <TELL \"The disk is correct.\" CR>) (T <TELL CR \"** Disk Failure **\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERIFY>",
              "Form": [
                {
                  "Atom": "VERIFY"
                }
              ]
            },
            {
              "Zil": "<TELL \"The disk is correct.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The disk is correct.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL CR \"** Disk Failure **\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Atom": "CR"
                },
                "** Disk Failure **",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:130",
    "Name": "V-COMMAND-FILE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<DIRIN 1>",
        "Form": [
          {
            "Atom": "DIRIN"
          },
          1
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:134",
    "Name": "V-RANDOM",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT <EQUAL? ,PRSO ,INTNUM>> <TELL \"Illegal call to #RND.\" CR>) (T <RANDOM <- 0 ,P-NUMBER>> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <EQUAL? ,PRSO ,INTNUM>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<EQUAL? ,PRSO ,INTNUM>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",INTNUM",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "INTNUM"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Illegal call to #RND.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Illegal call to #RND.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<RANDOM <- 0 ,P-NUMBER>>",
              "Form": [
                {
                  "Atom": "RANDOM"
                },
                {
                  "Zil": "<- 0 ,P-NUMBER>",
                  "Form": [
                    {
                      "Atom": "-"
                    },
                    0,
                    {
                      "Zil": ",P-NUMBER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-NUMBER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:141",
    "Name": "V-RECORD",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<DIROUT 4>",
        "Form": [
          {
            "Atom": "DIROUT"
          },
          4
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:145",
    "Name": "V-UNRECORD",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<DIROUT -4>",
        "Form": [
          {
            "Atom": "DIROUT"
          },
          -4
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:153",
    "Name": "V-ADVENT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"A hollow voice says \\\"Fool.\\\"\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "A hollow voice says \"Fool.\"",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:175",
    "Name": "V-ALARM",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <COND (<NULL-F> <RTRUE>) (T <TELL \"He's wide awake, or haven't you noticed...\" CR>)>) (T <TELL \"The \" D ,PRSO \" isn't sleeping.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,ACTORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",ACTORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NULL-F> <RTRUE>) (T <TELL \"He's wide awake, or haven't you noticed...\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NULL-F>",
                    "Form": [
                      {
                        "Atom": "NULL-F"
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"He's wide awake, or haven't you noticed...\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "He's wide awake, or haven't you noticed...",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"The \" D ,PRSO \" isn't sleeping.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " isn't sleeping.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:189",
    "Name": "V-ANSWER",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Nobody seems to be awaiting your answer.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Nobody seems to be awaiting your answer.",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<SETG P-CONT <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-CONT"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<SETG QUOTE-FLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "QUOTE-FLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:195",
    "Name": "V-ATTACK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT <FSET? ,PRSO ,ACTORBIT>> <TELL \"I've known strange people, but fighting a \" D ,PRSO \"?\" CR>) (<OR <NOT ,PRSI> <EQUAL? ,PRSI ,HANDS>> <TELL \"Trying to attack a \" D ,PRSO \" with your bare hands is suicidal.\" CR>) (<NOT <IN? ,PRSI ,WINNER>> <TELL \"You aren't even holding the \" D ,PRSI \".\" CR>) (<NOT <FSET? ,PRSI ,WEAPONBIT>> <TELL \"Trying to attack the \" D ,PRSO \" with a \" D ,PRSI \" is suicidal.\" CR>) (T <TELL \"You can't.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <FSET? ,PRSO ,ACTORBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,PRSO ,ACTORBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",ACTORBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ACTORBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"I've known strange people, but fighting a \" D ,PRSO \"?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "I've known strange people, but fighting a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                "?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<OR <NOT ,PRSI> <EQUAL? ,PRSI ,HANDS>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<NOT ,PRSI>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,PRSI ,HANDS>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",HANDS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HANDS"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Trying to attack a \" D ,PRSO \" with your bare hands is suicidal.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Trying to attack a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " with your bare hands is suicidal.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <IN? ,PRSI ,WINNER>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<IN? ,PRSI ,WINNER>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You aren't even holding the \" D ,PRSI \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You aren't even holding the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <FSET? ,PRSI ,WEAPONBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,PRSI ,WEAPONBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",WEAPONBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WEAPONBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Trying to attack the \" D ,PRSO \" with a \" D ,PRSI \" is suicidal.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Trying to attack the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " with a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                " is suicidal.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:214",
    "Name": "V-BACK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Sorry, my memory is poor. Please give a direction.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Sorry, my memory is poor. Please give a direction.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:217",
    "Name": "V-BLAST",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You can't blast anything by using words.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You can't blast anything by using words.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:220",
    "Name": "PRE-BOARD",
    "ArgSpec": "(\"AUX\" AV)",
    "Body": [
      {
        "Zil": "<SET AV <LOC ,WINNER>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "AV"
          },
          {
            "Zil": "<LOC ,WINNER>",
            "Form": [
              {
                "Atom": "LOC"
              },
              {
                "Zil": ",WINNER",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "WINNER"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<EQUAL? ,PRSO ,WATER-CHANNEL ,TM-SEAT ,LAKE> <RFALSE>) (<FSET? ,PRSO ,VEHBIT> <COND (<NOT <IN? ,PRSO ,HERE>> <TELL \"The \" D ,PRSO \" must be on the ground to be boarded.\" CR>) (<FSET? .AV ,VEHBIT> <TELL \"You are already in the \" D .AV \"!\" CR>) (T <RFALSE>)>) (<EQUAL? ,PRSO ,WATER ,GLOBAL-WATER> <PERFORM ,V?SWIM ,PRSO> <RTRUE>) (T <TELL \"You have a theory on how to board a \" D ,PRSO \", perhaps?\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSO ,WATER-CHANNEL ,TM-SEAT ,LAKE>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",WATER-CHANNEL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WATER-CHANNEL"
                    }
                  ]
                },
                {
                  "Zil": ",TM-SEAT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-SEAT"
                    }
                  ]
                },
                {
                  "Zil": ",LAKE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LAKE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? ,PRSO ,VEHBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",VEHBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "VEHBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <IN? ,PRSO ,HERE>> <TELL \"The \" D ,PRSO \" must be on the ground to be boarded.\" CR>) (<FSET? .AV ,VEHBIT> <TELL \"You are already in the \" D .AV \"!\" CR>) (T <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <IN? ,PRSO ,HERE>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<IN? ,PRSO ,HERE>",
                        "Form": [
                          {
                            "Atom": "IN?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" must be on the ground to be boarded.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " must be on the ground to be boarded.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<FSET? .AV ,VEHBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ".AV",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "AV"
                          }
                        ]
                      },
                      {
                        "Zil": ",VEHBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "VEHBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You are already in the \" D .AV \"!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You are already in the ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".AV",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "AV"
                          }
                        ]
                      },
                      "!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,PRSO ,WATER ,GLOBAL-WATER>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",WATER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WATER"
                    }
                  ]
                },
                {
                  "Zil": ",GLOBAL-WATER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GLOBAL-WATER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?SWIM ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?SWIM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?SWIM"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You have a theory on how to board a \" D ,PRSO \", perhaps?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You have a theory on how to board a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ", perhaps?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<RFATAL>",
        "Form": [
          {
            "Atom": "RFATAL"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:243",
    "Name": "V-BOARD",
    "ArgSpec": "(\"AUX\" AV)",
    "Body": [
      {
        "Zil": "<TELL \"You are now in the \" D ,PRSO \".\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You are now in the ",
          {
            "Atom": "D"
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          },
          ".",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<MOVE ,WINNER ,PRSO>",
        "Form": [
          {
            "Atom": "MOVE"
          },
          {
            "Zil": ",WINNER",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "WINNER"
              }
            ]
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<APPLY <GETP ,PRSO ,P?ACTION> ,M-ENTER>",
        "Form": [
          {
            "Atom": "APPLY"
          },
          {
            "Zil": "<GETP ,PRSO ,P?ACTION>",
            "Form": [
              {
                "Atom": "GETP"
              },
              {
                "Zil": ",PRSO",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "PRSO"
                  }
                ]
              },
              {
                "Zil": ",P?ACTION",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P?ACTION"
                  }
                ]
              }
            ]
          },
          {
            "Zil": ",M-ENTER",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "M-ENTER"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:249",
    "Name": "V-BREATHE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<PERFORM ,V?INFLATE ,PRSO ,LUNGS>",
        "Form": [
          {
            "Atom": "PERFORM"
          },
          {
            "Zil": ",V?INFLATE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "V?INFLATE"
              }
            ]
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          },
          {
            "Zil": ",LUNGS",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "LUNGS"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:252",
    "Name": "V-BRUSH",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"If you wish, but heaven only knows why.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "If you wish, but heaven only knows why.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:255",
    "Name": "V-BUG",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Bug? Not in a flawless program like this! (Cough, cough).\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Bug? Not in a flawless program like this! (Cough, cough).",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:259",
    "Name": "TELL-NO-PRSI",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You didn't say with what!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You didn't say with what!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:262",
    "Name": "PRE-BURN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT ,PRSI> <TELL-NO-PRSI>) (<FLAMING? ,PRSI> <RFALSE>) (T <TELL \"With a \" D ,PRSI \"??!?\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,PRSI>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL-NO-PRSI>",
              "Form": [
                {
                  "Atom": "TELL-NO-PRSI"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FLAMING? ,PRSI>",
              "Form": [
                {
                  "Atom": "FLAMING?"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"With a \" D ,PRSI \"??!?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "With a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                "??!?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:270",
    "Name": "V-BURN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NULL-F> <RFALSE>) (<FSET? ,PRSO ,BURNBIT> <COND (<OR <IN? ,PRSO ,WINNER> <IN? ,WINNER ,PRSO>> <REMOVE-CAREFULLY ,PRSO> <TELL \"The \" D ,PRSO> <TELL \" catches fire. Unfortunately, you were \"> <COND (<IN? ,WINNER ,PRSO> <TELL \"in\">) (T <TELL \"holding\">)> <JIGS-UP \" it at the time.\">) (T <REMOVE-CAREFULLY ,PRSO> <TELL \"The \" D ,PRSO \" catches fire and is consumed.\" CR>)>) (T <TELL \"You can't burn a \" D ,PRSO \".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? ,PRSO ,BURNBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",BURNBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "BURNBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<OR <IN? ,PRSO ,WINNER> <IN? ,WINNER ,PRSO>> <REMOVE-CAREFULLY ,PRSO> <TELL \"The \" D ,PRSO> <TELL \" catches fire. Unfortunately, you were \"> <COND (<IN? ,WINNER ,PRSO> <TELL \"in\">) (T <TELL \"holding\">)> <JIGS-UP \" it at the time.\">) (T <REMOVE-CAREFULLY ,PRSO> <TELL \"The \" D ,PRSO \" catches fire and is consumed.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR <IN? ,PRSO ,WINNER> <IN? ,WINNER ,PRSO>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<IN? ,PRSO ,WINNER>",
                        "Form": [
                          {
                            "Atom": "IN?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<IN? ,WINNER ,PRSO>",
                        "Form": [
                          {
                            "Atom": "IN?"
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<REMOVE-CAREFULLY ,PRSO>",
                    "Form": [
                      {
                        "Atom": "REMOVE-CAREFULLY"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" catches fire. Unfortunately, you were \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " catches fire. Unfortunately, you were "
                    ]
                  },
                  {
                    "Zil": "<COND (<IN? ,WINNER ,PRSO> <TELL \"in\">) (T <TELL \"holding\">)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<IN? ,WINNER ,PRSO>",
                          "Form": [
                            {
                              "Atom": "IN?"
                            },
                            {
                              "Zil": ",WINNER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "WINNER"
                                }
                              ]
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"in\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "in"
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"holding\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "holding"
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<JIGS-UP \" it at the time.\">",
                    "Form": [
                      {
                        "Atom": "JIGS-UP"
                      },
                      " it at the time."
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<REMOVE-CAREFULLY ,PRSO>",
                    "Form": [
                      {
                        "Atom": "REMOVE-CAREFULLY"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" catches fire and is consumed.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " catches fire and is consumed.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't burn a \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't burn a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:295",
    "Name": "V-CHOMP",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Preposterous!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Preposterous!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:298",
    "Name": "V-CLIMB-DOWN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<V-CLIMB-UP ,P?DOWN ,PRSO>",
        "Form": [
          {
            "Atom": "V-CLIMB-UP"
          },
          {
            "Zil": ",P?DOWN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P?DOWN"
              }
            ]
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:300",
    "Name": "V-CLIMB-FOO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<V-CLIMB-UP <COND (<EQUAL? ,PRSO ,ROPE ,GLOBAL-ROPE> ,P?DOWN) (T ,P?UP)> T>",
        "Form": [
          {
            "Atom": "V-CLIMB-UP"
          },
          {
            "Zil": "<COND (<EQUAL? ,PRSO ,ROPE ,GLOBAL-ROPE> ,P?DOWN) (T ,P?UP)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<EQUAL? ,PRSO ,ROPE ,GLOBAL-ROPE>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",ROPE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ROPE"
                        }
                      ]
                    },
                    {
                      "Zil": ",GLOBAL-ROPE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "GLOBAL-ROPE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",P?DOWN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?DOWN"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": ",P?UP",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?UP"
                    }
                  ]
                }
              ]
            ]
          },
          {
            "Atom": "T"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:309",
    "Name": "V-CLIMB-ON",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,VEHBIT> <V-CLIMB-UP ,P?UP T> <RTRUE>) (T <TELL \"You can't climb onto the \" D ,PRSO \".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,VEHBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",VEHBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "VEHBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<V-CLIMB-UP ,P?UP T>",
              "Form": [
                {
                  "Atom": "V-CLIMB-UP"
                },
                {
                  "Zil": ",P?UP",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?UP"
                    }
                  ]
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't climb onto the \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't climb onto the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:319",
    "Name": "V-CLIMB-UP",
    "ArgSpec": "(\"OPT\" (DIR ,P?UP) (OBJ <>) \"AUX\" X TX)",
    "Body": [
      {
        "Zil": "<COND (<AND .OBJ <NOT <EQUAL? ,PRSO ,ROOMS>>> <SET OBJ ,PRSO>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND .OBJ <NOT <EQUAL? ,PRSO ,ROOMS>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <EQUAL? ,PRSO ,ROOMS>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? ,PRSO ,ROOMS>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",ROOMS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "ROOMS"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET OBJ ,PRSO>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "OBJ"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<SET TX <GETPT ,HERE .DIR>> <COND (.OBJ <SET X <PTSIZE .TX>> <COND (<OR <EQUAL? .X ,NEXIT> <AND <EQUAL? .X ,CEXIT ,DEXIT ,UEXIT> <NOT <GLOBAL-IN? ,PRSO <GETB .TX 0>>>>> <TELL \"The \" D .OBJ \" do\"> <COND (<NOT <EQUAL? .OBJ ,STAIRS>> <TELL \"es\">)> <TELL \"n't lead \"> <COND (<==? .DIR ,P?UP> <TELL \"up\">) (T <TELL \"down\">)> <TELL \"ward.\" CR> <RTRUE>)>)> <DO-WALK .DIR> <RTRUE>) (<AND .OBJ <ZMEMQ ,W?WALL <SET X <GETPT ,PRSO ,P?SYNONYM>> <PTSIZE .X>>> <TELL \"Climbing the walls is to no avail.\" CR>) (<NULL-F> <TELL \"There are no climbable trees here.\" CR> <RTRUE>) (<EQUAL? .OBJ <> ,ROOMS> <TELL \"You can't go that way.\" CR>) (T <TELL \"You can't do that!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET TX <GETPT ,HERE .DIR>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TX"
                },
                {
                  "Zil": "<GETPT ,HERE .DIR>",
                  "Form": [
                    {
                      "Atom": "GETPT"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ".DIR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "DIR"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (.OBJ <SET X <PTSIZE .TX>> <COND (<OR <EQUAL? .X ,NEXIT> <AND <EQUAL? .X ,CEXIT ,DEXIT ,UEXIT> <NOT <GLOBAL-IN? ,PRSO <GETB .TX 0>>>>> <TELL \"The \" D .OBJ \" do\"> <COND (<NOT <EQUAL? .OBJ ,STAIRS>> <TELL \"es\">)> <TELL \"n't lead \"> <COND (<==? .DIR ,P?UP> <TELL \"up\">) (T <TELL \"down\">)> <TELL \"ward.\" CR> <RTRUE>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ".OBJ",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "OBJ"
                      }
                    ]
                  },
                  {
                    "Zil": "<SET X <PTSIZE .TX>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "X"
                      },
                      {
                        "Zil": "<PTSIZE .TX>",
                        "Form": [
                          {
                            "Atom": "PTSIZE"
                          },
                          {
                            "Zil": ".TX",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TX"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<OR <EQUAL? .X ,NEXIT> <AND <EQUAL? .X ,CEXIT ,DEXIT ,UEXIT> <NOT <GLOBAL-IN? ,PRSO <GETB .TX 0>>>>> <TELL \"The \" D .OBJ \" do\"> <COND (<NOT <EQUAL? .OBJ ,STAIRS>> <TELL \"es\">)> <TELL \"n't lead \"> <COND (<==? .DIR ,P?UP> <TELL \"up\">) (T <TELL \"down\">)> <TELL \"ward.\" CR> <RTRUE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<OR <EQUAL? .X ,NEXIT> <AND <EQUAL? .X ,CEXIT ,DEXIT ,UEXIT> <NOT <GLOBAL-IN? ,PRSO <GETB .TX 0>>>>>",
                          "Form": [
                            {
                              "Atom": "OR"
                            },
                            {
                              "Zil": "<EQUAL? .X ,NEXIT>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".X",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "X"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",NEXIT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "NEXIT"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<AND <EQUAL? .X ,CEXIT ,DEXIT ,UEXIT> <NOT <GLOBAL-IN? ,PRSO <GETB .TX 0>>>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<EQUAL? .X ,CEXIT ,DEXIT ,UEXIT>",
                                  "Form": [
                                    {
                                      "Atom": "EQUAL?"
                                    },
                                    {
                                      "Zil": ".X",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "X"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",CEXIT",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "CEXIT"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",DEXIT",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "DEXIT"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",UEXIT",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "UEXIT"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<NOT <GLOBAL-IN? ,PRSO <GETB .TX 0>>>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": "<GLOBAL-IN? ,PRSO <GETB .TX 0>>",
                                      "Form": [
                                        {
                                          "Atom": "GLOBAL-IN?"
                                        },
                                        {
                                          "Zil": ",PRSO",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "PRSO"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<GETB .TX 0>",
                                          "Form": [
                                            {
                                              "Atom": "GETB"
                                            },
                                            {
                                              "Zil": ".TX",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "TX"
                                                }
                                              ]
                                            },
                                            0
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The \" D .OBJ \" do\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ".OBJ",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "OBJ"
                                }
                              ]
                            },
                            " do"
                          ]
                        },
                        {
                          "Zil": "<COND (<NOT <EQUAL? .OBJ ,STAIRS>> <TELL \"es\">)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<NOT <EQUAL? .OBJ ,STAIRS>>",
                                "Form": [
                                  {
                                    "Atom": "NOT"
                                  },
                                  {
                                    "Zil": "<EQUAL? .OBJ ,STAIRS>",
                                    "Form": [
                                      {
                                        "Atom": "EQUAL?"
                                      },
                                      {
                                        "Zil": ".OBJ",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "OBJ"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",STAIRS",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "STAIRS"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<TELL \"es\">",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "es"
                                ]
                              }
                            ]
                          ]
                        },
                        {
                          "Zil": "<TELL \"n't lead \">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "n't lead "
                          ]
                        },
                        {
                          "Zil": "<COND (<==? .DIR ,P?UP> <TELL \"up\">) (T <TELL \"down\">)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<==? .DIR ,P?UP>",
                                "Form": [
                                  {
                                    "Atom": "==?"
                                  },
                                  {
                                    "Zil": ".DIR",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "DIR"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P?UP",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P?UP"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<TELL \"up\">",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "up"
                                ]
                              }
                            ],
                            [
                              {
                                "Atom": "T"
                              },
                              {
                                "Zil": "<TELL \"down\">",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "down"
                                ]
                              }
                            ]
                          ]
                        },
                        {
                          "Zil": "<TELL \"ward.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "ward.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<DO-WALK .DIR>",
              "Form": [
                {
                  "Atom": "DO-WALK"
                },
                {
                  "Zil": ".DIR",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DIR"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND .OBJ <ZMEMQ ,W?WALL <SET X <GETPT ,PRSO ,P?SYNONYM>> <PTSIZE .X>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": "<ZMEMQ ,W?WALL <SET X <GETPT ,PRSO ,P?SYNONYM>> <PTSIZE .X>>",
                  "Form": [
                    {
                      "Atom": "ZMEMQ"
                    },
                    {
                      "Zil": ",W?WALL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "W?WALL"
                        }
                      ]
                    },
                    {
                      "Zil": "<SET X <GETPT ,PRSO ,P?SYNONYM>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "X"
                        },
                        {
                          "Zil": "<GETPT ,PRSO ,P?SYNONYM>",
                          "Form": [
                            {
                              "Atom": "GETPT"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",P?SYNONYM",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P?SYNONYM"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<PTSIZE .X>",
                      "Form": [
                        {
                          "Atom": "PTSIZE"
                        },
                        {
                          "Zil": ".X",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "X"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Climbing the walls is to no avail.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Climbing the walls is to no avail.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<TELL \"There are no climbable trees here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There are no climbable trees here.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? .OBJ <> ,ROOMS>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": "<>",
                  "Form": []
                },
                {
                  "Zil": ",ROOMS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ROOMS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't go that way.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't go that way.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't do that!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't do that!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:355",
    "Name": "V-CLOSE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <NOT <FSET? ,PRSO ,CONTBIT>> <NOT <FSET? ,PRSO ,DOORBIT>>> <TELL \"You must tell me how to do that to a \" D ,PRSO \".\" CR>) (<AND <NOT <FSET? ,PRSO ,SURFACEBIT>> <NOT <EQUAL? <GETP ,PRSO ,P?CAPACITY> 0>>> <COND (<FSET? ,PRSO ,OPENBIT> <FCLEAR ,PRSO ,OPENBIT> <TELL \"Closed.\" CR> <COND (<AND ,LIT <NOT <SETG LIT <LIT? ,HERE>>>> <TELL \"It is now pitch black.\" CR>)> <RTRUE>) (T <TELL \"It is already closed.\" CR>)>) (<FSET? ,PRSO ,DOORBIT> <COND (<FSET? ,PRSO ,OPENBIT> <FCLEAR ,PRSO ,OPENBIT> <TELL \"The \" D ,PRSO \" is now closed.\" CR>) (T <TELL \"It is already closed.\" CR>)>) (T <TELL \"You cannot close that.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <NOT <FSET? ,PRSO ,CONTBIT>> <NOT <FSET? ,PRSO ,DOORBIT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT <FSET? ,PRSO ,CONTBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? ,PRSO ,CONTBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",CONTBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CONTBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? ,PRSO ,DOORBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? ,PRSO ,DOORBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",DOORBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "DOORBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You must tell me how to do that to a \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You must tell me how to do that to a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <NOT <FSET? ,PRSO ,SURFACEBIT>> <NOT <EQUAL? <GETP ,PRSO ,P?CAPACITY> 0>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT <FSET? ,PRSO ,SURFACEBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? ,PRSO ,SURFACEBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",SURFACEBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "SURFACEBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <EQUAL? <GETP ,PRSO ,P?CAPACITY> 0>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? <GETP ,PRSO ,P?CAPACITY> 0>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": "<GETP ,PRSO ,P?CAPACITY>",
                          "Form": [
                            {
                              "Atom": "GETP"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",P?CAPACITY",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P?CAPACITY"
                                }
                              ]
                            }
                          ]
                        },
                        0
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,OPENBIT> <FCLEAR ,PRSO ,OPENBIT> <TELL \"Closed.\" CR> <COND (<AND ,LIT <NOT <SETG LIT <LIT? ,HERE>>>> <TELL \"It is now pitch black.\" CR>)> <RTRUE>) (T <TELL \"It is already closed.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,PRSO ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Closed.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Closed.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<AND ,LIT <NOT <SETG LIT <LIT? ,HERE>>>> <TELL \"It is now pitch black.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<AND ,LIT <NOT <SETG LIT <LIT? ,HERE>>>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": ",LIT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "LIT"
                                }
                              ]
                            },
                            {
                              "Zil": "<NOT <SETG LIT <LIT? ,HERE>>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<SETG LIT <LIT? ,HERE>>",
                                  "Form": [
                                    {
                                      "Atom": "SETG"
                                    },
                                    {
                                      "Atom": "LIT"
                                    },
                                    {
                                      "Zil": "<LIT? ,HERE>",
                                      "Form": [
                                        {
                                          "Atom": "LIT?"
                                        },
                                        {
                                          "Zil": ",HERE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "HERE"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"It is now pitch black.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "It is now pitch black.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"It is already closed.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It is already closed.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? ,PRSO ,DOORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",DOORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "DOORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,OPENBIT> <FCLEAR ,PRSO ,OPENBIT> <TELL \"The \" D ,PRSO \" is now closed.\" CR>) (T <TELL \"It is already closed.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,PRSO ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" is now closed.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " is now closed.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"It is already closed.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It is already closed.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You cannot close that.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You cannot close that.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:378",
    "Name": "V-COMMAND",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"The \" D ,PRSO \" pays no attention.\" CR>) (T <TELL \"You cannot talk to that!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,ACTORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",ACTORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D ,PRSO \" pays no attention.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " pays no attention.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You cannot talk to that!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You cannot talk to that!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:384",
    "Name": "V-COUNT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,PRSO ,BLESSINGS> <TELL \"Well, for one, you are playing Zork...\" CR>) (T <TELL \"You have lost your mind.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSO ,BLESSINGS>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",BLESSINGS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "BLESSINGS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Well, for one, you are playing Zork...\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Well, for one, you are playing Zork...",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You have lost your mind.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You have lost your mind.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:390",
    "Name": "V-CROSS",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You can't cross that!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You can't cross that!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:393",
    "Name": "V-CURSES",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (,PRSO <COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"Insults of this nature won't help you.\" CR>) (T <TELL \"What a loony!\" CR>)>) (T <TELL \"Such language in a high-class establishment like this!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",PRSO",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "PRSO"
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"Insults of this nature won't help you.\" CR>) (T <TELL \"What a loony!\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,ACTORBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",ACTORBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ACTORBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Insults of this nature won't help you.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Insults of this nature won't help you.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"What a loony!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "What a loony!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Such language in a high-class establishment like this!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Such language in a high-class establishment like this!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:403",
    "Name": "V-CUT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <PERFORM ,V?ATTACK ,PRSO ,PRSI>) (<AND <FSET? ,PRSO ,BURNBIT> <FSET? ,PRSI ,WEAPONBIT>> <COND (<IN? ,WINNER ,PRSO> <TELL \"Not a bright idea, especially since you're in it.\" CR> <RTRUE>)> <REMOVE-CAREFULLY ,PRSO> <TELL \"Your skillful \" D ,PRSI \"smanship slices the \" D ,PRSO \" into innumerable slivers which blow away.\" CR>) (<NOT <FSET? ,PRSI ,WEAPONBIT>> <TELL \"The \\\"cutting edge\\\" of a \" D ,PRSI \" is hardly adequate.\" CR>) (T <TELL \"Strange concept, cutting the \" D ,PRSO \"....\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,ACTORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",ACTORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?ATTACK ,PRSO ,PRSI>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?ATTACK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?ATTACK"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <FSET? ,PRSO ,BURNBIT> <FSET? ,PRSI ,WEAPONBIT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<FSET? ,PRSO ,BURNBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",BURNBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "BURNBIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FSET? ,PRSI ,WEAPONBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",WEAPONBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WEAPONBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<IN? ,WINNER ,PRSO> <TELL \"Not a bright idea, especially since you're in it.\" CR> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<IN? ,WINNER ,PRSO>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ",WINNER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WINNER"
                          }
                        ]
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Not a bright idea, especially since you're in it.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Not a bright idea, especially since you're in it.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<REMOVE-CAREFULLY ,PRSO>",
              "Form": [
                {
                  "Atom": "REMOVE-CAREFULLY"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Your skillful \" D ,PRSI \"smanship slices the \" D ,PRSO \" into innumerable slivers which blow away.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Your skillful ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                "smanship slices the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " into innumerable slivers which blow away.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <FSET? ,PRSI ,WEAPONBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,PRSI ,WEAPONBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",WEAPONBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WEAPONBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \\\"cutting edge\\\" of a \" D ,PRSI \" is hardly adequate.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The \"cutting edge\" of a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                " is hardly adequate.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Strange concept, cutting the \" D ,PRSO \"....\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Strange concept, cutting the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                "....",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:421",
    "Name": "V-DEFLATE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Come on, now!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Come on, now!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:424",
    "Name": "V-DIG",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT ,PRSI> <SETG PRSI ,HANDS>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,PRSI>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG PRSI ,HANDS>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "PRSI"
                },
                {
                  "Zil": ",HANDS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HANDS"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Atom": "T"
      },
      {
        "Zil": "<COND (<FSET? ,PRSI ,TOOLBIT> <TELL \"Digging with the \" D ,PRSI \" is slow and tedious.\" CR>) (T <TELL \"Digging with a \" D ,PRSI \" is silly.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSI ,TOOLBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                {
                  "Zil": ",TOOLBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TOOLBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Digging with the \" D ,PRSI \" is slow and tedious.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Digging with the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                " is slow and tedious.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Digging with a \" D ,PRSI \" is silly.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Digging with a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                " is silly.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:437",
    "Name": "V-DISEMBARK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <EQUAL? ,PRSO ,ROOMS> <FSET? <LOC ,WINNER> ,VEHBIT>> <PERFORM ,V?DISEMBARK <LOC ,WINNER>> <RTRUE>) (<NOT <EQUAL? <LOC ,WINNER> ,PRSO>> <TELL \"You're not in that!\" CR> <RFATAL>) (<FSET? ,HERE ,RLANDBIT> <TELL \"You are on your own feet again.\" CR> <MOVE ,WINNER ,HERE>) (T <TELL \"You realize that getting out here would be fatal.\" CR> <RFATAL>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <EQUAL? ,PRSO ,ROOMS> <FSET? <LOC ,WINNER> ,VEHBIT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<EQUAL? ,PRSO ,ROOMS>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",ROOMS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ROOMS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FSET? <LOC ,WINNER> ,VEHBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": "<LOC ,WINNER>",
                      "Form": [
                        {
                          "Atom": "LOC"
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",VEHBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VEHBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?DISEMBARK <LOC ,WINNER>>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?DISEMBARK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?DISEMBARK"
                    }
                  ]
                },
                {
                  "Zil": "<LOC ,WINNER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <EQUAL? <LOC ,WINNER> ,PRSO>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<EQUAL? <LOC ,WINNER> ,PRSO>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<LOC ,WINNER>",
                      "Form": [
                        {
                          "Atom": "LOC"
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You're not in that!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You're not in that!",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFATAL>",
              "Form": [
                {
                  "Atom": "RFATAL"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? ,HERE ,RLANDBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",RLANDBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "RLANDBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are on your own feet again.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are on your own feet again.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<MOVE ,WINNER ,HERE>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You realize that getting out here would be fatal.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You realize that getting out here would be fatal.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFATAL>",
              "Form": [
                {
                  "Atom": "RFATAL"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:453",
    "Name": "V-DISENCHANT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Nothing happens.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Nothing happens.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:487",
    "Name": "V-DRINK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<V-EAT>",
        "Form": [
          {
            "Atom": "V-EAT"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:490",
    "Name": "V-DRINK-FROM",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"How peculiar!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "How peculiar!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:493",
    "Name": "PRE-DROP",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,PRSO <LOC ,WINNER>> <PERFORM ,V?DISEMBARK ,PRSO> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSO <LOC ,WINNER>>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": "<LOC ,WINNER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?DISEMBARK ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?DISEMBARK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?DISEMBARK"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:498",
    "Name": "V-DROP",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<IDROP> <TELL \"Dropped.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IDROP>",
              "Form": [
                {
                  "Atom": "IDROP"
                }
              ]
            },
            {
              "Zil": "<TELL \"Dropped.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Dropped.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:502",
    "Name": "V-EAT",
    "ArgSpec": "(\"AUX\" (EAT? <>) (DRINK? <>) (NOBJ <>))",
    "Body": [
      {
        "Zil": "<COND (<SET EAT? <FSET? ,PRSO ,FOODBIT>> <COND (<AND <NOT <IN? ,PRSO ,WINNER>> <NOT <IN? <LOC ,PRSO> ,WINNER>>> <TELL \"You're not holding that.\" CR>) (<VERB? DRINK> <TELL \"How can you drink that?\">) (T <TELL \"Thank you very much. It really hit the spot.\"> <REMOVE-CAREFULLY ,PRSO>)> <CRLF>) (<FSET? ,PRSO ,DRINKBIT> <SET DRINK? T> <SET NOBJ <LOC ,PRSO>> <COND (<OR <IN? ,PRSO ,GLOBAL-OBJECTS> <GLOBAL-IN? ,GLOBAL-WATER ,HERE> <EQUAL? ,PRSO ,PSEUDO-OBJECT>> <HIT-SPOT>) (<OR <NOT .NOBJ> <NOT <ACCESSIBLE? .NOBJ>>> <TELL \"There isn't any water here.\" CR>) (<AND <ACCESSIBLE? .NOBJ> <NOT <IN? .NOBJ ,WINNER>>> <TELL \"You have to be holding the \" D .NOBJ \" first.\" CR>) (<NOT <FSET? .NOBJ ,OPENBIT>> <TELL \"You'll have to open the \" D .NOBJ \" first.\" CR>) (T <HIT-SPOT>)>) (<NOT <OR .EAT? .DRINK?>> <TELL \"I don't think that the \" D ,PRSO \" would agree with you.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET EAT? <FSET? ,PRSO ,FOODBIT>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "EAT?"
                },
                {
                  "Zil": "<FSET? ,PRSO ,FOODBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",FOODBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "FOODBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND <NOT <IN? ,PRSO ,WINNER>> <NOT <IN? <LOC ,PRSO> ,WINNER>>> <TELL \"You're not holding that.\" CR>) (<VERB? DRINK> <TELL \"How can you drink that?\">) (T <TELL \"Thank you very much. It really hit the spot.\"> <REMOVE-CAREFULLY ,PRSO>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <NOT <IN? ,PRSO ,WINNER>> <NOT <IN? <LOC ,PRSO> ,WINNER>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<NOT <IN? ,PRSO ,WINNER>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<IN? ,PRSO ,WINNER>",
                            "Form": [
                              {
                                "Atom": "IN?"
                              },
                              {
                                "Zil": ",PRSO",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "PRSO"
                                  }
                                ]
                              },
                              {
                                "Zil": ",WINNER",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "WINNER"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <IN? <LOC ,PRSO> ,WINNER>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<IN? <LOC ,PRSO> ,WINNER>",
                            "Form": [
                              {
                                "Atom": "IN?"
                              },
                              {
                                "Zil": "<LOC ,PRSO>",
                                "Form": [
                                  {
                                    "Atom": "LOC"
                                  },
                                  {
                                    "Zil": ",PRSO",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "PRSO"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": ",WINNER",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "WINNER"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You're not holding that.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You're not holding that.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<VERB? DRINK>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "DRINK"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"How can you drink that?\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "How can you drink that?"
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"Thank you very much. It really hit the spot.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Thank you very much. It really hit the spot."
                    ]
                  },
                  {
                    "Zil": "<REMOVE-CAREFULLY ,PRSO>",
                    "Form": [
                      {
                        "Atom": "REMOVE-CAREFULLY"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? ,PRSO ,DRINKBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",DRINKBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "DRINKBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET DRINK? T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "DRINK?"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<SET NOBJ <LOC ,PRSO>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "NOBJ"
                },
                {
                  "Zil": "<LOC ,PRSO>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<OR <IN? ,PRSO ,GLOBAL-OBJECTS> <GLOBAL-IN? ,GLOBAL-WATER ,HERE> <EQUAL? ,PRSO ,PSEUDO-OBJECT>> <HIT-SPOT>) (<OR <NOT .NOBJ> <NOT <ACCESSIBLE? .NOBJ>>> <TELL \"There isn't any water here.\" CR>) (<AND <ACCESSIBLE? .NOBJ> <NOT <IN? .NOBJ ,WINNER>>> <TELL \"You have to be holding the \" D .NOBJ \" first.\" CR>) (<NOT <FSET? .NOBJ ,OPENBIT>> <TELL \"You'll have to open the \" D .NOBJ \" first.\" CR>) (T <HIT-SPOT>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR <IN? ,PRSO ,GLOBAL-OBJECTS> <GLOBAL-IN? ,GLOBAL-WATER ,HERE> <EQUAL? ,PRSO ,PSEUDO-OBJECT>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<IN? ,PRSO ,GLOBAL-OBJECTS>",
                        "Form": [
                          {
                            "Atom": "IN?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",GLOBAL-OBJECTS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "GLOBAL-OBJECTS"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<GLOBAL-IN? ,GLOBAL-WATER ,HERE>",
                        "Form": [
                          {
                            "Atom": "GLOBAL-IN?"
                          },
                          {
                            "Zil": ",GLOBAL-WATER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "GLOBAL-WATER"
                              }
                            ]
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<EQUAL? ,PRSO ,PSEUDO-OBJECT>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",PSEUDO-OBJECT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PSEUDO-OBJECT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<HIT-SPOT>",
                    "Form": [
                      {
                        "Atom": "HIT-SPOT"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<OR <NOT .NOBJ> <NOT <ACCESSIBLE? .NOBJ>>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<NOT .NOBJ>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".NOBJ",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "NOBJ"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <ACCESSIBLE? .NOBJ>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<ACCESSIBLE? .NOBJ>",
                            "Form": [
                              {
                                "Atom": "ACCESSIBLE?"
                              },
                              {
                                "Zil": ".NOBJ",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "NOBJ"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"There isn't any water here.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There isn't any water here.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <ACCESSIBLE? .NOBJ> <NOT <IN? .NOBJ ,WINNER>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<ACCESSIBLE? .NOBJ>",
                        "Form": [
                          {
                            "Atom": "ACCESSIBLE?"
                          },
                          {
                            "Zil": ".NOBJ",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "NOBJ"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <IN? .NOBJ ,WINNER>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<IN? .NOBJ ,WINNER>",
                            "Form": [
                              {
                                "Atom": "IN?"
                              },
                              {
                                "Zil": ".NOBJ",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "NOBJ"
                                  }
                                ]
                              },
                              {
                                "Zil": ",WINNER",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "WINNER"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You have to be holding the \" D .NOBJ \" first.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You have to be holding the ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".NOBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NOBJ"
                          }
                        ]
                      },
                      " first.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<NOT <FSET? .NOBJ ,OPENBIT>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? .NOBJ ,OPENBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ".NOBJ",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "NOBJ"
                              }
                            ]
                          },
                          {
                            "Zil": ",OPENBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "OPENBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You'll have to open the \" D .NOBJ \" first.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You'll have to open the ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".NOBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NOBJ"
                          }
                        ]
                      },
                      " first.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<HIT-SPOT>",
                    "Form": [
                      {
                        "Atom": "HIT-SPOT"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <OR .EAT? .DRINK?>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<OR .EAT? .DRINK?>",
                  "Form": [
                    {
                      "Atom": "OR"
                    },
                    {
                      "Zil": ".EAT?",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "EAT?"
                        }
                      ]
                    },
                    {
                      "Zil": ".DRINK?",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "DRINK?"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"I don't think that the \" D ,PRSO \" would agree with you.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "I don't think that the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " would agree with you.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:537",
    "Name": "HIT-SPOT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <EQUAL? ,PRSO ,WATER> <NOT <GLOBAL-IN? ,GLOBAL-WATER ,HERE>>> <REMOVE-CAREFULLY ,PRSO>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <EQUAL? ,PRSO ,WATER> <NOT <GLOBAL-IN? ,GLOBAL-WATER ,HERE>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<EQUAL? ,PRSO ,WATER>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",WATER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WATER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <GLOBAL-IN? ,GLOBAL-WATER ,HERE>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<GLOBAL-IN? ,GLOBAL-WATER ,HERE>",
                      "Form": [
                        {
                          "Atom": "GLOBAL-IN?"
                        },
                        {
                          "Zil": ",GLOBAL-WATER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "GLOBAL-WATER"
                            }
                          ]
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REMOVE-CAREFULLY ,PRSO>",
              "Form": [
                {
                  "Atom": "REMOVE-CAREFULLY"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<TELL \"Thank you very much. I was rather thirsty (from all this talking,\r\nprobably).\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Thank you very much. I was rather thirsty (from all this talking,\r\nprobably).",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:545",
    "Name": "V-ECHO",
    "ArgSpec": "(\"AUX\" LST MAX (ECH 0) CNT)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<TELL \"echo echo ...\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "echo echo ...",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:569",
    "Name": "V-ENCHANT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<NULL-F>",
        "Form": [
          {
            "Atom": "NULL-F"
          }
        ]
      },
      {
        "Zil": "<V-DISENCHANT>",
        "Form": [
          {
            "Atom": "V-DISENCHANT"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:629",
    "Name": "REMOVE-CAREFULLY",
    "ArgSpec": "(OBJ \"AUX\" OLIT)",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? .OBJ ,P-IT-OBJECT> <SETG P-IT-OBJECT <>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? .OBJ ,P-IT-OBJECT>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": ",P-IT-OBJECT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-IT-OBJECT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-IT-OBJECT <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-IT-OBJECT"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SET OLIT ,LIT>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OLIT"
          },
          {
            "Zil": ",LIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "LIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REMOVE .OBJ>",
        "Form": [
          {
            "Atom": "REMOVE"
          },
          {
            "Zil": ".OBJ",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "OBJ"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG LIT <LIT? ,HERE>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "LIT"
          },
          {
            "Zil": "<LIT? ,HERE>",
            "Form": [
              {
                "Atom": "LIT?"
              },
              {
                "Zil": ",HERE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "HERE"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND .OLIT <NOT <EQUAL? .OLIT ,LIT>>> <TELL \"You are left in the dark...\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND .OLIT <NOT <EQUAL? .OLIT ,LIT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ".OLIT",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OLIT"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <EQUAL? .OLIT ,LIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? .OLIT ,LIT>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ".OLIT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "OLIT"
                            }
                          ]
                        },
                        {
                          "Zil": ",LIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "LIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are left in the dark...\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are left in the dark...",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Atom": "T"
      }
    ]
  },
  {
    "Source": "GVERBS.zil:639",
    "Name": "V-ENTER",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<DO-WALK ,P?IN>",
        "Form": [
          {
            "Atom": "DO-WALK"
          },
          {
            "Zil": ",P?IN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P?IN"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:642",
    "Name": "V-EXAMINE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<GETP ,PRSO ,P?TEXT> <TELL <GETP ,PRSO ,P?TEXT> CR>) (<OR <FSET? ,PRSO ,CONTBIT> <FSET? ,PRSO ,DOORBIT>> <V-LOOK-INSIDE>) (T <TELL \"There's nothing special about the \" D ,PRSO \".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<GETP ,PRSO ,P?TEXT>",
              "Form": [
                {
                  "Atom": "GETP"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",P?TEXT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?TEXT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL <GETP ,PRSO ,P?TEXT> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<GETP ,PRSO ,P?TEXT>",
                  "Form": [
                    {
                      "Atom": "GETP"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?TEXT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?TEXT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<OR <FSET? ,PRSO ,CONTBIT> <FSET? ,PRSO ,DOORBIT>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<FSET? ,PRSO ,CONTBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",CONTBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CONTBIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FSET? ,PRSO ,DOORBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",DOORBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "DOORBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<V-LOOK-INSIDE>",
              "Form": [
                {
                  "Atom": "V-LOOK-INSIDE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"There's nothing special about the \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There's nothing special about the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:651",
    "Name": "V-EXIT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <EQUAL? ,PRSO <> ,ROOMS> <FSET? <LOC ,WINNER> ,VEHBIT>> <PERFORM ,V?DISEMBARK <LOC ,WINNER>> <RTRUE>) (<AND ,PRSO <IN? ,WINNER ,PRSO>> <PERFORM ,V?DISEMBARK ,PRSO> <RTRUE>) (ELSE <DO-WALK ,P?OUT>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <EQUAL? ,PRSO <> ,ROOMS> <FSET? <LOC ,WINNER> ,VEHBIT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<EQUAL? ,PRSO <> ,ROOMS>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": "<>",
                      "Form": []
                    },
                    {
                      "Zil": ",ROOMS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ROOMS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FSET? <LOC ,WINNER> ,VEHBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": "<LOC ,WINNER>",
                      "Form": [
                        {
                          "Atom": "LOC"
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",VEHBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VEHBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?DISEMBARK <LOC ,WINNER>>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?DISEMBARK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?DISEMBARK"
                    }
                  ]
                },
                {
                  "Zil": "<LOC ,WINNER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND ,PRSO <IN? ,WINNER ,PRSO>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,WINNER ,PRSO>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?DISEMBARK ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?DISEMBARK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?DISEMBARK"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<DO-WALK ,P?OUT>",
              "Form": [
                {
                  "Atom": "DO-WALK"
                },
                {
                  "Zil": ",P?OUT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?OUT"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:662",
    "Name": "V-EXORCISE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"What a bizarre concept!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "What a bizarre concept!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:665",
    "Name": "PRE-FILL",
    "ArgSpec": "(\"AUX\" TX)",
    "Body": [
      {
        "Zil": "<COND (<NOT ,PRSI> <SET TX <GETPT ,HERE ,P?GLOBAL>> <COND (<AND .TX <ZMEMQB ,GLOBAL-WATER .TX <- <PTSIZE .TX> 1>>> <PERFORM ,V?FILL ,PRSO ,GLOBAL-WATER> <RTRUE>) (<IN? ,WATER <LOC ,WINNER>> <PERFORM ,V?FILL ,PRSO ,WATER> <RTRUE>) (T <TELL \"There is nothing to fill it with.\" CR> <RTRUE>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,PRSI>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET TX <GETPT ,HERE ,P?GLOBAL>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TX"
                },
                {
                  "Zil": "<GETPT ,HERE ,P?GLOBAL>",
                  "Form": [
                    {
                      "Atom": "GETPT"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?GLOBAL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?GLOBAL"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND .TX <ZMEMQB ,GLOBAL-WATER .TX <- <PTSIZE .TX> 1>>> <PERFORM ,V?FILL ,PRSO ,GLOBAL-WATER> <RTRUE>) (<IN? ,WATER <LOC ,WINNER>> <PERFORM ,V?FILL ,PRSO ,WATER> <RTRUE>) (T <TELL \"There is nothing to fill it with.\" CR> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND .TX <ZMEMQB ,GLOBAL-WATER .TX <- <PTSIZE .TX> 1>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ".TX",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TX"
                          }
                        ]
                      },
                      {
                        "Zil": "<ZMEMQB ,GLOBAL-WATER .TX <- <PTSIZE .TX> 1>>",
                        "Form": [
                          {
                            "Atom": "ZMEMQB"
                          },
                          {
                            "Zil": ",GLOBAL-WATER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "GLOBAL-WATER"
                              }
                            ]
                          },
                          {
                            "Zil": ".TX",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TX"
                              }
                            ]
                          },
                          {
                            "Zil": "<- <PTSIZE .TX> 1>",
                            "Form": [
                              {
                                "Atom": "-"
                              },
                              {
                                "Zil": "<PTSIZE .TX>",
                                "Form": [
                                  {
                                    "Atom": "PTSIZE"
                                  },
                                  {
                                    "Zil": ".TX",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "TX"
                                      }
                                    ]
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<PERFORM ,V?FILL ,PRSO ,GLOBAL-WATER>",
                    "Form": [
                      {
                        "Atom": "PERFORM"
                      },
                      {
                        "Zil": ",V?FILL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "V?FILL"
                          }
                        ]
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",GLOBAL-WATER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "GLOBAL-WATER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<IN? ,WATER <LOC ,WINNER>>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ",WATER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WATER"
                          }
                        ]
                      },
                      {
                        "Zil": "<LOC ,WINNER>",
                        "Form": [
                          {
                            "Atom": "LOC"
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<PERFORM ,V?FILL ,PRSO ,WATER>",
                    "Form": [
                      {
                        "Atom": "PERFORM"
                      },
                      {
                        "Zil": ",V?FILL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "V?FILL"
                          }
                        ]
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",WATER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WATER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"There is nothing to fill it with.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There is nothing to fill it with.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<EQUAL? ,PRSI ,WATER> <RFALSE>) (<NOT <EQUAL? ,PRSI ,GLOBAL-WATER>> <PERFORM ,V?PUT ,PRSI ,PRSO> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSI ,WATER>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                {
                  "Zil": ",WATER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WATER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <EQUAL? ,PRSI ,GLOBAL-WATER>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<EQUAL? ,PRSI ,GLOBAL-WATER>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",GLOBAL-WATER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "GLOBAL-WATER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?PUT ,PRSI ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?PUT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?PUT"
                    }
                  ]
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:697",
    "Name": "V-FILL",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT ,PRSI> <COND (<GLOBAL-IN? ,GLOBAL-WATER ,HERE> <PERFORM ,V?FILL ,PRSO ,GLOBAL-WATER> <RTRUE>) (<IN? ,WATER <LOC ,WINNER>> <PERFORM ,V?FILL ,PRSO ,WATER> <RTRUE>) (T <TELL \"There's nothing to fill it with.\" CR>)>) (T <TELL \"You may know how to do that, but I don't.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,PRSI>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<GLOBAL-IN? ,GLOBAL-WATER ,HERE> <PERFORM ,V?FILL ,PRSO ,GLOBAL-WATER> <RTRUE>) (<IN? ,WATER <LOC ,WINNER>> <PERFORM ,V?FILL ,PRSO ,WATER> <RTRUE>) (T <TELL \"There's nothing to fill it with.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<GLOBAL-IN? ,GLOBAL-WATER ,HERE>",
                    "Form": [
                      {
                        "Atom": "GLOBAL-IN?"
                      },
                      {
                        "Zil": ",GLOBAL-WATER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "GLOBAL-WATER"
                          }
                        ]
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<PERFORM ,V?FILL ,PRSO ,GLOBAL-WATER>",
                    "Form": [
                      {
                        "Atom": "PERFORM"
                      },
                      {
                        "Zil": ",V?FILL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "V?FILL"
                          }
                        ]
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",GLOBAL-WATER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "GLOBAL-WATER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<IN? ,WATER <LOC ,WINNER>>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ",WATER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WATER"
                          }
                        ]
                      },
                      {
                        "Zil": "<LOC ,WINNER>",
                        "Form": [
                          {
                            "Atom": "LOC"
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<PERFORM ,V?FILL ,PRSO ,WATER>",
                    "Form": [
                      {
                        "Atom": "PERFORM"
                      },
                      {
                        "Zil": ",V?FILL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "V?FILL"
                          }
                        ]
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",WATER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WATER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"There's nothing to fill it with.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There's nothing to fill it with.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You may know how to do that, but I don't.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You may know how to do that, but I don't.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:710",
    "Name": "V-FIND",
    "ArgSpec": "(\"AUX\" (L <LOC ,PRSO>))",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,PRSO ,HANDS ,LUNGS> <TELL \"Within six feet of your head, assuming you haven't left that\r\nsomewhere.\" CR>) (<EQUAL? ,PRSO ,ME> <TELL \"You're around here somewhere...\" CR>) (<EQUAL? .L ,GLOBAL-OBJECTS> <TELL \"You find it.\" CR>) (<IN? ,PRSO ,WINNER> <TELL \"You have it.\" CR>) (<OR <IN? ,PRSO ,HERE> <GLOBAL-IN? ,PRSO ,HERE> <EQUAL? ,PRSO ,PSEUDO-OBJECT>> <TELL \"It's right here.\" CR>) (<FSET? .L ,ACTORBIT> <TELL \"The \" D .L \" has it.\" CR>) (<FSET? .L ,SURFACEBIT> <TELL \"It's on the \" D .L \".\" CR>) (<FSET? .L ,CONTBIT> <TELL \"It's in the \" D .L \".\" CR>) (T <TELL \"Beats me.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSO ,HANDS ,LUNGS>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",HANDS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HANDS"
                    }
                  ]
                },
                {
                  "Zil": ",LUNGS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LUNGS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Within six feet of your head, assuming you haven't left that\r\nsomewhere.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Within six feet of your head, assuming you haven't left that\r\nsomewhere.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,PRSO ,ME>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",ME",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ME"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You're around here somewhere...\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You're around here somewhere...",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? .L ,GLOBAL-OBJECTS>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ".L",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "L"
                    }
                  ]
                },
                {
                  "Zil": ",GLOBAL-OBJECTS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GLOBAL-OBJECTS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You find it.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You find it.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<IN? ,PRSO ,WINNER>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You have it.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You have it.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<OR <IN? ,PRSO ,HERE> <GLOBAL-IN? ,PRSO ,HERE> <EQUAL? ,PRSO ,PSEUDO-OBJECT>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<IN? ,PRSO ,HERE>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<GLOBAL-IN? ,PRSO ,HERE>",
                  "Form": [
                    {
                      "Atom": "GLOBAL-IN?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,PRSO ,PSEUDO-OBJECT>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",PSEUDO-OBJECT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PSEUDO-OBJECT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"It's right here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's right here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? .L ,ACTORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ".L",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "L"
                    }
                  ]
                },
                {
                  "Zil": ",ACTORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D .L \" has it.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ".L",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "L"
                    }
                  ]
                },
                " has it.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? .L ,SURFACEBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ".L",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "L"
                    }
                  ]
                },
                {
                  "Zil": ",SURFACEBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SURFACEBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"It's on the \" D .L \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's on the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ".L",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "L"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? .L ,CONTBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ".L",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "L"
                    }
                  ]
                },
                {
                  "Zil": ",CONTBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CONTBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"It's in the \" D .L \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's in the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ".L",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "L"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Beats me.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Beats me.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:734",
    "Name": "V-FOLLOW",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You're nuts!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You're nuts!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:737",
    "Name": "V-FROBOZZ",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"The FROBOZZ Corporation created, owns, and operates this dungeon.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "The FROBOZZ Corporation created, owns, and operates this dungeon.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:741",
    "Name": "PRE-GIVE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT <HELD? ,PRSO>> <TELL \"That's easy for you to say since you don't even have the \" D ,PRSO \".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <HELD? ,PRSO>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<HELD? ,PRSO>",
                  "Form": [
                    {
                      "Atom": "HELD?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"That's easy for you to say since you don't even have the \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "That's easy for you to say since you don't even have the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:746",
    "Name": "V-GIVE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT <FSET? ,PRSI ,ACTORBIT>> <TELL \"You can't give a \" D ,PRSO \" to a \" D ,PRSI \"!\" CR>) (T <TELL \"The \" D ,PRSI \" refuses it politely.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <FSET? ,PRSI ,ACTORBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,PRSI ,ACTORBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",ACTORBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ACTORBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't give a \" D ,PRSO \" to a \" D ,PRSI \"!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't give a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " to a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                "!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"The \" D ,PRSI \" refuses it politely.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                " refuses it politely.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:752",
    "Name": "V-HATCH",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Bizarre!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Bizarre!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:757",
    "Name": "V-HELLO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (,PRSO <COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"The \" D ,PRSO \" bows his head to you in greeting.\" CR>) (T <TELL \"It's a well known fact that only schizophrenics say \\\"Hello\\\" to a \" D ,PRSO \".\" CR>)>) (T <TELL <PICK-ONE ,HELLOS> CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",PRSO",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "PRSO"
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"The \" D ,PRSO \" bows his head to you in greeting.\" CR>) (T <TELL \"It's a well known fact that only schizophrenics say \\\"Hello\\\" to a \" D ,PRSO \".\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,ACTORBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",ACTORBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ACTORBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" bows his head to you in greeting.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " bows his head to you in greeting.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"It's a well known fact that only schizophrenics say \\\"Hello\\\" to a \" D ,PRSO \".\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It's a well known fact that only schizophrenics say \"Hello\" to a ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      ".",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL <PICK-ONE ,HELLOS> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<PICK-ONE ,HELLOS>",
                  "Form": [
                    {
                      "Atom": "PICK-ONE"
                    },
                    {
                      "Zil": ",HELLOS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HELLOS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:769",
    "Name": "V-INCANT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"The incantation echoes back faintly, but nothing else happens.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "The incantation echoes back faintly, but nothing else happens.",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<SETG QUOTE-FLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "QUOTE-FLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<SETG P-CONT <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-CONT"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:790",
    "Name": "V-INFLATE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"How can you inflate that?\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "How can you inflate that?",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:804",
    "Name": "V-KICK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<HACK-HACK \"Kicking the \">",
        "Form": [
          {
            "Atom": "HACK-HACK"
          },
          "Kicking the "
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:806",
    "Name": "V-KISS",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"I'd sooner kiss a pig.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "I'd sooner kiss a pig.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:809",
    "Name": "V-KNOCK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,DOORBIT> <TELL \"Nobody's home.\" CR>) (T <TELL \"Why knock on a \" D ,PRSO \"?\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,DOORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",DOORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "DOORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Nobody's home.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Nobody's home.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Why knock on a \" D ,PRSO \"?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Why knock on a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                "?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:815",
    "Name": "V-LAMP-OFF",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,LIGHTBIT> <COND (<NOT <FSET? ,PRSO ,ONBIT>> <TELL \"It is already off.\" CR>) (T <FCLEAR ,PRSO ,ONBIT> <COND (,LIT <SETG LIT <LIT? ,HERE>>)> <TELL \"The \" D ,PRSO \" is now off.\" CR> <COND (<NOT ,LIT> <TELL \"It is now pitch black.\" CR>)>)>) (T <TELL \"You can't turn that off.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,LIGHTBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",LIGHTBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LIGHTBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <FSET? ,PRSO ,ONBIT>> <TELL \"It is already off.\" CR>) (T <FCLEAR ,PRSO ,ONBIT> <COND (,LIT <SETG LIT <LIT? ,HERE>>)> <TELL \"The \" D ,PRSO \" is now off.\" CR> <COND (<NOT ,LIT> <TELL \"It is now pitch black.\" CR>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <FSET? ,PRSO ,ONBIT>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? ,PRSO ,ONBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",ONBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "ONBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"It is already off.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It is already off.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<FCLEAR ,PRSO ,ONBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",ONBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ONBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (,LIT <SETG LIT <LIT? ,HERE>>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ",LIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "LIT"
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG LIT <LIT? ,HERE>>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "LIT"
                            },
                            {
                              "Zil": "<LIT? ,HERE>",
                              "Form": [
                                {
                                  "Atom": "LIT?"
                                },
                                {
                                  "Zil": ",HERE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "HERE"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" is now off.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " is now off.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<NOT ,LIT> <TELL \"It is now pitch black.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<NOT ,LIT>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": ",LIT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "LIT"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"It is now pitch black.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "It is now pitch black.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't turn that off.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't turn that off.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:830",
    "Name": "V-LAMP-ON",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,LIGHTBIT> <COND (<FSET? ,PRSO ,ONBIT> <TELL \"It is already on.\" CR>) (T <FSET ,PRSO ,ONBIT> <TELL \"The \" D ,PRSO \" is now on.\" CR> <COND (<NOT ,LIT> <SETG LIT <LIT? ,HERE>> <CRLF> <V-LOOK>)>)>) (<FSET? ,PRSO ,BURNBIT> <TELL \"If you wish to burn the \" D ,PRSO \", you should say so.\" CR>) (T <TELL \"You can't turn that on.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,LIGHTBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",LIGHTBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LIGHTBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,ONBIT> <TELL \"It is already on.\" CR>) (T <FSET ,PRSO ,ONBIT> <TELL \"The \" D ,PRSO \" is now on.\" CR> <COND (<NOT ,LIT> <SETG LIT <LIT? ,HERE>> <CRLF> <V-LOOK>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,ONBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",ONBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ONBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"It is already on.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It is already on.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<FSET ,PRSO ,ONBIT>",
                    "Form": [
                      {
                        "Atom": "FSET"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",ONBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ONBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" is now on.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " is now on.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<NOT ,LIT> <SETG LIT <LIT? ,HERE>> <CRLF> <V-LOOK>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<NOT ,LIT>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": ",LIT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "LIT"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG LIT <LIT? ,HERE>>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "LIT"
                            },
                            {
                              "Zil": "<LIT? ,HERE>",
                              "Form": [
                                {
                                  "Atom": "LIT?"
                                },
                                {
                                  "Zil": ",HERE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "HERE"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<CRLF>",
                          "Form": [
                            {
                              "Atom": "CRLF"
                            }
                          ]
                        },
                        {
                          "Zil": "<V-LOOK>",
                          "Form": [
                            {
                              "Atom": "V-LOOK"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? ,PRSO ,BURNBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",BURNBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "BURNBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"If you wish to burn the \" D ,PRSO \", you should say so.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "If you wish to burn the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ", you should say so.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't turn that on.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't turn that on.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:848",
    "Name": "V-LAUNCH",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,VEHBIT> <TELL \"You can't launch that by saying \\\"launch\\\"!\" CR>) (T <TELL \"That's pretty weird.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,VEHBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",VEHBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "VEHBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't launch that by saying \\\"launch\\\"!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't launch that by saying \"launch\"!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"That's pretty weird.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "That's pretty weird.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:854",
    "Name": "V-LEAN-ON",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Getting tired?\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Getting tired?",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:857",
    "Name": "V-LEAP",
    "ArgSpec": "(\"AUX\" TX S)",
    "Body": [
      {
        "Zil": "<COND (,PRSO <COND (<IN? ,PRSO ,HERE> <COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"The \" D ,PRSO \" is too big to jump over.\" CR>) (T <V-SKIP>)>) (T <TELL \"That would be a good trick.\" CR>)>) (<SET TX <GETPT ,HERE ,P?DOWN>> <SET S <PTSIZE .TX>> <COND (<OR <EQUAL? .S 2> <AND <EQUAL? .S 4> <NOT <VALUE <GETB .TX 1>>>>> <TELL \"This was not a very safe place to try jumping.\" CR> <JIGS-UP <PICK-ONE ,JUMPLOSS>>) (<NULL-F> T) (T <V-SKIP>)>) (T <V-SKIP>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",PRSO",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "PRSO"
                }
              ]
            },
            {
              "Zil": "<COND (<IN? ,PRSO ,HERE> <COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"The \" D ,PRSO \" is too big to jump over.\" CR>) (T <V-SKIP>)>) (T <TELL \"That would be a good trick.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<IN? ,PRSO ,HERE>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"The \" D ,PRSO \" is too big to jump over.\" CR>) (T <V-SKIP>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<FSET? ,PRSO ,ACTORBIT>",
                          "Form": [
                            {
                              "Atom": "FSET?"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",ACTORBIT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "ACTORBIT"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The \" D ,PRSO \" is too big to jump over.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            " is too big to jump over.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<V-SKIP>",
                          "Form": [
                            {
                              "Atom": "V-SKIP"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"That would be a good trick.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "That would be a good trick.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<SET TX <GETPT ,HERE ,P?DOWN>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TX"
                },
                {
                  "Zil": "<GETPT ,HERE ,P?DOWN>",
                  "Form": [
                    {
                      "Atom": "GETPT"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?DOWN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?DOWN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET S <PTSIZE .TX>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "S"
                },
                {
                  "Zil": "<PTSIZE .TX>",
                  "Form": [
                    {
                      "Atom": "PTSIZE"
                    },
                    {
                      "Zil": ".TX",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TX"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<OR <EQUAL? .S 2> <AND <EQUAL? .S 4> <NOT <VALUE <GETB .TX 1>>>>> <TELL \"This was not a very safe place to try jumping.\" CR> <JIGS-UP <PICK-ONE ,JUMPLOSS>>) (<NULL-F> T) (T <V-SKIP>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR <EQUAL? .S 2> <AND <EQUAL? .S 4> <NOT <VALUE <GETB .TX 1>>>>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<EQUAL? .S 2>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".S",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "S"
                              }
                            ]
                          },
                          2
                        ]
                      },
                      {
                        "Zil": "<AND <EQUAL? .S 4> <NOT <VALUE <GETB .TX 1>>>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<EQUAL? .S 4>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".S",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "S"
                                  }
                                ]
                              },
                              4
                            ]
                          },
                          {
                            "Zil": "<NOT <VALUE <GETB .TX 1>>>",
                            "Form": [
                              {
                                "Atom": "NOT"
                              },
                              {
                                "Zil": "<VALUE <GETB .TX 1>>",
                                "Form": [
                                  {
                                    "Atom": "VALUE"
                                  },
                                  {
                                    "Zil": "<GETB .TX 1>",
                                    "Form": [
                                      {
                                        "Atom": "GETB"
                                      },
                                      {
                                        "Zil": ".TX",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "TX"
                                          }
                                        ]
                                      },
                                      1
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"This was not a very safe place to try jumping.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "This was not a very safe place to try jumping.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<JIGS-UP <PICK-ONE ,JUMPLOSS>>",
                    "Form": [
                      {
                        "Atom": "JIGS-UP"
                      },
                      {
                        "Zil": "<PICK-ONE ,JUMPLOSS>",
                        "Form": [
                          {
                            "Atom": "PICK-ONE"
                          },
                          {
                            "Zil": ",JUMPLOSS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "JUMPLOSS"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<NULL-F>",
                    "Form": [
                      {
                        "Atom": "NULL-F"
                      }
                    ]
                  },
                  {
                    "Atom": "T"
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<V-SKIP>",
                    "Form": [
                      {
                        "Atom": "V-SKIP"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<V-SKIP>",
              "Form": [
                {
                  "Atom": "V-SKIP"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:894",
    "Name": "V-LEAVE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<DO-WALK ,P?OUT>",
        "Form": [
          {
            "Atom": "DO-WALK"
          },
          {
            "Zil": ",P?OUT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P?OUT"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:896",
    "Name": "V-LISTEN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"The \" D ,PRSO \" makes no sound.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "The ",
          {
            "Atom": "D"
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          },
          " makes no sound.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:899",
    "Name": "V-LOCK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"It doesn't seem to work.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "It doesn't seem to work.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:902",
    "Name": "V-LOOK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<DESCRIBE-ROOM T> <DESCRIBE-OBJECTS T>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<DESCRIBE-ROOM T>",
              "Form": [
                {
                  "Atom": "DESCRIBE-ROOM"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<DESCRIBE-OBJECTS T>",
              "Form": [
                {
                  "Atom": "DESCRIBE-OBJECTS"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:906",
    "Name": "V-LOOK-BEHIND",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"There is nothing behind the \" D ,PRSO \".\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "There is nothing behind the ",
          {
            "Atom": "D"
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          },
          ".",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:909",
    "Name": "V-LOOK-INSIDE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,DOORBIT> <COND (<FSET? ,PRSO ,OPENBIT> <TELL \"The \" D ,PRSO \" is open, but I can't tell what's beyond it.\">) (T <TELL \"The \" D ,PRSO \" is closed.\">)> <CRLF>) (<FSET? ,PRSO ,CONTBIT> <COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"There is nothing special to be seen.\" CR>) (<SEE-INSIDE? ,PRSO> <COND (<AND <FIRST? ,PRSO> <PRINT-CONT ,PRSO>> <RTRUE>) (<FSET? ,PRSO ,SURFACEBIT> <TELL \"There is nothing on the \" D ,PRSO \".\" CR>) (T <TELL \"The \" D ,PRSO \" is empty.\" CR>)>) (T <TELL \"The \" D ,PRSO \" is closed.\" CR>)>) (T <TELL \"You can't look inside a \" D ,PRSO \".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,DOORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",DOORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "DOORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,OPENBIT> <TELL \"The \" D ,PRSO \" is open, but I can't tell what's beyond it.\">) (T <TELL \"The \" D ,PRSO \" is closed.\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" is open, but I can't tell what's beyond it.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " is open, but I can't tell what's beyond it."
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" is closed.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " is closed."
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? ,PRSO ,CONTBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",CONTBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CONTBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"There is nothing special to be seen.\" CR>) (<SEE-INSIDE? ,PRSO> <COND (<AND <FIRST? ,PRSO> <PRINT-CONT ,PRSO>> <RTRUE>) (<FSET? ,PRSO ,SURFACEBIT> <TELL \"There is nothing on the \" D ,PRSO \".\" CR>) (T <TELL \"The \" D ,PRSO \" is empty.\" CR>)>) (T <TELL \"The \" D ,PRSO \" is closed.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,ACTORBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",ACTORBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ACTORBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"There is nothing special to be seen.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There is nothing special to be seen.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<SEE-INSIDE? ,PRSO>",
                    "Form": [
                      {
                        "Atom": "SEE-INSIDE?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<AND <FIRST? ,PRSO> <PRINT-CONT ,PRSO>> <RTRUE>) (<FSET? ,PRSO ,SURFACEBIT> <TELL \"There is nothing on the \" D ,PRSO \".\" CR>) (T <TELL \"The \" D ,PRSO \" is empty.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<AND <FIRST? ,PRSO> <PRINT-CONT ,PRSO>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": "<FIRST? ,PRSO>",
                              "Form": [
                                {
                                  "Atom": "FIRST?"
                                },
                                {
                                  "Zil": ",PRSO",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PRSO"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<PRINT-CONT ,PRSO>",
                              "Form": [
                                {
                                  "Atom": "PRINT-CONT"
                                },
                                {
                                  "Zil": ",PRSO",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PRSO"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<FSET? ,PRSO ,SURFACEBIT>",
                          "Form": [
                            {
                              "Atom": "FSET?"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",SURFACEBIT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "SURFACEBIT"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"There is nothing on the \" D ,PRSO \".\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "There is nothing on the ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            ".",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"The \" D ,PRSO \" is empty.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            " is empty.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" is closed.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " is closed.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't look inside a \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't look inside a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:936",
    "Name": "V-LOOK-ON",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,SURFACEBIT> <PERFORM ,V?LOOK-INSIDE ,PRSO> <RTRUE>) (T <TELL \"Look on a \" D ,PRSO \"???\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,SURFACEBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",SURFACEBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SURFACEBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?LOOK-INSIDE ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?LOOK-INSIDE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?LOOK-INSIDE"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Look on a \" D ,PRSO \"???\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Look on a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                "???",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:943",
    "Name": "V-LOOK-UNDER",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"There is nothing but dust there.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "There is nothing but dust there.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:946",
    "Name": "V-LOWER",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<HACK-HACK \"Playing in this way with the \">",
        "Form": [
          {
            "Atom": "HACK-HACK"
          },
          "Playing in this way with the "
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:948",
    "Name": "V-MAKE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You can't do that.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You can't do that.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:951",
    "Name": "V-MELT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"It's not clear that a \" D ,PRSO \" can be melted.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "It's not clear that a ",
          {
            "Atom": "D"
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          },
          " can be melted.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:954",
    "Name": "PRE-MOVE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<HELD? ,PRSO> <TELL \"You aren't an accomplished enough juggler.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<HELD? ,PRSO>",
              "Form": [
                {
                  "Atom": "HELD?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You aren't an accomplished enough juggler.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You aren't an accomplished enough juggler.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:958",
    "Name": "V-MOVE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,TAKEBIT> <TELL \"Moving the \" D ,PRSO \" reveals nothing.\" CR>) (T <TELL \"You can't move the \" D ,PRSO \".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,TAKEBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",TAKEBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TAKEBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Moving the \" D ,PRSO \" reveals nothing.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Moving the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " reveals nothing.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't move the \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't move the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:964",
    "Name": "V-MUMBLE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You'll have to speak up if you expect me to hear you!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You'll have to speak up if you expect me to hear you!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:967",
    "Name": "PRE-MUNG",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,PRSO ,BEAM> <RFALSE>) (<OR <NOT ,PRSI> <NOT <FSET? ,PRSI ,WEAPONBIT>>> <TELL \"Trying to destroy the \" D ,PRSO \" with \"> <COND (<NOT ,PRSI> <TELL \"your bare hands\">) (T <TELL \"a \" D ,PRSI>)> <TELL \" is futile.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSO ,BEAM>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",BEAM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "BEAM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<OR <NOT ,PRSI> <NOT <FSET? ,PRSI ,WEAPONBIT>>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<NOT ,PRSI>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? ,PRSI ,WEAPONBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? ,PRSI ,WEAPONBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ",PRSI",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSI"
                            }
                          ]
                        },
                        {
                          "Zil": ",WEAPONBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WEAPONBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Trying to destroy the \" D ,PRSO \" with \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Trying to destroy the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " with "
              ]
            },
            {
              "Zil": "<COND (<NOT ,PRSI> <TELL \"your bare hands\">) (T <TELL \"a \" D ,PRSI>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,PRSI>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"your bare hands\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "your bare hands"
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"a \" D ,PRSI>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "a ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \" is futile.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " is futile.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:982",
    "Name": "V-MUNG",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <PERFORM ,V?ATTACK ,PRSO> <RTRUE>) (T <TELL \"Nice try.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,ACTORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",ACTORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?ATTACK ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?ATTACK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?ATTACK"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Nice try.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Nice try.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:989",
    "Name": "V-ODYSSEUS",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NULL-F> T) (T <TELL \"Wasn't he a sailor?\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Atom": "T"
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Wasn't he a sailor?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Wasn't he a sailor?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1007",
    "Name": "V-OIL",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You probably put spinach in your gas tank, too.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You probably put spinach in your gas tank, too.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1010",
    "Name": "V-OPEN",
    "ArgSpec": "(\"AUX\" F STR)",
    "Body": [
      {
        "Zil": "<COND (<AND <FSET? ,PRSO ,CONTBIT> <NOT <EQUAL? <GETP ,PRSO ,P?CAPACITY> 0>>> <COND (<FSET? ,PRSO ,OPENBIT> <TELL \"It is already open.\" CR>) (T <FSET ,PRSO ,OPENBIT> <FSET ,PRSO ,TOUCHBIT> <COND (<OR <NOT <FIRST? ,PRSO>> <FSET? ,PRSO ,TRANSBIT>> <TELL \"Opened.\" CR>) (<AND <SET F <FIRST? ,PRSO>> <NOT <NEXT? .F>> <NOT <FSET? .F ,TOUCHBIT>> <SET STR <GETP .F ,P?FDESC>>> <TELL \"The \" D ,PRSO \" opens.\" CR> <TELL .STR CR>) (T <TELL \"Opening the \" D ,PRSO \" reveals \"> <PRINT-CONTENTS ,PRSO> <TELL \".\" CR>)>)>) (<FSET? ,PRSO ,DOORBIT> <COND (<FSET? ,PRSO ,OPENBIT> <TELL \"It is already open.\" CR>) (T <TELL \"The \" D ,PRSO \" opens.\" CR> <FSET ,PRSO ,OPENBIT>)>) (T <TELL \"You must tell me how to do that to a \" D ,PRSO \".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <FSET? ,PRSO ,CONTBIT> <NOT <EQUAL? <GETP ,PRSO ,P?CAPACITY> 0>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<FSET? ,PRSO ,CONTBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",CONTBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CONTBIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <EQUAL? <GETP ,PRSO ,P?CAPACITY> 0>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? <GETP ,PRSO ,P?CAPACITY> 0>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": "<GETP ,PRSO ,P?CAPACITY>",
                          "Form": [
                            {
                              "Atom": "GETP"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",P?CAPACITY",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P?CAPACITY"
                                }
                              ]
                            }
                          ]
                        },
                        0
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,OPENBIT> <TELL \"It is already open.\" CR>) (T <FSET ,PRSO ,OPENBIT> <FSET ,PRSO ,TOUCHBIT> <COND (<OR <NOT <FIRST? ,PRSO>> <FSET? ,PRSO ,TRANSBIT>> <TELL \"Opened.\" CR>) (<AND <SET F <FIRST? ,PRSO>> <NOT <NEXT? .F>> <NOT <FSET? .F ,TOUCHBIT>> <SET STR <GETP .F ,P?FDESC>>> <TELL \"The \" D ,PRSO \" opens.\" CR> <TELL .STR CR>) (T <TELL \"Opening the \" D ,PRSO \" reveals \"> <PRINT-CONTENTS ,PRSO> <TELL \".\" CR>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"It is already open.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It is already open.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<FSET ,PRSO ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<FSET ,PRSO ,TOUCHBIT>",
                    "Form": [
                      {
                        "Atom": "FSET"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",TOUCHBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TOUCHBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<OR <NOT <FIRST? ,PRSO>> <FSET? ,PRSO ,TRANSBIT>> <TELL \"Opened.\" CR>) (<AND <SET F <FIRST? ,PRSO>> <NOT <NEXT? .F>> <NOT <FSET? .F ,TOUCHBIT>> <SET STR <GETP .F ,P?FDESC>>> <TELL \"The \" D ,PRSO \" opens.\" CR> <TELL .STR CR>) (T <TELL \"Opening the \" D ,PRSO \" reveals \"> <PRINT-CONTENTS ,PRSO> <TELL \".\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<OR <NOT <FIRST? ,PRSO>> <FSET? ,PRSO ,TRANSBIT>>",
                          "Form": [
                            {
                              "Atom": "OR"
                            },
                            {
                              "Zil": "<NOT <FIRST? ,PRSO>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<FIRST? ,PRSO>",
                                  "Form": [
                                    {
                                      "Atom": "FIRST?"
                                    },
                                    {
                                      "Zil": ",PRSO",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PRSO"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<FSET? ,PRSO ,TRANSBIT>",
                              "Form": [
                                {
                                  "Atom": "FSET?"
                                },
                                {
                                  "Zil": ",PRSO",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PRSO"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",TRANSBIT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "TRANSBIT"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"Opened.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Opened.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<AND <SET F <FIRST? ,PRSO>> <NOT <NEXT? .F>> <NOT <FSET? .F ,TOUCHBIT>> <SET STR <GETP .F ,P?FDESC>>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": "<SET F <FIRST? ,PRSO>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "F"
                                },
                                {
                                  "Zil": "<FIRST? ,PRSO>",
                                  "Form": [
                                    {
                                      "Atom": "FIRST?"
                                    },
                                    {
                                      "Zil": ",PRSO",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PRSO"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<NOT <NEXT? .F>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<NEXT? .F>",
                                  "Form": [
                                    {
                                      "Atom": "NEXT?"
                                    },
                                    {
                                      "Zil": ".F",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "F"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<NOT <FSET? .F ,TOUCHBIT>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<FSET? .F ,TOUCHBIT>",
                                  "Form": [
                                    {
                                      "Atom": "FSET?"
                                    },
                                    {
                                      "Zil": ".F",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "F"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",TOUCHBIT",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "TOUCHBIT"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET STR <GETP .F ,P?FDESC>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "STR"
                                },
                                {
                                  "Zil": "<GETP .F ,P?FDESC>",
                                  "Form": [
                                    {
                                      "Atom": "GETP"
                                    },
                                    {
                                      "Zil": ".F",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "F"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",P?FDESC",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P?FDESC"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The \" D ,PRSO \" opens.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            " opens.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL .STR CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            {
                              "Zil": ".STR",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "STR"
                                }
                              ]
                            },
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"Opening the \" D ,PRSO \" reveals \">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Opening the ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            " reveals "
                          ]
                        },
                        {
                          "Zil": "<PRINT-CONTENTS ,PRSO>",
                          "Form": [
                            {
                              "Atom": "PRINT-CONTENTS"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \".\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            ".",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? ,PRSO ,DOORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",DOORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "DOORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,OPENBIT> <TELL \"It is already open.\" CR>) (T <TELL \"The \" D ,PRSO \" opens.\" CR> <FSET ,PRSO ,OPENBIT>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"It is already open.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It is already open.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" opens.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " opens.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<FSET ,PRSO ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You must tell me how to do that to a \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You must tell me how to do that to a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1040",
    "Name": "V-OVERBOARD",
    "ArgSpec": "(\"AUX\" LOCN)",
    "Body": [
      {
        "Zil": "<COND (<NULL-F> T) (<FSET? <LOC ,WINNER> ,VEHBIT> <PERFORM ,V?THROW ,PRSO> <RTRUE>) (T <TELL \"Huh?\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Atom": "T"
            }
          ],
          [
            {
              "Zil": "<FSET? <LOC ,WINNER> ,VEHBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": "<LOC ,WINNER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",VEHBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "VEHBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?THROW ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?THROW",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?THROW"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Huh?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Huh?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1055",
    "Name": "V-PICK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You can't pick that.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You can't pick that.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1057",
    "Name": "V-PLAY",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"You become so engrossed in the role of the \" D ,PRSO \" that\r\nyou kill yourself, just as he might have done!\" CR> <JIGS-UP \"\">) (ELSE <TELL \"That's silly!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,ACTORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",ACTORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You become so engrossed in the role of the \" D ,PRSO \" that\r\nyou kill yourself, just as he might have done!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You become so engrossed in the role of the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " that\r\nyou kill yourself, just as he might have done!",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<JIGS-UP \"\">",
              "Form": [
                {
                  "Atom": "JIGS-UP"
                },
                ""
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<TELL \"That's silly!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "That's silly!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1065",
    "Name": "V-PLUG",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"This has no effect.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "This has no effect.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1068",
    "Name": "V-POUR-ON",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,PRSO ,WATER> <REMOVE-CAREFULLY ,PRSO> <COND (<FLAMING? ,PRSI> <TELL \"The \" D ,PRSI \" is extinguished.\" CR> <NULL-F> <FCLEAR ,PRSI ,ONBIT> <FCLEAR ,PRSI ,FLAMEBIT>) (T <TELL \"The water spills over the \" D ,PRSI \", to the floor, and evaporates.\" CR>)>) (<NULL-F> <RTRUE>) (T <TELL \"You can't pour that.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSO ,WATER>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",WATER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WATER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REMOVE-CAREFULLY ,PRSO>",
              "Form": [
                {
                  "Atom": "REMOVE-CAREFULLY"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FLAMING? ,PRSI> <TELL \"The \" D ,PRSI \" is extinguished.\" CR> <NULL-F> <FCLEAR ,PRSI ,ONBIT> <FCLEAR ,PRSI ,FLAMEBIT>) (T <TELL \"The water spills over the \" D ,PRSI \", to the floor, and evaporates.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FLAMING? ,PRSI>",
                    "Form": [
                      {
                        "Atom": "FLAMING?"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSI \" is extinguished.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      " is extinguished.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<NULL-F>",
                    "Form": [
                      {
                        "Atom": "NULL-F"
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,PRSI ,ONBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      {
                        "Zil": ",ONBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ONBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,PRSI ,FLAMEBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      {
                        "Zil": ",FLAMEBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "FLAMEBIT"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The water spills over the \" D ,PRSI \", to the floor, and evaporates.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The water spills over the ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      ", to the floor, and evaporates.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't pour that.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't pour that.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1090",
    "Name": "V-PRAY",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NULL-F> <RTRUE>) (T <TELL \"If you pray enough, your prayers may be answered.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"If you pray enough, your prayers may be answered.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "If you pray enough, your prayers may be answered.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1100",
    "Name": "V-PUMP",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NULL-F> <RTRUE>) (<NULL-F> <RTRUE>) (T <TELL \"It's really not clear how.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"It's really not clear how.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's really not clear how.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1114",
    "Name": "V-PUSH",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<HACK-HACK \"Pushing the \">",
        "Form": [
          {
            "Atom": "HACK-HACK"
          },
          "Pushing the "
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1116",
    "Name": "V-PUSH-TO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You can't push things to that.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You can't push things to that.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1119",
    "Name": "PRE-PUT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,PRSO ,SHORT-POLE> <RFALSE>) (T <PRE-GIVE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSO ,SHORT-POLE>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",SHORT-POLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SHORT-POLE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<PRE-GIVE>",
              "Form": [
                {
                  "Atom": "PRE-GIVE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1129",
    "Name": "V-PUT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<OR <FSET? ,PRSI ,OPENBIT> <OPENABLE? ,PRSI> <FSET? ,PRSI ,VEHBIT>>) (T <TELL \"You can't do that.\" CR> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <FSET? ,PRSI ,OPENBIT> <OPENABLE? ,PRSI> <FSET? ,PRSI ,VEHBIT>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<FSET? ,PRSI ,OPENBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",OPENBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "OPENBIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<OPENABLE? ,PRSI>",
                  "Form": [
                    {
                      "Atom": "OPENABLE?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FSET? ,PRSI ,VEHBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",VEHBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VEHBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't do that.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't do that.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT <FSET? ,PRSI ,OPENBIT>> <TELL \"The \" D ,PRSI \" isn't open.\" CR> <THIS-IS-IT ,PRSI>) (<EQUAL? ,PRSI ,PRSO> <TELL \"How can you do that?\" CR>) (<IN? ,PRSO ,PRSI> <TELL \"The \" D ,PRSO \" is already in the \" D ,PRSI \".\" CR>) (<G? <- <+ <WEIGHT ,PRSI> <WEIGHT ,PRSO>> <GETP ,PRSI ,P?SIZE>> <GETP ,PRSI ,P?CAPACITY>> <TELL \"There's no room.\" CR>) (<AND <NOT <HELD? ,PRSO>> <FSET? ,PRSO ,TRYTAKEBIT>> <TELL \"You don't have the \" D ,PRSO \".\" CR> <RTRUE>) (<AND <NOT <HELD? ,PRSO>> <NOT <ITAKE>>> <RTRUE>) (T <MOVE ,PRSO ,PRSI> <FSET ,PRSO ,TOUCHBIT> <SCORE-OBJ ,PRSO> <TELL \"Done.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <FSET? ,PRSI ,OPENBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,PRSI ,OPENBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",OPENBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "OPENBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D ,PRSI \" isn't open.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                " isn't open.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<THIS-IS-IT ,PRSI>",
              "Form": [
                {
                  "Atom": "THIS-IS-IT"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,PRSI ,PRSO>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"How can you do that?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "How can you do that?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<IN? ,PRSO ,PRSI>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D ,PRSO \" is already in the \" D ,PRSI \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " is already in the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<G? <- <+ <WEIGHT ,PRSI> <WEIGHT ,PRSO>> <GETP ,PRSI ,P?SIZE>> <GETP ,PRSI ,P?CAPACITY>>",
              "Form": [
                {
                  "Atom": "G?"
                },
                {
                  "Zil": "<- <+ <WEIGHT ,PRSI> <WEIGHT ,PRSO>> <GETP ,PRSI ,P?SIZE>>",
                  "Form": [
                    {
                      "Atom": "-"
                    },
                    {
                      "Zil": "<+ <WEIGHT ,PRSI> <WEIGHT ,PRSO>>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": "<WEIGHT ,PRSI>",
                          "Form": [
                            {
                              "Atom": "WEIGHT"
                            },
                            {
                              "Zil": ",PRSI",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSI"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<WEIGHT ,PRSO>",
                          "Form": [
                            {
                              "Atom": "WEIGHT"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<GETP ,PRSI ,P?SIZE>",
                      "Form": [
                        {
                          "Atom": "GETP"
                        },
                        {
                          "Zil": ",PRSI",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSI"
                            }
                          ]
                        },
                        {
                          "Zil": ",P?SIZE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P?SIZE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<GETP ,PRSI ,P?CAPACITY>",
                  "Form": [
                    {
                      "Atom": "GETP"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?CAPACITY",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?CAPACITY"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"There's no room.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There's no room.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <NOT <HELD? ,PRSO>> <FSET? ,PRSO ,TRYTAKEBIT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT <HELD? ,PRSO>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<HELD? ,PRSO>",
                      "Form": [
                        {
                          "Atom": "HELD?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FSET? ,PRSO ,TRYTAKEBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",TRYTAKEBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TRYTAKEBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You don't have the \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You don't have the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <NOT <HELD? ,PRSO>> <NOT <ITAKE>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT <HELD? ,PRSO>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<HELD? ,PRSO>",
                      "Form": [
                        {
                          "Atom": "HELD?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <ITAKE>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<ITAKE>",
                      "Form": [
                        {
                          "Atom": "ITAKE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<MOVE ,PRSO ,PRSI>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FSET ,PRSO ,TOUCHBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",TOUCHBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TOUCHBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SCORE-OBJ ,PRSO>",
              "Form": [
                {
                  "Atom": "SCORE-OBJ"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Done.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Done.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1160",
    "Name": "V-PUT-BEHIND",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"That hiding place is too obvious.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "That hiding place is too obvious.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1163",
    "Name": "V-PUT-ON",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,PRSI ,GROUND> <PERFORM ,V?DROP ,PRSO> <RTRUE>) (<FSET? ,PRSI ,SURFACEBIT> <V-PUT>) (T <TELL \"There's no good surface on the \" D ,PRSI \".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSI ,GROUND>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                {
                  "Zil": ",GROUND",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GROUND"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?DROP ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?DROP",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?DROP"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? ,PRSI ,SURFACEBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                {
                  "Zil": ",SURFACEBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SURFACEBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<V-PUT>",
              "Form": [
                {
                  "Atom": "V-PUT"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"There's no good surface on the \" D ,PRSI \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There's no good surface on the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1172",
    "Name": "V-PUT-UNDER",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You can't do that.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You can't do that.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1175",
    "Name": "V-RAISE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<V-LOWER>",
        "Form": [
          {
            "Atom": "V-LOWER"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1178",
    "Name": "V-RAPE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"What a (ahem!) strange idea.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "What a (ahem!) strange idea.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1181",
    "Name": "PRE-READ",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT ,LIT> <TELL \"It is impossible to read in the dark.\" CR>) (<AND ,PRSI <NOT <FSET? ,PRSI ,TRANSBIT>>> <TELL \"How does one look through a \" D ,PRSI \"?\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,LIT>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",LIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"It is impossible to read in the dark.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It is impossible to read in the dark.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND ,PRSI <NOT <FSET? ,PRSI ,TRANSBIT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? ,PRSI ,TRANSBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? ,PRSI ,TRANSBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ",PRSI",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSI"
                            }
                          ]
                        },
                        {
                          "Zil": ",TRANSBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "TRANSBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"How does one look through a \" D ,PRSI \"?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "How does one look through a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                "?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1187",
    "Name": "V-READ",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT <FSET? ,PRSO ,READBIT>> <TELL \"How does one read a \" D ,PRSO \"?\" CR>) (T <TELL <GETP ,PRSO ,P?TEXT> CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <FSET? ,PRSO ,READBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,PRSO ,READBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",READBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "READBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"How does one read a \" D ,PRSO \"?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "How does one read a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                "?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL <GETP ,PRSO ,P?TEXT> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<GETP ,PRSO ,P?TEXT>",
                  "Form": [
                    {
                      "Atom": "GETP"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?TEXT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?TEXT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1193",
    "Name": "V-READ-PAGE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<PERFORM ,V?READ ,PRSO>",
        "Form": [
          {
            "Atom": "PERFORM"
          },
          {
            "Zil": ",V?READ",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "V?READ"
              }
            ]
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1197",
    "Name": "V-REPENT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"It could very well be too late!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "It could very well be too late!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1200",
    "Name": "V-REPLY",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"It is hardly likely that the \" D ,PRSO \" is interested.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "It is hardly likely that the ",
          {
            "Atom": "D"
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          },
          " is interested.",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<SETG P-CONT <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-CONT"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<SETG QUOTE-FLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "QUOTE-FLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1206",
    "Name": "V-RING",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"How, exactly, can you ring that?\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "How, exactly, can you ring that?",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1209",
    "Name": "V-RUB",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<HACK-HACK \"Fiddling with the \">",
        "Form": [
          {
            "Atom": "HACK-HACK"
          },
          "Fiddling with the "
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1211",
    "Name": "V-SAY",
    "ArgSpec": "(\"AUX\" V)",
    "Body": [
      {
        "Zil": "<COND (<AND <FSET? ,FRONT-DOOR ,TOUCHBIT> <EQUAL? <GET ,P-LEXV ,P-CONT> ,W?FROTZ> <EQUAL? <GET ,P-LEXV <+ ,P-CONT 2>> ,W?OZMOO>> <SETG P-CONT <>> <COND (<EQUAL? ,HERE ,MSTAIRS> <CRLF> <GOTO ,FRONT-DOOR>) (T <TELL \"Nothing happens.\" CR>)> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <FSET? ,FRONT-DOOR ,TOUCHBIT> <EQUAL? <GET ,P-LEXV ,P-CONT> ,W?FROTZ> <EQUAL? <GET ,P-LEXV <+ ,P-CONT 2>> ,W?OZMOO>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<FSET? ,FRONT-DOOR ,TOUCHBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",FRONT-DOOR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "FRONT-DOOR"
                        }
                      ]
                    },
                    {
                      "Zil": ",TOUCHBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TOUCHBIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? <GET ,P-LEXV ,P-CONT> ,W?FROTZ>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<GET ,P-LEXV ,P-CONT>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-LEXV",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-LEXV"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-CONT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-CONT"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",W?FROTZ",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "W?FROTZ"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? <GET ,P-LEXV <+ ,P-CONT 2>> ,W?OZMOO>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<GET ,P-LEXV <+ ,P-CONT 2>>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-LEXV",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-LEXV"
                            }
                          ]
                        },
                        {
                          "Zil": "<+ ,P-CONT 2>",
                          "Form": [
                            {
                              "Atom": "+"
                            },
                            {
                              "Zil": ",P-CONT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-CONT"
                                }
                              ]
                            },
                            2
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",W?OZMOO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "W?OZMOO"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-CONT <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-CONT"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? ,HERE ,MSTAIRS> <CRLF> <GOTO ,FRONT-DOOR>) (T <TELL \"Nothing happens.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? ,HERE ,MSTAIRS>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",MSTAIRS",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MSTAIRS"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<CRLF>",
                    "Form": [
                      {
                        "Atom": "CRLF"
                      }
                    ]
                  },
                  {
                    "Zil": "<GOTO ,FRONT-DOOR>",
                    "Form": [
                      {
                        "Atom": "GOTO"
                      },
                      {
                        "Zil": ",FRONT-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "FRONT-DOOR"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"Nothing happens.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Nothing happens.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG QUOTE-FLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "QUOTE-FLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (<SET V <FIND-IN ,HERE ,ACTORBIT>> <TELL \"You must address the \" D .V \" directly.\" CR> <SETG P-CONT <>>) (<NOT <EQUAL? <GET ,P-LEXV ,P-CONT> ,W?HELLO>> <SETG P-CONT <>> <TELL \"Talking to yourself is a sign of impending mental collapse.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET V <FIND-IN ,HERE ,ACTORBIT>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "V"
                },
                {
                  "Zil": "<FIND-IN ,HERE ,ACTORBIT>",
                  "Form": [
                    {
                      "Atom": "FIND-IN"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",ACTORBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ACTORBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You must address the \" D .V \" directly.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You must address the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ".V",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "V"
                    }
                  ]
                },
                " directly.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG P-CONT <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-CONT"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <EQUAL? <GET ,P-LEXV ,P-CONT> ,W?HELLO>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<EQUAL? <GET ,P-LEXV ,P-CONT> ,W?HELLO>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<GET ,P-LEXV ,P-CONT>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",P-LEXV",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-LEXV"
                            }
                          ]
                        },
                        {
                          "Zil": ",P-CONT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-CONT"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",W?HELLO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "W?HELLO"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-CONT <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-CONT"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<TELL \"Talking to yourself is a sign of impending mental collapse.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Talking to yourself is a sign of impending mental collapse.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1241",
    "Name": "V-SEARCH",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You find nothing unusual.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You find nothing unusual.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1244",
    "Name": "V-SEND",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"Why would you send for the \" D ,PRSO \"?\" CR>) (T <TELL \"That doesn't make sends.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,ACTORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",ACTORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Why would you send for the \" D ,PRSO \"?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Why would you send for the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                "?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"That doesn't make sends.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "That doesn't make sends.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1250",
    "Name": "PRE-SGIVE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<PERFORM ,V?GIVE ,PRSI ,PRSO>",
        "Form": [
          {
            "Atom": "PERFORM"
          },
          {
            "Zil": ",V?GIVE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "V?GIVE"
              }
            ]
          },
          {
            "Zil": ",PRSI",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSI"
              }
            ]
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1254",
    "Name": "V-SGIVE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Foo!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Foo!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1257",
    "Name": "V-SHAKE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"This seems to have no effect.\" CR>) (<NOT <FSET? ,PRSO ,TAKEBIT>> <TELL \"You can't take it; thus, you can't shake it!\" CR>) (<FSET? ,PRSO ,CONTBIT> <COND (<FSET? ,PRSO ,OPENBIT> <COND (<FIRST? ,PRSO> <SHAKE-LOOP> <TELL \"The contents of the \" D ,PRSO \" spill \"> <COND (<FSET? ,HERE ,NONLANDBIT> <TELL \"out and disappears\">) (T <TELL \"to the ground\">)> <TELL \".\" CR>) (T <TELL \"Shaken.\" CR>)>) (T <COND (<FIRST? ,PRSO> <TELL \"It sounds like there is something inside the \" D ,PRSO \".\" CR>) (T <TELL \"The \" D ,PRSO \" sounds empty.\" CR>)>)>) (T <TELL \"Shaken.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,ACTORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",ACTORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"This seems to have no effect.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "This seems to have no effect.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <FSET? ,PRSO ,TAKEBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,PRSO ,TAKEBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",TAKEBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TAKEBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't take it; thus, you can't shake it!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't take it; thus, you can't shake it!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? ,PRSO ,CONTBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",CONTBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CONTBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,OPENBIT> <COND (<FIRST? ,PRSO> <SHAKE-LOOP> <TELL \"The contents of the \" D ,PRSO \" spill \"> <COND (<FSET? ,HERE ,NONLANDBIT> <TELL \"out and disappears\">) (T <TELL \"to the ground\">)> <TELL \".\" CR>) (T <TELL \"Shaken.\" CR>)>) (T <COND (<FIRST? ,PRSO> <TELL \"It sounds like there is something inside the \" D ,PRSO \".\" CR>) (T <TELL \"The \" D ,PRSO \" sounds empty.\" CR>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<FIRST? ,PRSO> <SHAKE-LOOP> <TELL \"The contents of the \" D ,PRSO \" spill \"> <COND (<FSET? ,HERE ,NONLANDBIT> <TELL \"out and disappears\">) (T <TELL \"to the ground\">)> <TELL \".\" CR>) (T <TELL \"Shaken.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<FIRST? ,PRSO>",
                          "Form": [
                            {
                              "Atom": "FIRST?"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SHAKE-LOOP>",
                          "Form": [
                            {
                              "Atom": "SHAKE-LOOP"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The contents of the \" D ,PRSO \" spill \">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The contents of the ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            " spill "
                          ]
                        },
                        {
                          "Zil": "<COND (<FSET? ,HERE ,NONLANDBIT> <TELL \"out and disappears\">) (T <TELL \"to the ground\">)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<FSET? ,HERE ,NONLANDBIT>",
                                "Form": [
                                  {
                                    "Atom": "FSET?"
                                  },
                                  {
                                    "Zil": ",HERE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "HERE"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",NONLANDBIT",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "NONLANDBIT"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<TELL \"out and disappears\">",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "out and disappears"
                                ]
                              }
                            ],
                            [
                              {
                                "Atom": "T"
                              },
                              {
                                "Zil": "<TELL \"to the ground\">",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "to the ground"
                                ]
                              }
                            ]
                          ]
                        },
                        {
                          "Zil": "<TELL \".\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            ".",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"Shaken.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Shaken.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<COND (<FIRST? ,PRSO> <TELL \"It sounds like there is something inside the \" D ,PRSO \".\" CR>) (T <TELL \"The \" D ,PRSO \" sounds empty.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<FIRST? ,PRSO>",
                          "Form": [
                            {
                              "Atom": "FIRST?"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"It sounds like there is something inside the \" D ,PRSO \".\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "It sounds like there is something inside the ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            ".",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"The \" D ,PRSO \" sounds empty.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            " sounds empty.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Shaken.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Shaken.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1286",
    "Name": "SHAKE-LOOP",
    "ArgSpec": "(\"AUX\" X)",
    "Body": [
      {
        "Zil": "<REPEAT () <COND (<SET X <FIRST? ,PRSO>> <FSET .X ,TOUCHBIT> <MOVE .X <COND (<EQUAL? ,HERE ,ON-LAKE> ,IN-LAKE) (T ,HERE)>>) (T <RETURN>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<SET X <FIRST? ,PRSO>> <FSET .X ,TOUCHBIT> <MOVE .X <COND (<EQUAL? ,HERE ,ON-LAKE> ,IN-LAKE) (T ,HERE)>>) (T <RETURN>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<SET X <FIRST? ,PRSO>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "X"
                    },
                    {
                      "Zil": "<FIRST? ,PRSO>",
                      "Form": [
                        {
                          "Atom": "FIRST?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FSET .X ,TOUCHBIT>",
                  "Form": [
                    {
                      "Atom": "FSET"
                    },
                    {
                      "Zil": ".X",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "X"
                        }
                      ]
                    },
                    {
                      "Zil": ",TOUCHBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TOUCHBIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<MOVE .X <COND (<EQUAL? ,HERE ,ON-LAKE> ,IN-LAKE) (T ,HERE)>>",
                  "Form": [
                    {
                      "Atom": "MOVE"
                    },
                    {
                      "Zil": ".X",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "X"
                        }
                      ]
                    },
                    {
                      "Zil": "<COND (<EQUAL? ,HERE ,ON-LAKE> ,IN-LAKE) (T ,HERE)>",
                      "Form": [
                        {
                          "Atom": "COND"
                        },
                        [
                          {
                            "Zil": "<EQUAL? ,HERE ,ON-LAKE>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ",HERE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "HERE"
                                  }
                                ]
                              },
                              {
                                "Zil": ",ON-LAKE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "ON-LAKE"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": ",IN-LAKE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "IN-LAKE"
                              }
                            ]
                          }
                        ],
                        [
                          {
                            "Atom": "T"
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1313",
    "Name": "V-SKIP",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL <PICK-ONE ,WHEEEEE> CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          {
            "Zil": "<PICK-ONE ,WHEEEEE>",
            "Form": [
              {
                "Atom": "PICK-ONE"
              },
              {
                "Zil": ",WHEEEEE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "WHEEEEE"
                  }
                ]
              }
            ]
          },
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1322",
    "Name": "V-SMELL",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"It smells like a \" D ,PRSO \".\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "It smells like a ",
          {
            "Atom": "D"
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          },
          ".",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1325",
    "Name": "V-SPIN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You can't spin that!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You can't spin that!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1328",
    "Name": "V-SPRAY",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<V-SQUEEZE>",
        "Form": [
          {
            "Atom": "V-SQUEEZE"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1331",
    "Name": "V-SQUEEZE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"The \" D ,PRSO \" does not understand this.\">) (T <TELL \"How singularly useless.\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,ACTORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",ACTORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D ,PRSO \" does not understand this.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " does not understand this."
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"How singularly useless.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "How singularly useless."
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<CRLF>",
        "Form": [
          {
            "Atom": "CRLF"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1338",
    "Name": "V-SSPRAY",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<PERFORM ,V?SPRAY ,PRSI ,PRSO>",
        "Form": [
          {
            "Atom": "PERFORM"
          },
          {
            "Zil": ",V?SPRAY",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "V?SPRAY"
              }
            ]
          },
          {
            "Zil": ",PRSI",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSI"
              }
            ]
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1341",
    "Name": "V-STAB",
    "ArgSpec": "(\"AUX\" W)",
    "Body": [
      {
        "Zil": "<COND (<SET W <FIND-WEAPON ,WINNER>> <PERFORM ,V?ATTACK ,PRSO .W> <RTRUE>) (T <TELL \"No doubt you propose to stab the \" D ,PRSO \" with your pinky?\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET W <FIND-WEAPON ,WINNER>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "W"
                },
                {
                  "Zil": "<FIND-WEAPON ,WINNER>",
                  "Form": [
                    {
                      "Atom": "FIND-WEAPON"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?ATTACK ,PRSO .W>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?ATTACK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?ATTACK"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ".W",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "W"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"No doubt you propose to stab the \" D ,PRSO \" with your pinky?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "No doubt you propose to stab the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " with your pinky?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1349",
    "Name": "V-STAND",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? <LOC ,WINNER> ,VEHBIT> <PERFORM ,V?DISEMBARK <LOC ,WINNER>> <RTRUE>) (T <TELL \"You are already standing, I think.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? <LOC ,WINNER> ,VEHBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": "<LOC ,WINNER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",VEHBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "VEHBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?DISEMBARK <LOC ,WINNER>>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?DISEMBARK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?DISEMBARK"
                    }
                  ]
                },
                {
                  "Zil": "<LOC ,WINNER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You are already standing, I think.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are already standing, I think.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1356",
    "Name": "V-STAY",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You will be lost without me!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You will be lost without me!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1359",
    "Name": "V-STRIKE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <TELL \"Since you aren't versed in hand-to-hand combat, you'd better attack the \" D ,PRSO \" with a weapon.\" CR>) (T <PERFORM ,V?LAMP-ON ,PRSO> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,ACTORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",ACTORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Since you aren't versed in hand-to-hand combat, you'd better attack the \" D ,PRSO \" with a weapon.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Since you aren't versed in hand-to-hand combat, you'd better attack the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " with a weapon.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<PERFORM ,V?LAMP-ON ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?LAMP-ON",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?LAMP-ON"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1368",
    "Name": "V-SWIM",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,HERE ,ON-LAKE ,IN-LAKE> <TELL \"What do you think you're doing?\" CR>) (<EQUAL? ,HERE ,FLATHEAD-OCEAN> <TELL \"Between the rocks and waves, you wouldn't last a minute!\" CR>) (T <TELL \"Go jump in a lake!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,HERE ,ON-LAKE ,IN-LAKE>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",ON-LAKE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ON-LAKE"
                    }
                  ]
                },
                {
                  "Zil": ",IN-LAKE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "IN-LAKE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"What do you think you're doing?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "What do you think you're doing?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,HERE ,FLATHEAD-OCEAN>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",FLATHEAD-OCEAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "FLATHEAD-OCEAN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Between the rocks and waves, you wouldn't last a minute!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Between the rocks and waves, you wouldn't last a minute!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Go jump in a lake!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Go jump in a lake!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1391",
    "Name": "V-SWING",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT ,PRSI> <TELL \"Whoosh!\" CR>) (T <PERFORM ,V?ATTACK ,PRSI ,PRSO>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,PRSI>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Whoosh!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Whoosh!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<PERFORM ,V?ATTACK ,PRSI ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?ATTACK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?ATTACK"
                    }
                  ]
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1397",
    "Name": "PRE-TAKE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<IN? ,PRSO ,WINNER> <COND (<FSET? ,PRSO ,WEARBIT> <TELL \"You are already wearing it.\" CR>) (T <TELL \"You already have that!\" CR>)>) (<AND <FSET? <LOC ,PRSO> ,CONTBIT> <NOT <FSET? <LOC ,PRSO> ,OPENBIT>>> <TELL \"You can't reach something that's inside a closed container.\" CR> <RTRUE>) (,PRSI <COND (<EQUAL? ,PRSI ,GROUND> <SETG PRSI <>> <RFALSE>)> <NULL-F> <COND (<NOT <EQUAL? ,PRSI <LOC ,PRSO>>> <TELL \"The \" D ,PRSO \" isn't in the \" D ,PRSI \".\" CR>) (T <SETG PRSI <>> <RFALSE>)>) (<EQUAL? ,PRSO <LOC ,WINNER>> <TELL \"You're inside of it!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,PRSO ,WINNER>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,WEARBIT> <TELL \"You are already wearing it.\" CR>) (T <TELL \"You already have that!\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,WEARBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",WEARBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WEARBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You are already wearing it.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You are already wearing it.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You already have that!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You already have that!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <FSET? <LOC ,PRSO> ,CONTBIT> <NOT <FSET? <LOC ,PRSO> ,OPENBIT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<FSET? <LOC ,PRSO> ,CONTBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": "<LOC ,PRSO>",
                      "Form": [
                        {
                          "Atom": "LOC"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",CONTBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CONTBIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? <LOC ,PRSO> ,OPENBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? <LOC ,PRSO> ,OPENBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": "<LOC ,PRSO>",
                          "Form": [
                            {
                              "Atom": "LOC"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": ",OPENBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "OPENBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't reach something that's inside a closed container.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't reach something that's inside a closed container.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": ",PRSI",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "PRSI"
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? ,PRSI ,GROUND> <SETG PRSI <>> <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? ,PRSI ,GROUND>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      {
                        "Zil": ",GROUND",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "GROUND"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG PRSI <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "PRSI"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <EQUAL? ,PRSI <LOC ,PRSO>>> <TELL \"The \" D ,PRSO \" isn't in the \" D ,PRSI \".\" CR>) (T <SETG PRSI <>> <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <EQUAL? ,PRSI <LOC ,PRSO>>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<EQUAL? ,PRSI <LOC ,PRSO>>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",PRSI",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSI"
                              }
                            ]
                          },
                          {
                            "Zil": "<LOC ,PRSO>",
                            "Form": [
                              {
                                "Atom": "LOC"
                              },
                              {
                                "Zil": ",PRSO",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "PRSO"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" isn't in the \" D ,PRSI \".\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " isn't in the ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      ".",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SETG PRSI <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "PRSI"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,PRSO <LOC ,WINNER>>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": "<LOC ,WINNER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You're inside of it!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You're inside of it!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1426",
    "Name": "V-TAKE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? <ITAKE> T> <COND (<FSET? ,PRSO ,WEARBIT> <TELL \"You are now wearing the \" D ,PRSO \".\" CR>) (T <TELL \"Taken.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? <ITAKE> T>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": "<ITAKE>",
                  "Form": [
                    {
                      "Atom": "ITAKE"
                    }
                  ]
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,PRSO ,WEARBIT> <TELL \"You are now wearing the \" D ,PRSO \".\" CR>) (T <TELL \"Taken.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,PRSO ,WEARBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",WEARBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WEARBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You are now wearing the \" D ,PRSO \".\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You are now wearing the ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      ".",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"Taken.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Taken.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1433",
    "Name": "V-TELL",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,PRSO ,ACTORBIT> <COND (,P-CONT <SETG WINNER ,PRSO> <SETG HERE <LOC ,WINNER>>) (T <TELL \"The \" D ,PRSO \" pauses for a moment, perhaps thinking that you should reread\r\nthe manual.\" CR>)>) (T <TELL \"You can't talk to the \" D ,PRSO \"!\" CR> <SETG QUOTE-FLAG <>> <SETG P-CONT <>> <RFATAL>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,PRSO ,ACTORBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",ACTORBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTORBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (,P-CONT <SETG WINNER ,PRSO> <SETG HERE <LOC ,WINNER>>) (T <TELL \"The \" D ,PRSO \" pauses for a moment, perhaps thinking that you should reread\r\nthe manual.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",P-CONT",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "P-CONT"
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG WINNER ,PRSO>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "WINNER"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG HERE <LOC ,WINNER>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "HERE"
                      },
                      {
                        "Zil": "<LOC ,WINNER>",
                        "Form": [
                          {
                            "Atom": "LOC"
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" pauses for a moment, perhaps thinking that you should reread\r\nthe manual.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " pauses for a moment, perhaps thinking that you should reread\r\nthe manual.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't talk to the \" D ,PRSO \"!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't talk to the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                "!",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG QUOTE-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "QUOTE-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG P-CONT <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-CONT"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<RFATAL>",
              "Form": [
                {
                  "Atom": "RFATAL"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1448",
    "Name": "V-THROUGH",
    "ArgSpec": "(\"OPT\" (OBJ <>) \"AUX\" M)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<COND (<AND <FSET? ,PRSO ,DOORBIT> <SET M <OTHER-SIDE ,PRSO>>> <DO-WALK .M> <RTRUE>) (<AND <NOT .OBJ> <FSET? ,PRSO ,VEHBIT>> <PERFORM ,V?BOARD ,PRSO> <RTRUE>) (<OR .OBJ <NOT <FSET? ,PRSO ,TAKEBIT>>> <NULL-F> <TELL \"You hit your head against the \" D ,PRSO \" as you attempt this feat.\" CR>) (<IN? ,PRSO ,WINNER> <TELL \"That would involve quite a contortion!\" CR>) (T <TELL <PICK-ONE ,YUKS> CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <FSET? ,PRSO ,DOORBIT> <SET M <OTHER-SIDE ,PRSO>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<FSET? ,PRSO ,DOORBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",DOORBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "DOORBIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET M <OTHER-SIDE ,PRSO>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "M"
                    },
                    {
                      "Zil": "<OTHER-SIDE ,PRSO>",
                      "Form": [
                        {
                          "Atom": "OTHER-SIDE"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<DO-WALK .M>",
              "Form": [
                {
                  "Atom": "DO-WALK"
                },
                {
                  "Zil": ".M",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "M"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <NOT .OBJ> <FSET? ,PRSO ,VEHBIT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT .OBJ>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FSET? ,PRSO ,VEHBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",VEHBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VEHBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?BOARD ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?BOARD",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?BOARD"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<OR .OBJ <NOT <FSET? ,PRSO ,TAKEBIT>>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? ,PRSO ,TAKEBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? ,PRSO ,TAKEBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",TAKEBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "TAKEBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<TELL \"You hit your head against the \" D ,PRSO \" as you attempt this feat.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You hit your head against the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " as you attempt this feat.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<IN? ,PRSO ,WINNER>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"That would involve quite a contortion!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "That would involve quite a contortion!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL <PICK-ONE ,YUKS> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<PICK-ONE ,YUKS>",
                  "Form": [
                    {
                      "Atom": "PICK-ONE"
                    },
                    {
                      "Zil": ",YUKS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "YUKS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1489",
    "Name": "V-THROW",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<IDROP> <COND (<EQUAL? ,PRSI ,ME> <TELL \"A terrific throw! The \" D ,PRSO> <SETG WINNER ,PLAYER> <JIGS-UP \" hits you squarely in the head. Normally,\r\nthis wouldn't do much damage, but by incredible mischance, you fall over\r\nbackwards trying to duck, and break your neck, justice being swift and\r\nmerciful in the Great Underground Empire.\">) (<AND ,PRSI <FSET? ,PRSI ,ACTORBIT>> <TELL \"The \" D ,PRSI \" ducks as the \" D ,PRSO \" flies by and crashes to the ground.\" CR>) (T <TELL \"Thrown.\" CR>)>) (ELSE <TELL \"Huh?\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IDROP>",
              "Form": [
                {
                  "Atom": "IDROP"
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? ,PRSI ,ME> <TELL \"A terrific throw! The \" D ,PRSO> <SETG WINNER ,PLAYER> <JIGS-UP \" hits you squarely in the head. Normally,\r\nthis wouldn't do much damage, but by incredible mischance, you fall over\r\nbackwards trying to duck, and break your neck, justice being swift and\r\nmerciful in the Great Underground Empire.\">) (<AND ,PRSI <FSET? ,PRSI ,ACTORBIT>> <TELL \"The \" D ,PRSI \" ducks as the \" D ,PRSO \" flies by and crashes to the ground.\" CR>) (T <TELL \"Thrown.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? ,PRSI ,ME>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      {
                        "Zil": ",ME",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ME"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"A terrific throw! The \" D ,PRSO>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "A terrific throw! The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG WINNER ,PLAYER>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "WINNER"
                      },
                      {
                        "Zil": ",PLAYER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PLAYER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<JIGS-UP \" hits you squarely in the head. Normally,\r\nthis wouldn't do much damage, but by incredible mischance, you fall over\r\nbackwards trying to duck, and break your neck, justice being swift and\r\nmerciful in the Great Underground Empire.\">",
                    "Form": [
                      {
                        "Atom": "JIGS-UP"
                      },
                      " hits you squarely in the head. Normally,\r\nthis wouldn't do much damage, but by incredible mischance, you fall over\r\nbackwards trying to duck, and break your neck, justice being swift and\r\nmerciful in the Great Underground Empire."
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND ,PRSI <FSET? ,PRSI ,ACTORBIT>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      {
                        "Zil": "<FSET? ,PRSI ,ACTORBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",PRSI",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSI"
                              }
                            ]
                          },
                          {
                            "Zil": ",ACTORBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "ACTORBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSI \" ducks as the \" D ,PRSO \" flies by and crashes to the ground.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      " ducks as the ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " flies by and crashes to the ground.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"Thrown.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Thrown.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<TELL \"Huh?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Huh?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1506",
    "Name": "V-THROW-OFF",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You can't throw anything off of that!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You can't throw anything off of that!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1509",
    "Name": "V-TIE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,PRSI ,WINNER> <TELL \"You can't tie anything to yourself.\" CR>) (T <TELL \"You can't tie the \" D ,PRSO \" to that.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSI ,WINNER>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't tie anything to yourself.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't tie anything to yourself.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't tie the \" D ,PRSO \" to that.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't tie the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " to that.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1515",
    "Name": "V-TIE-UP",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You could certainly never tie it with that!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You could certainly never tie it with that!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1518",
    "Name": "V-TREASURE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NULL-F> <RTRUE>) (<NULL-F> <RTRUE>) (T <TELL \"Nothing happens.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Nothing happens.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Nothing happens.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1532",
    "Name": "PRE-TURN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <EQUAL? ,PRSI <> ,ROOMS> <EQUAL? ,PRSO ,DIAL ,TM-DIAL ,T-BAR>> <TELL \"You should turn the \" D ,PRSO \" to something.\" CR> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <EQUAL? ,PRSI <> ,ROOMS> <EQUAL? ,PRSO ,DIAL ,TM-DIAL ,T-BAR>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<EQUAL? ,PRSI <> ,ROOMS>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": "<>",
                      "Form": []
                    },
                    {
                      "Zil": ",ROOMS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ROOMS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,PRSO ,DIAL ,TM-DIAL ,T-BAR>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",DIAL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "DIAL"
                        }
                      ]
                    },
                    {
                      "Zil": ",TM-DIAL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TM-DIAL"
                        }
                      ]
                    },
                    {
                      "Zil": ",T-BAR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "T-BAR"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You should turn the \" D ,PRSO \" to something.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You should turn the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " to something.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<EQUAL? ,PRSI <> ,ROOMS> <TELL \"Your bare hands don't appear to be enough.\" CR>) (<NOT <FSET? ,PRSO ,TURNBIT>> <TELL \"You can't turn that!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSI <> ,ROOMS>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                {
                  "Zil": "<>",
                  "Form": []
                },
                {
                  "Zil": ",ROOMS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ROOMS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Your bare hands don't appear to be enough.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Your bare hands don't appear to be enough.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <FSET? ,PRSO ,TURNBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,PRSO ,TURNBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",TURNBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TURNBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't turn that!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't turn that!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1549",
    "Name": "V-TURN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"This has no effect.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "This has no effect.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1552",
    "Name": "V-UNLOCK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<V-LOCK>",
        "Form": [
          {
            "Atom": "V-LOCK"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1555",
    "Name": "V-UNTIE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"This cannot be tied, so it cannot be untied!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "This cannot be tied, so it cannot be untied!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1558",
    "Name": "V-WAIT",
    "ArgSpec": "(\"OPT\" (NUM 3))",
    "Body": [
      {
        "Zil": "<TELL \"Time passes...\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Time passes...",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<L? <SET NUM <- .NUM 1>> 0> <RETURN>) (<CLOCKER> <RETURN>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<L? <SET NUM <- .NUM 1>> 0> <RETURN>) (<CLOCKER> <RETURN>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<L? <SET NUM <- .NUM 1>> 0>",
                  "Form": [
                    {
                      "Atom": "L?"
                    },
                    {
                      "Zil": "<SET NUM <- .NUM 1>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "NUM"
                        },
                        {
                          "Zil": "<- .NUM 1>",
                          "Form": [
                            {
                              "Atom": "-"
                            },
                            {
                              "Zil": ".NUM",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "NUM"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    },
                    0
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<CLOCKER>",
                  "Form": [
                    {
                      "Atom": "CLOCKER"
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Zil": "<SETG CLOCK-WAIT T>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "CLOCK-WAIT"
          },
          {
            "Atom": "T"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1565",
    "Name": "V-WALK",
    "ArgSpec": "(\"AUX\" PT PTS STR OBJ RM)",
    "Body": [
      {
        "Zil": "<COND (<NOT ,P-WALK-DIR> <PERFORM ,V?WALK-TO ,PRSO> <RTRUE>) (<SET PT <GETPT ,HERE ,PRSO>> <COND (<EQUAL? <SET PTS <PTSIZE .PT>> ,UEXIT> <GOTO <GETB .PT ,REXIT>>) (<EQUAL? .PTS ,NEXIT> <TELL <GET .PT ,NEXITSTR> CR> <RFATAL>) (<EQUAL? .PTS ,FEXIT> <COND (<SET RM <APPLY <GET .PT ,FEXITFCN>>> <GOTO .RM>) (<AND <EQUAL? ,HERE ,CP> ,CP-MOVED> <RTRUE>) (T <RFATAL>)>) (<EQUAL? .PTS ,CEXIT> <COND (<VALUE <GETB .PT ,CEXITFLAG>> <GOTO <GETB .PT ,REXIT>>) (<SET STR <GET .PT ,CEXITSTR>> <TELL .STR CR> <RFATAL>) (T <TELL \"You can't go that way.\" CR> <RFATAL>)>) (<EQUAL? .PTS ,DEXIT> <COND (<FSET? <SET OBJ <GETB .PT ,DEXITOBJ>> ,OPENBIT> <GOTO <GETB .PT ,REXIT>>) (<SET STR <GET .PT ,DEXITSTR>> <TELL .STR CR> <RFATAL>) (T <TELL \"The \" D .OBJ \" is closed.\" CR> <THIS-IS-IT .OBJ> <RFATAL>)>)>) (<AND <NOT ,LIT> <PROB 80> <EQUAL? ,WINNER ,ADVENTURER> <NOT <FSET? ,HERE ,NONLANDBIT>>> <COND (,SPRAYED? <TELL \"There are odd noises in the darkness, and there is no exit in that\r\ndirection.\" CR> <RFATAL>) (<EQUAL? ,HERE ,DARK-1 ,DARK-2> <JIGS-UP \"Oh, no! You have walked into a den of hungry grues and it's dinner time!\">) (T <JIGS-UP \"Oh, no! You have walked into the slavering fangs of a lurking grue!\">)>) (T <TELL \"You can't go that way.\" CR> <RFATAL>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,P-WALK-DIR>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",P-WALK-DIR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P-WALK-DIR"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?WALK-TO ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?WALK-TO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?WALK-TO"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<SET PT <GETPT ,HERE ,PRSO>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "PT"
                },
                {
                  "Zil": "<GETPT ,HERE ,PRSO>",
                  "Form": [
                    {
                      "Atom": "GETPT"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? <SET PTS <PTSIZE .PT>> ,UEXIT> <GOTO <GETB .PT ,REXIT>>) (<EQUAL? .PTS ,NEXIT> <TELL <GET .PT ,NEXITSTR> CR> <RFATAL>) (<EQUAL? .PTS ,FEXIT> <COND (<SET RM <APPLY <GET .PT ,FEXITFCN>>> <GOTO .RM>) (<AND <EQUAL? ,HERE ,CP> ,CP-MOVED> <RTRUE>) (T <RFATAL>)>) (<EQUAL? .PTS ,CEXIT> <COND (<VALUE <GETB .PT ,CEXITFLAG>> <GOTO <GETB .PT ,REXIT>>) (<SET STR <GET .PT ,CEXITSTR>> <TELL .STR CR> <RFATAL>) (T <TELL \"You can't go that way.\" CR> <RFATAL>)>) (<EQUAL? .PTS ,DEXIT> <COND (<FSET? <SET OBJ <GETB .PT ,DEXITOBJ>> ,OPENBIT> <GOTO <GETB .PT ,REXIT>>) (<SET STR <GET .PT ,DEXITSTR>> <TELL .STR CR> <RFATAL>) (T <TELL \"The \" D .OBJ \" is closed.\" CR> <THIS-IS-IT .OBJ> <RFATAL>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? <SET PTS <PTSIZE .PT>> ,UEXIT>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": "<SET PTS <PTSIZE .PT>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "PTS"
                          },
                          {
                            "Zil": "<PTSIZE .PT>",
                            "Form": [
                              {
                                "Atom": "PTSIZE"
                              },
                              {
                                "Zil": ".PT",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "PT"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",UEXIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "UEXIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<GOTO <GETB .PT ,REXIT>>",
                    "Form": [
                      {
                        "Atom": "GOTO"
                      },
                      {
                        "Zil": "<GETB .PT ,REXIT>",
                        "Form": [
                          {
                            "Atom": "GETB"
                          },
                          {
                            "Zil": ".PT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "PT"
                              }
                            ]
                          },
                          {
                            "Zil": ",REXIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "REXIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<EQUAL? .PTS ,NEXIT>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ".PTS",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PTS"
                          }
                        ]
                      },
                      {
                        "Zil": ",NEXIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "NEXIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL <GET .PT ,NEXITSTR> CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<GET .PT ,NEXITSTR>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ".PT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "PT"
                              }
                            ]
                          },
                          {
                            "Zil": ",NEXITSTR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "NEXITSTR"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFATAL>",
                    "Form": [
                      {
                        "Atom": "RFATAL"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<EQUAL? .PTS ,FEXIT>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ".PTS",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PTS"
                          }
                        ]
                      },
                      {
                        "Zil": ",FEXIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "FEXIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<SET RM <APPLY <GET .PT ,FEXITFCN>>> <GOTO .RM>) (<AND <EQUAL? ,HERE ,CP> ,CP-MOVED> <RTRUE>) (T <RFATAL>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<SET RM <APPLY <GET .PT ,FEXITFCN>>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "RM"
                            },
                            {
                              "Zil": "<APPLY <GET .PT ,FEXITFCN>>",
                              "Form": [
                                {
                                  "Atom": "APPLY"
                                },
                                {
                                  "Zil": "<GET .PT ,FEXITFCN>",
                                  "Form": [
                                    {
                                      "Atom": "GET"
                                    },
                                    {
                                      "Zil": ".PT",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "PT"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",FEXITFCN",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "FEXITFCN"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<GOTO .RM>",
                          "Form": [
                            {
                              "Atom": "GOTO"
                            },
                            {
                              "Zil": ".RM",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "RM"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<AND <EQUAL? ,HERE ,CP> ,CP-MOVED>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": "<EQUAL? ,HERE ,CP>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ",HERE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "HERE"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",CP",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "CP"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": ",CP-MOVED",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "CP-MOVED"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<RFATAL>",
                          "Form": [
                            {
                              "Atom": "RFATAL"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<EQUAL? .PTS ,CEXIT>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ".PTS",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PTS"
                          }
                        ]
                      },
                      {
                        "Zil": ",CEXIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CEXIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<VALUE <GETB .PT ,CEXITFLAG>> <GOTO <GETB .PT ,REXIT>>) (<SET STR <GET .PT ,CEXITSTR>> <TELL .STR CR> <RFATAL>) (T <TELL \"You can't go that way.\" CR> <RFATAL>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<VALUE <GETB .PT ,CEXITFLAG>>",
                          "Form": [
                            {
                              "Atom": "VALUE"
                            },
                            {
                              "Zil": "<GETB .PT ,CEXITFLAG>",
                              "Form": [
                                {
                                  "Atom": "GETB"
                                },
                                {
                                  "Zil": ".PT",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "PT"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",CEXITFLAG",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "CEXITFLAG"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<GOTO <GETB .PT ,REXIT>>",
                          "Form": [
                            {
                              "Atom": "GOTO"
                            },
                            {
                              "Zil": "<GETB .PT ,REXIT>",
                              "Form": [
                                {
                                  "Atom": "GETB"
                                },
                                {
                                  "Zil": ".PT",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "PT"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",REXIT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "REXIT"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<SET STR <GET .PT ,CEXITSTR>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "STR"
                            },
                            {
                              "Zil": "<GET .PT ,CEXITSTR>",
                              "Form": [
                                {
                                  "Atom": "GET"
                                },
                                {
                                  "Zil": ".PT",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "PT"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",CEXITSTR",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "CEXITSTR"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL .STR CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            {
                              "Zil": ".STR",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "STR"
                                }
                              ]
                            },
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RFATAL>",
                          "Form": [
                            {
                              "Atom": "RFATAL"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"You can't go that way.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "You can't go that way.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RFATAL>",
                          "Form": [
                            {
                              "Atom": "RFATAL"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<EQUAL? .PTS ,DEXIT>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ".PTS",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PTS"
                          }
                        ]
                      },
                      {
                        "Zil": ",DEXIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "DEXIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<FSET? <SET OBJ <GETB .PT ,DEXITOBJ>> ,OPENBIT> <GOTO <GETB .PT ,REXIT>>) (<SET STR <GET .PT ,DEXITSTR>> <TELL .STR CR> <RFATAL>) (T <TELL \"The \" D .OBJ \" is closed.\" CR> <THIS-IS-IT .OBJ> <RFATAL>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<FSET? <SET OBJ <GETB .PT ,DEXITOBJ>> ,OPENBIT>",
                          "Form": [
                            {
                              "Atom": "FSET?"
                            },
                            {
                              "Zil": "<SET OBJ <GETB .PT ,DEXITOBJ>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "OBJ"
                                },
                                {
                                  "Zil": "<GETB .PT ,DEXITOBJ>",
                                  "Form": [
                                    {
                                      "Atom": "GETB"
                                    },
                                    {
                                      "Zil": ".PT",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "PT"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",DEXITOBJ",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "DEXITOBJ"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": ",OPENBIT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "OPENBIT"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<GOTO <GETB .PT ,REXIT>>",
                          "Form": [
                            {
                              "Atom": "GOTO"
                            },
                            {
                              "Zil": "<GETB .PT ,REXIT>",
                              "Form": [
                                {
                                  "Atom": "GETB"
                                },
                                {
                                  "Zil": ".PT",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "PT"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",REXIT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "REXIT"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<SET STR <GET .PT ,DEXITSTR>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "STR"
                            },
                            {
                              "Zil": "<GET .PT ,DEXITSTR>",
                              "Form": [
                                {
                                  "Atom": "GET"
                                },
                                {
                                  "Zil": ".PT",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "PT"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",DEXITSTR",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "DEXITSTR"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL .STR CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            {
                              "Zil": ".STR",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "STR"
                                }
                              ]
                            },
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RFATAL>",
                          "Form": [
                            {
                              "Atom": "RFATAL"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"The \" D .OBJ \" is closed.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ".OBJ",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "OBJ"
                                }
                              ]
                            },
                            " is closed.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<THIS-IS-IT .OBJ>",
                          "Form": [
                            {
                              "Atom": "THIS-IS-IT"
                            },
                            {
                              "Zil": ".OBJ",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "OBJ"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<RFATAL>",
                          "Form": [
                            {
                              "Atom": "RFATAL"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <NOT ,LIT> <PROB 80> <EQUAL? ,WINNER ,ADVENTURER> <NOT <FSET? ,HERE ,NONLANDBIT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT ,LIT>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",LIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "LIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<PROB 80>",
                  "Form": [
                    {
                      "Atom": "PROB"
                    },
                    80
                  ]
                },
                {
                  "Zil": "<EQUAL? ,WINNER ,ADVENTURER>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    },
                    {
                      "Zil": ",ADVENTURER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ADVENTURER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? ,HERE ,NONLANDBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? ,HERE ,NONLANDBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        },
                        {
                          "Zil": ",NONLANDBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "NONLANDBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (,SPRAYED? <TELL \"There are odd noises in the darkness, and there is no exit in that\r\ndirection.\" CR> <RFATAL>) (<EQUAL? ,HERE ,DARK-1 ,DARK-2> <JIGS-UP \"Oh, no! You have walked into a den of hungry grues and it's dinner time!\">) (T <JIGS-UP \"Oh, no! You have walked into the slavering fangs of a lurking grue!\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",SPRAYED?",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "SPRAYED?"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"There are odd noises in the darkness, and there is no exit in that\r\ndirection.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There are odd noises in the darkness, and there is no exit in that\r\ndirection.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFATAL>",
                    "Form": [
                      {
                        "Atom": "RFATAL"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<EQUAL? ,HERE ,DARK-1 ,DARK-2>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",DARK-1",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "DARK-1"
                          }
                        ]
                      },
                      {
                        "Zil": ",DARK-2",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "DARK-2"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<JIGS-UP \"Oh, no! You have walked into a den of hungry grues and it's dinner time!\">",
                    "Form": [
                      {
                        "Atom": "JIGS-UP"
                      },
                      "Oh, no! You have walked into a den of hungry grues and it's dinner time!"
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<JIGS-UP \"Oh, no! You have walked into the slavering fangs of a lurking grue!\">",
                    "Form": [
                      {
                        "Atom": "JIGS-UP"
                      },
                      "Oh, no! You have walked into the slavering fangs of a lurking grue!"
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't go that way.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't go that way.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFATAL>",
              "Form": [
                {
                  "Atom": "RFATAL"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1627",
    "Name": "V-WALK-AROUND",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Use compass directions for movement.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Use compass directions for movement.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1630",
    "Name": "V-WALK-TO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND ,PRSO <OR <IN? ,PRSO ,HERE> <GLOBAL-IN? ,PRSO ,HERE>>> <TELL \"It's here!\" CR>) (T <TELL \"You should supply a direction!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND ,PRSO <OR <IN? ,PRSO ,HERE> <GLOBAL-IN? ,PRSO ,HERE>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": "<OR <IN? ,PRSO ,HERE> <GLOBAL-IN? ,PRSO ,HERE>>",
                  "Form": [
                    {
                      "Atom": "OR"
                    },
                    {
                      "Zil": "<IN? ,PRSO ,HERE>",
                      "Form": [
                        {
                          "Atom": "IN?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<GLOBAL-IN? ,PRSO ,HERE>",
                      "Form": [
                        {
                          "Atom": "GLOBAL-IN?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"It's here!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's here!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You should supply a direction!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You should supply a direction!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1638",
    "Name": "V-WAVE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<HACK-HACK \"Waving the \">",
        "Form": [
          {
            "Atom": "HACK-HACK"
          },
          "Waving the "
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1641",
    "Name": "V-WEAR",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT <FSET? ,PRSO ,WEARBIT>> <TELL \"You can't wear the \" D ,PRSO \".\" CR>) (T <PERFORM ,V?TAKE ,PRSO> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <FSET? ,PRSO ,WEARBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,PRSO ,WEARBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",WEARBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WEARBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't wear the \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't wear the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<PERFORM ,V?TAKE ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?TAKE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?TAKE"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1648",
    "Name": "V-WIN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Naturally!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Naturally!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1651",
    "Name": "V-WIND",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You cannot wind up a \" D ,PRSO \".\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You cannot wind up a ",
          {
            "Atom": "D"
          },
          {
            "Zil": ",PRSO",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PRSO"
              }
            ]
          },
          ".",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1654",
    "Name": "V-WISH",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"With luck, your wish will come true.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "With luck, your wish will come true.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1660",
    "Name": "V-YELL",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"Aaaarrrrgggghhhh!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Aaaarrrrgggghhhh!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1662",
    "Name": "V-ZORK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"At your service!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "At your service!",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1674",
    "Name": "V-FIRST-LOOK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<DESCRIBE-ROOM> <COND (<NOT ,SUPER-BRIEF> <DESCRIBE-OBJECTS>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<DESCRIBE-ROOM>",
              "Form": [
                {
                  "Atom": "DESCRIBE-ROOM"
                }
              ]
            },
            {
              "Zil": "<COND (<NOT ,SUPER-BRIEF> <DESCRIBE-OBJECTS>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,SUPER-BRIEF>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",SUPER-BRIEF",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SUPER-BRIEF"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<DESCRIBE-OBJECTS>",
                    "Form": [
                      {
                        "Atom": "DESCRIBE-OBJECTS"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1679",
    "Name": "DESCRIBE-ROOM",
    "ArgSpec": "(\"OPT\" (LOOK? <>) \"AUX\" V? STR AV)",
    "Body": [
      {
        "Zil": "<SET V? <OR .LOOK? ,VERBOSE>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "V?"
          },
          {
            "Zil": "<OR .LOOK? ,VERBOSE>",
            "Form": [
              {
                "Atom": "OR"
              },
              {
                "Zil": ".LOOK?",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "LOOK?"
                  }
                ]
              },
              {
                "Zil": ",VERBOSE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "VERBOSE"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<NOT ,LIT> <TELL \"It is pitch black.\"> <COND (<NOT ,SPRAYED?> <TELL \" You are likely to be eaten by a grue.\">)> <CRLF> <COND (<EQUAL? ,HERE ,DARK-2> <TELL \"The ground continues to slope upwards away from the lake. You can barely\r\ndetect a dim light from the east.\" CR>)> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,LIT>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",LIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"It is pitch black.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It is pitch black."
              ]
            },
            {
              "Zil": "<COND (<NOT ,SPRAYED?> <TELL \" You are likely to be eaten by a grue.\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,SPRAYED?>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",SPRAYED?",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SPRAYED?"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" You are likely to be eaten by a grue.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " You are likely to be eaten by a grue."
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? ,HERE ,DARK-2> <TELL \"The ground continues to slope upwards away from the lake. You can barely\r\ndetect a dim light from the east.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? ,HERE ,DARK-2>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",DARK-2",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "DARK-2"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The ground continues to slope upwards away from the lake. You can barely\r\ndetect a dim light from the east.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ground continues to slope upwards away from the lake. You can barely\r\ndetect a dim light from the east.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT <FSET? ,HERE ,TOUCHBIT>> <FSET ,HERE ,TOUCHBIT> <SET V? T>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <FSET? ,HERE ,TOUCHBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,HERE ,TOUCHBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",TOUCHBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TOUCHBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FSET ,HERE ,TOUCHBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",TOUCHBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TOUCHBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET V? T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "V?"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<NULL-F>",
        "Form": [
          {
            "Atom": "NULL-F"
          }
        ]
      },
      {
        "Zil": "<COND (<IN? ,HERE ,ROOMS> <TELL D ,HERE> <COND (<FSET? <SET AV <LOC ,WINNER>> ,VEHBIT> <TELL \", in the \" D .AV>)> <CRLF>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,HERE ,ROOMS>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",ROOMS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ROOMS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL D ,HERE>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? <SET AV <LOC ,WINNER>> ,VEHBIT> <TELL \", in the \" D .AV>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? <SET AV <LOC ,WINNER>> ,VEHBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": "<SET AV <LOC ,WINNER>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "AV"
                          },
                          {
                            "Zil": "<LOC ,WINNER>",
                            "Form": [
                              {
                                "Atom": "LOC"
                              },
                              {
                                "Zil": ",WINNER",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "WINNER"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",VEHBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "VEHBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \", in the \" D .AV>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      ", in the ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".AV",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "AV"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<OR .LOOK? <NOT ,SUPER-BRIEF>> <SET AV <LOC ,WINNER>> <COND (<AND .V? <APPLY <GETP ,HERE ,P?ACTION> ,M-LOOK>> <RTRUE>) (<AND .V? <SET STR <GETP ,HERE ,P?LDESC>>> <TELL .STR CR>) (T <APPLY <GETP ,HERE ,P?ACTION> ,M-FLASH>)> <COND (<AND <NOT <EQUAL? ,HERE .AV>> <FSET? .AV ,VEHBIT>> <APPLY <GETP .AV ,P?ACTION> ,M-LOOK>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR .LOOK? <NOT ,SUPER-BRIEF>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": ".LOOK?",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "LOOK?"
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,SUPER-BRIEF>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",SUPER-BRIEF",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SUPER-BRIEF"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET AV <LOC ,WINNER>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "AV"
                },
                {
                  "Zil": "<LOC ,WINNER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND .V? <APPLY <GETP ,HERE ,P?ACTION> ,M-LOOK>> <RTRUE>) (<AND .V? <SET STR <GETP ,HERE ,P?LDESC>>> <TELL .STR CR>) (T <APPLY <GETP ,HERE ,P?ACTION> ,M-FLASH>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND .V? <APPLY <GETP ,HERE ,P?ACTION> ,M-LOOK>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ".V?",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "V?"
                          }
                        ]
                      },
                      {
                        "Zil": "<APPLY <GETP ,HERE ,P?ACTION> ,M-LOOK>",
                        "Form": [
                          {
                            "Atom": "APPLY"
                          },
                          {
                            "Zil": "<GETP ,HERE ,P?ACTION>",
                            "Form": [
                              {
                                "Atom": "GETP"
                              },
                              {
                                "Zil": ",HERE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "HERE"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P?ACTION",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P?ACTION"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": ",M-LOOK",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "M-LOOK"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND .V? <SET STR <GETP ,HERE ,P?LDESC>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ".V?",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "V?"
                          }
                        ]
                      },
                      {
                        "Zil": "<SET STR <GETP ,HERE ,P?LDESC>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "STR"
                          },
                          {
                            "Zil": "<GETP ,HERE ,P?LDESC>",
                            "Form": [
                              {
                                "Atom": "GETP"
                              },
                              {
                                "Zil": ",HERE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "HERE"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P?LDESC",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P?LDESC"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL .STR CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": ".STR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "STR"
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<APPLY <GETP ,HERE ,P?ACTION> ,M-FLASH>",
                    "Form": [
                      {
                        "Atom": "APPLY"
                      },
                      {
                        "Zil": "<GETP ,HERE ,P?ACTION>",
                        "Form": [
                          {
                            "Atom": "GETP"
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          },
                          {
                            "Zil": ",P?ACTION",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P?ACTION"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",M-FLASH",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "M-FLASH"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<AND <NOT <EQUAL? ,HERE .AV>> <FSET? .AV ,VEHBIT>> <APPLY <GETP .AV ,P?ACTION> ,M-LOOK>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <NOT <EQUAL? ,HERE .AV>> <FSET? .AV ,VEHBIT>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<NOT <EQUAL? ,HERE .AV>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<EQUAL? ,HERE .AV>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ",HERE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "HERE"
                                  }
                                ]
                              },
                              {
                                "Zil": ".AV",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "AV"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<FSET? .AV ,VEHBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ".AV",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "AV"
                              }
                            ]
                          },
                          {
                            "Zil": ",VEHBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "VEHBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<APPLY <GETP .AV ,P?ACTION> ,M-LOOK>",
                    "Form": [
                      {
                        "Atom": "APPLY"
                      },
                      {
                        "Zil": "<GETP .AV ,P?ACTION>",
                        "Form": [
                          {
                            "Atom": "GETP"
                          },
                          {
                            "Zil": ".AV",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "AV"
                              }
                            ]
                          },
                          {
                            "Zil": ",P?ACTION",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P?ACTION"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",M-LOOK",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "M-LOOK"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      },
      {
        "Atom": "T"
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1725",
    "Name": "DESCRIBE-OBJECTS",
    "ArgSpec": "(\"OPT\" (V? <>))",
    "Body": [
      {
        "Zil": "<COND (,LIT <COND (<FIRST? ,HERE> <PRINT-CONT ,HERE <SET V? <OR .V? ,VERBOSE>> -1>)>) (T <TELL \"Only bats can see in the dark. And you're not one.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",LIT",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "LIT"
                }
              ]
            },
            {
              "Zil": "<COND (<FIRST? ,HERE> <PRINT-CONT ,HERE <SET V? <OR .V? ,VERBOSE>> -1>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FIRST? ,HERE>",
                    "Form": [
                      {
                        "Atom": "FIRST?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<PRINT-CONT ,HERE <SET V? <OR .V? ,VERBOSE>> -1>",
                    "Form": [
                      {
                        "Atom": "PRINT-CONT"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": "<SET V? <OR .V? ,VERBOSE>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "V?"
                          },
                          {
                            "Zil": "<OR .V? ,VERBOSE>",
                            "Form": [
                              {
                                "Atom": "OR"
                              },
                              {
                                "Zil": ".V?",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "V?"
                                  }
                                ]
                              },
                              {
                                "Zil": ",VERBOSE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "VERBOSE"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      -1
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Only bats can see in the dark. And you're not one.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Only bats can see in the dark. And you're not one.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1737",
    "Name": "DESCRIBE-OBJECT",
    "ArgSpec": "(OBJ V? LEVEL \"AUX\" (STR <>) AV)",
    "Body": [
      {
        "Zil": "<SETG DESC-OBJECT .OBJ>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "DESC-OBJECT"
          },
          {
            "Zil": ".OBJ",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "OBJ"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND <0? .LEVEL> <APPLY <GETP .OBJ ,P?DESCFCN> ,M-OBJDESC>> <RTRUE>) (<AND <0? .LEVEL> <OR <AND <NOT <FSET? .OBJ ,TOUCHBIT>> <SET STR <GETP .OBJ ,P?FDESC>>> <SET STR <GETP .OBJ ,P?LDESC>>>> <TELL .STR>) (<0? .LEVEL> <TELL \"There is a \" D .OBJ \" here\"> <COND (<FSET? .OBJ ,ONBIT> <TELL \" (providing light)\">)> <TELL \".\">) (T <TELL <GET ,INDENTS .LEVEL>> <TELL \"A \" D .OBJ> <COND (<FSET? .OBJ ,ONBIT> <TELL \" (providing light)\">) (<AND <FSET? .OBJ ,WEARBIT> <IN? .OBJ ,WINNER>> <TELL \" (being worn)\">)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <0? .LEVEL> <APPLY <GETP .OBJ ,P?DESCFCN> ,M-OBJDESC>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<0? .LEVEL>",
                  "Form": [
                    {
                      "Atom": "0?"
                    },
                    {
                      "Zil": ".LEVEL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "LEVEL"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<APPLY <GETP .OBJ ,P?DESCFCN> ,M-OBJDESC>",
                  "Form": [
                    {
                      "Atom": "APPLY"
                    },
                    {
                      "Zil": "<GETP .OBJ ,P?DESCFCN>",
                      "Form": [
                        {
                          "Atom": "GETP"
                        },
                        {
                          "Zil": ".OBJ",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "OBJ"
                            }
                          ]
                        },
                        {
                          "Zil": ",P?DESCFCN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P?DESCFCN"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",M-OBJDESC",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-OBJDESC"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <0? .LEVEL> <OR <AND <NOT <FSET? .OBJ ,TOUCHBIT>> <SET STR <GETP .OBJ ,P?FDESC>>> <SET STR <GETP .OBJ ,P?LDESC>>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<0? .LEVEL>",
                  "Form": [
                    {
                      "Atom": "0?"
                    },
                    {
                      "Zil": ".LEVEL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "LEVEL"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<OR <AND <NOT <FSET? .OBJ ,TOUCHBIT>> <SET STR <GETP .OBJ ,P?FDESC>>> <SET STR <GETP .OBJ ,P?LDESC>>>",
                  "Form": [
                    {
                      "Atom": "OR"
                    },
                    {
                      "Zil": "<AND <NOT <FSET? .OBJ ,TOUCHBIT>> <SET STR <GETP .OBJ ,P?FDESC>>>",
                      "Form": [
                        {
                          "Atom": "AND"
                        },
                        {
                          "Zil": "<NOT <FSET? .OBJ ,TOUCHBIT>>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": "<FSET? .OBJ ,TOUCHBIT>",
                              "Form": [
                                {
                                  "Atom": "FSET?"
                                },
                                {
                                  "Zil": ".OBJ",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "OBJ"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",TOUCHBIT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "TOUCHBIT"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SET STR <GETP .OBJ ,P?FDESC>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "STR"
                            },
                            {
                              "Zil": "<GETP .OBJ ,P?FDESC>",
                              "Form": [
                                {
                                  "Atom": "GETP"
                                },
                                {
                                  "Zil": ".OBJ",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "OBJ"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P?FDESC",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P?FDESC"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<SET STR <GETP .OBJ ,P?LDESC>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "STR"
                        },
                        {
                          "Zil": "<GETP .OBJ ,P?LDESC>",
                          "Form": [
                            {
                              "Atom": "GETP"
                            },
                            {
                              "Zil": ".OBJ",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "OBJ"
                                }
                              ]
                            },
                            {
                              "Zil": ",P?LDESC",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P?LDESC"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL .STR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": ".STR",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "STR"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<0? .LEVEL>",
              "Form": [
                {
                  "Atom": "0?"
                },
                {
                  "Zil": ".LEVEL",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "LEVEL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"There is a \" D .OBJ \" here\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                " here"
              ]
            },
            {
              "Zil": "<COND (<FSET? .OBJ ,ONBIT> <TELL \" (providing light)\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? .OBJ ,ONBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ".OBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OBJ"
                          }
                        ]
                      },
                      {
                        "Zil": ",ONBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ONBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" (providing light)\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " (providing light)"
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \".\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "."
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL <GET ,INDENTS .LEVEL>>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<GET ,INDENTS .LEVEL>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",INDENTS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "INDENTS"
                        }
                      ]
                    },
                    {
                      "Zil": ".LEVEL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "LEVEL"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"A \" D .OBJ>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "A ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? .OBJ ,ONBIT> <TELL \" (providing light)\">) (<AND <FSET? .OBJ ,WEARBIT> <IN? .OBJ ,WINNER>> <TELL \" (being worn)\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? .OBJ ,ONBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ".OBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OBJ"
                          }
                        ]
                      },
                      {
                        "Zil": ",ONBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ONBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" (providing light)\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " (providing light)"
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <FSET? .OBJ ,WEARBIT> <IN? .OBJ ,WINNER>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<FSET? .OBJ ,WEARBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ".OBJ",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "OBJ"
                              }
                            ]
                          },
                          {
                            "Zil": ",WEARBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WEARBIT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<IN? .OBJ ,WINNER>",
                        "Form": [
                          {
                            "Atom": "IN?"
                          },
                          {
                            "Zil": ".OBJ",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "OBJ"
                              }
                            ]
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" (being worn)\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " (being worn)"
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<NULL-F>",
        "Form": [
          {
            "Atom": "NULL-F"
          }
        ]
      },
      {
        "Zil": "<COND (<AND <0? .LEVEL> <SET AV <LOC ,WINNER>> <FSET? .AV ,VEHBIT>> <TELL \" (outside the \" D .AV \")\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <0? .LEVEL> <SET AV <LOC ,WINNER>> <FSET? .AV ,VEHBIT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<0? .LEVEL>",
                  "Form": [
                    {
                      "Atom": "0?"
                    },
                    {
                      "Zil": ".LEVEL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "LEVEL"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET AV <LOC ,WINNER>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "AV"
                    },
                    {
                      "Zil": "<LOC ,WINNER>",
                      "Form": [
                        {
                          "Atom": "LOC"
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FSET? .AV ,VEHBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ".AV",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "AV"
                        }
                      ]
                    },
                    {
                      "Zil": ",VEHBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VEHBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \" (outside the \" D .AV \")\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " (outside the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ".AV",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "AV"
                    }
                  ]
                },
                ")"
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<CRLF>",
        "Form": [
          {
            "Atom": "CRLF"
          }
        ]
      },
      {
        "Zil": "<COND (<AND <SEE-INSIDE? .OBJ> <FIRST? .OBJ>> <PRINT-CONT .OBJ .V? .LEVEL>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <SEE-INSIDE? .OBJ> <FIRST? .OBJ>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<SEE-INSIDE? .OBJ>",
                  "Form": [
                    {
                      "Atom": "SEE-INSIDE?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FIRST? .OBJ>",
                  "Form": [
                    {
                      "Atom": "FIRST?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PRINT-CONT .OBJ .V? .LEVEL>",
              "Form": [
                {
                  "Atom": "PRINT-CONT"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": ".V?",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "V?"
                    }
                  ]
                },
                {
                  "Zil": ".LEVEL",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "LEVEL"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1774",
    "Name": "PRINT-CONTENTS",
    "ArgSpec": "(OBJ \"AUX\" F N (1ST? T) (IT? <>) (TWO? <>))",
    "Body": [
      {
        "Zil": "<COND (<SET F <FIRST? .OBJ>> <REPEAT () <SET N <NEXT? .F>> <COND (.1ST? <SET 1ST? <>>) (ELSE <TELL \", \"> <COND (<NOT .N> <TELL \"and \">)>)> <TELL \"a \" D .F> <COND (<AND <NOT .IT?> <NOT .TWO?>> <SET IT? .F>) (ELSE <SET TWO? T> <SET IT? <>>)> <SET F .N> <COND (<NOT .F> <COND (<AND .IT? <NOT .TWO?>> <THIS-IS-IT .IT?>)> <RTRUE>)>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET F <FIRST? .OBJ>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "F"
                },
                {
                  "Zil": "<FIRST? .OBJ>",
                  "Form": [
                    {
                      "Atom": "FIRST?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REPEAT () <SET N <NEXT? .F>> <COND (.1ST? <SET 1ST? <>>) (ELSE <TELL \", \"> <COND (<NOT .N> <TELL \"and \">)>)> <TELL \"a \" D .F> <COND (<AND <NOT .IT?> <NOT .TWO?>> <SET IT? .F>) (ELSE <SET TWO? T> <SET IT? <>>)> <SET F .N> <COND (<NOT .F> <COND (<AND .IT? <NOT .TWO?>> <THIS-IS-IT .IT?>)> <RTRUE>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<SET N <NEXT? .F>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "N"
                    },
                    {
                      "Zil": "<NEXT? .F>",
                      "Form": [
                        {
                          "Atom": "NEXT?"
                        },
                        {
                          "Zil": ".F",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "F"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (.1ST? <SET 1ST? <>>) (ELSE <TELL \", \"> <COND (<NOT .N> <TELL \"and \">)>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": ".1ST?",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "1ST?"
                          }
                        ]
                      },
                      {
                        "Zil": "<SET 1ST? <>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "1ST?"
                          },
                          {
                            "Zil": "<>",
                            "Form": []
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "ELSE"
                      },
                      {
                        "Zil": "<TELL \", \">",
                        "Form": [
                          {
                            "Atom": "TELL"
                          },
                          ", "
                        ]
                      },
                      {
                        "Zil": "<COND (<NOT .N> <TELL \"and \">)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<NOT .N>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": ".N",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "N"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<TELL \"and \">",
                              "Form": [
                                {
                                  "Atom": "TELL"
                                },
                                "and "
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<TELL \"a \" D .F>",
                  "Form": [
                    {
                      "Atom": "TELL"
                    },
                    "a ",
                    {
                      "Atom": "D"
                    },
                    {
                      "Zil": ".F",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<AND <NOT .IT?> <NOT .TWO?>> <SET IT? .F>) (ELSE <SET TWO? T> <SET IT? <>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<AND <NOT .IT?> <NOT .TWO?>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<NOT .IT?>",
                            "Form": [
                              {
                                "Atom": "NOT"
                              },
                              {
                                "Zil": ".IT?",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "IT?"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<NOT .TWO?>",
                            "Form": [
                              {
                                "Atom": "NOT"
                              },
                              {
                                "Zil": ".TWO?",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "TWO?"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET IT? .F>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "IT?"
                          },
                          {
                            "Zil": ".F",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "F"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "ELSE"
                      },
                      {
                        "Zil": "<SET TWO? T>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "TWO?"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      },
                      {
                        "Zil": "<SET IT? <>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "IT?"
                          },
                          {
                            "Zil": "<>",
                            "Form": []
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<SET F .N>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "F"
                    },
                    {
                      "Zil": ".N",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "N"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<NOT .F> <COND (<AND .IT? <NOT .TWO?>> <THIS-IS-IT .IT?>)> <RTRUE>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT .F>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".F",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "F"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<AND .IT? <NOT .TWO?>> <THIS-IS-IT .IT?>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<AND .IT? <NOT .TWO?>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": ".IT?",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "IT?"
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<NOT .TWO?>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": ".TWO?",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "TWO?"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<THIS-IS-IT .IT?>",
                              "Form": [
                                {
                                  "Atom": "THIS-IS-IT"
                                },
                                {
                                  "Zil": ".IT?",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "IT?"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<RTRUE>",
                        "Form": [
                          {
                            "Atom": "RTRUE"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1794",
    "Name": "PRINT-CONT",
    "ArgSpec": "(OBJ \"OPT\" (V? <>) (LEVEL 0) \"AUX\" Y 1ST? SHIT AV STR (PV? <>) (INV? <>))",
    "Body": [
      {
        "Zil": "<COND (<NOT <SET Y <FIRST? .OBJ>>> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <SET Y <FIRST? .OBJ>>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<SET Y <FIRST? .OBJ>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "Y"
                    },
                    {
                      "Zil": "<FIRST? .OBJ>",
                      "Form": [
                        {
                          "Atom": "FIRST?"
                        },
                        {
                          "Zil": ".OBJ",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "OBJ"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<AND <SET AV <LOC ,WINNER>> <FSET? .AV ,VEHBIT>> T) (ELSE <SET AV <>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <SET AV <LOC ,WINNER>> <FSET? .AV ,VEHBIT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<SET AV <LOC ,WINNER>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "AV"
                    },
                    {
                      "Zil": "<LOC ,WINNER>",
                      "Form": [
                        {
                          "Atom": "LOC"
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FSET? .AV ,VEHBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ".AV",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "AV"
                        }
                      ]
                    },
                    {
                      "Zil": ",VEHBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VEHBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Atom": "T"
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<SET AV <>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "AV"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SET 1ST? T>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "1ST?"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<SET SHIT T>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "SHIT"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<COND (<EQUAL? ,WINNER .OBJ <LOC .OBJ>> <SET INV? T>) (ELSE <REPEAT () <COND (<NOT .Y> <RETURN>) (<EQUAL? .Y .AV> <SET PV? T>) (<EQUAL? .Y ,WINNER>) (<AND <NOT <FSET? .Y ,INVISIBLE>> <NOT <FSET? .Y ,TOUCHBIT>> <SET STR <GETP .Y ,P?FDESC>>> <COND (<NOT <FSET? .Y ,NDESCBIT>> <TELL .STR CR> <SET SHIT <>>)> <COND (<AND <SEE-INSIDE? .Y> <NOT <GETP <LOC .Y> ,P?DESCFCN>> <FIRST? .Y>> <COND (<PRINT-CONT .Y .V? 0> <SET 1ST? <>>)>)>)> <SET Y <NEXT? .Y>>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,WINNER .OBJ <LOC .OBJ>>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": "<LOC .OBJ>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET INV? T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "INV?"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<REPEAT () <COND (<NOT .Y> <RETURN>) (<EQUAL? .Y .AV> <SET PV? T>) (<EQUAL? .Y ,WINNER>) (<AND <NOT <FSET? .Y ,INVISIBLE>> <NOT <FSET? .Y ,TOUCHBIT>> <SET STR <GETP .Y ,P?FDESC>>> <COND (<NOT <FSET? .Y ,NDESCBIT>> <TELL .STR CR> <SET SHIT <>>)> <COND (<AND <SEE-INSIDE? .Y> <NOT <GETP <LOC .Y> ,P?DESCFCN>> <FIRST? .Y>> <COND (<PRINT-CONT .Y .V? 0> <SET 1ST? <>>)>)>)> <SET Y <NEXT? .Y>>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<NOT .Y> <RETURN>) (<EQUAL? .Y .AV> <SET PV? T>) (<EQUAL? .Y ,WINNER>) (<AND <NOT <FSET? .Y ,INVISIBLE>> <NOT <FSET? .Y ,TOUCHBIT>> <SET STR <GETP .Y ,P?FDESC>>> <COND (<NOT <FSET? .Y ,NDESCBIT>> <TELL .STR CR> <SET SHIT <>>)> <COND (<AND <SEE-INSIDE? .Y> <NOT <GETP <LOC .Y> ,P?DESCFCN>> <FIRST? .Y>> <COND (<PRINT-CONT .Y .V? 0> <SET 1ST? <>>)>)>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT .Y>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".Y",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "Y"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<EQUAL? .Y .AV>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".Y",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "Y"
                              }
                            ]
                          },
                          {
                            "Zil": ".AV",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "AV"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET PV? T>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "PV?"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<EQUAL? .Y ,WINNER>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".Y",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "Y"
                              }
                            ]
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<AND <NOT <FSET? .Y ,INVISIBLE>> <NOT <FSET? .Y ,TOUCHBIT>> <SET STR <GETP .Y ,P?FDESC>>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<NOT <FSET? .Y ,INVISIBLE>>",
                            "Form": [
                              {
                                "Atom": "NOT"
                              },
                              {
                                "Zil": "<FSET? .Y ,INVISIBLE>",
                                "Form": [
                                  {
                                    "Atom": "FSET?"
                                  },
                                  {
                                    "Zil": ".Y",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "Y"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",INVISIBLE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "INVISIBLE"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<NOT <FSET? .Y ,TOUCHBIT>>",
                            "Form": [
                              {
                                "Atom": "NOT"
                              },
                              {
                                "Zil": "<FSET? .Y ,TOUCHBIT>",
                                "Form": [
                                  {
                                    "Atom": "FSET?"
                                  },
                                  {
                                    "Zil": ".Y",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "Y"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",TOUCHBIT",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "TOUCHBIT"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<SET STR <GETP .Y ,P?FDESC>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "STR"
                              },
                              {
                                "Zil": "<GETP .Y ,P?FDESC>",
                                "Form": [
                                  {
                                    "Atom": "GETP"
                                  },
                                  {
                                    "Zil": ".Y",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "Y"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",P?FDESC",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "P?FDESC"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<NOT <FSET? .Y ,NDESCBIT>> <TELL .STR CR> <SET SHIT <>>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<NOT <FSET? .Y ,NDESCBIT>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<FSET? .Y ,NDESCBIT>",
                                  "Form": [
                                    {
                                      "Atom": "FSET?"
                                    },
                                    {
                                      "Zil": ".Y",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "Y"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",NDESCBIT",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "NDESCBIT"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<TELL .STR CR>",
                              "Form": [
                                {
                                  "Atom": "TELL"
                                },
                                {
                                  "Zil": ".STR",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "STR"
                                    }
                                  ]
                                },
                                {
                                  "Atom": "CR"
                                }
                              ]
                            },
                            {
                              "Zil": "<SET SHIT <>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "SHIT"
                                },
                                {
                                  "Zil": "<>",
                                  "Form": []
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<COND (<AND <SEE-INSIDE? .Y> <NOT <GETP <LOC .Y> ,P?DESCFCN>> <FIRST? .Y>> <COND (<PRINT-CONT .Y .V? 0> <SET 1ST? <>>)>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<AND <SEE-INSIDE? .Y> <NOT <GETP <LOC .Y> ,P?DESCFCN>> <FIRST? .Y>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<SEE-INSIDE? .Y>",
                                  "Form": [
                                    {
                                      "Atom": "SEE-INSIDE?"
                                    },
                                    {
                                      "Zil": ".Y",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "Y"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<NOT <GETP <LOC .Y> ,P?DESCFCN>>",
                                  "Form": [
                                    {
                                      "Atom": "NOT"
                                    },
                                    {
                                      "Zil": "<GETP <LOC .Y> ,P?DESCFCN>",
                                      "Form": [
                                        {
                                          "Atom": "GETP"
                                        },
                                        {
                                          "Zil": "<LOC .Y>",
                                          "Form": [
                                            {
                                              "Atom": "LOC"
                                            },
                                            {
                                              "Zil": ".Y",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "Y"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",P?DESCFCN",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "P?DESCFCN"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<FIRST? .Y>",
                                  "Form": [
                                    {
                                      "Atom": "FIRST?"
                                    },
                                    {
                                      "Zil": ".Y",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "Y"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<PRINT-CONT .Y .V? 0> <SET 1ST? <>>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<PRINT-CONT .Y .V? 0>",
                                    "Form": [
                                      {
                                        "Atom": "PRINT-CONT"
                                      },
                                      {
                                        "Zil": ".Y",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "Y"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ".V?",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "V?"
                                          }
                                        ]
                                      },
                                      0
                                    ]
                                  },
                                  {
                                    "Zil": "<SET 1ST? <>>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "1ST?"
                                      },
                                      {
                                        "Zil": "<>",
                                        "Form": []
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<SET Y <NEXT? .Y>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "Y"
                    },
                    {
                      "Zil": "<NEXT? .Y>",
                      "Form": [
                        {
                          "Atom": "NEXT?"
                        },
                        {
                          "Zil": ".Y",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "Y"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SET Y <FIRST? .OBJ>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "Y"
          },
          {
            "Zil": "<FIRST? .OBJ>",
            "Form": [
              {
                "Atom": "FIRST?"
              },
              {
                "Zil": ".OBJ",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "OBJ"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<NOT .Y> <COND (<AND .PV? .AV <FIRST? .AV>> <SET LEVEL <+ .LEVEL 1>> <PRINT-CONT .AV .V? .LEVEL>)> <RETURN>) (<EQUAL? .Y .AV ,ADVENTURER>) (<AND <NOT <FSET? .Y ,INVISIBLE>> <OR .INV? <FSET? .Y ,TOUCHBIT> <NOT <GETP .Y ,P?FDESC>>>> <COND (<NOT <FSET? .Y ,NDESCBIT>> <COND (.1ST? <COND (<FIRSTER .OBJ .LEVEL> <COND (<L? .LEVEL 0> <SET LEVEL 0>)>)> <SET LEVEL <+ 1 .LEVEL>> <SET 1ST? <>>)> <COND (<L? .LEVEL 0> <SET LEVEL 0>)> <DESCRIBE-OBJECT .Y .V? .LEVEL>) (<AND <FIRST? .Y> <SEE-INSIDE? .Y>> <SET LEVEL <+ .LEVEL 1>> <PRINT-CONT .Y .V? .LEVEL> <SET LEVEL <- .LEVEL 1>>)>)> <SET Y <NEXT? .Y>>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<NOT .Y> <COND (<AND .PV? .AV <FIRST? .AV>> <SET LEVEL <+ .LEVEL 1>> <PRINT-CONT .AV .V? .LEVEL>)> <RETURN>) (<EQUAL? .Y .AV ,ADVENTURER>) (<AND <NOT <FSET? .Y ,INVISIBLE>> <OR .INV? <FSET? .Y ,TOUCHBIT> <NOT <GETP .Y ,P?FDESC>>>> <COND (<NOT <FSET? .Y ,NDESCBIT>> <COND (.1ST? <COND (<FIRSTER .OBJ .LEVEL> <COND (<L? .LEVEL 0> <SET LEVEL 0>)>)> <SET LEVEL <+ 1 .LEVEL>> <SET 1ST? <>>)> <COND (<L? .LEVEL 0> <SET LEVEL 0>)> <DESCRIBE-OBJECT .Y .V? .LEVEL>) (<AND <FIRST? .Y> <SEE-INSIDE? .Y>> <SET LEVEL <+ .LEVEL 1>> <PRINT-CONT .Y .V? .LEVEL> <SET LEVEL <- .LEVEL 1>>)>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<NOT .Y>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".Y",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "Y"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<AND .PV? .AV <FIRST? .AV>> <SET LEVEL <+ .LEVEL 1>> <PRINT-CONT .AV .V? .LEVEL>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<AND .PV? .AV <FIRST? .AV>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": ".PV?",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "PV?"
                              }
                            ]
                          },
                          {
                            "Zil": ".AV",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "AV"
                              }
                            ]
                          },
                          {
                            "Zil": "<FIRST? .AV>",
                            "Form": [
                              {
                                "Atom": "FIRST?"
                              },
                              {
                                "Zil": ".AV",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "AV"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET LEVEL <+ .LEVEL 1>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "LEVEL"
                          },
                          {
                            "Zil": "<+ .LEVEL 1>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".LEVEL",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "LEVEL"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PRINT-CONT .AV .V? .LEVEL>",
                        "Form": [
                          {
                            "Atom": "PRINT-CONT"
                          },
                          {
                            "Zil": ".AV",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "AV"
                              }
                            ]
                          },
                          {
                            "Zil": ".V?",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "V?"
                              }
                            ]
                          },
                          {
                            "Zil": ".LEVEL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "LEVEL"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<EQUAL? .Y .AV ,ADVENTURER>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".Y",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "Y"
                        }
                      ]
                    },
                    {
                      "Zil": ".AV",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "AV"
                        }
                      ]
                    },
                    {
                      "Zil": ",ADVENTURER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ADVENTURER"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<AND <NOT <FSET? .Y ,INVISIBLE>> <OR .INV? <FSET? .Y ,TOUCHBIT> <NOT <GETP .Y ,P?FDESC>>>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<NOT <FSET? .Y ,INVISIBLE>>",
                      "Form": [
                        {
                          "Atom": "NOT"
                        },
                        {
                          "Zil": "<FSET? .Y ,INVISIBLE>",
                          "Form": [
                            {
                              "Atom": "FSET?"
                            },
                            {
                              "Zil": ".Y",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "Y"
                                }
                              ]
                            },
                            {
                              "Zil": ",INVISIBLE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "INVISIBLE"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<OR .INV? <FSET? .Y ,TOUCHBIT> <NOT <GETP .Y ,P?FDESC>>>",
                      "Form": [
                        {
                          "Atom": "OR"
                        },
                        {
                          "Zil": ".INV?",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "INV?"
                            }
                          ]
                        },
                        {
                          "Zil": "<FSET? .Y ,TOUCHBIT>",
                          "Form": [
                            {
                              "Atom": "FSET?"
                            },
                            {
                              "Zil": ".Y",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "Y"
                                }
                              ]
                            },
                            {
                              "Zil": ",TOUCHBIT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "TOUCHBIT"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<NOT <GETP .Y ,P?FDESC>>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": "<GETP .Y ,P?FDESC>",
                              "Form": [
                                {
                                  "Atom": "GETP"
                                },
                                {
                                  "Zil": ".Y",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "Y"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P?FDESC",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P?FDESC"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<NOT <FSET? .Y ,NDESCBIT>> <COND (.1ST? <COND (<FIRSTER .OBJ .LEVEL> <COND (<L? .LEVEL 0> <SET LEVEL 0>)>)> <SET LEVEL <+ 1 .LEVEL>> <SET 1ST? <>>)> <COND (<L? .LEVEL 0> <SET LEVEL 0>)> <DESCRIBE-OBJECT .Y .V? .LEVEL>) (<AND <FIRST? .Y> <SEE-INSIDE? .Y>> <SET LEVEL <+ .LEVEL 1>> <PRINT-CONT .Y .V? .LEVEL> <SET LEVEL <- .LEVEL 1>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT <FSET? .Y ,NDESCBIT>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<FSET? .Y ,NDESCBIT>",
                            "Form": [
                              {
                                "Atom": "FSET?"
                              },
                              {
                                "Zil": ".Y",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "Y"
                                  }
                                ]
                              },
                              {
                                "Zil": ",NDESCBIT",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "NDESCBIT"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (.1ST? <COND (<FIRSTER .OBJ .LEVEL> <COND (<L? .LEVEL 0> <SET LEVEL 0>)>)> <SET LEVEL <+ 1 .LEVEL>> <SET 1ST? <>>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": ".1ST?",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "1ST?"
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<FIRSTER .OBJ .LEVEL> <COND (<L? .LEVEL 0> <SET LEVEL 0>)>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<FIRSTER .OBJ .LEVEL>",
                                    "Form": [
                                      {
                                        "Atom": "FIRSTER"
                                      },
                                      {
                                        "Zil": ".OBJ",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "OBJ"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ".LEVEL",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "LEVEL"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<COND (<L? .LEVEL 0> <SET LEVEL 0>)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": "<L? .LEVEL 0>",
                                          "Form": [
                                            {
                                              "Atom": "L?"
                                            },
                                            {
                                              "Zil": ".LEVEL",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "LEVEL"
                                                }
                                              ]
                                            },
                                            0
                                          ]
                                        },
                                        {
                                          "Zil": "<SET LEVEL 0>",
                                          "Form": [
                                            {
                                              "Atom": "SET"
                                            },
                                            {
                                              "Atom": "LEVEL"
                                            },
                                            0
                                          ]
                                        }
                                      ]
                                    ]
                                  }
                                ]
                              ]
                            },
                            {
                              "Zil": "<SET LEVEL <+ 1 .LEVEL>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "LEVEL"
                                },
                                {
                                  "Zil": "<+ 1 .LEVEL>",
                                  "Form": [
                                    {
                                      "Atom": "+"
                                    },
                                    1,
                                    {
                                      "Zil": ".LEVEL",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "LEVEL"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET 1ST? <>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "1ST?"
                                },
                                {
                                  "Zil": "<>",
                                  "Form": []
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<COND (<L? .LEVEL 0> <SET LEVEL 0>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<L? .LEVEL 0>",
                              "Form": [
                                {
                                  "Atom": "L?"
                                },
                                {
                                  "Zil": ".LEVEL",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "LEVEL"
                                    }
                                  ]
                                },
                                0
                              ]
                            },
                            {
                              "Zil": "<SET LEVEL 0>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "LEVEL"
                                },
                                0
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<DESCRIBE-OBJECT .Y .V? .LEVEL>",
                        "Form": [
                          {
                            "Atom": "DESCRIBE-OBJECT"
                          },
                          {
                            "Zil": ".Y",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "Y"
                              }
                            ]
                          },
                          {
                            "Zil": ".V?",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "V?"
                              }
                            ]
                          },
                          {
                            "Zil": ".LEVEL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "LEVEL"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<AND <FIRST? .Y> <SEE-INSIDE? .Y>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<FIRST? .Y>",
                            "Form": [
                              {
                                "Atom": "FIRST?"
                              },
                              {
                                "Zil": ".Y",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "Y"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<SEE-INSIDE? .Y>",
                            "Form": [
                              {
                                "Atom": "SEE-INSIDE?"
                              },
                              {
                                "Zil": ".Y",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "Y"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET LEVEL <+ .LEVEL 1>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "LEVEL"
                          },
                          {
                            "Zil": "<+ .LEVEL 1>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".LEVEL",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "LEVEL"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PRINT-CONT .Y .V? .LEVEL>",
                        "Form": [
                          {
                            "Atom": "PRINT-CONT"
                          },
                          {
                            "Zil": ".Y",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "Y"
                              }
                            ]
                          },
                          {
                            "Zil": ".V?",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "V?"
                              }
                            ]
                          },
                          {
                            "Zil": ".LEVEL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "LEVEL"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET LEVEL <- .LEVEL 1>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "LEVEL"
                          },
                          {
                            "Zil": "<- .LEVEL 1>",
                            "Form": [
                              {
                                "Atom": "-"
                              },
                              {
                                "Zil": ".LEVEL",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "LEVEL"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<SET Y <NEXT? .Y>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "Y"
              },
              {
                "Zil": "<NEXT? .Y>",
                "Form": [
                  {
                    "Atom": "NEXT?"
                  },
                  {
                    "Zil": ".Y",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "Y"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND .1ST? .SHIT> <RFALSE>) (T <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND .1ST? .SHIT>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ".1ST?",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "1ST?"
                    }
                  ]
                },
                {
                  "Zil": ".SHIT",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "SHIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1862",
    "Name": "FIRSTER",
    "ArgSpec": "(OBJ LEVEL)",
    "Body": [
      {
        "Zil": "<COND (<NULL-F> <RTRUE>) (<EQUAL? .OBJ ,WINNER> <TELL \"You are carrying:\" CR>) (<NOT <IN? .OBJ ,ROOMS>> <COND (<G? .LEVEL 0> <TELL <GET ,INDENTS .LEVEL>>)> <COND (<FSET? .OBJ ,SURFACEBIT> <TELL \"Sitting on the \" D .OBJ \" is: \" CR>) (<FSET? .OBJ ,ACTORBIT> <TELL \"The \" D .OBJ \" is holding: \" CR>) (T <TELL \"The \" D .OBJ \" contains:\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? .OBJ ,WINNER>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are carrying:\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are carrying:",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <IN? .OBJ ,ROOMS>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<IN? .OBJ ,ROOMS>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    },
                    {
                      "Zil": ",ROOMS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ROOMS"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<G? .LEVEL 0> <TELL <GET ,INDENTS .LEVEL>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<G? .LEVEL 0>",
                    "Form": [
                      {
                        "Atom": "G?"
                      },
                      {
                        "Zil": ".LEVEL",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "LEVEL"
                          }
                        ]
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<TELL <GET ,INDENTS .LEVEL>>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<GET ,INDENTS .LEVEL>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",INDENTS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "INDENTS"
                              }
                            ]
                          },
                          {
                            "Zil": ".LEVEL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "LEVEL"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<FSET? .OBJ ,SURFACEBIT> <TELL \"Sitting on the \" D .OBJ \" is: \" CR>) (<FSET? .OBJ ,ACTORBIT> <TELL \"The \" D .OBJ \" is holding: \" CR>) (T <TELL \"The \" D .OBJ \" contains:\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? .OBJ ,SURFACEBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ".OBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OBJ"
                          }
                        ]
                      },
                      {
                        "Zil": ",SURFACEBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SURFACEBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Sitting on the \" D .OBJ \" is: \" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Sitting on the ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".OBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OBJ"
                          }
                        ]
                      },
                      " is: ",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<FSET? .OBJ ,ACTORBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ".OBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OBJ"
                          }
                        ]
                      },
                      {
                        "Zil": ",ACTORBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ACTORBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D .OBJ \" is holding: \" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".OBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OBJ"
                          }
                        ]
                      },
                      " is holding: ",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The \" D .OBJ \" contains:\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".OBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OBJ"
                          }
                        ]
                      },
                      " contains:",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1881",
    "Name": "SEE-INSIDE?",
    "ArgSpec": "(OBJ)",
    "Body": [
      {
        "Zil": "<AND <NOT <FSET? .OBJ ,INVISIBLE>> <OR <FSET? .OBJ ,TRANSBIT> <FSET? .OBJ ,OPENBIT>>>",
        "Form": [
          {
            "Atom": "AND"
          },
          {
            "Zil": "<NOT <FSET? .OBJ ,INVISIBLE>>",
            "Form": [
              {
                "Atom": "NOT"
              },
              {
                "Zil": "<FSET? .OBJ ,INVISIBLE>",
                "Form": [
                  {
                    "Atom": "FSET?"
                  },
                  {
                    "Zil": ".OBJ",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "OBJ"
                      }
                    ]
                  },
                  {
                    "Zil": ",INVISIBLE",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "INVISIBLE"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<OR <FSET? .OBJ ,TRANSBIT> <FSET? .OBJ ,OPENBIT>>",
            "Form": [
              {
                "Atom": "OR"
              },
              {
                "Zil": "<FSET? .OBJ ,TRANSBIT>",
                "Form": [
                  {
                    "Atom": "FSET?"
                  },
                  {
                    "Zil": ".OBJ",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "OBJ"
                      }
                    ]
                  },
                  {
                    "Zil": ",TRANSBIT",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "TRANSBIT"
                      }
                    ]
                  }
                ]
              },
              {
                "Zil": "<FSET? .OBJ ,OPENBIT>",
                "Form": [
                  {
                    "Atom": "FSET?"
                  },
                  {
                    "Zil": ".OBJ",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "OBJ"
                      }
                    ]
                  },
                  {
                    "Zil": ",OPENBIT",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "OPENBIT"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1895",
    "Name": "SCORE-UPD",
    "ArgSpec": "(NUM)",
    "Body": [
      {
        "Zil": "<SETG BASE-SCORE <+ ,BASE-SCORE .NUM>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "BASE-SCORE"
          },
          {
            "Zil": "<+ ,BASE-SCORE .NUM>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ",BASE-SCORE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "BASE-SCORE"
                  }
                ]
              },
              {
                "Zil": ".NUM",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "NUM"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG SCORE <+ ,SCORE .NUM>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "SCORE"
          },
          {
            "Zil": "<+ ,SCORE .NUM>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ",SCORE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "SCORE"
                  }
                ]
              },
              {
                "Zil": ".NUM",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "NUM"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<NULL-F>",
        "Form": [
          {
            "Atom": "NULL-F"
          }
        ]
      },
      {
        "Atom": "T"
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1911",
    "Name": "SCORE-OBJ",
    "ArgSpec": "(OBJ \"AUX\" TEMP)",
    "Body": [
      {
        "Zil": "<COND (<G? <SET TEMP <GETP .OBJ ,P?VALUE>> 0> <SCORE-UPD .TEMP> <PUTP .OBJ ,P?VALUE 0>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<G? <SET TEMP <GETP .OBJ ,P?VALUE>> 0>",
              "Form": [
                {
                  "Atom": "G?"
                },
                {
                  "Zil": "<SET TEMP <GETP .OBJ ,P?VALUE>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "TEMP"
                    },
                    {
                      "Zil": "<GETP .OBJ ,P?VALUE>",
                      "Form": [
                        {
                          "Atom": "GETP"
                        },
                        {
                          "Zil": ".OBJ",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "OBJ"
                            }
                          ]
                        },
                        {
                          "Zil": ",P?VALUE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P?VALUE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                0
              ]
            },
            {
              "Zil": "<SCORE-UPD .TEMP>",
              "Form": [
                {
                  "Atom": "SCORE-UPD"
                },
                {
                  "Zil": ".TEMP",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "TEMP"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PUTP .OBJ ,P?VALUE 0>",
              "Form": [
                {
                  "Atom": "PUTP"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": ",P?VALUE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?VALUE"
                    }
                  ]
                },
                0
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1916",
    "Name": "YES?",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<PRINTI \">\">",
        "Form": [
          {
            "Atom": "PRINTI"
          },
          ">"
        ]
      },
      {
        "Zil": "<READ ,P-INBUF ,P-LEXV>",
        "Form": [
          {
            "Atom": "READ"
          },
          {
            "Zil": ",P-INBUF",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-INBUF"
              }
            ]
          },
          {
            "Zil": ",P-LEXV",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P-LEXV"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<EQUAL? <GET ,P-LEXV 1> ,W?YES ,W?Y> <RTRUE>) (T <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? <GET ,P-LEXV 1> ,W?YES ,W?Y>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": "<GET ,P-LEXV 1>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",P-LEXV",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-LEXV"
                        }
                      ]
                    },
                    1
                  ]
                },
                {
                  "Zil": ",W?YES",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "W?YES"
                    }
                  ]
                },
                {
                  "Zil": ",W?Y",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "W?Y"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:1944",
    "Name": "ITAKE",
    "ArgSpec": "(\"OPT\" (VB T) \"AUX\" CNT OBJ)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<COND (<NULL-F> <RFALSE>) (<NOT <FSET? ,PRSO ,TAKEBIT>> <COND (.VB <TELL <PICK-ONE ,YUKS> CR>)> <RFALSE>) (<NULL-F> <RFALSE>) (<AND <FSET? <LOC ,PRSO> ,CONTBIT> <NOT <FSET? <LOC ,PRSO> ,OPENBIT>>> <RFALSE>) (<AND <NOT <IN? <LOC ,PRSO> ,WINNER>> <G? <+ <WEIGHT ,PRSO> <WEIGHT ,WINNER>> ,LOAD-ALLOWED>> <COND (.VB <TELL \"Your load is too heavy\"> <COND (<L? ,LOAD-ALLOWED ,LOAD-MAX> <TELL \", especially in light of your condition.\">) (T <TELL \".\">)> <CRLF>)> <RFATAL>) (<AND <VERB? TAKE> <G? <SET CNT <CCOUNT ,WINNER>> ,FUMBLE-NUMBER> <PROB <* .CNT ,FUMBLE-PROB>>> <TELL \"You're holding too many things already!\" CR> <RFALSE>) (T <MOVE ,PRSO ,WINNER> <FCLEAR ,PRSO ,NDESCBIT> <FSET ,PRSO ,TOUCHBIT> <NULL-F> <NULL-F> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <FSET? ,PRSO ,TAKEBIT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<FSET? ,PRSO ,TAKEBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",TAKEBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TAKEBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (.VB <TELL <PICK-ONE ,YUKS> CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ".VB",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "VB"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL <PICK-ONE ,YUKS> CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<PICK-ONE ,YUKS>",
                        "Form": [
                          {
                            "Atom": "PICK-ONE"
                          },
                          {
                            "Zil": ",YUKS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "YUKS"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <FSET? <LOC ,PRSO> ,CONTBIT> <NOT <FSET? <LOC ,PRSO> ,OPENBIT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<FSET? <LOC ,PRSO> ,CONTBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": "<LOC ,PRSO>",
                      "Form": [
                        {
                          "Atom": "LOC"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",CONTBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CONTBIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? <LOC ,PRSO> ,OPENBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? <LOC ,PRSO> ,OPENBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": "<LOC ,PRSO>",
                          "Form": [
                            {
                              "Atom": "LOC"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": ",OPENBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "OPENBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <NOT <IN? <LOC ,PRSO> ,WINNER>> <G? <+ <WEIGHT ,PRSO> <WEIGHT ,WINNER>> ,LOAD-ALLOWED>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT <IN? <LOC ,PRSO> ,WINNER>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<IN? <LOC ,PRSO> ,WINNER>",
                      "Form": [
                        {
                          "Atom": "IN?"
                        },
                        {
                          "Zil": "<LOC ,PRSO>",
                          "Form": [
                            {
                              "Atom": "LOC"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<G? <+ <WEIGHT ,PRSO> <WEIGHT ,WINNER>> ,LOAD-ALLOWED>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": "<+ <WEIGHT ,PRSO> <WEIGHT ,WINNER>>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": "<WEIGHT ,PRSO>",
                          "Form": [
                            {
                              "Atom": "WEIGHT"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<WEIGHT ,WINNER>",
                          "Form": [
                            {
                              "Atom": "WEIGHT"
                            },
                            {
                              "Zil": ",WINNER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "WINNER"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",LOAD-ALLOWED",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "LOAD-ALLOWED"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (.VB <TELL \"Your load is too heavy\"> <COND (<L? ,LOAD-ALLOWED ,LOAD-MAX> <TELL \", especially in light of your condition.\">) (T <TELL \".\">)> <CRLF>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ".VB",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "VB"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Your load is too heavy\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Your load is too heavy"
                    ]
                  },
                  {
                    "Zil": "<COND (<L? ,LOAD-ALLOWED ,LOAD-MAX> <TELL \", especially in light of your condition.\">) (T <TELL \".\">)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<L? ,LOAD-ALLOWED ,LOAD-MAX>",
                          "Form": [
                            {
                              "Atom": "L?"
                            },
                            {
                              "Zil": ",LOAD-ALLOWED",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "LOAD-ALLOWED"
                                }
                              ]
                            },
                            {
                              "Zil": ",LOAD-MAX",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "LOAD-MAX"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \", especially in light of your condition.\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            ", especially in light of your condition."
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \".\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "."
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<CRLF>",
                    "Form": [
                      {
                        "Atom": "CRLF"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RFATAL>",
              "Form": [
                {
                  "Atom": "RFATAL"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? TAKE> <G? <SET CNT <CCOUNT ,WINNER>> ,FUMBLE-NUMBER> <PROB <* .CNT ,FUMBLE-PROB>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? TAKE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "TAKE"
                    }
                  ]
                },
                {
                  "Zil": "<G? <SET CNT <CCOUNT ,WINNER>> ,FUMBLE-NUMBER>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": "<SET CNT <CCOUNT ,WINNER>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "CNT"
                        },
                        {
                          "Zil": "<CCOUNT ,WINNER>",
                          "Form": [
                            {
                              "Atom": "CCOUNT"
                            },
                            {
                              "Zil": ",WINNER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "WINNER"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",FUMBLE-NUMBER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "FUMBLE-NUMBER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<PROB <* .CNT ,FUMBLE-PROB>>",
                  "Form": [
                    {
                      "Atom": "PROB"
                    },
                    {
                      "Zil": "<* .CNT ,FUMBLE-PROB>",
                      "Form": [
                        {
                          "Atom": "*"
                        },
                        {
                          "Zil": ".CNT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "CNT"
                            }
                          ]
                        },
                        {
                          "Zil": ",FUMBLE-PROB",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "FUMBLE-PROB"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You're holding too many things already!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You're holding too many things already!",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<MOVE ,PRSO ,WINNER>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FCLEAR ,PRSO ,NDESCBIT>",
              "Form": [
                {
                  "Atom": "FCLEAR"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",NDESCBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "NDESCBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FSET ,PRSO ,TOUCHBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",TOUCHBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TOUCHBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<NULL-F>",
              "Form": [
                {
                  "Atom": "NULL-F"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2010",
    "Name": "IDROP",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <NOT <IN? ,PRSO ,WINNER>> <NOT <IN? <LOC ,PRSO> ,WINNER>>> <TELL \"You're not carrying the \" D ,PRSO \".\" CR> <RFALSE>) (<AND <NOT <IN? ,PRSO ,WINNER>> <NOT <FSET? <LOC ,PRSO> ,OPENBIT>>> <TELL \"The \" D ,PRSO \" is closed.\" CR> <RFALSE>) (T <MOVE ,PRSO <LOC ,WINNER>> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <NOT <IN? ,PRSO ,WINNER>> <NOT <IN? <LOC ,PRSO> ,WINNER>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT <IN? ,PRSO ,WINNER>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<IN? ,PRSO ,WINNER>",
                      "Form": [
                        {
                          "Atom": "IN?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <IN? <LOC ,PRSO> ,WINNER>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<IN? <LOC ,PRSO> ,WINNER>",
                      "Form": [
                        {
                          "Atom": "IN?"
                        },
                        {
                          "Zil": "<LOC ,PRSO>",
                          "Form": [
                            {
                              "Atom": "LOC"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You're not carrying the \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You're not carrying the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <NOT <IN? ,PRSO ,WINNER>> <NOT <FSET? <LOC ,PRSO> ,OPENBIT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT <IN? ,PRSO ,WINNER>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<IN? ,PRSO ,WINNER>",
                      "Form": [
                        {
                          "Atom": "IN?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? <LOC ,PRSO> ,OPENBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? <LOC ,PRSO> ,OPENBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": "<LOC ,PRSO>",
                          "Form": [
                            {
                              "Atom": "LOC"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": ",OPENBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "OPENBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D ,PRSO \" is closed.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " is closed.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<MOVE ,PRSO <LOC ,WINNER>>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": "<LOC ,WINNER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2023",
    "Name": "CCOUNT",
    "ArgSpec": "(OBJ \"AUX\" (CNT 0) X)",
    "Body": [
      {
        "Zil": "<COND (<SET X <FIRST? .OBJ>> <REPEAT () <COND (<NOT <FSET? .X ,WEARBIT>> <SET CNT <+ .CNT 1>>)> <COND (<NOT <SET X <NEXT? .X>>> <RETURN>)>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET X <FIRST? .OBJ>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "X"
                },
                {
                  "Zil": "<FIRST? .OBJ>",
                  "Form": [
                    {
                      "Atom": "FIRST?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REPEAT () <COND (<NOT <FSET? .X ,WEARBIT>> <SET CNT <+ .CNT 1>>)> <COND (<NOT <SET X <NEXT? .X>>> <RETURN>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<NOT <FSET? .X ,WEARBIT>> <SET CNT <+ .CNT 1>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT <FSET? .X ,WEARBIT>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<FSET? .X ,WEARBIT>",
                            "Form": [
                              {
                                "Atom": "FSET?"
                              },
                              {
                                "Zil": ".X",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "X"
                                  }
                                ]
                              },
                              {
                                "Zil": ",WEARBIT",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "WEARBIT"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET CNT <+ .CNT 1>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "CNT"
                          },
                          {
                            "Zil": "<+ .CNT 1>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".CNT",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "CNT"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<COND (<NOT <SET X <NEXT? .X>>> <RETURN>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT <SET X <NEXT? .X>>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<SET X <NEXT? .X>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "X"
                              },
                              {
                                "Zil": "<NEXT? .X>",
                                "Form": [
                                  {
                                    "Atom": "NEXT?"
                                  },
                                  {
                                    "Zil": ".X",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "X"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": ".CNT",
        "Form": [
          {
            "Atom": "LVAL"
          },
          {
            "Atom": "CNT"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2032",
    "Name": "WEIGHT",
    "ArgSpec": "(OBJ \"AUX\" CONT (WT 0))",
    "Body": [
      {
        "Zil": "<COND (<SET CONT <FIRST? .OBJ>> <REPEAT () <COND (<AND <EQUAL? .OBJ ,PLAYER> <FSET? .CONT ,WEARBIT>> <SET WT <+ .WT 1>>) (T <SET WT <+ .WT <WEIGHT .CONT>>>)> <COND (<NOT <SET CONT <NEXT? .CONT>>> <RETURN>)>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET CONT <FIRST? .OBJ>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CONT"
                },
                {
                  "Zil": "<FIRST? .OBJ>",
                  "Form": [
                    {
                      "Atom": "FIRST?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REPEAT () <COND (<AND <EQUAL? .OBJ ,PLAYER> <FSET? .CONT ,WEARBIT>> <SET WT <+ .WT 1>>) (T <SET WT <+ .WT <WEIGHT .CONT>>>)> <COND (<NOT <SET CONT <NEXT? .CONT>>> <RETURN>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<AND <EQUAL? .OBJ ,PLAYER> <FSET? .CONT ,WEARBIT>> <SET WT <+ .WT 1>>) (T <SET WT <+ .WT <WEIGHT .CONT>>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<AND <EQUAL? .OBJ ,PLAYER> <FSET? .CONT ,WEARBIT>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<EQUAL? .OBJ ,PLAYER>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".OBJ",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "OBJ"
                                  }
                                ]
                              },
                              {
                                "Zil": ",PLAYER",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "PLAYER"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<FSET? .CONT ,WEARBIT>",
                            "Form": [
                              {
                                "Atom": "FSET?"
                              },
                              {
                                "Zil": ".CONT",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "CONT"
                                  }
                                ]
                              },
                              {
                                "Zil": ",WEARBIT",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "WEARBIT"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET WT <+ .WT 1>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "WT"
                          },
                          {
                            "Zil": "<+ .WT 1>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".WT",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "WT"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<SET WT <+ .WT <WEIGHT .CONT>>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "WT"
                          },
                          {
                            "Zil": "<+ .WT <WEIGHT .CONT>>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".WT",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "WT"
                                  }
                                ]
                              },
                              {
                                "Zil": "<WEIGHT .CONT>",
                                "Form": [
                                  {
                                    "Atom": "WEIGHT"
                                  },
                                  {
                                    "Zil": ".CONT",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "CONT"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<COND (<NOT <SET CONT <NEXT? .CONT>>> <RETURN>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT <SET CONT <NEXT? .CONT>>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<SET CONT <NEXT? .CONT>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "CONT"
                              },
                              {
                                "Zil": "<NEXT? .CONT>",
                                "Form": [
                                  {
                                    "Atom": "NEXT?"
                                  },
                                  {
                                    "Zil": ".CONT",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "CONT"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<+ .WT <GETP .OBJ ,P?SIZE>>",
        "Form": [
          {
            "Atom": "+"
          },
          {
            "Zil": ".WT",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "WT"
              }
            ]
          },
          {
            "Zil": "<GETP .OBJ ,P?SIZE>",
            "Form": [
              {
                "Atom": "GETP"
              },
              {
                "Zil": ".OBJ",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "OBJ"
                  }
                ]
              },
              {
                "Zil": ",P?SIZE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P?SIZE"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2068",
    "Name": "HACK-HACK",
    "ArgSpec": "(STR)",
    "Body": [
      {
        "Zil": "<COND (<AND <IN? ,PRSO ,GLOBAL-OBJECTS> <VERB? WAVE RAISE LOWER>> <TELL \"The \" D ,PRSO \" isn't here!\" CR>) (T <TELL .STR D ,PRSO <PICK-ONE ,HO-HUM> CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <IN? ,PRSO ,GLOBAL-OBJECTS> <VERB? WAVE RAISE LOWER>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<IN? ,PRSO ,GLOBAL-OBJECTS>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",GLOBAL-OBJECTS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "GLOBAL-OBJECTS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<VERB? WAVE RAISE LOWER>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "WAVE"
                    },
                    {
                      "Atom": "RAISE"
                    },
                    {
                      "Atom": "LOWER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D ,PRSO \" isn't here!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " isn't here!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL .STR D ,PRSO <PICK-ONE ,HO-HUM> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": ".STR",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "STR"
                    }
                  ]
                },
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": "<PICK-ONE ,HO-HUM>",
                  "Form": [
                    {
                      "Atom": "PICK-ONE"
                    },
                    {
                      "Zil": ",HO-HUM",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HO-HUM"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2082",
    "Name": "NO-GO-TELL",
    "ArgSpec": "(AV WLOC)",
    "Body": [
      {
        "Zil": "<COND (.AV <TELL \"You can't go there in a \" D .WLOC \".\">) (T <TELL \"You can't go there without a vehicle.\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ".AV",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "AV"
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't go there in a \" D .WLOC \".\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't go there in a ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ".WLOC",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "WLOC"
                    }
                  ]
                },
                "."
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't go there without a vehicle.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't go there without a vehicle."
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<CRLF>",
        "Form": [
          {
            "Atom": "CRLF"
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2089",
    "Name": "GOTO",
    "ArgSpec": "(RM \"OPT\" (V? T) \"AUX\" (LB <FSET? .RM ,RLANDBIT>) (WLOC <LOC ,WINNER>) (AV <>) OLIT OHERE)",
    "Body": [
      {
        "Zil": "<SET OLIT ,LIT>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OLIT"
          },
          {
            "Zil": ",LIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "LIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET OHERE ,HERE>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "OHERE"
          },
          {
            "Zil": ",HERE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "HERE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<FSET? .WLOC ,VEHBIT> <SET AV <GETP .WLOC ,P?VTYPE>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? .WLOC ,VEHBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ".WLOC",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "WLOC"
                    }
                  ]
                },
                {
                  "Zil": ",VEHBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "VEHBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET AV <GETP .WLOC ,P?VTYPE>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "AV"
                },
                {
                  "Zil": "<GETP .WLOC ,P?VTYPE>",
                  "Form": [
                    {
                      "Atom": "GETP"
                    },
                    {
                      "Zil": ".WLOC",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "WLOC"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?VTYPE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?VTYPE"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<AND <NOT .LB> <NOT .AV>> <NO-GO-TELL .AV .WLOC> <RFALSE>) (<AND <NOT .LB> <NOT <FSET? .RM .AV>>> <NO-GO-TELL .AV .WLOC> <RFALSE>) (<AND <FSET? ,HERE ,RLANDBIT> .LB .AV <NOT <EQUAL? .AV ,RLANDBIT>> <NOT <FSET? .RM .AV>>> <NO-GO-TELL .AV .WLOC> <RFALSE>) (<FSET? .RM ,RMUNGBIT> <TELL <GETP .RM ,P?LDESC> CR> <RFALSE>) (T <COND (<AND .LB <NOT <FSET? ,HERE ,RLANDBIT>> <NOT ,DEAD> <FSET? .WLOC ,VEHBIT>> <COND (<FSET? .WLOC ,VEHBIT> <TELL \"The \" D .WLOC \" comes to a stop.\" CR CR>)>)> <COND (.AV <MOVE .WLOC .RM>) (T <MOVE ,WINNER .RM>)> <SETG HERE .RM> <SETG LIT <LIT? ,HERE>> <COND (<AND <NOT .OLIT> <NOT ,LIT> <PROB 80>> <COND (,SPRAYED? <TELL \"There are sinister gurgling noises in the darkness all around you!\" CR>) (<EQUAL? ,HERE ,DARK-1 ,DARK-2> <JIGS-UP \"Oh, no! Dozen of lurking grues attack and devour you! You must have\r\nstumbled into an authentic grue lair!\">) (T <TELL \"Oh, no! A lurking grue slithered into the \"> <COND (<FSET? <LOC ,WINNER> ,VEHBIT> <TELL D <LOC ,WINNER>>) (T <TELL \"room\">)> <JIGS-UP \" and devoured you!\"> <RTRUE>)>)> <COND (<AND <NOT ,LIT> <EQUAL? ,WINNER ,ADVENTURER>> <TELL \"You have moved into a dark place.\" CR> <SETG P-CONT <>>)> <APPLY <GETP ,HERE ,P?ACTION> ,M-ENTER> <SCORE-OBJ .RM> <COND (<NOT <EQUAL? ,HERE .RM>> <RTRUE>) (<AND <NOT <EQUAL? ,ADVENTURER ,WINNER>> <IN? ,ADVENTURER .OHERE>> <TELL \"The \" D ,WINNER \" leaves the room.\" CR>) (<NULL-F> <RTRUE>) (<AND .V? <EQUAL? ,WINNER ,ADVENTURER>> <V-FIRST-LOOK>)> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <NOT .LB> <NOT .AV>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT .LB>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".LB",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "LB"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT .AV>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".AV",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "AV"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<NO-GO-TELL .AV .WLOC>",
              "Form": [
                {
                  "Atom": "NO-GO-TELL"
                },
                {
                  "Zil": ".AV",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "AV"
                    }
                  ]
                },
                {
                  "Zil": ".WLOC",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "WLOC"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <NOT .LB> <NOT <FSET? .RM .AV>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT .LB>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".LB",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "LB"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? .RM .AV>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? .RM .AV>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ".RM",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "RM"
                            }
                          ]
                        },
                        {
                          "Zil": ".AV",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "AV"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<NO-GO-TELL .AV .WLOC>",
              "Form": [
                {
                  "Atom": "NO-GO-TELL"
                },
                {
                  "Zil": ".AV",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "AV"
                    }
                  ]
                },
                {
                  "Zil": ".WLOC",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "WLOC"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <FSET? ,HERE ,RLANDBIT> .LB .AV <NOT <EQUAL? .AV ,RLANDBIT>> <NOT <FSET? .RM .AV>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<FSET? ,HERE ,RLANDBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",RLANDBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "RLANDBIT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ".LB",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "LB"
                    }
                  ]
                },
                {
                  "Zil": ".AV",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "AV"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <EQUAL? .AV ,RLANDBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? .AV ,RLANDBIT>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ".AV",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "AV"
                            }
                          ]
                        },
                        {
                          "Zil": ",RLANDBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "RLANDBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? .RM .AV>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? .RM .AV>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ".RM",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "RM"
                            }
                          ]
                        },
                        {
                          "Zil": ".AV",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "AV"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<NO-GO-TELL .AV .WLOC>",
              "Form": [
                {
                  "Atom": "NO-GO-TELL"
                },
                {
                  "Zil": ".AV",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "AV"
                    }
                  ]
                },
                {
                  "Zil": ".WLOC",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "WLOC"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? .RM ,RMUNGBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ".RM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RM"
                    }
                  ]
                },
                {
                  "Zil": ",RMUNGBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "RMUNGBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL <GETP .RM ,P?LDESC> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<GETP .RM ,P?LDESC>",
                  "Form": [
                    {
                      "Atom": "GETP"
                    },
                    {
                      "Zil": ".RM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RM"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?LDESC",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?LDESC"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<COND (<AND .LB <NOT <FSET? ,HERE ,RLANDBIT>> <NOT ,DEAD> <FSET? .WLOC ,VEHBIT>> <COND (<FSET? .WLOC ,VEHBIT> <TELL \"The \" D .WLOC \" comes to a stop.\" CR CR>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND .LB <NOT <FSET? ,HERE ,RLANDBIT>> <NOT ,DEAD> <FSET? .WLOC ,VEHBIT>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ".LB",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "LB"
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <FSET? ,HERE ,RLANDBIT>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<FSET? ,HERE ,RLANDBIT>",
                            "Form": [
                              {
                                "Atom": "FSET?"
                              },
                              {
                                "Zil": ",HERE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "HERE"
                                  }
                                ]
                              },
                              {
                                "Zil": ",RLANDBIT",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "RLANDBIT"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT ,DEAD>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",DEAD",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "DEAD"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<FSET? .WLOC ,VEHBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ".WLOC",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WLOC"
                              }
                            ]
                          },
                          {
                            "Zil": ",VEHBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "VEHBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<FSET? .WLOC ,VEHBIT> <TELL \"The \" D .WLOC \" comes to a stop.\" CR CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<FSET? .WLOC ,VEHBIT>",
                          "Form": [
                            {
                              "Atom": "FSET?"
                            },
                            {
                              "Zil": ".WLOC",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "WLOC"
                                }
                              ]
                            },
                            {
                              "Zil": ",VEHBIT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "VEHBIT"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The \" D .WLOC \" comes to a stop.\" CR CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ".WLOC",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "WLOC"
                                }
                              ]
                            },
                            " comes to a stop.",
                            {
                              "Atom": "CR"
                            },
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (.AV <MOVE .WLOC .RM>) (T <MOVE ,WINNER .RM>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ".AV",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "AV"
                      }
                    ]
                  },
                  {
                    "Zil": "<MOVE .WLOC .RM>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ".WLOC",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "WLOC"
                          }
                        ]
                      },
                      {
                        "Zil": ".RM",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "RM"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<MOVE ,WINNER .RM>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ",WINNER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WINNER"
                          }
                        ]
                      },
                      {
                        "Zil": ".RM",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "RM"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SETG HERE .RM>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "HERE"
                },
                {
                  "Zil": ".RM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG LIT <LIT? ,HERE>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "LIT"
                },
                {
                  "Zil": "<LIT? ,HERE>",
                  "Form": [
                    {
                      "Atom": "LIT?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND <NOT .OLIT> <NOT ,LIT> <PROB 80>> <COND (,SPRAYED? <TELL \"There are sinister gurgling noises in the darkness all around you!\" CR>) (<EQUAL? ,HERE ,DARK-1 ,DARK-2> <JIGS-UP \"Oh, no! Dozen of lurking grues attack and devour you! You must have\r\nstumbled into an authentic grue lair!\">) (T <TELL \"Oh, no! A lurking grue slithered into the \"> <COND (<FSET? <LOC ,WINNER> ,VEHBIT> <TELL D <LOC ,WINNER>>) (T <TELL \"room\">)> <JIGS-UP \" and devoured you!\"> <RTRUE>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <NOT .OLIT> <NOT ,LIT> <PROB 80>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<NOT .OLIT>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".OLIT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "OLIT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT ,LIT>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",LIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "LIT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PROB 80>",
                        "Form": [
                          {
                            "Atom": "PROB"
                          },
                          80
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (,SPRAYED? <TELL \"There are sinister gurgling noises in the darkness all around you!\" CR>) (<EQUAL? ,HERE ,DARK-1 ,DARK-2> <JIGS-UP \"Oh, no! Dozen of lurking grues attack and devour you! You must have\r\nstumbled into an authentic grue lair!\">) (T <TELL \"Oh, no! A lurking grue slithered into the \"> <COND (<FSET? <LOC ,WINNER> ,VEHBIT> <TELL D <LOC ,WINNER>>) (T <TELL \"room\">)> <JIGS-UP \" and devoured you!\"> <RTRUE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ",SPRAYED?",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "SPRAYED?"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"There are sinister gurgling noises in the darkness all around you!\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "There are sinister gurgling noises in the darkness all around you!",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<EQUAL? ,HERE ,DARK-1 ,DARK-2>",
                          "Form": [
                            {
                              "Atom": "EQUAL?"
                            },
                            {
                              "Zil": ",HERE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "HERE"
                                }
                              ]
                            },
                            {
                              "Zil": ",DARK-1",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "DARK-1"
                                }
                              ]
                            },
                            {
                              "Zil": ",DARK-2",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "DARK-2"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<JIGS-UP \"Oh, no! Dozen of lurking grues attack and devour you! You must have\r\nstumbled into an authentic grue lair!\">",
                          "Form": [
                            {
                              "Atom": "JIGS-UP"
                            },
                            "Oh, no! Dozen of lurking grues attack and devour you! You must have\r\nstumbled into an authentic grue lair!"
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"Oh, no! A lurking grue slithered into the \">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Oh, no! A lurking grue slithered into the "
                          ]
                        },
                        {
                          "Zil": "<COND (<FSET? <LOC ,WINNER> ,VEHBIT> <TELL D <LOC ,WINNER>>) (T <TELL \"room\">)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<FSET? <LOC ,WINNER> ,VEHBIT>",
                                "Form": [
                                  {
                                    "Atom": "FSET?"
                                  },
                                  {
                                    "Zil": "<LOC ,WINNER>",
                                    "Form": [
                                      {
                                        "Atom": "LOC"
                                      },
                                      {
                                        "Zil": ",WINNER",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "WINNER"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",VEHBIT",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "VEHBIT"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<TELL D <LOC ,WINNER>>",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  {
                                    "Atom": "D"
                                  },
                                  {
                                    "Zil": "<LOC ,WINNER>",
                                    "Form": [
                                      {
                                        "Atom": "LOC"
                                      },
                                      {
                                        "Zil": ",WINNER",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "WINNER"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            [
                              {
                                "Atom": "T"
                              },
                              {
                                "Zil": "<TELL \"room\">",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "room"
                                ]
                              }
                            ]
                          ]
                        },
                        {
                          "Zil": "<JIGS-UP \" and devoured you!\">",
                          "Form": [
                            {
                              "Atom": "JIGS-UP"
                            },
                            " and devoured you!"
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<AND <NOT ,LIT> <EQUAL? ,WINNER ,ADVENTURER>> <TELL \"You have moved into a dark place.\" CR> <SETG P-CONT <>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <NOT ,LIT> <EQUAL? ,WINNER ,ADVENTURER>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<NOT ,LIT>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",LIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "LIT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<EQUAL? ,WINNER ,ADVENTURER>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          },
                          {
                            "Zil": ",ADVENTURER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "ADVENTURER"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You have moved into a dark place.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You have moved into a dark place.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-CONT <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-CONT"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<APPLY <GETP ,HERE ,P?ACTION> ,M-ENTER>",
              "Form": [
                {
                  "Atom": "APPLY"
                },
                {
                  "Zil": "<GETP ,HERE ,P?ACTION>",
                  "Form": [
                    {
                      "Atom": "GETP"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?ACTION",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?ACTION"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",M-ENTER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-ENTER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SCORE-OBJ .RM>",
              "Form": [
                {
                  "Atom": "SCORE-OBJ"
                },
                {
                  "Zil": ".RM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <EQUAL? ,HERE .RM>> <RTRUE>) (<AND <NOT <EQUAL? ,ADVENTURER ,WINNER>> <IN? ,ADVENTURER .OHERE>> <TELL \"The \" D ,WINNER \" leaves the room.\" CR>) (<NULL-F> <RTRUE>) (<AND .V? <EQUAL? ,WINNER ,ADVENTURER>> <V-FIRST-LOOK>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <EQUAL? ,HERE .RM>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<EQUAL? ,HERE .RM>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          },
                          {
                            "Zil": ".RM",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "RM"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <NOT <EQUAL? ,ADVENTURER ,WINNER>> <IN? ,ADVENTURER .OHERE>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<NOT <EQUAL? ,ADVENTURER ,WINNER>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<EQUAL? ,ADVENTURER ,WINNER>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ",ADVENTURER",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "ADVENTURER"
                                  }
                                ]
                              },
                              {
                                "Zil": ",WINNER",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "WINNER"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<IN? ,ADVENTURER .OHERE>",
                        "Form": [
                          {
                            "Atom": "IN?"
                          },
                          {
                            "Zil": ",ADVENTURER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "ADVENTURER"
                              }
                            ]
                          },
                          {
                            "Zil": ".OHERE",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "OHERE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,WINNER \" leaves the room.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",WINNER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WINNER"
                          }
                        ]
                      },
                      " leaves the room.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<NULL-F>",
                    "Form": [
                      {
                        "Atom": "NULL-F"
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND .V? <EQUAL? ,WINNER ,ADVENTURER>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ".V?",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "V?"
                          }
                        ]
                      },
                      {
                        "Zil": "<EQUAL? ,WINNER ,ADVENTURER>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          },
                          {
                            "Zil": ",ADVENTURER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "ADVENTURER"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<V-FIRST-LOOK>",
                    "Form": [
                      {
                        "Atom": "V-FIRST-LOOK"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2183",
    "Name": "LKP",
    "ArgSpec": "(ITM TBL \"AUX\" (CNT 0) (LEN <GET .TBL 0>))",
    "Body": [
      {
        "Zil": "<REPEAT () <COND (<G? <SET CNT <+ .CNT 1>> .LEN> <RFALSE>) (<EQUAL? <GET .TBL .CNT> .ITM> <COND (<EQUAL? .CNT .LEN> <RFALSE>) (T <RETURN <GET .TBL <+ .CNT 1>>>)>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<G? <SET CNT <+ .CNT 1>> .LEN> <RFALSE>) (<EQUAL? <GET .TBL .CNT> .ITM> <COND (<EQUAL? .CNT .LEN> <RFALSE>) (T <RETURN <GET .TBL <+ .CNT 1>>>)>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<G? <SET CNT <+ .CNT 1>> .LEN>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": "<SET CNT <+ .CNT 1>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "CNT"
                        },
                        {
                          "Zil": "<+ .CNT 1>",
                          "Form": [
                            {
                              "Atom": "+"
                            },
                            {
                              "Zil": ".CNT",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "CNT"
                                }
                              ]
                            },
                            1
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ".LEN",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "LEN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<EQUAL? <GET .TBL .CNT> .ITM>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": "<GET .TBL .CNT>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ".TBL",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TBL"
                            }
                          ]
                        },
                        {
                          "Zil": ".CNT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "CNT"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ".ITM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "ITM"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<EQUAL? .CNT .LEN> <RFALSE>) (T <RETURN <GET .TBL <+ .CNT 1>>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<EQUAL? .CNT .LEN>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ".CNT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "CNT"
                              }
                            ]
                          },
                          {
                            "Zil": ".LEN",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "LEN"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RFALSE>",
                        "Form": [
                          {
                            "Atom": "RFALSE"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<RETURN <GET .TBL <+ .CNT 1>>>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          },
                          {
                            "Zil": "<GET .TBL <+ .CNT 1>>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ".TBL",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "TBL"
                                  }
                                ]
                              },
                              {
                                "Zil": "<+ .CNT 1>",
                                "Form": [
                                  {
                                    "Atom": "+"
                                  },
                                  {
                                    "Zil": ".CNT",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "CNT"
                                      }
                                    ]
                                  },
                                  1
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2192",
    "Name": "DO-WALK",
    "ArgSpec": "(DIR)",
    "Body": [
      {
        "Zil": "<SETG P-WALK-DIR .DIR>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-WALK-DIR"
          },
          {
            "Zil": ".DIR",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "DIR"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PERFORM ,V?WALK .DIR>",
        "Form": [
          {
            "Atom": "PERFORM"
          },
          {
            "Zil": ",V?WALK",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "V?WALK"
              }
            ]
          },
          {
            "Zil": ".DIR",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "DIR"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2201",
    "Name": "GLOBAL-IN?",
    "ArgSpec": "(OBJ1 OBJ2 \"AUX\" TX)",
    "Body": [
      {
        "Zil": "<COND (<SET TX <GETPT .OBJ2 ,P?GLOBAL>> <ZMEMQB .OBJ1 .TX <- <PTSIZE .TX> 1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET TX <GETPT .OBJ2 ,P?GLOBAL>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TX"
                },
                {
                  "Zil": "<GETPT .OBJ2 ,P?GLOBAL>",
                  "Form": [
                    {
                      "Atom": "GETPT"
                    },
                    {
                      "Zil": ".OBJ2",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ2"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?GLOBAL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?GLOBAL"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<ZMEMQB .OBJ1 .TX <- <PTSIZE .TX> 1>>",
              "Form": [
                {
                  "Atom": "ZMEMQB"
                },
                {
                  "Zil": ".OBJ1",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ1"
                    }
                  ]
                },
                {
                  "Zil": ".TX",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "TX"
                    }
                  ]
                },
                {
                  "Zil": "<- <PTSIZE .TX> 1>",
                  "Form": [
                    {
                      "Atom": "-"
                    },
                    {
                      "Zil": "<PTSIZE .TX>",
                      "Form": [
                        {
                          "Atom": "PTSIZE"
                        },
                        {
                          "Zil": ".TX",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TX"
                            }
                          ]
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2205",
    "Name": "FIND-IN",
    "ArgSpec": "(WHERE WHAT \"AUX\" W)",
    "Body": [
      {
        "Zil": "<SET W <FIRST? .WHERE>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "W"
          },
          {
            "Zil": "<FIRST? .WHERE>",
            "Form": [
              {
                "Atom": "FIRST?"
              },
              {
                "Zil": ".WHERE",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "WHERE"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<NOT .W> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT .W>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ".W",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "W"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<AND <FSET? .W .WHAT> <NOT <EQUAL? .W ,ADVENTURER>>> <RETURN .W>) (<NOT <SET W <NEXT? .W>>> <RETURN <>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<AND <FSET? .W .WHAT> <NOT <EQUAL? .W ,ADVENTURER>>> <RETURN .W>) (<NOT <SET W <NEXT? .W>>> <RETURN <>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<AND <FSET? .W .WHAT> <NOT <EQUAL? .W ,ADVENTURER>>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<FSET? .W .WHAT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ".W",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "W"
                            }
                          ]
                        },
                        {
                          "Zil": ".WHAT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "WHAT"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<NOT <EQUAL? .W ,ADVENTURER>>",
                      "Form": [
                        {
                          "Atom": "NOT"
                        },
                        {
                          "Zil": "<EQUAL? .W ,ADVENTURER>",
                          "Form": [
                            {
                              "Atom": "EQUAL?"
                            },
                            {
                              "Zil": ".W",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "W"
                                }
                              ]
                            },
                            {
                              "Zil": ",ADVENTURER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "ADVENTURER"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN .W>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": ".W",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "W"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<NOT <SET W <NEXT? .W>>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<SET W <NEXT? .W>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "W"
                        },
                        {
                          "Zil": "<NEXT? .W>",
                          "Form": [
                            {
                              "Atom": "NEXT?"
                            },
                            {
                              "Zil": ".W",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "W"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN <>>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": "<>",
                      "Form": []
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2221",
    "Name": "HELD?",
    "ArgSpec": "(CAN)",
    "Body": [
      {
        "Zil": "<REPEAT () <SET CAN <LOC .CAN>> <COND (<NOT .CAN> <RFALSE>) (<EQUAL? .CAN ,WINNER> <RTRUE>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<SET CAN <LOC .CAN>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "CAN"
              },
              {
                "Zil": "<LOC .CAN>",
                "Form": [
                  {
                    "Atom": "LOC"
                  },
                  {
                    "Zil": ".CAN",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "CAN"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<COND (<NOT .CAN> <RFALSE>) (<EQUAL? .CAN ,WINNER> <RTRUE>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<NOT .CAN>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".CAN",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CAN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<EQUAL? .CAN ,WINNER>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".CAN",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CAN"
                        }
                      ]
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RTRUE>",
                  "Form": [
                    {
                      "Atom": "RTRUE"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2227",
    "Name": "OTHER-SIDE",
    "ArgSpec": "(DOBJ \"AUX\" (P 0) TX)",
    "Body": [
      {
        "Zil": "<REPEAT () <COND (<L? <SET P <NEXTP ,HERE .P>> ,LOW-DIRECTION> <RETURN <>>) (ELSE <SET TX <GETPT ,HERE .P>> <COND (<AND <EQUAL? <PTSIZE .TX> ,DEXIT> <EQUAL? <GETB .TX ,DEXITOBJ> .DOBJ>> <RETURN .P>)>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<L? <SET P <NEXTP ,HERE .P>> ,LOW-DIRECTION> <RETURN <>>) (ELSE <SET TX <GETPT ,HERE .P>> <COND (<AND <EQUAL? <PTSIZE .TX> ,DEXIT> <EQUAL? <GETB .TX ,DEXITOBJ> .DOBJ>> <RETURN .P>)>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<L? <SET P <NEXTP ,HERE .P>> ,LOW-DIRECTION>",
                  "Form": [
                    {
                      "Atom": "L?"
                    },
                    {
                      "Zil": "<SET P <NEXTP ,HERE .P>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "P"
                        },
                        {
                          "Zil": "<NEXTP ,HERE .P>",
                          "Form": [
                            {
                              "Atom": "NEXTP"
                            },
                            {
                              "Zil": ",HERE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "HERE"
                                }
                              ]
                            },
                            {
                              "Zil": ".P",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "P"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",LOW-DIRECTION",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "LOW-DIRECTION"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN <>>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": "<>",
                      "Form": []
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "ELSE"
                },
                {
                  "Zil": "<SET TX <GETPT ,HERE .P>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "TX"
                    },
                    {
                      "Zil": "<GETPT ,HERE .P>",
                      "Form": [
                        {
                          "Atom": "GETPT"
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        },
                        {
                          "Zil": ".P",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "P"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<AND <EQUAL? <PTSIZE .TX> ,DEXIT> <EQUAL? <GETB .TX ,DEXITOBJ> .DOBJ>> <RETURN .P>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<AND <EQUAL? <PTSIZE .TX> ,DEXIT> <EQUAL? <GETB .TX ,DEXITOBJ> .DOBJ>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<EQUAL? <PTSIZE .TX> ,DEXIT>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": "<PTSIZE .TX>",
                                "Form": [
                                  {
                                    "Atom": "PTSIZE"
                                  },
                                  {
                                    "Zil": ".TX",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "TX"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": ",DEXIT",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "DEXIT"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<EQUAL? <GETB .TX ,DEXITOBJ> .DOBJ>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": "<GETB .TX ,DEXITOBJ>",
                                "Form": [
                                  {
                                    "Atom": "GETB"
                                  },
                                  {
                                    "Zil": ".TX",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "TX"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",DEXITOBJ",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "DEXITOBJ"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": ".DOBJ",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "DOBJ"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN .P>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          },
                          {
                            "Zil": ".P",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "P"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2237",
    "Name": "MUNG-ROOM",
    "ArgSpec": "(RM STR)",
    "Body": [
      {
        "Atom": "T"
      },
      {
        "Zil": "<FSET .RM ,RMUNGBIT>",
        "Form": [
          {
            "Atom": "FSET"
          },
          {
            "Zil": ".RM",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "RM"
              }
            ]
          },
          {
            "Zil": ",RMUNGBIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "RMUNGBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<PUTP .RM ,P?LDESC .STR>",
        "Form": [
          {
            "Atom": "PUTP"
          },
          {
            "Zil": ".RM",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "RM"
              }
            ]
          },
          {
            "Zil": ",P?LDESC",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "P?LDESC"
              }
            ]
          },
          {
            "Zil": ".STR",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "STR"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "GVERBS.zil:2245",
    "Name": "THIS-IS-IT",
    "ArgSpec": "(OBJ)",
    "Body": [
      {
        "Zil": "<SETG P-IT-OBJECT .OBJ>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-IT-OBJECT"
          },
          {
            "Zil": ".OBJ",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "OBJ"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:9",
    "Name": "I-SWORD",
    "ArgSpec": "(\"AUX\" (DEM <INT I-SWORD>) (NG 0) P T L)",
    "Body": [
      {
        "Zil": "<COND (<IN? ,SWORD ,ADVENTURER> <COND (<AND <==? ,HERE ,CLIFF> <NOT ,MAN-GONE>> <SET NG 1>) (<AND <==? ,HERE ,CLIFF-LEDGE> ,MAN-FLAG> <SET NG 1>) (<INFESTED? ,HERE> <SET NG 2>) (<OR <AND <==? ,MLOC ,MRG> <==? ,HERE ,IN-MIRROR>> <EQUAL? ,HERE ,MRGE ,MRG ,MRGW>> <SET NG 1>) (ELSE <SET P 0> <REPEAT () <COND (<0? <SET P <NEXTP ,HERE .P>>> <RETURN>) (<NOT <L? .P ,LOW-DIRECTION>> <SET T <GETPT ,HERE .P>> <SET L <PTSIZE .T>> <COND (<EQUAL? .L ,UEXIT ,CEXIT ,DEXIT> <COND (<INFESTED? <GETB .T 0>> <SET NG 1> <RETURN>)>)>)>>)> <COND (<==? .NG ,SWORD-STATE> <RFALSE>) (<==? .NG 2> <TELL \"Your sword has begun to glow very brightly.\" CR>) (<1? .NG> <TELL \"Your sword is glowing with a faint blue glow.\" CR>) (<0? .NG> <TELL \"Your sword is no longer glowing.\" CR>)> <SETG SWORD-STATE .NG> <RTRUE>) (ELSE <DISABLE .DEM> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,SWORD ,ADVENTURER>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",SWORD",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SWORD"
                    }
                  ]
                },
                {
                  "Zil": ",ADVENTURER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ADVENTURER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND <==? ,HERE ,CLIFF> <NOT ,MAN-GONE>> <SET NG 1>) (<AND <==? ,HERE ,CLIFF-LEDGE> ,MAN-FLAG> <SET NG 1>) (<INFESTED? ,HERE> <SET NG 2>) (<OR <AND <==? ,MLOC ,MRG> <==? ,HERE ,IN-MIRROR>> <EQUAL? ,HERE ,MRGE ,MRG ,MRGW>> <SET NG 1>) (ELSE <SET P 0> <REPEAT () <COND (<0? <SET P <NEXTP ,HERE .P>>> <RETURN>) (<NOT <L? .P ,LOW-DIRECTION>> <SET T <GETPT ,HERE .P>> <SET L <PTSIZE .T>> <COND (<EQUAL? .L ,UEXIT ,CEXIT ,DEXIT> <COND (<INFESTED? <GETB .T 0>> <SET NG 1> <RETURN>)>)>)>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <==? ,HERE ,CLIFF> <NOT ,MAN-GONE>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<==? ,HERE ,CLIFF>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          },
                          {
                            "Zil": ",CLIFF",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "CLIFF"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT ,MAN-GONE>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",MAN-GONE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MAN-GONE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET NG 1>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "NG"
                      },
                      1
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <==? ,HERE ,CLIFF-LEDGE> ,MAN-FLAG>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<==? ,HERE ,CLIFF-LEDGE>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          },
                          {
                            "Zil": ",CLIFF-LEDGE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "CLIFF-LEDGE"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",MAN-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MAN-FLAG"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET NG 1>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "NG"
                      },
                      1
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<INFESTED? ,HERE>",
                    "Form": [
                      {
                        "Atom": "INFESTED?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET NG 2>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "NG"
                      },
                      2
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<OR <AND <==? ,MLOC ,MRG> <==? ,HERE ,IN-MIRROR>> <EQUAL? ,HERE ,MRGE ,MRG ,MRGW>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<AND <==? ,MLOC ,MRG> <==? ,HERE ,IN-MIRROR>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<==? ,MLOC ,MRG>",
                            "Form": [
                              {
                                "Atom": "==?"
                              },
                              {
                                "Zil": ",MLOC",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "MLOC"
                                  }
                                ]
                              },
                              {
                                "Zil": ",MRG",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "MRG"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<==? ,HERE ,IN-MIRROR>",
                            "Form": [
                              {
                                "Atom": "==?"
                              },
                              {
                                "Zil": ",HERE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "HERE"
                                  }
                                ]
                              },
                              {
                                "Zil": ",IN-MIRROR",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "IN-MIRROR"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<EQUAL? ,HERE ,MRGE ,MRG ,MRGW>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          },
                          {
                            "Zil": ",MRGE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MRGE"
                              }
                            ]
                          },
                          {
                            "Zil": ",MRG",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MRG"
                              }
                            ]
                          },
                          {
                            "Zil": ",MRGW",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MRGW"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET NG 1>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "NG"
                      },
                      1
                    ]
                  }
                ],
                [
                  {
                    "Atom": "ELSE"
                  },
                  {
                    "Zil": "<SET P 0>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "P"
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<REPEAT () <COND (<0? <SET P <NEXTP ,HERE .P>>> <RETURN>) (<NOT <L? .P ,LOW-DIRECTION>> <SET T <GETPT ,HERE .P>> <SET L <PTSIZE .T>> <COND (<EQUAL? .L ,UEXIT ,CEXIT ,DEXIT> <COND (<INFESTED? <GETB .T 0>> <SET NG 1> <RETURN>)>)>)>>",
                    "Form": [
                      {
                        "Atom": "REPEAT"
                      },
                      [],
                      {
                        "Zil": "<COND (<0? <SET P <NEXTP ,HERE .P>>> <RETURN>) (<NOT <L? .P ,LOW-DIRECTION>> <SET T <GETPT ,HERE .P>> <SET L <PTSIZE .T>> <COND (<EQUAL? .L ,UEXIT ,CEXIT ,DEXIT> <COND (<INFESTED? <GETB .T 0>> <SET NG 1> <RETURN>)>)>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<0? <SET P <NEXTP ,HERE .P>>>",
                              "Form": [
                                {
                                  "Atom": "0?"
                                },
                                {
                                  "Zil": "<SET P <NEXTP ,HERE .P>>",
                                  "Form": [
                                    {
                                      "Atom": "SET"
                                    },
                                    {
                                      "Atom": "P"
                                    },
                                    {
                                      "Zil": "<NEXTP ,HERE .P>",
                                      "Form": [
                                        {
                                          "Atom": "NEXTP"
                                        },
                                        {
                                          "Zil": ",HERE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "HERE"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ".P",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "P"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<RETURN>",
                              "Form": [
                                {
                                  "Atom": "RETURN"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<NOT <L? .P ,LOW-DIRECTION>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<L? .P ,LOW-DIRECTION>",
                                  "Form": [
                                    {
                                      "Atom": "L?"
                                    },
                                    {
                                      "Zil": ".P",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "P"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",LOW-DIRECTION",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "LOW-DIRECTION"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET T <GETPT ,HERE .P>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "T"
                                },
                                {
                                  "Zil": "<GETPT ,HERE .P>",
                                  "Form": [
                                    {
                                      "Atom": "GETPT"
                                    },
                                    {
                                      "Zil": ",HERE",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "HERE"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ".P",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "P"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET L <PTSIZE .T>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "L"
                                },
                                {
                                  "Zil": "<PTSIZE .T>",
                                  "Form": [
                                    {
                                      "Atom": "PTSIZE"
                                    },
                                    {
                                      "Zil": ".T",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "T"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<EQUAL? .L ,UEXIT ,CEXIT ,DEXIT> <COND (<INFESTED? <GETB .T 0>> <SET NG 1> <RETURN>)>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<EQUAL? .L ,UEXIT ,CEXIT ,DEXIT>",
                                    "Form": [
                                      {
                                        "Atom": "EQUAL?"
                                      },
                                      {
                                        "Zil": ".L",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "L"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",UEXIT",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "UEXIT"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",CEXIT",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "CEXIT"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",DEXIT",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "DEXIT"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<COND (<INFESTED? <GETB .T 0>> <SET NG 1> <RETURN>)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": "<INFESTED? <GETB .T 0>>",
                                          "Form": [
                                            {
                                              "Atom": "INFESTED?"
                                            },
                                            {
                                              "Zil": "<GETB .T 0>",
                                              "Form": [
                                                {
                                                  "Atom": "GETB"
                                                },
                                                {
                                                  "Zil": ".T",
                                                  "Form": [
                                                    {
                                                      "Atom": "LVAL"
                                                    },
                                                    {
                                                      "Atom": "T"
                                                    }
                                                  ]
                                                },
                                                0
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<SET NG 1>",
                                          "Form": [
                                            {
                                              "Atom": "SET"
                                            },
                                            {
                                              "Atom": "NG"
                                            },
                                            1
                                          ]
                                        },
                                        {
                                          "Zil": "<RETURN>",
                                          "Form": [
                                            {
                                              "Atom": "RETURN"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<==? .NG ,SWORD-STATE> <RFALSE>) (<==? .NG 2> <TELL \"Your sword has begun to glow very brightly.\" CR>) (<1? .NG> <TELL \"Your sword is glowing with a faint blue glow.\" CR>) (<0? .NG> <TELL \"Your sword is no longer glowing.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? .NG ,SWORD-STATE>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ".NG",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NG"
                          }
                        ]
                      },
                      {
                        "Zil": ",SWORD-STATE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SWORD-STATE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<==? .NG 2>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ".NG",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NG"
                          }
                        ]
                      },
                      2
                    ]
                  },
                  {
                    "Zil": "<TELL \"Your sword has begun to glow very brightly.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Your sword has begun to glow very brightly.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<1? .NG>",
                    "Form": [
                      {
                        "Atom": "1?"
                      },
                      {
                        "Zil": ".NG",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NG"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Your sword is glowing with a faint blue glow.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Your sword is glowing with a faint blue glow.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<0? .NG>",
                    "Form": [
                      {
                        "Atom": "0?"
                      },
                      {
                        "Zil": ".NG",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NG"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Your sword is no longer glowing.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Your sword is no longer glowing.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SETG SWORD-STATE .NG>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "SWORD-STATE"
                },
                {
                  "Zil": ".NG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "NG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<DISABLE .DEM>",
              "Form": [
                {
                  "Atom": "DISABLE"
                },
                {
                  "Zil": ".DEM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DEM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:43",
    "Name": "INFESTED?",
    "ArgSpec": "(R \"AUX\" (F <FIRST? .R>))",
    "Body": [
      {
        "Zil": "<REPEAT () <COND (<NOT .F> <RETURN <>>) (<AND <FSET? .F ,ACTORBIT> <NOT <FSET? .F ,INVISIBLE>>> <RETURN .F>) (<NOT <SET F <NEXT? .F>>> <RETURN <>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<NOT .F> <RETURN <>>) (<AND <FSET? .F ,ACTORBIT> <NOT <FSET? .F ,INVISIBLE>>> <RETURN .F>) (<NOT <SET F <NEXT? .F>>> <RETURN <>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<NOT .F>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".F",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN <>>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": "<>",
                      "Form": []
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<AND <FSET? .F ,ACTORBIT> <NOT <FSET? .F ,INVISIBLE>>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<FSET? .F ,ACTORBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ".F",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "F"
                            }
                          ]
                        },
                        {
                          "Zil": ",ACTORBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "ACTORBIT"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<NOT <FSET? .F ,INVISIBLE>>",
                      "Form": [
                        {
                          "Atom": "NOT"
                        },
                        {
                          "Zil": "<FSET? .F ,INVISIBLE>",
                          "Form": [
                            {
                              "Atom": "FSET?"
                            },
                            {
                              "Zil": ".F",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "F"
                                }
                              ]
                            },
                            {
                              "Zil": ",INVISIBLE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "INVISIBLE"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN .F>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": ".F",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "F"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<NOT <SET F <NEXT? .F>>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<SET F <NEXT? .F>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "F"
                        },
                        {
                          "Zil": "<NEXT? .F>",
                          "Form": [
                            {
                              "Atom": "NEXT?"
                            },
                            {
                              "Zil": ".F",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "F"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN <>>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": "<>",
                      "Form": []
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:59",
    "Name": "FIND-WEAPON",
    "ArgSpec": "(O \"AUX\" W)",
    "Body": [
      {
        "Zil": "<SET W <FIRST? .O>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "W"
          },
          {
            "Zil": "<FIRST? .O>",
            "Form": [
              {
                "Atom": "FIRST?"
              },
              {
                "Zil": ".O",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "O"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<NOT .W> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT .W>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ".W",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "W"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<EQUAL? .W ,SWORD> <RETURN .W>) (<NOT <SET W <NEXT? .W>>> <RFALSE>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<EQUAL? .W ,SWORD> <RETURN .W>) (<NOT <SET W <NEXT? .W>>> <RFALSE>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<EQUAL? .W ,SWORD>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".W",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "W"
                        }
                      ]
                    },
                    {
                      "Zil": ",SWORD",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SWORD"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN .W>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": ".W",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "W"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<NOT <SET W <NEXT? .W>>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<SET W <NEXT? .W>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "W"
                        },
                        {
                          "Zil": "<NEXT? .W>",
                          "Form": [
                            {
                              "Atom": "NEXT?"
                            },
                            {
                              "Zil": ".W",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "W"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:68",
    "Name": "SWORD-FCN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (,SWORD-IN-STONE? <COND (<VERB? TAKE MOVE> <COND (<PROB 10> <TELL \"Who do you think you are? Arthur?\" CR>) (T <TELL \"The sword is deeply imbedded in the rock. You can't budge it.\" CR>)>)>) (<AND <VERB? TAKE> <==? ,WINNER ,ADVENTURER>> <ENABLE <QUEUE I-SWORD -1>> <>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",SWORD-IN-STONE?",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "SWORD-IN-STONE?"
                }
              ]
            },
            {
              "Zil": "<COND (<VERB? TAKE MOVE> <COND (<PROB 10> <TELL \"Who do you think you are? Arthur?\" CR>) (T <TELL \"The sword is deeply imbedded in the rock. You can't budge it.\" CR>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<VERB? TAKE MOVE>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "TAKE"
                      },
                      {
                        "Atom": "MOVE"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<PROB 10> <TELL \"Who do you think you are? Arthur?\" CR>) (T <TELL \"The sword is deeply imbedded in the rock. You can't budge it.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<PROB 10>",
                          "Form": [
                            {
                              "Atom": "PROB"
                            },
                            10
                          ]
                        },
                        {
                          "Zil": "<TELL \"Who do you think you are? Arthur?\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Who do you think you are? Arthur?",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"The sword is deeply imbedded in the rock. You can't budge it.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The sword is deeply imbedded in the rock. You can't budge it.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? TAKE> <==? ,WINNER ,ADVENTURER>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? TAKE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "TAKE"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,WINNER ,ADVENTURER>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    },
                    {
                      "Zil": ",ADVENTURER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ADVENTURER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-SWORD -1>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-SWORD -1>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-SWORD"
                    },
                    -1
                  ]
                }
              ]
            },
            {
              "Zil": "<>",
              "Form": []
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:89",
    "Name": "LANTERN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? THROW> <TELL \"The lamp smashes. The light is now out.\" CR> <DISABLE <INT I-LANTERN>> <REMOVE ,LAMP> <SETG CURRENT-LAMP ,BROKEN-LAMP> <MOVE ,BROKEN-LAMP ,HERE>) (<VERB? LAMP-ON> <COND (<NOT <FSET? ,LAMP ,LIGHTBIT>> <TELL \"A burned-out lamp won't light.\" CR>) (ELSE <ENABLE <INT I-LANTERN>> <>)>) (<VERB? LAMP-OFF> <COND (<NOT <FSET? ,LAMP ,LIGHTBIT>> <TELL \"The lamp has already burned out.\" CR>) (ELSE <DISABLE <INT I-LANTERN>> <>)>) (<VERB? EXAMINE> <COND (<NOT <FSET? ,LAMP ,LIGHTBIT>> <TELL \"The lamp has burned out.\">) (<FSET? ,LAMP ,ONBIT> <TELL \"The lamp is on.\">) (ELSE <TELL \"The lamp is turned off.\">)> <CRLF>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? THROW>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "THROW"
                }
              ]
            },
            {
              "Zil": "<TELL \"The lamp smashes. The light is now out.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The lamp smashes. The light is now out.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<DISABLE <INT I-LANTERN>>",
              "Form": [
                {
                  "Atom": "DISABLE"
                },
                {
                  "Zil": "<INT I-LANTERN>",
                  "Form": [
                    {
                      "Atom": "INT"
                    },
                    {
                      "Atom": "I-LANTERN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REMOVE ,LAMP>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",LAMP",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LAMP"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG CURRENT-LAMP ,BROKEN-LAMP>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CURRENT-LAMP"
                },
                {
                  "Zil": ",BROKEN-LAMP",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "BROKEN-LAMP"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,BROKEN-LAMP ,HERE>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",BROKEN-LAMP",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "BROKEN-LAMP"
                    }
                  ]
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LAMP-ON>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LAMP-ON"
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <FSET? ,LAMP ,LIGHTBIT>> <TELL \"A burned-out lamp won't light.\" CR>) (ELSE <ENABLE <INT I-LANTERN>> <>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <FSET? ,LAMP ,LIGHTBIT>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? ,LAMP ,LIGHTBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",LAMP",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "LAMP"
                              }
                            ]
                          },
                          {
                            "Zil": ",LIGHTBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "LIGHTBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"A burned-out lamp won't light.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "A burned-out lamp won't light.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "ELSE"
                  },
                  {
                    "Zil": "<ENABLE <INT I-LANTERN>>",
                    "Form": [
                      {
                        "Atom": "ENABLE"
                      },
                      {
                        "Zil": "<INT I-LANTERN>",
                        "Form": [
                          {
                            "Atom": "INT"
                          },
                          {
                            "Atom": "I-LANTERN"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<>",
                    "Form": []
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LAMP-OFF>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LAMP-OFF"
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <FSET? ,LAMP ,LIGHTBIT>> <TELL \"The lamp has already burned out.\" CR>) (ELSE <DISABLE <INT I-LANTERN>> <>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <FSET? ,LAMP ,LIGHTBIT>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? ,LAMP ,LIGHTBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",LAMP",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "LAMP"
                              }
                            ]
                          },
                          {
                            "Zil": ",LIGHTBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "LIGHTBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The lamp has already burned out.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The lamp has already burned out.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "ELSE"
                  },
                  {
                    "Zil": "<DISABLE <INT I-LANTERN>>",
                    "Form": [
                      {
                        "Atom": "DISABLE"
                      },
                      {
                        "Zil": "<INT I-LANTERN>",
                        "Form": [
                          {
                            "Atom": "INT"
                          },
                          {
                            "Atom": "I-LANTERN"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<>",
                    "Form": []
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <FSET? ,LAMP ,LIGHTBIT>> <TELL \"The lamp has burned out.\">) (<FSET? ,LAMP ,ONBIT> <TELL \"The lamp is on.\">) (ELSE <TELL \"The lamp is turned off.\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <FSET? ,LAMP ,LIGHTBIT>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? ,LAMP ,LIGHTBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",LAMP",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "LAMP"
                              }
                            ]
                          },
                          {
                            "Zil": ",LIGHTBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "LIGHTBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The lamp has burned out.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The lamp has burned out."
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<FSET? ,LAMP ,ONBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",LAMP",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "LAMP"
                          }
                        ]
                      },
                      {
                        "Zil": ",ONBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ONBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The lamp is on.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The lamp is on."
                    ]
                  }
                ],
                [
                  {
                    "Atom": "ELSE"
                  },
                  {
                    "Zil": "<TELL \"The lamp is turned off.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The lamp is turned off."
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:117",
    "Name": "LIGHT-INT",
    "ArgSpec": "(OBJ TBL TICK)",
    "Body": [
      {
        "Zil": "<COND (<0? .TICK> <FCLEAR .OBJ ,ONBIT> <FSET .OBJ ,RMUNGBIT>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<0? .TICK>",
              "Form": [
                {
                  "Atom": "0?"
                },
                {
                  "Zil": ".TICK",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "TICK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FCLEAR .OBJ ,ONBIT>",
              "Form": [
                {
                  "Atom": "FCLEAR"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": ",ONBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ONBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FSET .OBJ ,RMUNGBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": ",RMUNGBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "RMUNGBIT"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<OR <HELD? .OBJ> <IN? .OBJ ,HERE>> <COND (<0? .TICK> <TELL \"You'd better have more light than from the \" D .OBJ \".\" CR>) (T <TELL <GET .TBL 1> CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <HELD? .OBJ> <IN? .OBJ ,HERE>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<HELD? .OBJ>",
                  "Form": [
                    {
                      "Atom": "HELD?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<IN? .OBJ ,HERE>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ".OBJ",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "OBJ"
                        }
                      ]
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<0? .TICK> <TELL \"You'd better have more light than from the \" D .OBJ \".\" CR>) (T <TELL <GET .TBL 1> CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<0? .TICK>",
                    "Form": [
                      {
                        "Atom": "0?"
                      },
                      {
                        "Zil": ".TICK",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TICK"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You'd better have more light than from the \" D .OBJ \".\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You'd better have more light than from the ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".OBJ",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "OBJ"
                          }
                        ]
                      },
                      ".",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL <GET .TBL 1> CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<GET .TBL 1>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ".TBL",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "TBL"
                              }
                            ]
                          },
                          1
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:128",
    "Name": "I-LANTERN",
    "ArgSpec": "(\"AUX\" TICK (TBL <VALUE LAMP-TABLE>))",
    "Body": [
      {
        "Zil": "<ENABLE <QUEUE I-LANTERN <SET TICK <GET .TBL 0>>>>",
        "Form": [
          {
            "Atom": "ENABLE"
          },
          {
            "Zil": "<QUEUE I-LANTERN <SET TICK <GET .TBL 0>>>",
            "Form": [
              {
                "Atom": "QUEUE"
              },
              {
                "Atom": "I-LANTERN"
              },
              {
                "Zil": "<SET TICK <GET .TBL 0>>",
                "Form": [
                  {
                    "Atom": "SET"
                  },
                  {
                    "Atom": "TICK"
                  },
                  {
                    "Zil": "<GET .TBL 0>",
                    "Form": [
                      {
                        "Atom": "GET"
                      },
                      {
                        "Zil": ".TBL",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TBL"
                          }
                        ]
                      },
                      0
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<LIGHT-INT ,LAMP .TBL .TICK>",
        "Form": [
          {
            "Atom": "LIGHT-INT"
          },
          {
            "Zil": ",LAMP",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "LAMP"
              }
            ]
          },
          {
            "Zil": ".TBL",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "TBL"
              }
            ]
          },
          {
            "Zil": ".TICK",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "TICK"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<NOT <0? .TICK>> <SETG LAMP-TABLE <REST .TBL 4>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <0? .TICK>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<0? .TICK>",
                  "Form": [
                    {
                      "Atom": "0?"
                    },
                    {
                      "Zil": ".TICK",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TICK"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG LAMP-TABLE <REST .TBL 4>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "LAMP-TABLE"
                },
                {
                  "Zil": "<REST .TBL 4>",
                  "Form": [
                    {
                      "Atom": "REST"
                    },
                    {
                      "Zil": ".TBL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TBL"
                        }
                      ]
                    },
                    4
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:150",
    "Name": "CHASM-FCN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<OR <VERB? LEAP> <AND <VERB? PUT> <==? ,PRSO ,ME>>> <TELL \"You look before leaping and realize you would never survive.\" CR>) (<VERB? CROSS> <TELL \"You'll have to find a bridge.\" CR>) (<AND <VERB? PUT> <==? ,PRSI ,PSEUDO-OBJECT>> <TELL \"The \" D ,PRSO \" drops out of sight into the chasm.\" CR> <REMOVE ,PRSO>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <VERB? LEAP> <AND <VERB? PUT> <==? ,PRSO ,ME>>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<VERB? LEAP>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "LEAP"
                    }
                  ]
                },
                {
                  "Zil": "<AND <VERB? PUT> <==? ,PRSO ,ME>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<VERB? PUT>",
                      "Form": [
                        {
                          "Atom": "VERB?"
                        },
                        {
                          "Atom": "PUT"
                        }
                      ]
                    },
                    {
                      "Zil": "<==? ,PRSO ,ME>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",ME",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "ME"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You look before leaping and realize you would never survive.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You look before leaping and realize you would never survive.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? CROSS>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CROSS"
                }
              ]
            },
            {
              "Zil": "<TELL \"You'll have to find a bridge.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You'll have to find a bridge.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? PUT> <==? ,PRSI ,PSEUDO-OBJECT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,PSEUDO-OBJECT>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",PSEUDO-OBJECT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PSEUDO-OBJECT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D ,PRSO \" drops out of sight into the chasm.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " drops out of sight into the chasm.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<REMOVE ,PRSO>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:162",
    "Name": "TUNNEL-OBJECT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? THROUGH> <GETP ,HERE ,P?IN>> <DO-WALK ,P?IN> <RTRUE>) (T <PATH-OBJECT>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? THROUGH> <GETP ,HERE ,P?IN>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? THROUGH>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "THROUGH"
                    }
                  ]
                },
                {
                  "Zil": "<GETP ,HERE ,P?IN>",
                  "Form": [
                    {
                      "Atom": "GETP"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?IN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?IN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<DO-WALK ,P?IN>",
              "Form": [
                {
                  "Atom": "DO-WALK"
                },
                {
                  "Zil": ",P?IN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?IN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<PATH-OBJECT>",
              "Form": [
                {
                  "Atom": "PATH-OBJECT"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:241",
    "Name": "CPEXIT",
    "ArgSpec": "(\"AUX\" FX NFX)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<SETG CP-MOVED <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "CP-MOVED"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (<==? ,PRSO ,P?UP> <COND (<==? ,CPHERE 1> <COND (<==? <GET ,CPTABLE 2> -2> <TELL \"With the help of the ladder, you exit the puzzle.\" CR> ,CP-ANTE) (T <TELL \"The exit is too far above your head.\" CR> <RFALSE>)>) (T <TELL \"There is no way up.\" CR> <RFALSE>)>) (<AND <==? ,CPHERE 33> <==? ,PRSO ,P?WEST> ,CP-FLAG> <FCLEAR ,CP ,TOUCHBIT> ,CP-OUT) (<==? ,PRSO ,P?DOWN> <TELL \"There's no way down here.\" CR> <RFALSE>) (<AND <==? ,CPHERE 33> <==? ,PRSO ,P?WEST>> <TELL \"The metal door bars the way.\" CR> <RFALSE>) (T <SET FX <LKP ,PRSO ,CPEXITS>> <COND (<OR <G? <SET NFX <+ .FX ,CPHERE>> 36> <L? .NFX 0> <ILLCP ,CPHERE .FX>> <TELL \"There is a wall there.\" CR> <RFALSE>) (<EQUAL? <ABS .FX> 1 6> <CPMOVE .FX>) (<AND <G? .FX 0> <EQUAL? 0 <GET ,CPTABLE <+ ,CPHERE 6>> <GET ,CPTABLE <+ ,CPHERE <- .FX 6>>>>> <CPMOVE .FX>) (<AND <L? .FX 0> <EQUAL? 0 <GET ,CPTABLE <- ,CPHERE 6>> <GET ,CPTABLE <+ <+ ,CPHERE 6> .FX>>>> <CPMOVE .FX>) (T <TELL \"There is a wall there.\" CR>)> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,PRSO ,P?UP>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",P?UP",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?UP"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,CPHERE 1> <COND (<==? <GET ,CPTABLE 2> -2> <TELL \"With the help of the ladder, you exit the puzzle.\" CR> ,CP-ANTE) (T <TELL \"The exit is too far above your head.\" CR> <RFALSE>)>) (T <TELL \"There is no way up.\" CR> <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,CPHERE 1>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",CPHERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CPHERE"
                          }
                        ]
                      },
                      1
                    ]
                  },
                  {
                    "Zil": "<COND (<==? <GET ,CPTABLE 2> -2> <TELL \"With the help of the ladder, you exit the puzzle.\" CR> ,CP-ANTE) (T <TELL \"The exit is too far above your head.\" CR> <RFALSE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<==? <GET ,CPTABLE 2> -2>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": "<GET ,CPTABLE 2>",
                              "Form": [
                                {
                                  "Atom": "GET"
                                },
                                {
                                  "Zil": ",CPTABLE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "CPTABLE"
                                    }
                                  ]
                                },
                                2
                              ]
                            },
                            -2
                          ]
                        },
                        {
                          "Zil": "<TELL \"With the help of the ladder, you exit the puzzle.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "With the help of the ladder, you exit the puzzle.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": ",CP-ANTE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CP-ANTE"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"The exit is too far above your head.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The exit is too far above your head.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RFALSE>",
                          "Form": [
                            {
                              "Atom": "RFALSE"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"There is no way up.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There is no way up.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? ,CPHERE 33> <==? ,PRSO ,P?WEST> ,CP-FLAG>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? ,CPHERE 33>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",CPHERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CPHERE"
                        }
                      ]
                    },
                    33
                  ]
                },
                {
                  "Zil": "<==? ,PRSO ,P?WEST>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?WEST",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?WEST"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",CP-FLAG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CP-FLAG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FCLEAR ,CP ,TOUCHBIT>",
              "Form": [
                {
                  "Atom": "FCLEAR"
                },
                {
                  "Zil": ",CP",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CP"
                    }
                  ]
                },
                {
                  "Zil": ",TOUCHBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TOUCHBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": ",CP-OUT",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "CP-OUT"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,PRSO ,P?DOWN>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",P?DOWN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?DOWN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"There's no way down here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There's no way down here.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? ,CPHERE 33> <==? ,PRSO ,P?WEST>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? ,CPHERE 33>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",CPHERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CPHERE"
                        }
                      ]
                    },
                    33
                  ]
                },
                {
                  "Zil": "<==? ,PRSO ,P?WEST>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?WEST",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?WEST"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The metal door bars the way.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The metal door bars the way.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SET FX <LKP ,PRSO ,CPEXITS>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "FX"
                },
                {
                  "Zil": "<LKP ,PRSO ,CPEXITS>",
                  "Form": [
                    {
                      "Atom": "LKP"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",CPEXITS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CPEXITS"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<OR <G? <SET NFX <+ .FX ,CPHERE>> 36> <L? .NFX 0> <ILLCP ,CPHERE .FX>> <TELL \"There is a wall there.\" CR> <RFALSE>) (<EQUAL? <ABS .FX> 1 6> <CPMOVE .FX>) (<AND <G? .FX 0> <EQUAL? 0 <GET ,CPTABLE <+ ,CPHERE 6>> <GET ,CPTABLE <+ ,CPHERE <- .FX 6>>>>> <CPMOVE .FX>) (<AND <L? .FX 0> <EQUAL? 0 <GET ,CPTABLE <- ,CPHERE 6>> <GET ,CPTABLE <+ <+ ,CPHERE 6> .FX>>>> <CPMOVE .FX>) (T <TELL \"There is a wall there.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR <G? <SET NFX <+ .FX ,CPHERE>> 36> <L? .NFX 0> <ILLCP ,CPHERE .FX>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<G? <SET NFX <+ .FX ,CPHERE>> 36>",
                        "Form": [
                          {
                            "Atom": "G?"
                          },
                          {
                            "Zil": "<SET NFX <+ .FX ,CPHERE>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "NFX"
                              },
                              {
                                "Zil": "<+ .FX ,CPHERE>",
                                "Form": [
                                  {
                                    "Atom": "+"
                                  },
                                  {
                                    "Zil": ".FX",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "FX"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",CPHERE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "CPHERE"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          36
                        ]
                      },
                      {
                        "Zil": "<L? .NFX 0>",
                        "Form": [
                          {
                            "Atom": "L?"
                          },
                          {
                            "Zil": ".NFX",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "NFX"
                              }
                            ]
                          },
                          0
                        ]
                      },
                      {
                        "Zil": "<ILLCP ,CPHERE .FX>",
                        "Form": [
                          {
                            "Atom": "ILLCP"
                          },
                          {
                            "Zil": ",CPHERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "CPHERE"
                              }
                            ]
                          },
                          {
                            "Zil": ".FX",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "FX"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"There is a wall there.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There is a wall there.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<EQUAL? <ABS .FX> 1 6>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": "<ABS .FX>",
                        "Form": [
                          {
                            "Atom": "ABS"
                          },
                          {
                            "Zil": ".FX",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "FX"
                              }
                            ]
                          }
                        ]
                      },
                      1,
                      6
                    ]
                  },
                  {
                    "Zil": "<CPMOVE .FX>",
                    "Form": [
                      {
                        "Atom": "CPMOVE"
                      },
                      {
                        "Zil": ".FX",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "FX"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <G? .FX 0> <EQUAL? 0 <GET ,CPTABLE <+ ,CPHERE 6>> <GET ,CPTABLE <+ ,CPHERE <- .FX 6>>>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<G? .FX 0>",
                        "Form": [
                          {
                            "Atom": "G?"
                          },
                          {
                            "Zil": ".FX",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "FX"
                              }
                            ]
                          },
                          0
                        ]
                      },
                      {
                        "Zil": "<EQUAL? 0 <GET ,CPTABLE <+ ,CPHERE 6>> <GET ,CPTABLE <+ ,CPHERE <- .FX 6>>>>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          0,
                          {
                            "Zil": "<GET ,CPTABLE <+ ,CPHERE 6>>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",CPTABLE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "CPTABLE"
                                  }
                                ]
                              },
                              {
                                "Zil": "<+ ,CPHERE 6>",
                                "Form": [
                                  {
                                    "Atom": "+"
                                  },
                                  {
                                    "Zil": ",CPHERE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "CPHERE"
                                      }
                                    ]
                                  },
                                  6
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<GET ,CPTABLE <+ ,CPHERE <- .FX 6>>>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",CPTABLE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "CPTABLE"
                                  }
                                ]
                              },
                              {
                                "Zil": "<+ ,CPHERE <- .FX 6>>",
                                "Form": [
                                  {
                                    "Atom": "+"
                                  },
                                  {
                                    "Zil": ",CPHERE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "CPHERE"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<- .FX 6>",
                                    "Form": [
                                      {
                                        "Atom": "-"
                                      },
                                      {
                                        "Zil": ".FX",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "FX"
                                          }
                                        ]
                                      },
                                      6
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<CPMOVE .FX>",
                    "Form": [
                      {
                        "Atom": "CPMOVE"
                      },
                      {
                        "Zil": ".FX",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "FX"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <L? .FX 0> <EQUAL? 0 <GET ,CPTABLE <- ,CPHERE 6>> <GET ,CPTABLE <+ <+ ,CPHERE 6> .FX>>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<L? .FX 0>",
                        "Form": [
                          {
                            "Atom": "L?"
                          },
                          {
                            "Zil": ".FX",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "FX"
                              }
                            ]
                          },
                          0
                        ]
                      },
                      {
                        "Zil": "<EQUAL? 0 <GET ,CPTABLE <- ,CPHERE 6>> <GET ,CPTABLE <+ <+ ,CPHERE 6> .FX>>>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          0,
                          {
                            "Zil": "<GET ,CPTABLE <- ,CPHERE 6>>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",CPTABLE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "CPTABLE"
                                  }
                                ]
                              },
                              {
                                "Zil": "<- ,CPHERE 6>",
                                "Form": [
                                  {
                                    "Atom": "-"
                                  },
                                  {
                                    "Zil": ",CPHERE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "CPHERE"
                                      }
                                    ]
                                  },
                                  6
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<GET ,CPTABLE <+ <+ ,CPHERE 6> .FX>>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",CPTABLE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "CPTABLE"
                                  }
                                ]
                              },
                              {
                                "Zil": "<+ <+ ,CPHERE 6> .FX>",
                                "Form": [
                                  {
                                    "Atom": "+"
                                  },
                                  {
                                    "Zil": "<+ ,CPHERE 6>",
                                    "Form": [
                                      {
                                        "Atom": "+"
                                      },
                                      {
                                        "Zil": ",CPHERE",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "CPHERE"
                                          }
                                        ]
                                      },
                                      6
                                    ]
                                  },
                                  {
                                    "Zil": ".FX",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "FX"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<CPMOVE .FX>",
                    "Form": [
                      {
                        "Atom": "CPMOVE"
                      },
                      {
                        "Zil": ".FX",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "FX"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"There is a wall there.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There is a wall there.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:297",
    "Name": "ILLCP",
    "ArgSpec": "(ONE TWO)",
    "Body": [
      {
        "Zil": "<COND (<AND <==? <MOD .ONE 6> 0> <EQUAL? .TWO ,MINUS-FIVE 1 7>> <RTRUE>) (<AND <==? <MOD .ONE 6> 1> <EQUAL? .TWO ,MINUS-SEVEN ,MINUS-ONE 5>> <RTRUE>) (<AND <L? .ONE 7> <L? .TWO ,MINUS-FOUR>> <RTRUE>) (<AND <G? .ONE 30> <G? .TWO 4>> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? <MOD .ONE 6> 0> <EQUAL? .TWO ,MINUS-FIVE 1 7>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? <MOD .ONE 6> 0>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": "<MOD .ONE 6>",
                      "Form": [
                        {
                          "Atom": "MOD"
                        },
                        {
                          "Zil": ".ONE",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "ONE"
                            }
                          ]
                        },
                        6
                      ]
                    },
                    0
                  ]
                },
                {
                  "Zil": "<EQUAL? .TWO ,MINUS-FIVE 1 7>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".TWO",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TWO"
                        }
                      ]
                    },
                    {
                      "Zil": ",MINUS-FIVE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MINUS-FIVE"
                        }
                      ]
                    },
                    1,
                    7
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? <MOD .ONE 6> 1> <EQUAL? .TWO ,MINUS-SEVEN ,MINUS-ONE 5>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? <MOD .ONE 6> 1>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": "<MOD .ONE 6>",
                      "Form": [
                        {
                          "Atom": "MOD"
                        },
                        {
                          "Zil": ".ONE",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "ONE"
                            }
                          ]
                        },
                        6
                      ]
                    },
                    1
                  ]
                },
                {
                  "Zil": "<EQUAL? .TWO ,MINUS-SEVEN ,MINUS-ONE 5>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".TWO",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TWO"
                        }
                      ]
                    },
                    {
                      "Zil": ",MINUS-SEVEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MINUS-SEVEN"
                        }
                      ]
                    },
                    {
                      "Zil": ",MINUS-ONE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MINUS-ONE"
                        }
                      ]
                    },
                    5
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <L? .ONE 7> <L? .TWO ,MINUS-FOUR>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<L? .ONE 7>",
                  "Form": [
                    {
                      "Atom": "L?"
                    },
                    {
                      "Zil": ".ONE",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "ONE"
                        }
                      ]
                    },
                    7
                  ]
                },
                {
                  "Zil": "<L? .TWO ,MINUS-FOUR>",
                  "Form": [
                    {
                      "Atom": "L?"
                    },
                    {
                      "Zil": ".TWO",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TWO"
                        }
                      ]
                    },
                    {
                      "Zil": ",MINUS-FOUR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MINUS-FOUR"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <G? .ONE 30> <G? .TWO 4>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<G? .ONE 30>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": ".ONE",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "ONE"
                        }
                      ]
                    },
                    30
                  ]
                },
                {
                  "Zil": "<G? .TWO 4>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": ".TWO",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "TWO"
                        }
                      ]
                    },
                    4
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:305",
    "Name": "CPMOVE",
    "ArgSpec": "(FX)",
    "Body": [
      {
        "Zil": "<COND (<0? <GET ,CPTABLE <SET FX <+ ,CPHERE .FX>>>> <CPGOTO .FX>) (T <TELL \"There is a wall there.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<0? <GET ,CPTABLE <SET FX <+ ,CPHERE .FX>>>>",
              "Form": [
                {
                  "Atom": "0?"
                },
                {
                  "Zil": "<GET ,CPTABLE <SET FX <+ ,CPHERE .FX>>>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",CPTABLE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CPTABLE"
                        }
                      ]
                    },
                    {
                      "Zil": "<SET FX <+ ,CPHERE .FX>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "FX"
                        },
                        {
                          "Zil": "<+ ,CPHERE .FX>",
                          "Form": [
                            {
                              "Atom": "+"
                            },
                            {
                              "Zil": ",CPHERE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "CPHERE"
                                }
                              ]
                            },
                            {
                              "Zil": ".FX",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "FX"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<CPGOTO .FX>",
              "Form": [
                {
                  "Atom": "CPGOTO"
                },
                {
                  "Zil": ".FX",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "FX"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"There is a wall there.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is a wall there.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:311",
    "Name": "CPENTER",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<OR <NOT <==? ,YEAR ,YEAR-PRESENT>> ,CPBLOCK-FLAG> <TELL \"The hole is blocked by sandstone.\" CR> <RFALSE>) (T <SETG CPHERE 1> ,CP)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <NOT <==? ,YEAR ,YEAR-PRESENT>> ,CPBLOCK-FLAG>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<NOT <==? ,YEAR ,YEAR-PRESENT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<==? ,YEAR ,YEAR-PRESENT>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ",YEAR",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "YEAR"
                            }
                          ]
                        },
                        {
                          "Zil": ",YEAR-PRESENT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "YEAR-PRESENT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",CPBLOCK-FLAG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CPBLOCK-FLAG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The hole is blocked by sandstone.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The hole is blocked by sandstone.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SETG CPHERE 1>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CPHERE"
                },
                1
              ]
            },
            {
              "Zil": ",CP",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "CP"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:319",
    "Name": "CPANT-ROOM",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"This is a small square room, in the middle of which is a round hole\"> <COND (<OR ,CPBLOCK-FLAG <NOT <==? ,YEAR ,YEAR-PRESENT>>> <TELL \" which is blocked by smooth sandstone.\" CR>) (T <TELL \" through which you can discern the floor some ten feet below.\r\nThe area under the hole is dark, but it appears to be completely enclosed\r\nin rock. In any event, it doesn't seem likely that you could climb back up.\r\nExits are west and, up a few steps, north.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"This is a small square room, in the middle of which is a round hole\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "This is a small square room, in the middle of which is a round hole"
              ]
            },
            {
              "Zil": "<COND (<OR ,CPBLOCK-FLAG <NOT <==? ,YEAR ,YEAR-PRESENT>>> <TELL \" which is blocked by smooth sandstone.\" CR>) (T <TELL \" through which you can discern the floor some ten feet below.\r\nThe area under the hole is dark, but it appears to be completely enclosed\r\nin rock. In any event, it doesn't seem likely that you could climb back up.\r\nExits are west and, up a few steps, north.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR ,CPBLOCK-FLAG <NOT <==? ,YEAR ,YEAR-PRESENT>>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": ",CPBLOCK-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CPBLOCK-FLAG"
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <==? ,YEAR ,YEAR-PRESENT>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<==? ,YEAR ,YEAR-PRESENT>",
                            "Form": [
                              {
                                "Atom": "==?"
                              },
                              {
                                "Zil": ",YEAR",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "YEAR"
                                  }
                                ]
                              },
                              {
                                "Zil": ",YEAR-PRESENT",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "YEAR-PRESENT"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" which is blocked by smooth sandstone.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " which is blocked by smooth sandstone.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \" through which you can discern the floor some ten feet below.\r\nThe area under the hole is dark, but it appears to be completely enclosed\r\nin rock. In any event, it doesn't seem likely that you could climb back up.\r\nExits are west and, up a few steps, north.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " through which you can discern the floor some ten feet below.\r\nThe area under the hole is dark, but it appears to be completely enclosed\r\nin rock. In any event, it doesn't seem likely that you could climb back up.\r\nExits are west and, up a few steps, north.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:337",
    "Name": "CPLADDER-OBJECT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<==? <GET ,CPTABLE <- ,CPHERE 1>> -3> <CPLADDER-JUNK <>>) (<==? <GET ,CPTABLE <+ ,CPHERE 1>> -2> <CPLADDER-JUNK T>) (T <TELL \"You can't see any ladder here.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? <GET ,CPTABLE <- ,CPHERE 1>> -3>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": "<GET ,CPTABLE <- ,CPHERE 1>>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",CPTABLE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CPTABLE"
                        }
                      ]
                    },
                    {
                      "Zil": "<- ,CPHERE 1>",
                      "Form": [
                        {
                          "Atom": "-"
                        },
                        {
                          "Zil": ",CPHERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CPHERE"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                },
                -3
              ]
            },
            {
              "Zil": "<CPLADDER-JUNK <>>",
              "Form": [
                {
                  "Atom": "CPLADDER-JUNK"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? <GET ,CPTABLE <+ ,CPHERE 1>> -2>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": "<GET ,CPTABLE <+ ,CPHERE 1>>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",CPTABLE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CPTABLE"
                        }
                      ]
                    },
                    {
                      "Zil": "<+ ,CPHERE 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ",CPHERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CPHERE"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                },
                -2
              ]
            },
            {
              "Zil": "<CPLADDER-JUNK T>",
              "Form": [
                {
                  "Atom": "CPLADDER-JUNK"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't see any ladder here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't see any ladder here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:344",
    "Name": "CPLADDER-JUNK",
    "ArgSpec": "(FLG)",
    "Body": [
      {
        "Zil": "<COND (<VERB? CLIMB-UP CLIMB-FOO> <COND (<AND .FLG <==? ,CPHERE 1>> <SETG CPSOLVE-FLAG T> <GOTO ,CP-ANTE>) (T <TELL \"You hit your head on the ceiling and fall off the ladder.\" CR>)>) (T <TELL \"Come, come!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? CLIMB-UP CLIMB-FOO>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CLIMB-UP"
                },
                {
                  "Atom": "CLIMB-FOO"
                }
              ]
            },
            {
              "Zil": "<COND (<AND .FLG <==? ,CPHERE 1>> <SETG CPSOLVE-FLAG T> <GOTO ,CP-ANTE>) (T <TELL \"You hit your head on the ceiling and fall off the ladder.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND .FLG <==? ,CPHERE 1>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ".FLG",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "FLG"
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,CPHERE 1>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",CPHERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "CPHERE"
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG CPSOLVE-FLAG T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "CPSOLVE-FLAG"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<GOTO ,CP-ANTE>",
                    "Form": [
                      {
                        "Atom": "GOTO"
                      },
                      {
                        "Zil": ",CP-ANTE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CP-ANTE"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You hit your head on the ceiling and fall off the ladder.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You hit your head on the ceiling and fall off the ladder.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Come, come!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Come, come!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:354",
    "Name": "CPWALL-OBJECT",
    "ArgSpec": "(\"AUX\" WL NWL NXT NNXT CNT TOP (SNAP <>))",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<COND (<VERB? MOVE> <TELL \"You can't grab the wall to pull it.\" CR>) (<VERB? PUSH> <SET NXT <CPNEXT ,CPHERE ,PRSO>> <COND (<0? .NXT> <TELL \"The wall doesn't budge.\" CR> <RTRUE>)> <SET WL <GET ,CPTABLE .NXT>> <COND (<0? .WL> <TELL \"There is only a passage in that direction.\" CR>) (<1? .WL> <TELL \"The wall doesn't budge.\" CR>) (<0? <SET NNXT <CPNEXT .NXT ,PRSO>>> <TELL \"The wall barely gives.\" CR>) (<NOT <0? <SET NWL <GET ,CPTABLE .NNXT>>>> <TELL \"The wall barely gives.\" CR>) (T <TELL \"The wall slides forward and you follow it\"> <COND (,CPPUSH-FLAG <TELL \" to this position:\" CR>) (T <SETG SCORE <+ ,SCORE 1>> <TELL \"....|\r\nThe architecture of this region is getting complex, so that further\r\ndescriptions will be diagrams of the immediate vicinity in a 3x3\r\ngrid. The walls here are rock, but of two different types - sandstone\r\nand marble. The following notations will be used:|\r\n\"> <FIXED-FONT-ON> <TELL \"|\r\n  .. = your position (middle of grid)|\r\n  MM = marble wall|\r\n  SS = sandstone wall|\r\n  ?? = unknown (blocked by walls)|\r\n|\r\n\"> <FIXED-FONT-OFF>)> <SETG CPPUSH-FLAG T> <PUT ,CPTABLE .NXT 0> <PUT ,CPTABLE .NNXT .WL> <COND (<NOT <EQUAL? .NNXT 0>> <SET TOP <* 8 <- .NNXT 1>>> <SET CNT <GET ,CPOBJS .TOP>> <REPEAT () <COND (<0? .CNT> <RETURN>) (T <SET TOP <+ .TOP 1>> <MOVE <GET ,CPOBJS .TOP> ,CP-OUT> <COND (<NOT .SNAP> <SET SNAP T> <TELL \"You hear a soft \\\"snap\\\" from behind the wall you were pushing.\" CR>)> <SET CNT <- .CNT 1>>)>>)> <COND (<==? .NNXT 1> <SETG CPBLOCK-FLAG T>)> <CPGOTO .NXT>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? MOVE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "MOVE"
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't grab the wall to pull it.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't grab the wall to pull it.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? PUSH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "PUSH"
                }
              ]
            },
            {
              "Zil": "<SET NXT <CPNEXT ,CPHERE ,PRSO>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "NXT"
                },
                {
                  "Zil": "<CPNEXT ,CPHERE ,PRSO>",
                  "Form": [
                    {
                      "Atom": "CPNEXT"
                    },
                    {
                      "Zil": ",CPHERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CPHERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<0? .NXT> <TELL \"The wall doesn't budge.\" CR> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<0? .NXT>",
                    "Form": [
                      {
                        "Atom": "0?"
                      },
                      {
                        "Zil": ".NXT",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NXT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The wall doesn't budge.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The wall doesn't budge.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SET WL <GET ,CPTABLE .NXT>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "WL"
                },
                {
                  "Zil": "<GET ,CPTABLE .NXT>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",CPTABLE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CPTABLE"
                        }
                      ]
                    },
                    {
                      "Zil": ".NXT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "NXT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<0? .WL> <TELL \"There is only a passage in that direction.\" CR>) (<1? .WL> <TELL \"The wall doesn't budge.\" CR>) (<0? <SET NNXT <CPNEXT .NXT ,PRSO>>> <TELL \"The wall barely gives.\" CR>) (<NOT <0? <SET NWL <GET ,CPTABLE .NNXT>>>> <TELL \"The wall barely gives.\" CR>) (T <TELL \"The wall slides forward and you follow it\"> <COND (,CPPUSH-FLAG <TELL \" to this position:\" CR>) (T <SETG SCORE <+ ,SCORE 1>> <TELL \"....|\r\nThe architecture of this region is getting complex, so that further\r\ndescriptions will be diagrams of the immediate vicinity in a 3x3\r\ngrid. The walls here are rock, but of two different types - sandstone\r\nand marble. The following notations will be used:|\r\n\"> <FIXED-FONT-ON> <TELL \"|\r\n  .. = your position (middle of grid)|\r\n  MM = marble wall|\r\n  SS = sandstone wall|\r\n  ?? = unknown (blocked by walls)|\r\n|\r\n\"> <FIXED-FONT-OFF>)> <SETG CPPUSH-FLAG T> <PUT ,CPTABLE .NXT 0> <PUT ,CPTABLE .NNXT .WL> <COND (<NOT <EQUAL? .NNXT 0>> <SET TOP <* 8 <- .NNXT 1>>> <SET CNT <GET ,CPOBJS .TOP>> <REPEAT () <COND (<0? .CNT> <RETURN>) (T <SET TOP <+ .TOP 1>> <MOVE <GET ,CPOBJS .TOP> ,CP-OUT> <COND (<NOT .SNAP> <SET SNAP T> <TELL \"You hear a soft \\\"snap\\\" from behind the wall you were pushing.\" CR>)> <SET CNT <- .CNT 1>>)>>)> <COND (<==? .NNXT 1> <SETG CPBLOCK-FLAG T>)> <CPGOTO .NXT>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<0? .WL>",
                    "Form": [
                      {
                        "Atom": "0?"
                      },
                      {
                        "Zil": ".WL",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "WL"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"There is only a passage in that direction.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There is only a passage in that direction.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<1? .WL>",
                    "Form": [
                      {
                        "Atom": "1?"
                      },
                      {
                        "Zil": ".WL",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "WL"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The wall doesn't budge.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The wall doesn't budge.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<0? <SET NNXT <CPNEXT .NXT ,PRSO>>>",
                    "Form": [
                      {
                        "Atom": "0?"
                      },
                      {
                        "Zil": "<SET NNXT <CPNEXT .NXT ,PRSO>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "NNXT"
                          },
                          {
                            "Zil": "<CPNEXT .NXT ,PRSO>",
                            "Form": [
                              {
                                "Atom": "CPNEXT"
                              },
                              {
                                "Zil": ".NXT",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "NXT"
                                  }
                                ]
                              },
                              {
                                "Zil": ",PRSO",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "PRSO"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The wall barely gives.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The wall barely gives.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<NOT <0? <SET NWL <GET ,CPTABLE .NNXT>>>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<0? <SET NWL <GET ,CPTABLE .NNXT>>>",
                        "Form": [
                          {
                            "Atom": "0?"
                          },
                          {
                            "Zil": "<SET NWL <GET ,CPTABLE .NNXT>>",
                            "Form": [
                              {
                                "Atom": "SET"
                              },
                              {
                                "Atom": "NWL"
                              },
                              {
                                "Zil": "<GET ,CPTABLE .NNXT>",
                                "Form": [
                                  {
                                    "Atom": "GET"
                                  },
                                  {
                                    "Zil": ",CPTABLE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "CPTABLE"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ".NNXT",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "NNXT"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The wall barely gives.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The wall barely gives.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The wall slides forward and you follow it\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The wall slides forward and you follow it"
                    ]
                  },
                  {
                    "Zil": "<COND (,CPPUSH-FLAG <TELL \" to this position:\" CR>) (T <SETG SCORE <+ ,SCORE 1>> <TELL \"....|\r\nThe architecture of this region is getting complex, so that further\r\ndescriptions will be diagrams of the immediate vicinity in a 3x3\r\ngrid. The walls here are rock, but of two different types - sandstone\r\nand marble. The following notations will be used:|\r\n\"> <FIXED-FONT-ON> <TELL \"|\r\n  .. = your position (middle of grid)|\r\n  MM = marble wall|\r\n  SS = sandstone wall|\r\n  ?? = unknown (blocked by walls)|\r\n|\r\n\"> <FIXED-FONT-OFF>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ",CPPUSH-FLAG",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CPPUSH-FLAG"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \" to this position:\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            " to this position:",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<SETG SCORE <+ ,SCORE 1>>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "SCORE"
                            },
                            {
                              "Zil": "<+ ,SCORE 1>",
                              "Form": [
                                {
                                  "Atom": "+"
                                },
                                {
                                  "Zil": ",SCORE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "SCORE"
                                    }
                                  ]
                                },
                                1
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"....|\r\nThe architecture of this region is getting complex, so that further\r\ndescriptions will be diagrams of the immediate vicinity in a 3x3\r\ngrid. The walls here are rock, but of two different types - sandstone\r\nand marble. The following notations will be used:|\r\n\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "....|\r\nThe architecture of this region is getting complex, so that further\r\ndescriptions will be diagrams of the immediate vicinity in a 3x3\r\ngrid. The walls here are rock, but of two different types - sandstone\r\nand marble. The following notations will be used:|\r\n"
                          ]
                        },
                        {
                          "Zil": "<FIXED-FONT-ON>",
                          "Form": [
                            {
                              "Atom": "FIXED-FONT-ON"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"|\r\n  .. = your position (middle of grid)|\r\n  MM = marble wall|\r\n  SS = sandstone wall|\r\n  ?? = unknown (blocked by walls)|\r\n|\r\n\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "|\r\n  .. = your position (middle of grid)|\r\n  MM = marble wall|\r\n  SS = sandstone wall|\r\n  ?? = unknown (blocked by walls)|\r\n|\r\n"
                          ]
                        },
                        {
                          "Zil": "<FIXED-FONT-OFF>",
                          "Form": [
                            {
                              "Atom": "FIXED-FONT-OFF"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<SETG CPPUSH-FLAG T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "CPPUSH-FLAG"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<PUT ,CPTABLE .NXT 0>",
                    "Form": [
                      {
                        "Atom": "PUT"
                      },
                      {
                        "Zil": ",CPTABLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CPTABLE"
                          }
                        ]
                      },
                      {
                        "Zil": ".NXT",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NXT"
                          }
                        ]
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<PUT ,CPTABLE .NNXT .WL>",
                    "Form": [
                      {
                        "Atom": "PUT"
                      },
                      {
                        "Zil": ",CPTABLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CPTABLE"
                          }
                        ]
                      },
                      {
                        "Zil": ".NNXT",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NNXT"
                          }
                        ]
                      },
                      {
                        "Zil": ".WL",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "WL"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<NOT <EQUAL? .NNXT 0>> <SET TOP <* 8 <- .NNXT 1>>> <SET CNT <GET ,CPOBJS .TOP>> <REPEAT () <COND (<0? .CNT> <RETURN>) (T <SET TOP <+ .TOP 1>> <MOVE <GET ,CPOBJS .TOP> ,CP-OUT> <COND (<NOT .SNAP> <SET SNAP T> <TELL \"You hear a soft \\\"snap\\\" from behind the wall you were pushing.\" CR>)> <SET CNT <- .CNT 1>>)>>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<NOT <EQUAL? .NNXT 0>>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": "<EQUAL? .NNXT 0>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".NNXT",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "NNXT"
                                    }
                                  ]
                                },
                                0
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SET TOP <* 8 <- .NNXT 1>>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "TOP"
                            },
                            {
                              "Zil": "<* 8 <- .NNXT 1>>",
                              "Form": [
                                {
                                  "Atom": "*"
                                },
                                8,
                                {
                                  "Zil": "<- .NNXT 1>",
                                  "Form": [
                                    {
                                      "Atom": "-"
                                    },
                                    {
                                      "Zil": ".NNXT",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "NNXT"
                                        }
                                      ]
                                    },
                                    1
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SET CNT <GET ,CPOBJS .TOP>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "CNT"
                            },
                            {
                              "Zil": "<GET ,CPOBJS .TOP>",
                              "Form": [
                                {
                                  "Atom": "GET"
                                },
                                {
                                  "Zil": ",CPOBJS",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "CPOBJS"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ".TOP",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "TOP"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<REPEAT () <COND (<0? .CNT> <RETURN>) (T <SET TOP <+ .TOP 1>> <MOVE <GET ,CPOBJS .TOP> ,CP-OUT> <COND (<NOT .SNAP> <SET SNAP T> <TELL \"You hear a soft \\\"snap\\\" from behind the wall you were pushing.\" CR>)> <SET CNT <- .CNT 1>>)>>",
                          "Form": [
                            {
                              "Atom": "REPEAT"
                            },
                            [],
                            {
                              "Zil": "<COND (<0? .CNT> <RETURN>) (T <SET TOP <+ .TOP 1>> <MOVE <GET ,CPOBJS .TOP> ,CP-OUT> <COND (<NOT .SNAP> <SET SNAP T> <TELL \"You hear a soft \\\"snap\\\" from behind the wall you were pushing.\" CR>)> <SET CNT <- .CNT 1>>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<0? .CNT>",
                                    "Form": [
                                      {
                                        "Atom": "0?"
                                      },
                                      {
                                        "Zil": ".CNT",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "CNT"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RETURN>",
                                    "Form": [
                                      {
                                        "Atom": "RETURN"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  {
                                    "Zil": "<SET TOP <+ .TOP 1>>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "TOP"
                                      },
                                      {
                                        "Zil": "<+ .TOP 1>",
                                        "Form": [
                                          {
                                            "Atom": "+"
                                          },
                                          {
                                            "Zil": ".TOP",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "TOP"
                                              }
                                            ]
                                          },
                                          1
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<MOVE <GET ,CPOBJS .TOP> ,CP-OUT>",
                                    "Form": [
                                      {
                                        "Atom": "MOVE"
                                      },
                                      {
                                        "Zil": "<GET ,CPOBJS .TOP>",
                                        "Form": [
                                          {
                                            "Atom": "GET"
                                          },
                                          {
                                            "Zil": ",CPOBJS",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "CPOBJS"
                                              }
                                            ]
                                          },
                                          {
                                            "Zil": ".TOP",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "TOP"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",CP-OUT",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "CP-OUT"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<COND (<NOT .SNAP> <SET SNAP T> <TELL \"You hear a soft \\\"snap\\\" from behind the wall you were pushing.\" CR>)>",
                                    "Form": [
                                      {
                                        "Atom": "COND"
                                      },
                                      [
                                        {
                                          "Zil": "<NOT .SNAP>",
                                          "Form": [
                                            {
                                              "Atom": "NOT"
                                            },
                                            {
                                              "Zil": ".SNAP",
                                              "Form": [
                                                {
                                                  "Atom": "LVAL"
                                                },
                                                {
                                                  "Atom": "SNAP"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<SET SNAP T>",
                                          "Form": [
                                            {
                                              "Atom": "SET"
                                            },
                                            {
                                              "Atom": "SNAP"
                                            },
                                            {
                                              "Atom": "T"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": "<TELL \"You hear a soft \\\"snap\\\" from behind the wall you were pushing.\" CR>",
                                          "Form": [
                                            {
                                              "Atom": "TELL"
                                            },
                                            "You hear a soft \"snap\" from behind the wall you were pushing.",
                                            {
                                              "Atom": "CR"
                                            }
                                          ]
                                        }
                                      ]
                                    ]
                                  },
                                  {
                                    "Zil": "<SET CNT <- .CNT 1>>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "CNT"
                                      },
                                      {
                                        "Zil": "<- .CNT 1>",
                                        "Form": [
                                          {
                                            "Atom": "-"
                                          },
                                          {
                                            "Zil": ".CNT",
                                            "Form": [
                                              {
                                                "Atom": "LVAL"
                                              },
                                              {
                                                "Atom": "CNT"
                                              }
                                            ]
                                          },
                                          1
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<COND (<==? .NNXT 1> <SETG CPBLOCK-FLAG T>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<==? .NNXT 1>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": ".NNXT",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "NNXT"
                                }
                              ]
                            },
                            1
                          ]
                        },
                        {
                          "Zil": "<SETG CPBLOCK-FLAG T>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "CPBLOCK-FLAG"
                            },
                            {
                              "Atom": "T"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<CPGOTO .NXT>",
                    "Form": [
                      {
                        "Atom": "CPGOTO"
                      },
                      {
                        "Zil": ".NXT",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NXT"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:414",
    "Name": "FIXED-FONT-ON",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<PUT 0 8 <BOR <GET 0 8> 2>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          0,
          8,
          {
            "Zil": "<BOR <GET 0 8> 2>",
            "Form": [
              {
                "Atom": "BOR"
              },
              {
                "Zil": "<GET 0 8>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  0,
                  8
                ]
              },
              2
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:416",
    "Name": "FIXED-FONT-OFF",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<PUT 0 8 <BAND <GET 0 8> -3>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          0,
          8,
          {
            "Zil": "<BAND <GET 0 8> -3>",
            "Form": [
              {
                "Atom": "BAND"
              },
              {
                "Zil": "<GET 0 8>",
                "Form": [
                  {
                    "Atom": "GET"
                  },
                  0,
                  8
                ]
              },
              -3
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:424",
    "Name": "CPGOTO",
    "ArgSpec": "(FX \"AUX\" F X CNT TOP)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<SETG CP-MOVED T>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "CP-MOVED"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<FCLEAR ,HERE ,TOUCHBIT>",
        "Form": [
          {
            "Atom": "FCLEAR"
          },
          {
            "Zil": ",HERE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "HERE"
              }
            ]
          },
          {
            "Zil": ",TOUCHBIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "TOUCHBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET TOP <* 8 <- ,CPHERE 1>>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "TOP"
          },
          {
            "Zil": "<* 8 <- ,CPHERE 1>>",
            "Form": [
              {
                "Atom": "*"
              },
              8,
              {
                "Zil": "<- ,CPHERE 1>",
                "Form": [
                  {
                    "Atom": "-"
                  },
                  {
                    "Zil": ",CPHERE",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CPHERE"
                      }
                    ]
                  },
                  1
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET CNT <+ .TOP 1>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "CNT"
          },
          {
            "Zil": "<+ .TOP 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ".TOP",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "TOP"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<SET F <FIRST? ,CP>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "F"
          },
          {
            "Zil": "<FIRST? ,CP>",
            "Form": [
              {
                "Atom": "FIRST?"
              },
              {
                "Zil": ",CP",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "CP"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <SET X <NEXT? .F>> <COND (<NOT .F> <RETURN>) (<==? .F ,ADVENTURER> T) (T <PUT ,CPOBJS .CNT .F> <REMOVE .F> <SET CNT <+ .CNT 1>>)> <COND (<NOT .X> <RETURN>) (T <SET F .X>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<SET X <NEXT? .F>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "X"
              },
              {
                "Zil": "<NEXT? .F>",
                "Form": [
                  {
                    "Atom": "NEXT?"
                  },
                  {
                    "Zil": ".F",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "F"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<COND (<NOT .F> <RETURN>) (<==? .F ,ADVENTURER> T) (T <PUT ,CPOBJS .CNT .F> <REMOVE .F> <SET CNT <+ .CNT 1>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<NOT .F>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".F",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<==? .F ,ADVENTURER>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".F",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "F"
                        }
                      ]
                    },
                    {
                      "Zil": ",ADVENTURER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ADVENTURER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "T"
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<PUT ,CPOBJS .CNT .F>",
                  "Form": [
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Zil": ",CPOBJS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CPOBJS"
                        }
                      ]
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    },
                    {
                      "Zil": ".F",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<REMOVE .F>",
                  "Form": [
                    {
                      "Atom": "REMOVE"
                    },
                    {
                      "Zil": ".F",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET CNT <+ .CNT 1>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "CNT"
                    },
                    {
                      "Zil": "<+ .CNT 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ".CNT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "CNT"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<COND (<NOT .X> <RETURN>) (T <SET F .X>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<NOT .X>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".X",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "X"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<SET F .X>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "F"
                    },
                    {
                      "Zil": ".X",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "X"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Zil": "<PUT ,CPOBJS .TOP <- <- .CNT .TOP> 1>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",CPOBJS",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CPOBJS"
              }
            ]
          },
          {
            "Zil": ".TOP",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "TOP"
              }
            ]
          },
          {
            "Zil": "<- <- .CNT .TOP> 1>",
            "Form": [
              {
                "Atom": "-"
              },
              {
                "Zil": "<- .CNT .TOP>",
                "Form": [
                  {
                    "Atom": "-"
                  },
                  {
                    "Zil": ".CNT",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "CNT"
                      }
                    ]
                  },
                  {
                    "Zil": ".TOP",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "TOP"
                      }
                    ]
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<SETG CPHERE .FX>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "CPHERE"
          },
          {
            "Zil": ".FX",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "FX"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET TOP <* 8 <- ,CPHERE 1>>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "TOP"
          },
          {
            "Zil": "<* 8 <- ,CPHERE 1>>",
            "Form": [
              {
                "Atom": "*"
              },
              8,
              {
                "Zil": "<- ,CPHERE 1>",
                "Form": [
                  {
                    "Atom": "-"
                  },
                  {
                    "Zil": ",CPHERE",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CPHERE"
                      }
                    ]
                  },
                  1
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET CNT <GET ,CPOBJS .TOP>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "CNT"
          },
          {
            "Zil": "<GET ,CPOBJS .TOP>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ",CPOBJS",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "CPOBJS"
                  }
                ]
              },
              {
                "Zil": ".TOP",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "TOP"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<0? .CNT> <RETURN>) (T <SET TOP <+ .TOP 1>> <MOVE <GET ,CPOBJS .TOP> ,CP> <SET CNT <- .CNT 1>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<0? .CNT> <RETURN>) (T <SET TOP <+ .TOP 1>> <MOVE <GET ,CPOBJS .TOP> ,CP> <SET CNT <- .CNT 1>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<0? .CNT>",
                  "Form": [
                    {
                      "Atom": "0?"
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<SET TOP <+ .TOP 1>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "TOP"
                    },
                    {
                      "Zil": "<+ .TOP 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ".TOP",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TOP"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<MOVE <GET ,CPOBJS .TOP> ,CP>",
                  "Form": [
                    {
                      "Atom": "MOVE"
                    },
                    {
                      "Zil": "<GET ,CPOBJS .TOP>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",CPOBJS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CPOBJS"
                            }
                          ]
                        },
                        {
                          "Zil": ".TOP",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TOP"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",CP",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CP"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET CNT <- .CNT 1>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "CNT"
                    },
                    {
                      "Zil": "<- .CNT 1>",
                      "Form": [
                        {
                          "Atom": "-"
                        },
                        {
                          "Zil": ".CNT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "CNT"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Zil": "<PERFORM ,V?LOOK>",
        "Form": [
          {
            "Atom": "PERFORM"
          },
          {
            "Zil": ",V?LOOK",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "V?LOOK"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:454",
    "Name": "CPNEXT",
    "ArgSpec": "(RM OBJ \"AUX\" FX)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<SET FX <LKP .OBJ ,CPWALLS>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "FX"
          },
          {
            "Zil": "<LKP .OBJ ,CPWALLS>",
            "Form": [
              {
                "Atom": "LKP"
              },
              {
                "Zil": ".OBJ",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "OBJ"
                  }
                ]
              },
              {
                "Zil": ",CPWALLS",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "CPWALLS"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<ILLCP .RM .FX> 0) (T <+ .RM .FX>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<ILLCP .RM .FX>",
              "Form": [
                {
                  "Atom": "ILLCP"
                },
                {
                  "Zil": ".RM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RM"
                    }
                  ]
                },
                {
                  "Zil": ".FX",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "FX"
                    }
                  ]
                }
              ]
            },
            0
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<+ .RM .FX>",
              "Form": [
                {
                  "Atom": "+"
                },
                {
                  "Zil": ".RM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RM"
                    }
                  ]
                },
                {
                  "Zil": ".FX",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "FX"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:460",
    "Name": "CPDOOR-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <==? ,HERE ,CP> <NOT <==? ,CPHERE 33>>> <TELL \"You can't see any steel door here.\" CR>) (<VERB? OPEN> <COND (,CP-FLAG <TELL \"The steel door has already opened.\" CR>) (T <TELL \"You can't force it open.\" CR>)>) (<VERB? CLOSE> <COND (,CP-FLAG <TELL \"There doesn't seem to be any way to close it.\" CR>) (T <TELL \"Do you think it isn't already?\" CR>)>) (<VERB? MUNG> <TELL \"The door is, to a first approximation, indestructible.\" CR>) (<VERB? KNOCK> <TELL \"Besides a great amount of reverberation, nothing happens.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? ,HERE ,CP> <NOT <==? ,CPHERE 33>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? ,HERE ,CP>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",CP",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CP"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <==? ,CPHERE 33>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<==? ,CPHERE 33>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ",CPHERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CPHERE"
                            }
                          ]
                        },
                        33
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't see any steel door here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't see any steel door here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? OPEN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                }
              ]
            },
            {
              "Zil": "<COND (,CP-FLAG <TELL \"The steel door has already opened.\" CR>) (T <TELL \"You can't force it open.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",CP-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CP-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The steel door has already opened.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The steel door has already opened.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You can't force it open.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can't force it open.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? CLOSE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CLOSE"
                }
              ]
            },
            {
              "Zil": "<COND (,CP-FLAG <TELL \"There doesn't seem to be any way to close it.\" CR>) (T <TELL \"Do you think it isn't already?\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",CP-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CP-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"There doesn't seem to be any way to close it.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There doesn't seem to be any way to close it.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"Do you think it isn't already?\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Do you think it isn't already?",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? MUNG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "MUNG"
                }
              ]
            },
            {
              "Zil": "<TELL \"The door is, to a first approximation, indestructible.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The door is, to a first approximation, indestructible.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? KNOCK>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "KNOCK"
                }
              ]
            },
            {
              "Zil": "<TELL \"Besides a great amount of reverberation, nothing happens.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Besides a great amount of reverberation, nothing happens.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:477",
    "Name": "CP-ROOM",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-ENTER> <SETG CPHERE <COND (<==? ,PRSO ,P?DOWN> 1) (T 33)>>) (<==? .RARG ,M-LOOK> <COND (,CPPUSH-FLAG <CPWHERE>) (T <TELL \"You are in a small square room bounded to the north and west with\r\nmarble walls and to the east and south with sandstone walls.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-ENTER>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-ENTER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-ENTER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG CPHERE <COND (<==? ,PRSO ,P?DOWN> 1) (T 33)>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CPHERE"
                },
                {
                  "Zil": "<COND (<==? ,PRSO ,P?DOWN> 1) (T 33)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<==? ,PRSO ,P?DOWN>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",P?DOWN",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P?DOWN"
                              }
                            ]
                          }
                        ]
                      },
                      1
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      33
                    ]
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (,CPPUSH-FLAG <CPWHERE>) (T <TELL \"You are in a small square room bounded to the north and west with\r\nmarble walls and to the east and south with sandstone walls.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",CPPUSH-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CPPUSH-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<CPWHERE>",
                    "Form": [
                      {
                        "Atom": "CPWHERE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You are in a small square room bounded to the north and west with\r\nmarble walls and to the east and south with sandstone walls.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You are in a small square room bounded to the north and west with\r\nmarble walls and to the east and south with sandstone walls.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:489",
    "Name": "CPNS",
    "ArgSpec": "(NUM)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<COND (<OR <G? .NUM 36> <L? .NUM 1>> 1) (T <GET ,CPTABLE .NUM>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <G? .NUM 36> <L? .NUM 1>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<G? .NUM 36>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": ".NUM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "NUM"
                        }
                      ]
                    },
                    36
                  ]
                },
                {
                  "Zil": "<L? .NUM 1>",
                  "Form": [
                    {
                      "Atom": "L?"
                    },
                    {
                      "Zil": ".NUM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "NUM"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            },
            1
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<GET ,CPTABLE .NUM>",
              "Form": [
                {
                  "Atom": "GET"
                },
                {
                  "Zil": ",CPTABLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CPTABLE"
                    }
                  ]
                },
                {
                  "Zil": ".NUM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "NUM"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:494",
    "Name": "CPEW",
    "ArgSpec": "(NUM FOO)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<COND (<==? <MOD .NUM 6> .FOO> 1) (T <GET ,CPTABLE .NUM>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? <MOD .NUM 6> .FOO>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": "<MOD .NUM 6>",
                  "Form": [
                    {
                      "Atom": "MOD"
                    },
                    {
                      "Zil": ".NUM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "NUM"
                        }
                      ]
                    },
                    6
                  ]
                },
                {
                  "Zil": ".FOO",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "FOO"
                    }
                  ]
                }
              ]
            },
            1
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<GET ,CPTABLE .NUM>",
              "Form": [
                {
                  "Atom": "GET"
                },
                {
                  "Zil": ",CPTABLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CPTABLE"
                    }
                  ]
                },
                {
                  "Zil": ".NUM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "NUM"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:499",
    "Name": "CPWHERE",
    "ArgSpec": "(\"AUX\" (N <CPNS <+ ,CPHERE -6>>) (S <CPNS <+ ,CPHERE 6>>) (E <CPEW <+ ,CPHERE 1> 1>) (W <CPEW <+ ,CPHERE -1> 0>))",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<FIXED-FONT-ON>",
        "Form": [
          {
            "Atom": "FIXED-FONT-ON"
          }
        ]
      },
      {
        "Zil": "<TELL \"      +\">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "      +"
        ]
      },
      {
        "Zil": "<CP-CORNER ,MINUS-SEVEN .N .W>",
        "Form": [
          {
            "Atom": "CP-CORNER"
          },
          {
            "Zil": ",MINUS-SEVEN",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "MINUS-SEVEN"
              }
            ]
          },
          {
            "Zil": ".N",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "N"
              }
            ]
          },
          {
            "Zil": ".W",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "W"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \" \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          " "
        ]
      },
      {
        "Zil": "<CP-ORTHO .N>",
        "Form": [
          {
            "Atom": "CP-ORTHO"
          },
          {
            "Zil": ".N",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "N"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \" \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          " "
        ]
      },
      {
        "Zil": "<CP-CORNER ,MINUS-FIVE .N .E>",
        "Form": [
          {
            "Atom": "CP-CORNER"
          },
          {
            "Zil": ",MINUS-FIVE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "MINUS-FIVE"
              }
            ]
          },
          {
            "Zil": ".N",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "N"
              }
            ]
          },
          {
            "Zil": ".E",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "E"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \"+\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "+",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<TELL \"West  +\">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "West  +"
        ]
      },
      {
        "Zil": "<CP-ORTHO .W>",
        "Form": [
          {
            "Atom": "CP-ORTHO"
          },
          {
            "Zil": ".W",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "W"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \" .. \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          " .. "
        ]
      },
      {
        "Zil": "<CP-ORTHO .E>",
        "Form": [
          {
            "Atom": "CP-ORTHO"
          },
          {
            "Zil": ".E",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "E"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \"+  East\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "+  East",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<TELL \"      +\">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "      +"
        ]
      },
      {
        "Zil": "<CP-CORNER 5 .S .W>",
        "Form": [
          {
            "Atom": "CP-CORNER"
          },
          5,
          {
            "Zil": ".S",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "S"
              }
            ]
          },
          {
            "Zil": ".W",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "W"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \" \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          " "
        ]
      },
      {
        "Zil": "<CP-ORTHO .S>",
        "Form": [
          {
            "Atom": "CP-ORTHO"
          },
          {
            "Zil": ".S",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "S"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \" \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          " "
        ]
      },
      {
        "Zil": "<CP-CORNER 7 .S .E>",
        "Form": [
          {
            "Atom": "CP-CORNER"
          },
          7,
          {
            "Zil": ".S",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "S"
              }
            ]
          },
          {
            "Zil": ".E",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "E"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \"+\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "+",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<FIXED-FONT-OFF>",
        "Form": [
          {
            "Atom": "FIXED-FONT-OFF"
          }
        ]
      },
      {
        "Zil": "<COND (<==? ,CPHERE 1> <TELL \"In the ceiling above you is a large circular opening.\" CR>) (<==? ,CPHERE 22> <TELL \"The center of the floor here is noticeably depressed.\" CR>) (<==? ,CPHERE 33> <TELL \"In the center of the west wall is a steel door which is \"> <COND (,CP-FLAG <TELL \"open\">) (T <TELL \"closed\">)> <TELL \".\r\nOn one side of the door is a narrow slot.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,CPHERE 1>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",CPHERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CPHERE"
                    }
                  ]
                },
                1
              ]
            },
            {
              "Zil": "<TELL \"In the ceiling above you is a large circular opening.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "In the ceiling above you is a large circular opening.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,CPHERE 22>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",CPHERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CPHERE"
                    }
                  ]
                },
                22
              ]
            },
            {
              "Zil": "<TELL \"The center of the floor here is noticeably depressed.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The center of the floor here is noticeably depressed.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,CPHERE 33>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",CPHERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CPHERE"
                    }
                  ]
                },
                33
              ]
            },
            {
              "Zil": "<TELL \"In the center of the west wall is a steel door which is \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "In the center of the west wall is a steel door which is "
              ]
            },
            {
              "Zil": "<COND (,CP-FLAG <TELL \"open\">) (T <TELL \"closed\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",CP-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CP-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"open\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "open"
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"closed\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "closed"
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \".\r\nOn one side of the door is a narrow slot.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                ".\r\nOn one side of the door is a narrow slot.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<==? .E -2> <TELL \"There is a ladder here, firmly attached to the east wall.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .E -2>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".E",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "E"
                    }
                  ]
                },
                -2
              ]
            },
            {
              "Zil": "<TELL \"There is a ladder here, firmly attached to the east wall.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is a ladder here, firmly attached to the east wall.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<==? .W -3> <TELL \"There is a ladder here, firmly attached to the west wall.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .W -3>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".W",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "W"
                    }
                  ]
                },
                -3
              ]
            },
            {
              "Zil": "<TELL \"There is a ladder here, firmly attached to the west wall.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is a ladder here, firmly attached to the west wall.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:548",
    "Name": "CP-ORTHO",
    "ArgSpec": "(CONTENTS)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<COND (<0? .CONTENTS> <TELL \"  \">) (<1? .CONTENTS> <TELL \"MM\">) (T <TELL \"SS\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<0? .CONTENTS>",
              "Form": [
                {
                  "Atom": "0?"
                },
                {
                  "Zil": ".CONTENTS",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "CONTENTS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"  \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "  "
              ]
            }
          ],
          [
            {
              "Zil": "<1? .CONTENTS>",
              "Form": [
                {
                  "Atom": "1?"
                },
                {
                  "Zil": ".CONTENTS",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "CONTENTS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"MM\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "MM"
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"SS\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "SS"
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:556",
    "Name": "CP-CORNER",
    "ArgSpec": "(DIR COL ROW \"AUX\" LOCN)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<SET LOCN <+ ,CPHERE .DIR>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "LOCN"
          },
          {
            "Zil": "<+ ,CPHERE .DIR>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ",CPHERE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "CPHERE"
                  }
                ]
              },
              {
                "Zil": ".DIR",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "DIR"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND <NOT <==? .COL 0>> <NOT <==? .ROW 0>>> <TELL \"??\">) (<ILLCP ,CPHERE .DIR> <TELL \"MM\">) (<0? <SET COL <COND (<OR <L? .LOCN 1> <G? .LOCN 36>> 1) (T <GET ,CPTABLE .LOCN>)>>> <TELL \"  \">) (<1? .COL> <TELL \"MM\">) (T <TELL \"SS\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <NOT <==? .COL 0>> <NOT <==? .ROW 0>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT <==? .COL 0>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<==? .COL 0>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ".COL",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "COL"
                            }
                          ]
                        },
                        0
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <==? .ROW 0>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<==? .ROW 0>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ".ROW",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "ROW"
                            }
                          ]
                        },
                        0
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"??\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "??"
              ]
            }
          ],
          [
            {
              "Zil": "<ILLCP ,CPHERE .DIR>",
              "Form": [
                {
                  "Atom": "ILLCP"
                },
                {
                  "Zil": ",CPHERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CPHERE"
                    }
                  ]
                },
                {
                  "Zil": ".DIR",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DIR"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"MM\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "MM"
              ]
            }
          ],
          [
            {
              "Zil": "<0? <SET COL <COND (<OR <L? .LOCN 1> <G? .LOCN 36>> 1) (T <GET ,CPTABLE .LOCN>)>>>",
              "Form": [
                {
                  "Atom": "0?"
                },
                {
                  "Zil": "<SET COL <COND (<OR <L? .LOCN 1> <G? .LOCN 36>> 1) (T <GET ,CPTABLE .LOCN>)>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "COL"
                    },
                    {
                      "Zil": "<COND (<OR <L? .LOCN 1> <G? .LOCN 36>> 1) (T <GET ,CPTABLE .LOCN>)>",
                      "Form": [
                        {
                          "Atom": "COND"
                        },
                        [
                          {
                            "Zil": "<OR <L? .LOCN 1> <G? .LOCN 36>>",
                            "Form": [
                              {
                                "Atom": "OR"
                              },
                              {
                                "Zil": "<L? .LOCN 1>",
                                "Form": [
                                  {
                                    "Atom": "L?"
                                  },
                                  {
                                    "Zil": ".LOCN",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "LOCN"
                                      }
                                    ]
                                  },
                                  1
                                ]
                              },
                              {
                                "Zil": "<G? .LOCN 36>",
                                "Form": [
                                  {
                                    "Atom": "G?"
                                  },
                                  {
                                    "Zil": ".LOCN",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "LOCN"
                                      }
                                    ]
                                  },
                                  36
                                ]
                              }
                            ]
                          },
                          1
                        ],
                        [
                          {
                            "Atom": "T"
                          },
                          {
                            "Zil": "<GET ,CPTABLE .LOCN>",
                            "Form": [
                              {
                                "Atom": "GET"
                              },
                              {
                                "Zil": ",CPTABLE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "CPTABLE"
                                  }
                                ]
                              },
                              {
                                "Zil": ".LOCN",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "LOCN"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"  \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "  "
              ]
            }
          ],
          [
            {
              "Zil": "<1? .COL>",
              "Form": [
                {
                  "Atom": "1?"
                },
                {
                  "Zil": ".COL",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "COL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"MM\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "MM"
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"SS\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "SS"
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:568",
    "Name": "CP-SLOT-FCN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? PUT> <COND (<G? <GETP ,PRSO ,P?SIZE> 10> <TELL \"It doesn't fit.\" CR> <RTRUE>)> <REMOVE ,PRSO> <COND (<==? ,PRSO ,LORE-BOOK> <SETG CP-FLAG T> <TELL \"The book drops into the slot and vanishes. The metal door slides\r\nopen, revealing a passageway to the west, and a sign flashes:|\r\n    \\\"Royal Puzzle Exit Fee Paid|\r\n          Item Confiscated\\\"\" CR>) (<FSET? ,PRSO ,ACTORBIT> <TELL <PICK-ONE ,YUKS> CR>) (T <TELL \"The item vanishes into the slot. A moment later, a previously\r\nunseen sign flashes \\\"Garbage In, Garbage Out\\\" and spews out\r\nthe \" D ,PRSO \" (now atomized).\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? PUT>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "PUT"
                }
              ]
            },
            {
              "Zil": "<COND (<G? <GETP ,PRSO ,P?SIZE> 10> <TELL \"It doesn't fit.\" CR> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<G? <GETP ,PRSO ,P?SIZE> 10>",
                    "Form": [
                      {
                        "Atom": "G?"
                      },
                      {
                        "Zil": "<GETP ,PRSO ,P?SIZE>",
                        "Form": [
                          {
                            "Atom": "GETP"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",P?SIZE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P?SIZE"
                              }
                            ]
                          }
                        ]
                      },
                      10
                    ]
                  },
                  {
                    "Zil": "<TELL \"It doesn't fit.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It doesn't fit.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<REMOVE ,PRSO>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,PRSO ,LORE-BOOK> <SETG CP-FLAG T> <TELL \"The book drops into the slot and vanishes. The metal door slides\r\nopen, revealing a passageway to the west, and a sign flashes:|\r\n    \\\"Royal Puzzle Exit Fee Paid|\r\n          Item Confiscated\\\"\" CR>) (<FSET? ,PRSO ,ACTORBIT> <TELL <PICK-ONE ,YUKS> CR>) (T <TELL \"The item vanishes into the slot. A moment later, a previously\r\nunseen sign flashes \\\"Garbage In, Garbage Out\\\" and spews out\r\nthe \" D ,PRSO \" (now atomized).\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,PRSO ,LORE-BOOK>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",LORE-BOOK",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "LORE-BOOK"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG CP-FLAG T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "CP-FLAG"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The book drops into the slot and vanishes. The metal door slides\r\nopen, revealing a passageway to the west, and a sign flashes:|\r\n    \\\"Royal Puzzle Exit Fee Paid|\r\n          Item Confiscated\\\"\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The book drops into the slot and vanishes. The metal door slides\r\nopen, revealing a passageway to the west, and a sign flashes:|\r\n    \"Royal Puzzle Exit Fee Paid|\r\n          Item Confiscated\"",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<FSET? ,PRSO ,ACTORBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",ACTORBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ACTORBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL <PICK-ONE ,YUKS> CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<PICK-ONE ,YUKS>",
                        "Form": [
                          {
                            "Atom": "PICK-ONE"
                          },
                          {
                            "Zil": ",YUKS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "YUKS"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The item vanishes into the slot. A moment later, a previously\r\nunseen sign flashes \\\"Garbage In, Garbage Out\\\" and spews out\r\nthe \" D ,PRSO \" (now atomized).\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The item vanishes into the slot. A moment later, a previously\r\nunseen sign flashes \"Garbage In, Garbage Out\" and spews out\r\nthe ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " (now atomized).",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:589",
    "Name": "CPOUT-ROOM",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"You are in a narrow room, lit from above. A flight of steps leads up\r\nto the north, and a \"> <COND (,CP-FLAG <TELL \"passage\">) (T <TELL \"metal door\">)> <TELL \" leads to the east.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are in a narrow room, lit from above. A flight of steps leads up\r\nto the north, and a \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are in a narrow room, lit from above. A flight of steps leads up\r\nto the north, and a "
              ]
            },
            {
              "Zil": "<COND (,CP-FLAG <TELL \"passage\">) (T <TELL \"metal door\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",CP-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CP-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"passage\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "passage"
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"metal door\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "metal door"
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \" leads to the east.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " leads to the east.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:617",
    "Name": "MRGO",
    "ArgSpec": "(\"AUX\" TORM)",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,PRSO ,P?NORTH ,P?NW ,P?NE> <SET TORM <LKP ,HERE ,R-NORTHS>>) (T <SET TORM <LKP ,HERE ,R-SOUTHS>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSO ,P?NORTH ,P?NW ,P?NE>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",P?NORTH",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?NORTH"
                    }
                  ]
                },
                {
                  "Zil": ",P?NW",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?NW"
                    }
                  ]
                },
                {
                  "Zil": ",P?NE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?NE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET TORM <LKP ,HERE ,R-NORTHS>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TORM"
                },
                {
                  "Zil": "<LKP ,HERE ,R-NORTHS>",
                  "Form": [
                    {
                      "Atom": "LKP"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",R-NORTHS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "R-NORTHS"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SET TORM <LKP ,HERE ,R-SOUTHS>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TORM"
                },
                {
                  "Zil": "<LKP ,HERE ,R-SOUTHS>",
                  "Form": [
                    {
                      "Atom": "LKP"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",R-SOUTHS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "R-SOUTHS"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<EQUAL? ,PRSO ,P?NORTH ,P?SOUTH> <COND (<==? ,MLOC .TORM> <COND (<0? <MOD ,MDIR 180>> <TELL \"There is a wooden wall blocking your way.\" CR> <RFALSE>) (<MIRIN <>> ,IN-MIRROR) (T <MIRBLOCK> <RFALSE>)>) (T .TORM)>) (<==? ,MLOC .TORM> <COND (<0? <MOD ,MDIR 180>> <GO-E-W .TORM>) (T <MIRBLOCK> <RFALSE>)>) (T .TORM)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSO ,P?NORTH ,P?SOUTH>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",P?NORTH",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?NORTH"
                    }
                  ]
                },
                {
                  "Zil": ",P?SOUTH",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?SOUTH"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,MLOC .TORM> <COND (<0? <MOD ,MDIR 180>> <TELL \"There is a wooden wall blocking your way.\" CR> <RFALSE>) (<MIRIN <>> ,IN-MIRROR) (T <MIRBLOCK> <RFALSE>)>) (T .TORM)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,MLOC .TORM>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",MLOC",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MLOC"
                          }
                        ]
                      },
                      {
                        "Zil": ".TORM",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TORM"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<0? <MOD ,MDIR 180>> <TELL \"There is a wooden wall blocking your way.\" CR> <RFALSE>) (<MIRIN <>> ,IN-MIRROR) (T <MIRBLOCK> <RFALSE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<0? <MOD ,MDIR 180>>",
                          "Form": [
                            {
                              "Atom": "0?"
                            },
                            {
                              "Zil": "<MOD ,MDIR 180>",
                              "Form": [
                                {
                                  "Atom": "MOD"
                                },
                                {
                                  "Zil": ",MDIR",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "MDIR"
                                    }
                                  ]
                                },
                                180
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"There is a wooden wall blocking your way.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "There is a wooden wall blocking your way.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RFALSE>",
                          "Form": [
                            {
                              "Atom": "RFALSE"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<MIRIN <>>",
                          "Form": [
                            {
                              "Atom": "MIRIN"
                            },
                            {
                              "Zil": "<>",
                              "Form": []
                            }
                          ]
                        },
                        {
                          "Zil": ",IN-MIRROR",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "IN-MIRROR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<MIRBLOCK>",
                          "Form": [
                            {
                              "Atom": "MIRBLOCK"
                            }
                          ]
                        },
                        {
                          "Zil": "<RFALSE>",
                          "Form": [
                            {
                              "Atom": "RFALSE"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": ".TORM",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "TORM"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,MLOC .TORM>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",MLOC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MLOC"
                    }
                  ]
                },
                {
                  "Zil": ".TORM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "TORM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<0? <MOD ,MDIR 180>> <GO-E-W .TORM>) (T <MIRBLOCK> <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<0? <MOD ,MDIR 180>>",
                    "Form": [
                      {
                        "Atom": "0?"
                      },
                      {
                        "Zil": "<MOD ,MDIR 180>",
                        "Form": [
                          {
                            "Atom": "MOD"
                          },
                          {
                            "Zil": ",MDIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MDIR"
                              }
                            ]
                          },
                          180
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<GO-E-W .TORM>",
                    "Form": [
                      {
                        "Atom": "GO-E-W"
                      },
                      {
                        "Zil": ".TORM",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "TORM"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<MIRBLOCK>",
                    "Form": [
                      {
                        "Atom": "MIRBLOCK"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": ".TORM",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "TORM"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:635",
    "Name": "MIRBLOCK",
    "ArgSpec": "(\"AUX\" MD)",
    "Body": [
      {
        "Zil": "<SET MD ,MDIR>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "MD"
          },
          {
            "Zil": ",MDIR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "MDIR"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<==? ,PRSO ,P?SOUTH> <SET MD <MOD <+ ,MDIR 180> 360>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,PRSO ,P?SOUTH>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",P?SOUTH",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?SOUTH"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET MD <MOD <+ ,MDIR 180> 360>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "MD"
                },
                {
                  "Zil": "<MOD <+ ,MDIR 180> 360>",
                  "Form": [
                    {
                      "Atom": "MOD"
                    },
                    {
                      "Zil": "<+ ,MDIR 180>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ",MDIR",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MDIR"
                            }
                          ]
                        },
                        180
                      ]
                    },
                    360
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<OR <AND <==? .MD 270> <NOT ,MR1-FLAG>> <AND <==? .MD 90> <NOT ,MR2-FLAG>>> <TELL \"There is a large broken mirror blocking your way.\" CR>) (T <TELL \"There is a large mirror blocking your way.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <AND <==? .MD 270> <NOT ,MR1-FLAG>> <AND <==? .MD 90> <NOT ,MR2-FLAG>>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<AND <==? .MD 270> <NOT ,MR1-FLAG>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<==? .MD 270>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ".MD",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "MD"
                            }
                          ]
                        },
                        270
                      ]
                    },
                    {
                      "Zil": "<NOT ,MR1-FLAG>",
                      "Form": [
                        {
                          "Atom": "NOT"
                        },
                        {
                          "Zil": ",MR1-FLAG",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MR1-FLAG"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<AND <==? .MD 90> <NOT ,MR2-FLAG>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<==? .MD 90>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ".MD",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "MD"
                            }
                          ]
                        },
                        90
                      ]
                    },
                    {
                      "Zil": "<NOT ,MR2-FLAG>",
                      "Form": [
                        {
                          "Atom": "NOT"
                        },
                        {
                          "Zil": ",MR2-FLAG",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MR2-FLAG"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"There is a large broken mirror blocking your way.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is a large broken mirror blocking your way.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"There is a large mirror blocking your way.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is a large mirror blocking your way.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:645",
    "Name": "GO-E-W",
    "ArgSpec": "(RM)",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,PRSO ,P?NE ,P?SE> <LKP .RM ,R-EASTS>) (T <LKP .RM ,R-WESTS>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,PRSO ,P?NE ,P?SE>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",P?NE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?NE"
                    }
                  ]
                },
                {
                  "Zil": ",P?SE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?SE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<LKP .RM ,R-EASTS>",
              "Form": [
                {
                  "Atom": "LKP"
                },
                {
                  "Zil": ".RM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RM"
                    }
                  ]
                },
                {
                  "Zil": ",R-EASTS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "R-EASTS"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<LKP .RM ,R-WESTS>",
              "Form": [
                {
                  "Atom": "LKP"
                },
                {
                  "Zil": ".RM",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RM"
                    }
                  ]
                },
                {
                  "Zil": ",R-WESTS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "R-WESTS"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:657",
    "Name": "EWTELL",
    "ArgSpec": "(RM \"AUX\" (EAST? <>) (M1? <>) MWIN)",
    "Body": [
      {
        "Zil": "<COND (<OR <EQUAL? .RM ,MRAE ,MRBE ,MRCE> <EQUAL? .RM ,MRGE ,MRCE>> <SET EAST? T>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <EQUAL? .RM ,MRAE ,MRBE ,MRCE> <EQUAL? .RM ,MRGE ,MRCE>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<EQUAL? .RM ,MRAE ,MRBE ,MRCE>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".RM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RM"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRAE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRAE"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRBE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRBE"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRCE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRCE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? .RM ,MRGE ,MRCE>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ".RM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RM"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRGE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRGE"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRCE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRCE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET EAST? T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "EAST?"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<==? <+ ,MDIR <COND (.EAST? 0) (T 180)>> 180> <SET M1? T>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? <+ ,MDIR <COND (.EAST? 0) (T 180)>> 180>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": "<+ ,MDIR <COND (.EAST? 0) (T 180)>>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ",MDIR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MDIR"
                        }
                      ]
                    },
                    {
                      "Zil": "<COND (.EAST? 0) (T 180)>",
                      "Form": [
                        {
                          "Atom": "COND"
                        },
                        [
                          {
                            "Zil": ".EAST?",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "EAST?"
                              }
                            ]
                          },
                          0
                        ],
                        [
                          {
                            "Atom": "T"
                          },
                          180
                        ]
                      ]
                    }
                  ]
                },
                180
              ]
            },
            {
              "Zil": "<SET M1? T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "M1?"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (.M1? <SET MWIN ,MR1-FLAG>) (T <SET MWIN ,MR2-FLAG>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ".M1?",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "M1?"
                }
              ]
            },
            {
              "Zil": "<SET MWIN ,MR1-FLAG>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "MWIN"
                },
                {
                  "Zil": ",MR1-FLAG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MR1-FLAG"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SET MWIN ,MR2-FLAG>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "MWIN"
                },
                {
                  "Zil": ",MR2-FLAG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MR2-FLAG"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<TELL \"You are in a narrow room, whose \" <COND (.EAST? \"west\") (T \"east\")> \" wall is a large \" <COND (.MWIN \"mirror.\") (T \"wooden panel\r\nwhich once contained a mirror.\")> CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You are in a narrow room, whose ",
          {
            "Zil": "<COND (.EAST? \"west\") (T \"east\")>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": ".EAST?",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "EAST?"
                    }
                  ]
                },
                "west"
              ],
              [
                {
                  "Atom": "T"
                },
                "east"
              ]
            ]
          },
          " wall is a large ",
          {
            "Zil": "<COND (.MWIN \"mirror.\") (T \"wooden panel\r\nwhich once contained a mirror.\")>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": ".MWIN",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "MWIN"
                    }
                  ]
                },
                "mirror."
              ],
              [
                {
                  "Atom": "T"
                },
                "wooden panel\r\nwhich once contained a mirror."
              ]
            ]
          },
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<COND (<AND .M1? ,MIRROR-OPEN-FLAG> <TELL <COND (.MWIN \"The mirror is mounted on a panel which has been opened outward.\") (T \"The panel has been opened outward.\")> CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND .M1? ,MIRROR-OPEN-FLAG>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ".M1?",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "M1?"
                    }
                  ]
                },
                {
                  "Zil": ",MIRROR-OPEN-FLAG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MIRROR-OPEN-FLAG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL <COND (.MWIN \"The mirror is mounted on a panel which has been opened outward.\") (T \"The panel has been opened outward.\")> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<COND (.MWIN \"The mirror is mounted on a panel which has been opened outward.\") (T \"The panel has been opened outward.\")>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": ".MWIN",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "MWIN"
                          }
                        ]
                      },
                      "The mirror is mounted on a panel which has been opened outward."
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      "The panel has been opened outward."
                    ]
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<TELL \"The opposite wall is solid rock.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "The opposite wall is solid rock.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:680",
    "Name": "MRDEW",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <EWTELL ,HERE> <SETG GUARDIANS-SEEN T> <TELL \"Somewhat to the south\" ,GUARDSTR CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<EWTELL ,HERE>",
              "Form": [
                {
                  "Atom": "EWTELL"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG GUARDIANS-SEEN T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "GUARDIANS-SEEN"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<TELL \"Somewhat to the south\" ,GUARDSTR CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Somewhat to the south",
                {
                  "Zil": ",GUARDSTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDSTR"
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:686",
    "Name": "MRCEW",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <EWTELL ,HERE> <SETG GUARDIANS-SEEN T> <TELL \"Somewhat to the north\" ,GUARDSTR CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<EWTELL ,HERE>",
              "Form": [
                {
                  "Atom": "EWTELL"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG GUARDIANS-SEEN T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "GUARDIANS-SEEN"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<TELL \"Somewhat to the north\" ,GUARDSTR CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Somewhat to the north",
                {
                  "Zil": ",GUARDSTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDSTR"
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:692",
    "Name": "MRBEW",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <EWTELL ,HERE> <TELL \"To the north and south are large hallways.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<EWTELL ,HERE>",
              "Form": [
                {
                  "Atom": "EWTELL"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"To the north and south are large hallways.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "To the north and south are large hallways.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:697",
    "Name": "MRAEW",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <EWTELL ,HERE> <TELL \"To the north is a large hallway.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<EWTELL ,HERE>",
              "Form": [
                {
                  "Atom": "EWTELL"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"To the north is a large hallway.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "To the north is a large hallway.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:708",
    "Name": "LOOK-TO",
    "ArgSpec": "(RMN RMS \"AUX\" (NORTH? <>) (NTELL <>) (STELL <>) MIR? (M1? <>) DIR)",
    "Body": [
      {
        "Zil": "<COND (<NOT <EQUAL? ,HERE ,MREYE ,FRONT-DOOR>> <TELL \"This is a part of the long hallway. The east and west walls are\r\ndressed stone. In the center of the hall is a shallow stone channel.\r\nIn the center of the room the channel widens into a large hole around\r\nwhich is engraved a compass rose.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <EQUAL? ,HERE ,MREYE ,FRONT-DOOR>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<EQUAL? ,HERE ,MREYE ,FRONT-DOOR>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",MREYE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MREYE"
                        }
                      ]
                    },
                    {
                      "Zil": ",FRONT-DOOR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "FRONT-DOOR"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"This is a part of the long hallway. The east and west walls are\r\ndressed stone. In the center of the hall is a shallow stone channel.\r\nIn the center of the room the channel widens into a large hole around\r\nwhich is engraved a compass rose.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "This is a part of the long hallway. The east and west walls are\r\ndressed stone. In the center of the hall is a shallow stone channel.\r\nIn the center of the room the channel widens into a large hole around\r\nwhich is engraved a compass rose.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<==? ,HERE ,MRG> <SETG GUARDIANS-SEEN T> <TELL \"On either side of you are identical stone statues holding bludgeons. They\r\nappear ready to strike, though, for the moment, they remain impassive.\" CR>) (<==? ,HERE ,MRC> <SETG GUARDIANS-SEEN T> <TELL \"Somewhat to the north\" ,GUARDSTR CR> <SET NTELL T>) (<==? ,HERE ,FRONT-DOOR> <TELL \"You are in a north-south hallway which ends, to the north, at a large wooden\r\ndoor.\" CR> <SET NTELL T>) (<==? ,HERE ,MRD> <SETG GUARDIANS-SEEN T> <TELL \"Somewhat to the south\" ,GUARDSTR CR> <SET STELL T>) (<==? ,HERE ,MRA> <TELL \"The hallway continues to the south.\" CR> <SET STELL T>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,HERE ,MRG>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",MRG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG GUARDIANS-SEEN T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "GUARDIANS-SEEN"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<TELL \"On either side of you are identical stone statues holding bludgeons. They\r\nappear ready to strike, though, for the moment, they remain impassive.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "On either side of you are identical stone statues holding bludgeons. They\r\nappear ready to strike, though, for the moment, they remain impassive.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,HERE ,MRC>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",MRC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRC"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG GUARDIANS-SEEN T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "GUARDIANS-SEEN"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<TELL \"Somewhat to the north\" ,GUARDSTR CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Somewhat to the north",
                {
                  "Zil": ",GUARDSTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDSTR"
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SET NTELL T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "NTELL"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,HERE ,FRONT-DOOR>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",FRONT-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "FRONT-DOOR"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are in a north-south hallway which ends, to the north, at a large wooden\r\ndoor.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are in a north-south hallway which ends, to the north, at a large wooden\r\ndoor.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SET NTELL T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "NTELL"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,HERE ,MRD>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",MRD",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRD"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG GUARDIANS-SEEN T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "GUARDIANS-SEEN"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<TELL \"Somewhat to the south\" ,GUARDSTR CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Somewhat to the south",
                {
                  "Zil": ",GUARDSTR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDSTR"
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SET STELL T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "STELL"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,HERE ,MRA>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",MRA",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRA"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The hallway continues to the south.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The hallway continues to the south.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SET STELL T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "STELL"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<EQUAL? ,MLOC .RMN .RMS> <COND (<==? ,MLOC .RMN> <SET NORTH? T> <SET NTELL T> <SET DIR \"nor\">) (T <SET STELL T> <SET DIR \"sou\">)> <SET MIR? <COND (<AND .NORTH? <G? ,MDIR 180> <L? ,MDIR 359>> <SET M1? T> ,MR1-FLAG) (<AND <NOT .NORTH?> <G? ,MDIR 0> <L? ,MDIR 179>> <SET M1? T> ,MR1-FLAG) (T ,MR2-FLAG)>> <COND (<0? <MOD ,MDIR 180>> <TELL \"The \" .DIR \"th side of the room is divided by a wooden wall into small\r\nhallways to the \"> <TELL .DIR \"theast and \"> <TELL .DIR \"thwest.\" CR>) (T <TELL <COND (.MIR? \"A large mirror fills the \") (T \"A large panel fills the \")> .DIR \"th side of the hallway.\" CR> <COND (<AND .M1? ,MIRROR-OPEN-FLAG> <TELL <COND (.MIR? \"The mirror is mounted on a panel which has been opened outward.\") (T \"The panel has been opened outward.\")> CR>)>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,MLOC .RMN .RMS>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",MLOC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MLOC"
                    }
                  ]
                },
                {
                  "Zil": ".RMN",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RMN"
                    }
                  ]
                },
                {
                  "Zil": ".RMS",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RMS"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,MLOC .RMN> <SET NORTH? T> <SET NTELL T> <SET DIR \"nor\">) (T <SET STELL T> <SET DIR \"sou\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,MLOC .RMN>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",MLOC",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MLOC"
                          }
                        ]
                      },
                      {
                        "Zil": ".RMN",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "RMN"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET NORTH? T>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "NORTH?"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<SET NTELL T>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "NTELL"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<SET DIR \"nor\">",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "DIR"
                      },
                      "nor"
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SET STELL T>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "STELL"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<SET DIR \"sou\">",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "DIR"
                      },
                      "sou"
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SET MIR? <COND (<AND .NORTH? <G? ,MDIR 180> <L? ,MDIR 359>> <SET M1? T> ,MR1-FLAG) (<AND <NOT .NORTH?> <G? ,MDIR 0> <L? ,MDIR 179>> <SET M1? T> ,MR1-FLAG) (T ,MR2-FLAG)>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "MIR?"
                },
                {
                  "Zil": "<COND (<AND .NORTH? <G? ,MDIR 180> <L? ,MDIR 359>> <SET M1? T> ,MR1-FLAG) (<AND <NOT .NORTH?> <G? ,MDIR 0> <L? ,MDIR 179>> <SET M1? T> ,MR1-FLAG) (T ,MR2-FLAG)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<AND .NORTH? <G? ,MDIR 180> <L? ,MDIR 359>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": ".NORTH?",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "NORTH?"
                              }
                            ]
                          },
                          {
                            "Zil": "<G? ,MDIR 180>",
                            "Form": [
                              {
                                "Atom": "G?"
                              },
                              {
                                "Zil": ",MDIR",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "MDIR"
                                  }
                                ]
                              },
                              180
                            ]
                          },
                          {
                            "Zil": "<L? ,MDIR 359>",
                            "Form": [
                              {
                                "Atom": "L?"
                              },
                              {
                                "Zil": ",MDIR",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "MDIR"
                                  }
                                ]
                              },
                              359
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET M1? T>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "M1?"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      },
                      {
                        "Zil": ",MR1-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MR1-FLAG"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<AND <NOT .NORTH?> <G? ,MDIR 0> <L? ,MDIR 179>>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<NOT .NORTH?>",
                            "Form": [
                              {
                                "Atom": "NOT"
                              },
                              {
                                "Zil": ".NORTH?",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "NORTH?"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<G? ,MDIR 0>",
                            "Form": [
                              {
                                "Atom": "G?"
                              },
                              {
                                "Zil": ",MDIR",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "MDIR"
                                  }
                                ]
                              },
                              0
                            ]
                          },
                          {
                            "Zil": "<L? ,MDIR 179>",
                            "Form": [
                              {
                                "Atom": "L?"
                              },
                              {
                                "Zil": ",MDIR",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "MDIR"
                                  }
                                ]
                              },
                              179
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET M1? T>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "M1?"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      },
                      {
                        "Zil": ",MR1-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MR1-FLAG"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": ",MR2-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MR2-FLAG"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<0? <MOD ,MDIR 180>> <TELL \"The \" .DIR \"th side of the room is divided by a wooden wall into small\r\nhallways to the \"> <TELL .DIR \"theast and \"> <TELL .DIR \"thwest.\" CR>) (T <TELL <COND (.MIR? \"A large mirror fills the \") (T \"A large panel fills the \")> .DIR \"th side of the hallway.\" CR> <COND (<AND .M1? ,MIRROR-OPEN-FLAG> <TELL <COND (.MIR? \"The mirror is mounted on a panel which has been opened outward.\") (T \"The panel has been opened outward.\")> CR>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<0? <MOD ,MDIR 180>>",
                    "Form": [
                      {
                        "Atom": "0?"
                      },
                      {
                        "Zil": "<MOD ,MDIR 180>",
                        "Form": [
                          {
                            "Atom": "MOD"
                          },
                          {
                            "Zil": ",MDIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MDIR"
                              }
                            ]
                          },
                          180
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" .DIR \"th side of the room is divided by a wooden wall into small\r\nhallways to the \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Zil": ".DIR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "DIR"
                          }
                        ]
                      },
                      "th side of the room is divided by a wooden wall into small\r\nhallways to the "
                    ]
                  },
                  {
                    "Zil": "<TELL .DIR \"theast and \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": ".DIR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "DIR"
                          }
                        ]
                      },
                      "theast and "
                    ]
                  },
                  {
                    "Zil": "<TELL .DIR \"thwest.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": ".DIR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "DIR"
                          }
                        ]
                      },
                      "thwest.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL <COND (.MIR? \"A large mirror fills the \") (T \"A large panel fills the \")> .DIR \"th side of the hallway.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<COND (.MIR? \"A large mirror fills the \") (T \"A large panel fills the \")>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": ".MIR?",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "MIR?"
                                }
                              ]
                            },
                            "A large mirror fills the "
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            "A large panel fills the "
                          ]
                        ]
                      },
                      {
                        "Zil": ".DIR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "DIR"
                          }
                        ]
                      },
                      "th side of the hallway.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<AND .M1? ,MIRROR-OPEN-FLAG> <TELL <COND (.MIR? \"The mirror is mounted on a panel which has been opened outward.\") (T \"The panel has been opened outward.\")> CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<AND .M1? ,MIRROR-OPEN-FLAG>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": ".M1?",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "M1?"
                                }
                              ]
                            },
                            {
                              "Zil": ",MIRROR-OPEN-FLAG",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MIRROR-OPEN-FLAG"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL <COND (.MIR? \"The mirror is mounted on a panel which has been opened outward.\") (T \"The panel has been opened outward.\")> CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            {
                              "Zil": "<COND (.MIR? \"The mirror is mounted on a panel which has been opened outward.\") (T \"The panel has been opened outward.\")>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": ".MIR?",
                                    "Form": [
                                      {
                                        "Atom": "LVAL"
                                      },
                                      {
                                        "Atom": "MIR?"
                                      }
                                    ]
                                  },
                                  "The mirror is mounted on a panel which has been opened outward."
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  "The panel has been opened outward."
                                ]
                              ]
                            },
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<AND <NOT .NTELL> <NOT .STELL>> <TELL \"The corridor continues north and south.\" CR>) (<NOT .NTELL> <TELL \"The corridor continues north.\" CR>) (<NOT .STELL> <TELL \"The corridor continues south.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <NOT .NTELL> <NOT .STELL>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<NOT .NTELL>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".NTELL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "NTELL"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT .STELL>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".STELL",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "STELL"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The corridor continues north and south.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The corridor continues north and south.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT .NTELL>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ".NTELL",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "NTELL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The corridor continues north.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The corridor continues north.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT .STELL>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ".STELL",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "STELL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The corridor continues south.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The corridor continues south.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:778",
    "Name": "MRDF",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <LOOK-TO ,FRONT-DOOR ,MRG>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<LOOK-TO ,FRONT-DOOR ,MRG>",
              "Form": [
                {
                  "Atom": "LOOK-TO"
                },
                {
                  "Zil": ",FRONT-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "FRONT-DOOR"
                    }
                  ]
                },
                {
                  "Zil": ",MRG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRG"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:782",
    "Name": "MRCF",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <LOOK-TO ,MRG ,MRB>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<LOOK-TO ,MRG ,MRB>",
              "Form": [
                {
                  "Atom": "LOOK-TO"
                },
                {
                  "Zil": ",MRG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRG"
                    }
                  ]
                },
                {
                  "Zil": ",MRB",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRB"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:786",
    "Name": "MRBF",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <LOOK-TO ,MRC ,MRA>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<LOOK-TO ,MRC ,MRA>",
              "Form": [
                {
                  "Atom": "LOOK-TO"
                },
                {
                  "Zil": ",MRC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRC"
                    }
                  ]
                },
                {
                  "Zil": ",MRA",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRA"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:790",
    "Name": "MRAF",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <LOOK-TO ,MRB <>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<LOOK-TO ,MRB <>>",
              "Form": [
                {
                  "Atom": "LOOK-TO"
                },
                {
                  "Zil": ",MRB",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRB"
                    }
                  ]
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:794",
    "Name": "GUARDIANS",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <COND (<==? ,HERE ,MRG> <LOOK-TO ,MRD ,MRC>) (T <EWTELL ,HERE> <TELL \"To the east and west are the Guardians of Zork, in perfect symmetry.\r\nFrom here, it's hard to tell which of the two is a reflection!\" CR>)>) (<AND <==? .RARG ,M-ENTER> <NOT ,INVIS>> <JIGS-UP \"The Guardians awake, and in perfect unison, pulverize you with\r\ntheir bludgeons. Satisfied, they resume their posts.\">) (<NOT <==? .RARG ,M-END>> <RFALSE>) (<VERB? EXAMINE> <COND (<==? ,HERE ,IN-MIRROR> <TELL \"You can't see them from here.\" CR>) (T <TELL \"The Guardians are quite impressive. I wouldn't get in their way if\r\nI were you!\" CR>)>) (<AND <VERB? THROW> <==? ,PRSI ,GUARDIAN>> <COND (<EQUAL? ,PRSO ,ME> <TELL \"You step\">) (T <TELL \"The \" D ,PRSO \" falls\"> <REMOVE ,PRSO>)> <TELL \" in front of the Guardians, who \"> <COND (<EQUAL? ,PRSO ,ME> <TELL \"decimate you\">) (T <TELL \"destroy it\">)> <TELL \" in perfect\r\nunison. Satisfied, they resume their posts.\" CR>) (<VERB? ATTACK> <TELL \"You aren't close enough, and even if you were, the fight\r\nwould be a bit one-sided.\" CR>) (<VERB? HELLO> <TELL \"The statues are impassive.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,HERE ,MRG> <LOOK-TO ,MRD ,MRC>) (T <EWTELL ,HERE> <TELL \"To the east and west are the Guardians of Zork, in perfect symmetry.\r\nFrom here, it's hard to tell which of the two is a reflection!\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,HERE ,MRG>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",MRG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MRG"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<LOOK-TO ,MRD ,MRC>",
                    "Form": [
                      {
                        "Atom": "LOOK-TO"
                      },
                      {
                        "Zil": ",MRD",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MRD"
                          }
                        ]
                      },
                      {
                        "Zil": ",MRC",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MRC"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<EWTELL ,HERE>",
                    "Form": [
                      {
                        "Atom": "EWTELL"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"To the east and west are the Guardians of Zork, in perfect symmetry.\r\nFrom here, it's hard to tell which of the two is a reflection!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "To the east and west are the Guardians of Zork, in perfect symmetry.\r\nFrom here, it's hard to tell which of the two is a reflection!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? .RARG ,M-ENTER> <NOT ,INVIS>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-ENTER>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-ENTER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-ENTER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,INVIS>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",INVIS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "INVIS"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<JIGS-UP \"The Guardians awake, and in perfect unison, pulverize you with\r\ntheir bludgeons. Satisfied, they resume their posts.\">",
              "Form": [
                {
                  "Atom": "JIGS-UP"
                },
                "The Guardians awake, and in perfect unison, pulverize you with\r\ntheir bludgeons. Satisfied, they resume their posts."
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <==? .RARG ,M-END>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<==? .RARG ,M-END>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-END",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-END"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,HERE ,IN-MIRROR> <TELL \"You can't see them from here.\" CR>) (T <TELL \"The Guardians are quite impressive. I wouldn't get in their way if\r\nI were you!\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,HERE ,IN-MIRROR>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",IN-MIRROR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "IN-MIRROR"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You can't see them from here.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can't see them from here.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The Guardians are quite impressive. I wouldn't get in their way if\r\nI were you!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The Guardians are quite impressive. I wouldn't get in their way if\r\nI were you!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? THROW> <==? ,PRSI ,GUARDIAN>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? THROW>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "THROW"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,GUARDIAN>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",GUARDIAN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "GUARDIAN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? ,PRSO ,ME> <TELL \"You step\">) (T <TELL \"The \" D ,PRSO \" falls\"> <REMOVE ,PRSO>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? ,PRSO ,ME>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",ME",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ME"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You step\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You step"
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" falls\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " falls"
                    ]
                  },
                  {
                    "Zil": "<REMOVE ,PRSO>",
                    "Form": [
                      {
                        "Atom": "REMOVE"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \" in front of the Guardians, who \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " in front of the Guardians, who "
              ]
            },
            {
              "Zil": "<COND (<EQUAL? ,PRSO ,ME> <TELL \"decimate you\">) (T <TELL \"destroy it\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? ,PRSO ,ME>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",ME",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ME"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"decimate you\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "decimate you"
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"destroy it\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "destroy it"
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \" in perfect\r\nunison. Satisfied, they resume their posts.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " in perfect\r\nunison. Satisfied, they resume their posts.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? ATTACK>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "ATTACK"
                }
              ]
            },
            {
              "Zil": "<TELL \"You aren't close enough, and even if you were, the fight\r\nwould be a bit one-sided.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You aren't close enough, and even if you were, the fight\r\nwould be a bit one-sided.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? HELLO>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "HELLO"
                }
              ]
            },
            {
              "Zil": "<TELL \"The statues are impassive.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The statues are impassive.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:834",
    "Name": "MIRROR-DIR?",
    "ArgSpec": "(DIR RM \"AUX\" TBL)",
    "Body": [
      {
        "Zil": "<SET TBL <COND (<==? .DIR ,P?NORTH> ,R-NORTHS) (T ,R-SOUTHS)>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "TBL"
          },
          {
            "Zil": "<COND (<==? .DIR ,P?NORTH> ,R-NORTHS) (T ,R-SOUTHS)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<==? .DIR ,P?NORTH>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".DIR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "DIR"
                        }
                      ]
                    },
                    {
                      "Zil": ",P?NORTH",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?NORTH"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",R-NORTHS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "R-NORTHS"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": ",R-SOUTHS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "R-SOUTHS"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND <GETPT .RM .DIR> <==? ,MLOC <LKP .RM .TBL>>> <COND (<AND <==? .DIR ,P?NORTH> <G? ,MDIR 180> <L? ,MDIR 360>> 1) (<AND <==? .DIR ,P?SOUTH> <G? ,MDIR 0> <L? ,MDIR 180>> 1) (T 2)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <GETPT .RM .DIR> <==? ,MLOC <LKP .RM .TBL>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<GETPT .RM .DIR>",
                  "Form": [
                    {
                      "Atom": "GETPT"
                    },
                    {
                      "Zil": ".RM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RM"
                        }
                      ]
                    },
                    {
                      "Zil": ".DIR",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "DIR"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<==? ,MLOC <LKP .RM .TBL>>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",MLOC",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MLOC"
                        }
                      ]
                    },
                    {
                      "Zil": "<LKP .RM .TBL>",
                      "Form": [
                        {
                          "Atom": "LKP"
                        },
                        {
                          "Zil": ".RM",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "RM"
                            }
                          ]
                        },
                        {
                          "Zil": ".TBL",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TBL"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND <==? .DIR ,P?NORTH> <G? ,MDIR 180> <L? ,MDIR 360>> 1) (<AND <==? .DIR ,P?SOUTH> <G? ,MDIR 0> <L? ,MDIR 180>> 1) (T 2)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <==? .DIR ,P?NORTH> <G? ,MDIR 180> <L? ,MDIR 360>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<==? .DIR ,P?NORTH>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ".DIR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "DIR"
                              }
                            ]
                          },
                          {
                            "Zil": ",P?NORTH",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P?NORTH"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<G? ,MDIR 180>",
                        "Form": [
                          {
                            "Atom": "G?"
                          },
                          {
                            "Zil": ",MDIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MDIR"
                              }
                            ]
                          },
                          180
                        ]
                      },
                      {
                        "Zil": "<L? ,MDIR 360>",
                        "Form": [
                          {
                            "Atom": "L?"
                          },
                          {
                            "Zil": ",MDIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MDIR"
                              }
                            ]
                          },
                          360
                        ]
                      }
                    ]
                  },
                  1
                ],
                [
                  {
                    "Zil": "<AND <==? .DIR ,P?SOUTH> <G? ,MDIR 0> <L? ,MDIR 180>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<==? .DIR ,P?SOUTH>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ".DIR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "DIR"
                              }
                            ]
                          },
                          {
                            "Zil": ",P?SOUTH",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P?SOUTH"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<G? ,MDIR 0>",
                        "Form": [
                          {
                            "Atom": "G?"
                          },
                          {
                            "Zil": ",MDIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MDIR"
                              }
                            ]
                          },
                          0
                        ]
                      },
                      {
                        "Zil": "<L? ,MDIR 180>",
                        "Form": [
                          {
                            "Atom": "L?"
                          },
                          {
                            "Zil": ",MDIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MDIR"
                              }
                            ]
                          },
                          180
                        ]
                      }
                    ]
                  },
                  1
                ],
                [
                  {
                    "Atom": "T"
                  },
                  2
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:848",
    "Name": "WOODEN-WALL-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <0? <MOD ,MDIR 180>> <OR <MIRROR-DIR? ,P?NORTH ,HERE> <MIRROR-DIR? ,P?SOUTH ,HERE>>> <COND (<VERB? PUSH> <TELL \"The structure won't budge.\" CR>)>) (T <TELL \"You can't see any wooden wall here.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <0? <MOD ,MDIR 180>> <OR <MIRROR-DIR? ,P?NORTH ,HERE> <MIRROR-DIR? ,P?SOUTH ,HERE>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<0? <MOD ,MDIR 180>>",
                  "Form": [
                    {
                      "Atom": "0?"
                    },
                    {
                      "Zil": "<MOD ,MDIR 180>",
                      "Form": [
                        {
                          "Atom": "MOD"
                        },
                        {
                          "Zil": ",MDIR",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MDIR"
                            }
                          ]
                        },
                        180
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<OR <MIRROR-DIR? ,P?NORTH ,HERE> <MIRROR-DIR? ,P?SOUTH ,HERE>>",
                  "Form": [
                    {
                      "Atom": "OR"
                    },
                    {
                      "Zil": "<MIRROR-DIR? ,P?NORTH ,HERE>",
                      "Form": [
                        {
                          "Atom": "MIRROR-DIR?"
                        },
                        {
                          "Zil": ",P?NORTH",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P?NORTH"
                            }
                          ]
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<MIRROR-DIR? ,P?SOUTH ,HERE>",
                      "Form": [
                        {
                          "Atom": "MIRROR-DIR?"
                        },
                        {
                          "Zil": ",P?SOUTH",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P?SOUTH"
                            }
                          ]
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<VERB? PUSH> <TELL \"The structure won't budge.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<VERB? PUSH>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "PUSH"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The structure won't budge.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The structure won't budge.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You can't see any wooden wall here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't see any wooden wall here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:856",
    "Name": "MIRROR-HERE?",
    "ArgSpec": "(RM \"AUX\" TMP)",
    "Body": [
      {
        "Zil": "<COND (<OR <EQUAL? ,HERE ,MRAE ,MRAW ,MRBE> <EQUAL? ,HERE ,MRBW ,MRCE ,MRCW> <EQUAL? ,HERE ,MRGE ,MRGW ,MRDE> <EQUAL? ,HERE ,MRDW>> <COND (<==? 180 <+ ,MDIR <COND (<OR <EQUAL? .RM ,MRAE ,MRBE ,MRCE> <EQUAL? .RM ,MRGE ,MRDE>> 0) (T 180)>>> 1) (T 2)>) (<0? <MOD ,MDIR 180>> <RFALSE>) (<SET TMP <MIRROR-DIR? ,P?NORTH .RM>> .TMP) (<SET TMP <MIRROR-DIR? ,P?SOUTH .RM>> .TMP) (T <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <EQUAL? ,HERE ,MRAE ,MRAW ,MRBE> <EQUAL? ,HERE ,MRBW ,MRCE ,MRCW> <EQUAL? ,HERE ,MRGE ,MRGW ,MRDE> <EQUAL? ,HERE ,MRDW>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<EQUAL? ,HERE ,MRAE ,MRAW ,MRBE>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRAE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRAE"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRAW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRAW"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRBE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRBE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,HERE ,MRBW ,MRCE ,MRCW>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRBW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRBW"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRCE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRCE"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRCW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRCW"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,HERE ,MRGE ,MRGW ,MRDE>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRGE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRGE"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRGW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRGW"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRDE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRDE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,HERE ,MRDW>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRDW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRDW"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? 180 <+ ,MDIR <COND (<OR <EQUAL? .RM ,MRAE ,MRBE ,MRCE> <EQUAL? .RM ,MRGE ,MRDE>> 0) (T 180)>>> 1) (T 2)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? 180 <+ ,MDIR <COND (<OR <EQUAL? .RM ,MRAE ,MRBE ,MRCE> <EQUAL? .RM ,MRGE ,MRDE>> 0) (T 180)>>>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      180,
                      {
                        "Zil": "<+ ,MDIR <COND (<OR <EQUAL? .RM ,MRAE ,MRBE ,MRCE> <EQUAL? .RM ,MRGE ,MRDE>> 0) (T 180)>>",
                        "Form": [
                          {
                            "Atom": "+"
                          },
                          {
                            "Zil": ",MDIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MDIR"
                              }
                            ]
                          },
                          {
                            "Zil": "<COND (<OR <EQUAL? .RM ,MRAE ,MRBE ,MRCE> <EQUAL? .RM ,MRGE ,MRDE>> 0) (T 180)>",
                            "Form": [
                              {
                                "Atom": "COND"
                              },
                              [
                                {
                                  "Zil": "<OR <EQUAL? .RM ,MRAE ,MRBE ,MRCE> <EQUAL? .RM ,MRGE ,MRDE>>",
                                  "Form": [
                                    {
                                      "Atom": "OR"
                                    },
                                    {
                                      "Zil": "<EQUAL? .RM ,MRAE ,MRBE ,MRCE>",
                                      "Form": [
                                        {
                                          "Atom": "EQUAL?"
                                        },
                                        {
                                          "Zil": ".RM",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "RM"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",MRAE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "MRAE"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",MRBE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "MRBE"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",MRCE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "MRCE"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<EQUAL? .RM ,MRGE ,MRDE>",
                                      "Form": [
                                        {
                                          "Atom": "EQUAL?"
                                        },
                                        {
                                          "Zil": ".RM",
                                          "Form": [
                                            {
                                              "Atom": "LVAL"
                                            },
                                            {
                                              "Atom": "RM"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",MRGE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "MRGE"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",MRDE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "MRDE"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                0
                              ],
                              [
                                {
                                  "Atom": "T"
                                },
                                180
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  1
                ],
                [
                  {
                    "Atom": "T"
                  },
                  2
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<0? <MOD ,MDIR 180>>",
              "Form": [
                {
                  "Atom": "0?"
                },
                {
                  "Zil": "<MOD ,MDIR 180>",
                  "Form": [
                    {
                      "Atom": "MOD"
                    },
                    {
                      "Zil": ",MDIR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MDIR"
                        }
                      ]
                    },
                    180
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<SET TMP <MIRROR-DIR? ,P?NORTH .RM>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TMP"
                },
                {
                  "Zil": "<MIRROR-DIR? ,P?NORTH .RM>",
                  "Form": [
                    {
                      "Atom": "MIRROR-DIR?"
                    },
                    {
                      "Zil": ",P?NORTH",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?NORTH"
                        }
                      ]
                    },
                    {
                      "Zil": ".RM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RM"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": ".TMP",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "TMP"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<SET TMP <MIRROR-DIR? ,P?SOUTH .RM>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "TMP"
                },
                {
                  "Zil": "<MIRROR-DIR? ,P?SOUTH .RM>",
                  "Form": [
                    {
                      "Atom": "MIRROR-DIR?"
                    },
                    {
                      "Zil": ",P?SOUTH",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P?SOUTH"
                        }
                      ]
                    },
                    {
                      "Zil": ".RM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RM"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": ".TMP",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "TMP"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:872",
    "Name": "MIRROR-FUNCTION",
    "ArgSpec": "(\"AUX\" MIRROR)",
    "Body": [
      {
        "Zil": "<COND (<NOT <SET MIRROR <MIRROR-HERE? ,HERE>>> <TELL \"You can't see any mirror here.\" CR>) (<VERB? OPEN MOVE> <TELL \"You don't see a way to open the mirror here.\" CR>) (<VERB? LOOK-INSIDE> <COND (<OR <AND <==? .MIRROR 1> ,MR1-FLAG> ,MR2-FLAG> <COND (,INVIS <TELL \"Amazingly, you have no reflection!\" CR>) (T <TELL \"A disheveled adventurer stares back at you.\" CR>)>) (T <TELL \"You have destroyed the mirror, or have you forgotten?\" CR>)>) (<VERB? MUNG> <COND (<1? .MIRROR> <COND (,MR1-FLAG <SETG MR1-FLAG <>> <TELL \"The mirror breaks, revealing a wooden panel behind it. The glistening\r\nfragments of mirror quietly sparkle into nonexistance.\" CR>) (T <TELL \"The mirror has already been broken.\" CR>)>) (,MR2-FLAG <SETG MR2-FLAG <>> <TELL \"The mirror breaks, revealing a wooden panel behind it. The glistening\r\nfragments of mirror quietly sparkle into nonexistance.\" CR>) (T <TELL \"The mirror has already been broken.\" CR>)>) (<OR <AND <==? .MIRROR 1> <NOT ,MR1-FLAG>> <NOT ,MR2-FLAG>> <TELL \"There's no mirror left.\" CR>) (<VERB? PUSH> <TELL <COND (<==? .MIRROR 1> \"The mirror is mounted on a wooden panel which moves slightly inward\r\nas you push, and back out when you let go. It feels fragile.\") (T \"The mirror is unyielding, but seems fragile.\")> CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <SET MIRROR <MIRROR-HERE? ,HERE>>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<SET MIRROR <MIRROR-HERE? ,HERE>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "MIRROR"
                    },
                    {
                      "Zil": "<MIRROR-HERE? ,HERE>",
                      "Form": [
                        {
                          "Atom": "MIRROR-HERE?"
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't see any mirror here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't see any mirror here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? OPEN MOVE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                },
                {
                  "Atom": "MOVE"
                }
              ]
            },
            {
              "Zil": "<TELL \"You don't see a way to open the mirror here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You don't see a way to open the mirror here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LOOK-INSIDE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LOOK-INSIDE"
                }
              ]
            },
            {
              "Zil": "<COND (<OR <AND <==? .MIRROR 1> ,MR1-FLAG> ,MR2-FLAG> <COND (,INVIS <TELL \"Amazingly, you have no reflection!\" CR>) (T <TELL \"A disheveled adventurer stares back at you.\" CR>)>) (T <TELL \"You have destroyed the mirror, or have you forgotten?\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR <AND <==? .MIRROR 1> ,MR1-FLAG> ,MR2-FLAG>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<AND <==? .MIRROR 1> ,MR1-FLAG>",
                        "Form": [
                          {
                            "Atom": "AND"
                          },
                          {
                            "Zil": "<==? .MIRROR 1>",
                            "Form": [
                              {
                                "Atom": "==?"
                              },
                              {
                                "Zil": ".MIRROR",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "MIRROR"
                                  }
                                ]
                              },
                              1
                            ]
                          },
                          {
                            "Zil": ",MR1-FLAG",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MR1-FLAG"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",MR2-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MR2-FLAG"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (,INVIS <TELL \"Amazingly, you have no reflection!\" CR>) (T <TELL \"A disheveled adventurer stares back at you.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ",INVIS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "INVIS"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"Amazingly, you have no reflection!\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Amazingly, you have no reflection!",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"A disheveled adventurer stares back at you.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "A disheveled adventurer stares back at you.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You have destroyed the mirror, or have you forgotten?\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You have destroyed the mirror, or have you forgotten?",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? MUNG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "MUNG"
                }
              ]
            },
            {
              "Zil": "<COND (<1? .MIRROR> <COND (,MR1-FLAG <SETG MR1-FLAG <>> <TELL \"The mirror breaks, revealing a wooden panel behind it. The glistening\r\nfragments of mirror quietly sparkle into nonexistance.\" CR>) (T <TELL \"The mirror has already been broken.\" CR>)>) (,MR2-FLAG <SETG MR2-FLAG <>> <TELL \"The mirror breaks, revealing a wooden panel behind it. The glistening\r\nfragments of mirror quietly sparkle into nonexistance.\" CR>) (T <TELL \"The mirror has already been broken.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<1? .MIRROR>",
                    "Form": [
                      {
                        "Atom": "1?"
                      },
                      {
                        "Zil": ".MIRROR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "MIRROR"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (,MR1-FLAG <SETG MR1-FLAG <>> <TELL \"The mirror breaks, revealing a wooden panel behind it. The glistening\r\nfragments of mirror quietly sparkle into nonexistance.\" CR>) (T <TELL \"The mirror has already been broken.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ",MR1-FLAG",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MR1-FLAG"
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG MR1-FLAG <>>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "MR1-FLAG"
                            },
                            {
                              "Zil": "<>",
                              "Form": []
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The mirror breaks, revealing a wooden panel behind it. The glistening\r\nfragments of mirror quietly sparkle into nonexistance.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The mirror breaks, revealing a wooden panel behind it. The glistening\r\nfragments of mirror quietly sparkle into nonexistance.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"The mirror has already been broken.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The mirror has already been broken.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Zil": ",MR2-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "MR2-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG MR2-FLAG <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "MR2-FLAG"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The mirror breaks, revealing a wooden panel behind it. The glistening\r\nfragments of mirror quietly sparkle into nonexistance.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The mirror breaks, revealing a wooden panel behind it. The glistening\r\nfragments of mirror quietly sparkle into nonexistance.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The mirror has already been broken.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The mirror has already been broken.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<OR <AND <==? .MIRROR 1> <NOT ,MR1-FLAG>> <NOT ,MR2-FLAG>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<AND <==? .MIRROR 1> <NOT ,MR1-FLAG>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<==? .MIRROR 1>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ".MIRROR",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "MIRROR"
                            }
                          ]
                        },
                        1
                      ]
                    },
                    {
                      "Zil": "<NOT ,MR1-FLAG>",
                      "Form": [
                        {
                          "Atom": "NOT"
                        },
                        {
                          "Zil": ",MR1-FLAG",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MR1-FLAG"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,MR2-FLAG>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",MR2-FLAG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MR2-FLAG"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"There's no mirror left.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There's no mirror left.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? PUSH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "PUSH"
                }
              ]
            },
            {
              "Zil": "<TELL <COND (<==? .MIRROR 1> \"The mirror is mounted on a wooden panel which moves slightly inward\r\nas you push, and back out when you let go. It feels fragile.\") (T \"The mirror is unyielding, but seems fragile.\")> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<COND (<==? .MIRROR 1> \"The mirror is mounted on a wooden panel which moves slightly inward\r\nas you push, and back out when you let go. It feels fragile.\") (T \"The mirror is unyielding, but seems fragile.\")>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<==? .MIRROR 1>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ".MIRROR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "MIRROR"
                              }
                            ]
                          },
                          1
                        ]
                      },
                      "The mirror is mounted on a wooden panel which moves slightly inward\r\nas you push, and back out when you let go. It feels fragile."
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      "The mirror is unyielding, but seems fragile."
                    ]
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:914",
    "Name": "PANEL-FUNCTION",
    "ArgSpec": "(\"AUX\" MIRROR)",
    "Body": [
      {
        "Zil": "<COND (<NOT <SET MIRROR <MIRROR-HERE? ,HERE>>> <TELL \"You can't see any panel here.\" CR>) (<VERB? OPEN MOVE> <TELL \"You don't see a way to open the panel here.\" CR>) (<VERB? MUNG> <COND (<==? .MIRROR 1> <COND (,MR1-FLAG <TELL ,MIRROR-FIRST CR>) (T <TELL \"The panel is not that easily destroyed.\" CR>)>) (,MR2-FLAG <TELL ,MIRROR-FIRST CR>) (T <TELL \"The panel is not that easily destroyed.\" CR>)>) (<VERB? PUSH> <TELL <COND (<==? .MIRROR 1> \"The wooden panel moves slightly inward as you push, and back out\r\nwhen you let go.\") (T \"The panel is unyielding.\")> CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <SET MIRROR <MIRROR-HERE? ,HERE>>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<SET MIRROR <MIRROR-HERE? ,HERE>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "MIRROR"
                    },
                    {
                      "Zil": "<MIRROR-HERE? ,HERE>",
                      "Form": [
                        {
                          "Atom": "MIRROR-HERE?"
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't see any panel here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't see any panel here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? OPEN MOVE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                },
                {
                  "Atom": "MOVE"
                }
              ]
            },
            {
              "Zil": "<TELL \"You don't see a way to open the panel here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You don't see a way to open the panel here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? MUNG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "MUNG"
                }
              ]
            },
            {
              "Zil": "<COND (<==? .MIRROR 1> <COND (,MR1-FLAG <TELL ,MIRROR-FIRST CR>) (T <TELL \"The panel is not that easily destroyed.\" CR>)>) (,MR2-FLAG <TELL ,MIRROR-FIRST CR>) (T <TELL \"The panel is not that easily destroyed.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? .MIRROR 1>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ".MIRROR",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "MIRROR"
                          }
                        ]
                      },
                      1
                    ]
                  },
                  {
                    "Zil": "<COND (,MR1-FLAG <TELL ,MIRROR-FIRST CR>) (T <TELL \"The panel is not that easily destroyed.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ",MR1-FLAG",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MR1-FLAG"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL ,MIRROR-FIRST CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            {
                              "Zil": ",MIRROR-FIRST",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MIRROR-FIRST"
                                }
                              ]
                            },
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"The panel is not that easily destroyed.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The panel is not that easily destroyed.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Zil": ",MR2-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "MR2-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL ,MIRROR-FIRST CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": ",MIRROR-FIRST",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MIRROR-FIRST"
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The panel is not that easily destroyed.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The panel is not that easily destroyed.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? PUSH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "PUSH"
                }
              ]
            },
            {
              "Zil": "<TELL <COND (<==? .MIRROR 1> \"The wooden panel moves slightly inward as you push, and back out\r\nwhen you let go.\") (T \"The panel is unyielding.\")> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<COND (<==? .MIRROR 1> \"The wooden panel moves slightly inward as you push, and back out\r\nwhen you let go.\") (T \"The panel is unyielding.\")>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<==? .MIRROR 1>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ".MIRROR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "MIRROR"
                              }
                            ]
                          },
                          1
                        ]
                      },
                      "The wooden panel moves slightly inward as you push, and back out\r\nwhen you let go."
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      "The panel is unyielding."
                    ]
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:941",
    "Name": "MIROUT",
    "ArgSpec": "(\"AUX\" DIR RM)",
    "Body": [
      {
        "Zil": "<COND (<==? ,PRSO ,P?OUT> <SET DIR 1>) (T <SET DIR <LKP ,PRSO ,DIRVEC>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,PRSO ,P?OUT>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",P?OUT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?OUT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET DIR 1>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "DIR"
                },
                1
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SET DIR <LKP ,PRSO ,DIRVEC>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "DIR"
                },
                {
                  "Zil": "<LKP ,PRSO ,DIRVEC>",
                  "Form": [
                    {
                      "Atom": "LKP"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",DIRVEC",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "DIRVEC"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (,MIRROR-OPEN-FLAG <COND (<OR <==? .DIR 1> <==? <MOD <+ ,MDIR 270> 360> .DIR>> <COND (<0? <MOD ,MDIR 180>> <MIREW>) (T <MIRNS <L? ,MDIR 180> T>)>) (T <TELL \"There's a wall there.\" CR> <RFALSE>)>) (,WOOD-OPEN-FLAG <COND (<OR <==? .DIR 1> <==? <MOD <+ ,MDIR 180> 360> .DIR>> <COND (<0? ,MDIR> <SET RM <>>) (T <SET RM T>)> <COND (<SET RM <MIRNS .RM T>> <TELL \"As you leave, the door swings shut.\" CR> <SETG WOOD-OPEN-FLAG <>> .RM) (T <TELL \"You can't go that way.\" CR> <RFALSE>)>) (T <TELL \"You would hit one of the panels.\" CR> <RFALSE>)>) (T <TELL \"You are inside a closed box!\" CR> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",MIRROR-OPEN-FLAG",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "MIRROR-OPEN-FLAG"
                }
              ]
            },
            {
              "Zil": "<COND (<OR <==? .DIR 1> <==? <MOD <+ ,MDIR 270> 360> .DIR>> <COND (<0? <MOD ,MDIR 180>> <MIREW>) (T <MIRNS <L? ,MDIR 180> T>)>) (T <TELL \"There's a wall there.\" CR> <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR <==? .DIR 1> <==? <MOD <+ ,MDIR 270> 360> .DIR>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<==? .DIR 1>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ".DIR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "DIR"
                              }
                            ]
                          },
                          1
                        ]
                      },
                      {
                        "Zil": "<==? <MOD <+ ,MDIR 270> 360> .DIR>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": "<MOD <+ ,MDIR 270> 360>",
                            "Form": [
                              {
                                "Atom": "MOD"
                              },
                              {
                                "Zil": "<+ ,MDIR 270>",
                                "Form": [
                                  {
                                    "Atom": "+"
                                  },
                                  {
                                    "Zil": ",MDIR",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "MDIR"
                                      }
                                    ]
                                  },
                                  270
                                ]
                              },
                              360
                            ]
                          },
                          {
                            "Zil": ".DIR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "DIR"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<0? <MOD ,MDIR 180>> <MIREW>) (T <MIRNS <L? ,MDIR 180> T>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<0? <MOD ,MDIR 180>>",
                          "Form": [
                            {
                              "Atom": "0?"
                            },
                            {
                              "Zil": "<MOD ,MDIR 180>",
                              "Form": [
                                {
                                  "Atom": "MOD"
                                },
                                {
                                  "Zil": ",MDIR",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "MDIR"
                                    }
                                  ]
                                },
                                180
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<MIREW>",
                          "Form": [
                            {
                              "Atom": "MIREW"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<MIRNS <L? ,MDIR 180> T>",
                          "Form": [
                            {
                              "Atom": "MIRNS"
                            },
                            {
                              "Zil": "<L? ,MDIR 180>",
                              "Form": [
                                {
                                  "Atom": "L?"
                                },
                                {
                                  "Zil": ",MDIR",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "MDIR"
                                    }
                                  ]
                                },
                                180
                              ]
                            },
                            {
                              "Atom": "T"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"There's a wall there.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There's a wall there.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": ",WOOD-OPEN-FLAG",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "WOOD-OPEN-FLAG"
                }
              ]
            },
            {
              "Zil": "<COND (<OR <==? .DIR 1> <==? <MOD <+ ,MDIR 180> 360> .DIR>> <COND (<0? ,MDIR> <SET RM <>>) (T <SET RM T>)> <COND (<SET RM <MIRNS .RM T>> <TELL \"As you leave, the door swings shut.\" CR> <SETG WOOD-OPEN-FLAG <>> .RM) (T <TELL \"You can't go that way.\" CR> <RFALSE>)>) (T <TELL \"You would hit one of the panels.\" CR> <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR <==? .DIR 1> <==? <MOD <+ ,MDIR 180> 360> .DIR>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<==? .DIR 1>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ".DIR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "DIR"
                              }
                            ]
                          },
                          1
                        ]
                      },
                      {
                        "Zil": "<==? <MOD <+ ,MDIR 180> 360> .DIR>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": "<MOD <+ ,MDIR 180> 360>",
                            "Form": [
                              {
                                "Atom": "MOD"
                              },
                              {
                                "Zil": "<+ ,MDIR 180>",
                                "Form": [
                                  {
                                    "Atom": "+"
                                  },
                                  {
                                    "Zil": ",MDIR",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "MDIR"
                                      }
                                    ]
                                  },
                                  180
                                ]
                              },
                              360
                            ]
                          },
                          {
                            "Zil": ".DIR",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "DIR"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<0? ,MDIR> <SET RM <>>) (T <SET RM T>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<0? ,MDIR>",
                          "Form": [
                            {
                              "Atom": "0?"
                            },
                            {
                              "Zil": ",MDIR",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MDIR"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SET RM <>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "RM"
                            },
                            {
                              "Zil": "<>",
                              "Form": []
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<SET RM T>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "RM"
                            },
                            {
                              "Atom": "T"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<COND (<SET RM <MIRNS .RM T>> <TELL \"As you leave, the door swings shut.\" CR> <SETG WOOD-OPEN-FLAG <>> .RM) (T <TELL \"You can't go that way.\" CR> <RFALSE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<SET RM <MIRNS .RM T>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "RM"
                            },
                            {
                              "Zil": "<MIRNS .RM T>",
                              "Form": [
                                {
                                  "Atom": "MIRNS"
                                },
                                {
                                  "Zil": ".RM",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "RM"
                                    }
                                  ]
                                },
                                {
                                  "Atom": "T"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"As you leave, the door swings shut.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "As you leave, the door swings shut.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG WOOD-OPEN-FLAG <>>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "WOOD-OPEN-FLAG"
                            },
                            {
                              "Zil": "<>",
                              "Form": []
                            }
                          ]
                        },
                        {
                          "Zil": ".RM",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "RM"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"You can't go that way.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "You can't go that way.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RFALSE>",
                          "Form": [
                            {
                              "Atom": "RFALSE"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You would hit one of the panels.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You would hit one of the panels.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You are inside a closed box!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are inside a closed box!",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:975",
    "Name": "MIRNS",
    "ArgSpec": "(NORTH? \"OPT\" (EXIT? <>) \"AUX\" S T)",
    "Body": [
      {
        "Zil": "<COND (<NOT .EXIT?> <COND (<AND .NORTH? <==? ,MLOC ,MRD>> <RFALSE>) (<AND <NOT .NORTH?> <==? ,MLOC ,MRA>> <RFALSE>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT .EXIT?>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ".EXIT?",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "EXIT?"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND .NORTH? <==? ,MLOC ,MRD>> <RFALSE>) (<AND <NOT .NORTH?> <==? ,MLOC ,MRA>> <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND .NORTH? <==? ,MLOC ,MRD>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ".NORTH?",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "NORTH?"
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,MLOC ,MRD>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",MLOC",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MLOC"
                              }
                            ]
                          },
                          {
                            "Zil": ",MRD",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MRD"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <NOT .NORTH?> <==? ,MLOC ,MRA>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<NOT .NORTH?>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".NORTH?",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "NORTH?"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,MLOC ,MRA>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",MLOC",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MLOC"
                              }
                            ]
                          },
                          {
                            "Zil": ",MRA",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MRA"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<SET T <GETPT ,MLOC <COND (.NORTH? ,P?NORTH) (T ,P?SOUTH)>>> <COND (<==? <SET S <PTSIZE .T>> ,UEXIT> <GETB .T 0>) (.NORTH? <LKP ,MLOC ,R-NORTHS>) (T <LKP ,MLOC ,R-SOUTHS>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET T <GETPT ,MLOC <COND (.NORTH? ,P?NORTH) (T ,P?SOUTH)>>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<GETPT ,MLOC <COND (.NORTH? ,P?NORTH) (T ,P?SOUTH)>>",
                  "Form": [
                    {
                      "Atom": "GETPT"
                    },
                    {
                      "Zil": ",MLOC",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MLOC"
                        }
                      ]
                    },
                    {
                      "Zil": "<COND (.NORTH? ,P?NORTH) (T ,P?SOUTH)>",
                      "Form": [
                        {
                          "Atom": "COND"
                        },
                        [
                          {
                            "Zil": ".NORTH?",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "NORTH?"
                              }
                            ]
                          },
                          {
                            "Zil": ",P?NORTH",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P?NORTH"
                              }
                            ]
                          }
                        ],
                        [
                          {
                            "Atom": "T"
                          },
                          {
                            "Zil": ",P?SOUTH",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P?SOUTH"
                              }
                            ]
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? <SET S <PTSIZE .T>> ,UEXIT> <GETB .T 0>) (.NORTH? <LKP ,MLOC ,R-NORTHS>) (T <LKP ,MLOC ,R-SOUTHS>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? <SET S <PTSIZE .T>> ,UEXIT>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": "<SET S <PTSIZE .T>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "S"
                          },
                          {
                            "Zil": "<PTSIZE .T>",
                            "Form": [
                              {
                                "Atom": "PTSIZE"
                              },
                              {
                                "Zil": ".T",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "T"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",UEXIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "UEXIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<GETB .T 0>",
                    "Form": [
                      {
                        "Atom": "GETB"
                      },
                      {
                        "Zil": ".T",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      },
                      0
                    ]
                  }
                ],
                [
                  {
                    "Zil": ".NORTH?",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "NORTH?"
                      }
                    ]
                  },
                  {
                    "Zil": "<LKP ,MLOC ,R-NORTHS>",
                    "Form": [
                      {
                        "Atom": "LKP"
                      },
                      {
                        "Zil": ",MLOC",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MLOC"
                          }
                        ]
                      },
                      {
                        "Zil": ",R-NORTHS",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "R-NORTHS"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<LKP ,MLOC ,R-SOUTHS>",
                    "Form": [
                      {
                        "Atom": "LKP"
                      },
                      {
                        "Zil": ",MLOC",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MLOC"
                          }
                        ]
                      },
                      {
                        "Zil": ",R-SOUTHS",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "R-SOUTHS"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:990",
    "Name": "MIREW",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<0? ,MDIR> <LKP ,MLOC ,R-WESTS>) (T <LKP ,MLOC ,R-EASTS>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<0? ,MDIR>",
              "Form": [
                {
                  "Atom": "0?"
                },
                {
                  "Zil": ",MDIR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MDIR"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<LKP ,MLOC ,R-WESTS>",
              "Form": [
                {
                  "Atom": "LKP"
                },
                {
                  "Zil": ",MLOC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MLOC"
                    }
                  ]
                },
                {
                  "Zil": ",R-WESTS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "R-WESTS"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<LKP ,MLOC ,R-EASTS>",
              "Form": [
                {
                  "Atom": "LKP"
                },
                {
                  "Zil": ",MLOC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MLOC"
                    }
                  ]
                },
                {
                  "Zil": ",R-EASTS",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "R-EASTS"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:994",
    "Name": "MIRIN",
    "ArgSpec": "(\"OPT\" (VRB T))",
    "Body": [
      {
        "Zil": "<COND (<AND <==? <MIRROR-HERE? ,HERE> 1> ,MIRROR-OPEN-FLAG> ,IN-MIRROR) (<NOT .VRB> <RFALSE>) (<==? <MIRROR-HERE? ,HERE> 1> <COND (<AND <NOT ,MIRROR-OPENED> ,MR1-FLAG> <TELL \"A mirror blocks your way.\" CR> <RFALSE>) (T <TELL \"The panel is closed.\" CR> <RFALSE>)>) (T <TELL \"The structure blocks your way.\" CR> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? <MIRROR-HERE? ,HERE> 1> ,MIRROR-OPEN-FLAG>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? <MIRROR-HERE? ,HERE> 1>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": "<MIRROR-HERE? ,HERE>",
                      "Form": [
                        {
                          "Atom": "MIRROR-HERE?"
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        }
                      ]
                    },
                    1
                  ]
                },
                {
                  "Zil": ",MIRROR-OPEN-FLAG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MIRROR-OPEN-FLAG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": ",IN-MIRROR",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "IN-MIRROR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT .VRB>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ".VRB",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "VRB"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? <MIRROR-HERE? ,HERE> 1>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": "<MIRROR-HERE? ,HERE>",
                  "Form": [
                    {
                      "Atom": "MIRROR-HERE?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    }
                  ]
                },
                1
              ]
            },
            {
              "Zil": "<COND (<AND <NOT ,MIRROR-OPENED> ,MR1-FLAG> <TELL \"A mirror blocks your way.\" CR> <RFALSE>) (T <TELL \"The panel is closed.\" CR> <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <NOT ,MIRROR-OPENED> ,MR1-FLAG>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<NOT ,MIRROR-OPENED>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",MIRROR-OPENED",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MIRROR-OPENED"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",MR1-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MR1-FLAG"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"A mirror blocks your way.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "A mirror blocks your way.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The panel is closed.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The panel is closed.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"The structure blocks your way.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The structure blocks your way.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1005",
    "Name": "MREYE-ROOM",
    "ArgSpec": "(\"OPT\" (RARG <>) \"AUX\" O)",
    "Body": [
      {
        "Zil": "<COND (<AND <==? .RARG ,M-BEG> <VERB? DROP> <IN? ,PRSO ,WINNER> <NOT <BEAM-STOPPED?>>> <MOVE ,PRSO ,HERE> <TELL \"You conveniently drop the \" D ,PRSO \" in position to block the\r\nbeam of light.\" CR>) (<==? .RARG ,M-LOOK> <TELL \"You are in the middle of a long north-south corridor whose walls are\r\npolished stone. A narrow red beam of light crosses the room at the north\r\nend, inches above the floor.\" CR> <COND (<SET O <BEAM-STOPPED?>> <TELL \"The beam is blocked by a \" D .O \" lying on the floor.\" CR>)> <LOOK-TO ,MRA <>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? .RARG ,M-BEG> <VERB? DROP> <IN? ,PRSO ,WINNER> <NOT <BEAM-STOPPED?>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-BEG>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-BEG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-BEG"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<VERB? DROP>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "DROP"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,PRSO ,WINNER>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <BEAM-STOPPED?>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<BEAM-STOPPED?>",
                      "Form": [
                        {
                          "Atom": "BEAM-STOPPED?"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,PRSO ,HERE>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You conveniently drop the \" D ,PRSO \" in position to block the\r\nbeam of light.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You conveniently drop the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " in position to block the\r\nbeam of light.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are in the middle of a long north-south corridor whose walls are\r\npolished stone. A narrow red beam of light crosses the room at the north\r\nend, inches above the floor.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are in the middle of a long north-south corridor whose walls are\r\npolished stone. A narrow red beam of light crosses the room at the north\r\nend, inches above the floor.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<COND (<SET O <BEAM-STOPPED?>> <TELL \"The beam is blocked by a \" D .O \" lying on the floor.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<SET O <BEAM-STOPPED?>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "O"
                      },
                      {
                        "Zil": "<BEAM-STOPPED?>",
                        "Form": [
                          {
                            "Atom": "BEAM-STOPPED?"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The beam is blocked by a \" D .O \" lying on the floor.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The beam is blocked by a ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".O",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "O"
                          }
                        ]
                      },
                      " lying on the floor.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<LOOK-TO ,MRA <>>",
              "Form": [
                {
                  "Atom": "LOOK-TO"
                },
                {
                  "Zil": ",MRA",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRA"
                    }
                  ]
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1024",
    "Name": "BEAM-STOPPED?",
    "ArgSpec": "(\"AUX\" N)",
    "Body": [
      {
        "Zil": "<SET N <FIRST? ,MREYE>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "N"
          },
          {
            "Zil": "<FIRST? ,MREYE>",
            "Form": [
              {
                "Atom": "FIRST?"
              },
              {
                "Zil": ",MREYE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "MREYE"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<NOT <EQUAL? .N ,PLAYER ,BEAM>> <SETG BEAM-BREAKER .N> <RETURN .N>) (<NOT <SET N <NEXT? .N>>> <RFALSE>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<NOT <EQUAL? .N ,PLAYER ,BEAM>> <SETG BEAM-BREAKER .N> <RETURN .N>) (<NOT <SET N <NEXT? .N>>> <RFALSE>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<NOT <EQUAL? .N ,PLAYER ,BEAM>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? .N ,PLAYER ,BEAM>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ".N",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "N"
                            }
                          ]
                        },
                        {
                          "Zil": ",PLAYER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PLAYER"
                            }
                          ]
                        },
                        {
                          "Zil": ",BEAM",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "BEAM"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SETG BEAM-BREAKER .N>",
                  "Form": [
                    {
                      "Atom": "SETG"
                    },
                    {
                      "Atom": "BEAM-BREAKER"
                    },
                    {
                      "Zil": ".N",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "N"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN .N>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    },
                    {
                      "Zil": ".N",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "N"
                        }
                      ]
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<NOT <SET N <NEXT? .N>>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<SET N <NEXT? .N>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "N"
                        },
                        {
                          "Zil": "<NEXT? .N>",
                          "Form": [
                            {
                              "Atom": "NEXT?"
                            },
                            {
                              "Zil": ".N",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "N"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RFALSE>",
                  "Form": [
                    {
                      "Atom": "RFALSE"
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1036",
    "Name": "BEAM-FUNCTION",
    "ArgSpec": "(\"AUX\" PRO PRI)",
    "Body": [
      {
        "Zil": "<COND (<VERB? LEAP> <TELL \"You jump over the beam and into the hallway.\" CR> <GOTO ,MRA> <RTRUE>) (<VERB? FOLLOW> <TELL \"It simply crosses the northern end of the room, so there's nowhere to\r\nfollow it.\" CR>) (<VERB? EXAMINE> <TELL \"The red beam of light crosses the north end of the room only an inch or so\r\nabove the floor.\"> <COND (<BEAM-STOPPED?> <TELL \" The beam is broken by a \" D ,BEAM-BREAKER \" lying on the ground.\">)> <CRLF>) (<VERB? PUT MUNG> <COND (<VERB? PUT> <SET PRI ,PRSO> <SET PRO ,PRSI>) (T <SET PRI ,PRSI> <SET PRO ,PRSO>)> <COND (<OR <NOT .PRI> <NOT <==? .PRO ,BEAM>>> <RFALSE>) (<IN? .PRI ,WINNER> <MOVE .PRI ,HERE> <SETG BEAM-BREAKER .PRI> <TELL \"The beam is now interrupted by a \" D .PRI \" lying on the floor.\" CR>) (<IN? .PRI ,HERE> <TELL \"The \" D .PRI \" already breaks the beam.\" CR>) (<==? .PRI ,HANDS> <TELL \"The beam is broken briefly as it passes through.\" CR>) (T <TELL \"You're not holding the \" D .PRI \".\" CR>)>) (<AND <VERB? TAKE> <==? ,PRSO ,BEAM>> <TELL \"No doubt you have a bottle of moonbeams as well.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? LEAP>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LEAP"
                }
              ]
            },
            {
              "Zil": "<TELL \"You jump over the beam and into the hallway.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You jump over the beam and into the hallway.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<GOTO ,MRA>",
              "Form": [
                {
                  "Atom": "GOTO"
                },
                {
                  "Zil": ",MRA",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRA"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? FOLLOW>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "FOLLOW"
                }
              ]
            },
            {
              "Zil": "<TELL \"It simply crosses the northern end of the room, so there's nowhere to\r\nfollow it.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It simply crosses the northern end of the room, so there's nowhere to\r\nfollow it.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The red beam of light crosses the north end of the room only an inch or so\r\nabove the floor.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The red beam of light crosses the north end of the room only an inch or so\r\nabove the floor."
              ]
            },
            {
              "Zil": "<COND (<BEAM-STOPPED?> <TELL \" The beam is broken by a \" D ,BEAM-BREAKER \" lying on the ground.\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<BEAM-STOPPED?>",
                    "Form": [
                      {
                        "Atom": "BEAM-STOPPED?"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" The beam is broken by a \" D ,BEAM-BREAKER \" lying on the ground.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " The beam is broken by a ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",BEAM-BREAKER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "BEAM-BREAKER"
                          }
                        ]
                      },
                      " lying on the ground."
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? PUT MUNG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "PUT"
                },
                {
                  "Atom": "MUNG"
                }
              ]
            },
            {
              "Zil": "<COND (<VERB? PUT> <SET PRI ,PRSO> <SET PRO ,PRSI>) (T <SET PRI ,PRSI> <SET PRO ,PRSO>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<VERB? PUT>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "PUT"
                      }
                    ]
                  },
                  {
                    "Zil": "<SET PRI ,PRSO>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "PRI"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET PRO ,PRSI>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "PRO"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SET PRI ,PRSI>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "PRI"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET PRO ,PRSO>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "PRO"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<OR <NOT .PRI> <NOT <==? .PRO ,BEAM>>> <RFALSE>) (<IN? .PRI ,WINNER> <MOVE .PRI ,HERE> <SETG BEAM-BREAKER .PRI> <TELL \"The beam is now interrupted by a \" D .PRI \" lying on the floor.\" CR>) (<IN? .PRI ,HERE> <TELL \"The \" D .PRI \" already breaks the beam.\" CR>) (<==? .PRI ,HANDS> <TELL \"The beam is broken briefly as it passes through.\" CR>) (T <TELL \"You're not holding the \" D .PRI \".\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR <NOT .PRI> <NOT <==? .PRO ,BEAM>>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<NOT .PRI>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".PRI",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "PRI"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <==? .PRO ,BEAM>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<==? .PRO ,BEAM>",
                            "Form": [
                              {
                                "Atom": "==?"
                              },
                              {
                                "Zil": ".PRO",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "PRO"
                                  }
                                ]
                              },
                              {
                                "Zil": ",BEAM",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "BEAM"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<IN? .PRI ,WINNER>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ".PRI",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PRI"
                          }
                        ]
                      },
                      {
                        "Zil": ",WINNER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WINNER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<MOVE .PRI ,HERE>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ".PRI",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PRI"
                          }
                        ]
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG BEAM-BREAKER .PRI>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "BEAM-BREAKER"
                      },
                      {
                        "Zil": ".PRI",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PRI"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The beam is now interrupted by a \" D .PRI \" lying on the floor.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The beam is now interrupted by a ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".PRI",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PRI"
                          }
                        ]
                      },
                      " lying on the floor.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<IN? .PRI ,HERE>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ".PRI",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PRI"
                          }
                        ]
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D .PRI \" already breaks the beam.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".PRI",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PRI"
                          }
                        ]
                      },
                      " already breaks the beam.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<==? .PRI ,HANDS>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ".PRI",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PRI"
                          }
                        ]
                      },
                      {
                        "Zil": ",HANDS",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HANDS"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The beam is broken briefly as it passes through.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The beam is broken briefly as it passes through.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You're not holding the \" D .PRI \".\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You're not holding the ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ".PRI",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "PRI"
                          }
                        ]
                      },
                      ".",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? TAKE> <==? ,PRSO ,BEAM>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? TAKE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "TAKE"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSO ,BEAM>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",BEAM",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "BEAM"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"No doubt you have a bottle of moonbeams as well.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "No doubt you have a bottle of moonbeams as well.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1081",
    "Name": "MRSWITCH",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? PUSH> <COND (,MRSWPUSH-FLAG <TELL \"Click.\" CR>) (T <COND (<BEAM-STOPPED?> <TELL \"Click. Snap!\" CR> <ENABLE <QUEUE I-MRINT 7>> <SETG MRSWPUSH-FLAG T> <SETG MIRROR-OPEN-FLAG T> <SETG MIRROR-OPENED T> <FCLEAR ,MRA ,TOUCHBIT>) (T <TELL \"Click.\" CR>)>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? PUSH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "PUSH"
                }
              ]
            },
            {
              "Zil": "<COND (,MRSWPUSH-FLAG <TELL \"Click.\" CR>) (T <COND (<BEAM-STOPPED?> <TELL \"Click. Snap!\" CR> <ENABLE <QUEUE I-MRINT 7>> <SETG MRSWPUSH-FLAG T> <SETG MIRROR-OPEN-FLAG T> <SETG MIRROR-OPENED T> <FCLEAR ,MRA ,TOUCHBIT>) (T <TELL \"Click.\" CR>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",MRSWPUSH-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "MRSWPUSH-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Click.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Click.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<COND (<BEAM-STOPPED?> <TELL \"Click. Snap!\" CR> <ENABLE <QUEUE I-MRINT 7>> <SETG MRSWPUSH-FLAG T> <SETG MIRROR-OPEN-FLAG T> <SETG MIRROR-OPENED T> <FCLEAR ,MRA ,TOUCHBIT>) (T <TELL \"Click.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<BEAM-STOPPED?>",
                          "Form": [
                            {
                              "Atom": "BEAM-STOPPED?"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"Click. Snap!\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Click. Snap!",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<ENABLE <QUEUE I-MRINT 7>>",
                          "Form": [
                            {
                              "Atom": "ENABLE"
                            },
                            {
                              "Zil": "<QUEUE I-MRINT 7>",
                              "Form": [
                                {
                                  "Atom": "QUEUE"
                                },
                                {
                                  "Atom": "I-MRINT"
                                },
                                7
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG MRSWPUSH-FLAG T>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "MRSWPUSH-FLAG"
                            },
                            {
                              "Atom": "T"
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG MIRROR-OPEN-FLAG T>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "MIRROR-OPEN-FLAG"
                            },
                            {
                              "Atom": "T"
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG MIRROR-OPENED T>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "MIRROR-OPENED"
                            },
                            {
                              "Atom": "T"
                            }
                          ]
                        },
                        {
                          "Zil": "<FCLEAR ,MRA ,TOUCHBIT>",
                          "Form": [
                            {
                              "Atom": "FCLEAR"
                            },
                            {
                              "Zil": ",MRA",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MRA"
                                }
                              ]
                            },
                            {
                              "Zil": ",TOUCHBIT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "TOUCHBIT"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"Click.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Click.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1095",
    "Name": "I-MRINT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG MRSWPUSH-FLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "MRSWPUSH-FLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<SETG MIRROR-OPEN-FLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "MIRROR-OPEN-FLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (<OR <==? <MIRROR-HERE? ,HERE> 1> <==? ,HERE ,IN-MIRROR>> <TELL \"The mirror quietly swings shut.\" CR>) (<==? ,HERE ,MR-ANTE> <TELL \"The button pops back to its original position.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <==? <MIRROR-HERE? ,HERE> 1> <==? ,HERE ,IN-MIRROR>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<==? <MIRROR-HERE? ,HERE> 1>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": "<MIRROR-HERE? ,HERE>",
                      "Form": [
                        {
                          "Atom": "MIRROR-HERE?"
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        }
                      ]
                    },
                    1
                  ]
                },
                {
                  "Zil": "<==? ,HERE ,IN-MIRROR>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",IN-MIRROR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "IN-MIRROR"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The mirror quietly swings shut.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The mirror quietly swings shut.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,HERE ,MR-ANTE>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",MR-ANTE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MR-ANTE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The button pops back to its original position.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The button pops back to its original position.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1112",
    "Name": "MAGIC-MIRROR",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"You are inside a rectangular box of wood whose structure is rather\r\ncomplicated. Four sides and the roof are filled in, and the floor is\r\nopen.|\r\n|\r\nAs you face the side opposite the entrance, two short sides of\r\ncarved and polished wood are to your left and right. The left panel\r\nis mahogany, the right pine. The wall you face is red on its left\r\nhalf and black on its right. On the entrance side, the wall is white\r\nopposite the red part of the wall it faces, and yellow opposite the\r\nblack section. The painted walls are at least twice the length of\r\nthe unpainted ones. The ceiling is painted blue.|\r\n|\r\nIn the floor is a stone channel about six inches wide and a foot\r\ndeep. The channel is oriented in a north-south direction. In the\r\nexact center of the room the channel widens into a circular\r\ndepression perhaps two feet wide. Incised in the stone around this\r\narea is a compass rose.|\r\n|\r\nRunning from one short wall to the other at about waist height\r\nis a wooden bar, carefully carved and drilled. This bar is pierced\r\nin two places. The first hole is in the center of the bar (and thus\r\nthe center of the room). The second is at the left end of the room\r\n(as you face opposite the entrance). Through each hole runs a wooden\r\npole.|\r\n|\r\nThe pole at the left end of the bar is short, extending about a foot\r\nabove the bar, and ends in a hand grip. The pole \"> <COND (<AND <==? ,MLOC ,MRB> <==? ,MDIR 270>> <COND (<NOT <0? ,POLEUP-FLAG>> <TELL \"has been lifted out\r\nof a hole carved in the stone floor. There is evidently enough\r\nfriction to keep the pole from dropping back down.\">) (T <TELL \"has been dropped\r\ninto a hole carved in the stone floor.\">)>) (<EQUAL? ,MDIR 0 180> <COND (<NOT <0? ,POLEUP-FLAG>> <TELL \"is positioned above\r\nthe stone channel in the floor.\">) (T <TELL \"has been dropped\r\ninto the stone channel incised in the floor.\">)>) (T <TELL \"is resting on the\r\nstone floor.\">)> <TELL \"|\r\n|\r\nThe long pole at the center of the bar extends from the ceiling\r\nthrough the bar to the circular area in the stone channel. This\r\nbottom end of the pole has a T-bar a bit less than two feet long\r\nattached to it, and on the T-bar is carved an arrow. The arrow and\r\nT-bar are pointing \" <GET ,LONGDIRS </ ,MDIR 45>> \".\"> <COND (,WOOD-OPEN-FLAG <TELL \"|\r\nThe pine panel has been opened outward.\">)> <CRLF>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are inside a rectangular box of wood whose structure is rather\r\ncomplicated. Four sides and the roof are filled in, and the floor is\r\nopen.|\r\n|\r\nAs you face the side opposite the entrance, two short sides of\r\ncarved and polished wood are to your left and right. The left panel\r\nis mahogany, the right pine. The wall you face is red on its left\r\nhalf and black on its right. On the entrance side, the wall is white\r\nopposite the red part of the wall it faces, and yellow opposite the\r\nblack section. The painted walls are at least twice the length of\r\nthe unpainted ones. The ceiling is painted blue.|\r\n|\r\nIn the floor is a stone channel about six inches wide and a foot\r\ndeep. The channel is oriented in a north-south direction. In the\r\nexact center of the room the channel widens into a circular\r\ndepression perhaps two feet wide. Incised in the stone around this\r\narea is a compass rose.|\r\n|\r\nRunning from one short wall to the other at about waist height\r\nis a wooden bar, carefully carved and drilled. This bar is pierced\r\nin two places. The first hole is in the center of the bar (and thus\r\nthe center of the room). The second is at the left end of the room\r\n(as you face opposite the entrance). Through each hole runs a wooden\r\npole.|\r\n|\r\nThe pole at the left end of the bar is short, extending about a foot\r\nabove the bar, and ends in a hand grip. The pole \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are inside a rectangular box of wood whose structure is rather\r\ncomplicated. Four sides and the roof are filled in, and the floor is\r\nopen.|\r\n|\r\nAs you face the side opposite the entrance, two short sides of\r\ncarved and polished wood are to your left and right. The left panel\r\nis mahogany, the right pine. The wall you face is red on its left\r\nhalf and black on its right. On the entrance side, the wall is white\r\nopposite the red part of the wall it faces, and yellow opposite the\r\nblack section. The painted walls are at least twice the length of\r\nthe unpainted ones. The ceiling is painted blue.|\r\n|\r\nIn the floor is a stone channel about six inches wide and a foot\r\ndeep. The channel is oriented in a north-south direction. In the\r\nexact center of the room the channel widens into a circular\r\ndepression perhaps two feet wide. Incised in the stone around this\r\narea is a compass rose.|\r\n|\r\nRunning from one short wall to the other at about waist height\r\nis a wooden bar, carefully carved and drilled. This bar is pierced\r\nin two places. The first hole is in the center of the bar (and thus\r\nthe center of the room). The second is at the left end of the room\r\n(as you face opposite the entrance). Through each hole runs a wooden\r\npole.|\r\n|\r\nThe pole at the left end of the bar is short, extending about a foot\r\nabove the bar, and ends in a hand grip. The pole "
              ]
            },
            {
              "Zil": "<COND (<AND <==? ,MLOC ,MRB> <==? ,MDIR 270>> <COND (<NOT <0? ,POLEUP-FLAG>> <TELL \"has been lifted out\r\nof a hole carved in the stone floor. There is evidently enough\r\nfriction to keep the pole from dropping back down.\">) (T <TELL \"has been dropped\r\ninto a hole carved in the stone floor.\">)>) (<EQUAL? ,MDIR 0 180> <COND (<NOT <0? ,POLEUP-FLAG>> <TELL \"is positioned above\r\nthe stone channel in the floor.\">) (T <TELL \"has been dropped\r\ninto the stone channel incised in the floor.\">)>) (T <TELL \"is resting on the\r\nstone floor.\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <==? ,MLOC ,MRB> <==? ,MDIR 270>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<==? ,MLOC ,MRB>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",MLOC",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MLOC"
                              }
                            ]
                          },
                          {
                            "Zil": ",MRB",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MRB"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,MDIR 270>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",MDIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MDIR"
                              }
                            ]
                          },
                          270
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<NOT <0? ,POLEUP-FLAG>> <TELL \"has been lifted out\r\nof a hole carved in the stone floor. There is evidently enough\r\nfriction to keep the pole from dropping back down.\">) (T <TELL \"has been dropped\r\ninto a hole carved in the stone floor.\">)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<NOT <0? ,POLEUP-FLAG>>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": "<0? ,POLEUP-FLAG>",
                              "Form": [
                                {
                                  "Atom": "0?"
                                },
                                {
                                  "Zil": ",POLEUP-FLAG",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "POLEUP-FLAG"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"has been lifted out\r\nof a hole carved in the stone floor. There is evidently enough\r\nfriction to keep the pole from dropping back down.\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "has been lifted out\r\nof a hole carved in the stone floor. There is evidently enough\r\nfriction to keep the pole from dropping back down."
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"has been dropped\r\ninto a hole carved in the stone floor.\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "has been dropped\r\ninto a hole carved in the stone floor."
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<EQUAL? ,MDIR 0 180>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",MDIR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MDIR"
                          }
                        ]
                      },
                      0,
                      180
                    ]
                  },
                  {
                    "Zil": "<COND (<NOT <0? ,POLEUP-FLAG>> <TELL \"is positioned above\r\nthe stone channel in the floor.\">) (T <TELL \"has been dropped\r\ninto the stone channel incised in the floor.\">)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<NOT <0? ,POLEUP-FLAG>>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": "<0? ,POLEUP-FLAG>",
                              "Form": [
                                {
                                  "Atom": "0?"
                                },
                                {
                                  "Zil": ",POLEUP-FLAG",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "POLEUP-FLAG"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"is positioned above\r\nthe stone channel in the floor.\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "is positioned above\r\nthe stone channel in the floor."
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"has been dropped\r\ninto the stone channel incised in the floor.\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "has been dropped\r\ninto the stone channel incised in the floor."
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"is resting on the\r\nstone floor.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "is resting on the\r\nstone floor."
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \"|\r\n|\r\nThe long pole at the center of the bar extends from the ceiling\r\nthrough the bar to the circular area in the stone channel. This\r\nbottom end of the pole has a T-bar a bit less than two feet long\r\nattached to it, and on the T-bar is carved an arrow. The arrow and\r\nT-bar are pointing \" <GET ,LONGDIRS </ ,MDIR 45>> \".\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "|\r\n|\r\nThe long pole at the center of the bar extends from the ceiling\r\nthrough the bar to the circular area in the stone channel. This\r\nbottom end of the pole has a T-bar a bit less than two feet long\r\nattached to it, and on the T-bar is carved an arrow. The arrow and\r\nT-bar are pointing ",
                {
                  "Zil": "<GET ,LONGDIRS </ ,MDIR 45>>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",LONGDIRS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "LONGDIRS"
                        }
                      ]
                    },
                    {
                      "Zil": "</ ,MDIR 45>",
                      "Form": [
                        {
                          "Atom": "/"
                        },
                        {
                          "Zil": ",MDIR",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MDIR"
                            }
                          ]
                        },
                        45
                      ]
                    }
                  ]
                },
                "."
              ]
            },
            {
              "Zil": "<COND (,WOOD-OPEN-FLAG <TELL \"|\r\nThe pine panel has been opened outward.\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",WOOD-OPEN-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "WOOD-OPEN-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"|\r\nThe pine panel has been opened outward.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "|\r\nThe pine panel has been opened outward."
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1182",
    "Name": "MPANELS",
    "ArgSpec": "(\"AUX\" MD)",
    "Body": [
      {
        "Zil": "<COND (<VERB? PUSH> <COND (<NOT <0? ,POLEUP-FLAG>> <COND (<==? ,MLOC ,MRG> <COND (,GUARDIANS-SEEN <JIGS-UP \"The Guardians awake, and in perfect unison, utterly destroy you with\r\ntheir stone bludgeons. Satisfied, they resume their posts.\"> <RTRUE>) (T <JIGS-UP \"All at once, two immense stone bludgeons come through the top of the\r\nstructure, crushing you.\"> <RTRUE>)>)> <COND (<EQUAL? ,PRSO ,RED-PANEL ,YELLOW-PANEL> <SET MD <MOD <+ ,MDIR 45> 360>> <TELL \"The structure rotates clockwise.\" CR>) (T <SET MD <MOD <+ ,MDIR 315> 360>> <TELL \"The structure rotates counterclockwise.\" CR>)> <TELL \"The arrow on the compass rose now indicates \" <GET ,LONGDIRS </ .MD 45>> \".\" CR> <COND (,WOOD-OPEN-FLAG <SETG WOOD-OPEN-FLAG <>> <TELL \"The pine wall closes quietly.\" CR>)> <SETG MDIR .MD> <RTRUE>) (<0? <MOD ,MDIR 180>> <TELL \"The short pole prevents the structure from rotating.\" CR>) (T <TELL \"The structure shakes slightly but doesn't move.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? PUSH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "PUSH"
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <0? ,POLEUP-FLAG>> <COND (<==? ,MLOC ,MRG> <COND (,GUARDIANS-SEEN <JIGS-UP \"The Guardians awake, and in perfect unison, utterly destroy you with\r\ntheir stone bludgeons. Satisfied, they resume their posts.\"> <RTRUE>) (T <JIGS-UP \"All at once, two immense stone bludgeons come through the top of the\r\nstructure, crushing you.\"> <RTRUE>)>)> <COND (<EQUAL? ,PRSO ,RED-PANEL ,YELLOW-PANEL> <SET MD <MOD <+ ,MDIR 45> 360>> <TELL \"The structure rotates clockwise.\" CR>) (T <SET MD <MOD <+ ,MDIR 315> 360>> <TELL \"The structure rotates counterclockwise.\" CR>)> <TELL \"The arrow on the compass rose now indicates \" <GET ,LONGDIRS </ .MD 45>> \".\" CR> <COND (,WOOD-OPEN-FLAG <SETG WOOD-OPEN-FLAG <>> <TELL \"The pine wall closes quietly.\" CR>)> <SETG MDIR .MD> <RTRUE>) (<0? <MOD ,MDIR 180>> <TELL \"The short pole prevents the structure from rotating.\" CR>) (T <TELL \"The structure shakes slightly but doesn't move.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <0? ,POLEUP-FLAG>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<0? ,POLEUP-FLAG>",
                        "Form": [
                          {
                            "Atom": "0?"
                          },
                          {
                            "Zil": ",POLEUP-FLAG",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "POLEUP-FLAG"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<==? ,MLOC ,MRG> <COND (,GUARDIANS-SEEN <JIGS-UP \"The Guardians awake, and in perfect unison, utterly destroy you with\r\ntheir stone bludgeons. Satisfied, they resume their posts.\"> <RTRUE>) (T <JIGS-UP \"All at once, two immense stone bludgeons come through the top of the\r\nstructure, crushing you.\"> <RTRUE>)>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<==? ,MLOC ,MRG>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": ",MLOC",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MLOC"
                                }
                              ]
                            },
                            {
                              "Zil": ",MRG",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MRG"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<COND (,GUARDIANS-SEEN <JIGS-UP \"The Guardians awake, and in perfect unison, utterly destroy you with\r\ntheir stone bludgeons. Satisfied, they resume their posts.\"> <RTRUE>) (T <JIGS-UP \"All at once, two immense stone bludgeons come through the top of the\r\nstructure, crushing you.\"> <RTRUE>)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": ",GUARDIANS-SEEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "GUARDIANS-SEEN"
                                  }
                                ]
                              },
                              {
                                "Zil": "<JIGS-UP \"The Guardians awake, and in perfect unison, utterly destroy you with\r\ntheir stone bludgeons. Satisfied, they resume their posts.\">",
                                "Form": [
                                  {
                                    "Atom": "JIGS-UP"
                                  },
                                  "The Guardians awake, and in perfect unison, utterly destroy you with\r\ntheir stone bludgeons. Satisfied, they resume their posts."
                                ]
                              },
                              {
                                "Zil": "<RTRUE>",
                                "Form": [
                                  {
                                    "Atom": "RTRUE"
                                  }
                                ]
                              }
                            ],
                            [
                              {
                                "Atom": "T"
                              },
                              {
                                "Zil": "<JIGS-UP \"All at once, two immense stone bludgeons come through the top of the\r\nstructure, crushing you.\">",
                                "Form": [
                                  {
                                    "Atom": "JIGS-UP"
                                  },
                                  "All at once, two immense stone bludgeons come through the top of the\r\nstructure, crushing you."
                                ]
                              },
                              {
                                "Zil": "<RTRUE>",
                                "Form": [
                                  {
                                    "Atom": "RTRUE"
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<COND (<EQUAL? ,PRSO ,RED-PANEL ,YELLOW-PANEL> <SET MD <MOD <+ ,MDIR 45> 360>> <TELL \"The structure rotates clockwise.\" CR>) (T <SET MD <MOD <+ ,MDIR 315> 360>> <TELL \"The structure rotates counterclockwise.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<EQUAL? ,PRSO ,RED-PANEL ,YELLOW-PANEL>",
                          "Form": [
                            {
                              "Atom": "EQUAL?"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",RED-PANEL",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "RED-PANEL"
                                }
                              ]
                            },
                            {
                              "Zil": ",YELLOW-PANEL",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "YELLOW-PANEL"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SET MD <MOD <+ ,MDIR 45> 360>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "MD"
                            },
                            {
                              "Zil": "<MOD <+ ,MDIR 45> 360>",
                              "Form": [
                                {
                                  "Atom": "MOD"
                                },
                                {
                                  "Zil": "<+ ,MDIR 45>",
                                  "Form": [
                                    {
                                      "Atom": "+"
                                    },
                                    {
                                      "Zil": ",MDIR",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "MDIR"
                                        }
                                      ]
                                    },
                                    45
                                  ]
                                },
                                360
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The structure rotates clockwise.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The structure rotates clockwise.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<SET MD <MOD <+ ,MDIR 315> 360>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "MD"
                            },
                            {
                              "Zil": "<MOD <+ ,MDIR 315> 360>",
                              "Form": [
                                {
                                  "Atom": "MOD"
                                },
                                {
                                  "Zil": "<+ ,MDIR 315>",
                                  "Form": [
                                    {
                                      "Atom": "+"
                                    },
                                    {
                                      "Zil": ",MDIR",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "MDIR"
                                        }
                                      ]
                                    },
                                    315
                                  ]
                                },
                                360
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The structure rotates counterclockwise.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The structure rotates counterclockwise.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<TELL \"The arrow on the compass rose now indicates \" <GET ,LONGDIRS </ .MD 45>> \".\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The arrow on the compass rose now indicates ",
                      {
                        "Zil": "<GET ,LONGDIRS </ .MD 45>>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",LONGDIRS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "LONGDIRS"
                              }
                            ]
                          },
                          {
                            "Zil": "</ .MD 45>",
                            "Form": [
                              {
                                "Atom": "/"
                              },
                              {
                                "Zil": ".MD",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "MD"
                                  }
                                ]
                              },
                              45
                            ]
                          }
                        ]
                      },
                      ".",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (,WOOD-OPEN-FLAG <SETG WOOD-OPEN-FLAG <>> <TELL \"The pine wall closes quietly.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ",WOOD-OPEN-FLAG",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WOOD-OPEN-FLAG"
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG WOOD-OPEN-FLAG <>>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "WOOD-OPEN-FLAG"
                            },
                            {
                              "Zil": "<>",
                              "Form": []
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The pine wall closes quietly.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The pine wall closes quietly.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<SETG MDIR .MD>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "MDIR"
                      },
                      {
                        "Zil": ".MD",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "MD"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<0? <MOD ,MDIR 180>>",
                    "Form": [
                      {
                        "Atom": "0?"
                      },
                      {
                        "Zil": "<MOD ,MDIR 180>",
                        "Form": [
                          {
                            "Atom": "MOD"
                          },
                          {
                            "Zil": ",MDIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MDIR"
                              }
                            ]
                          },
                          180
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The short pole prevents the structure from rotating.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The short pole prevents the structure from rotating.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The structure shakes slightly but doesn't move.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The structure shakes slightly but doesn't move.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1218",
    "Name": "MENDS",
    "ArgSpec": "(\"AUX\" RM)",
    "Body": [
      {
        "Zil": "<COND (<VERB? CLOSE> <TELL \"You can't do that to the panel.\" CR>) (<OR <VERB? PUSH> <AND <VERB? OPEN> <==? ,PRSO ,PINE-PANEL>>> <COND (<NOT <0? <MOD ,MDIR 180>>> <TELL \"The structure rocks back and forth slightly but doesn't move.\" CR>) (<==? ,PRSO ,MAHOGANY-PANEL> <COND (<SET RM <MIRNS <L? ,MDIR 180>>> <MIRMOVE <0? ,MDIR> .RM>) (T <TELL \"The structure has reached the end of the stone channel and won't\r\nbudge.\" CR>)>) (T <TELL \"The pine wall swings open.\" CR> <COND (<OR <AND <==? ,MLOC ,MRD> <==? ,MDIR 0>> <AND <==? ,MLOC ,MRC> <==? ,MDIR 180>> <==? ,MLOC ,MRG>> <COND (,GUARDIANS-SEEN <TELL \"The pine door opens into the field of view of the Guardians.\" CR>) (T <TELL \"The pine door opens into the field of view of the Guardians of\r\nZork, represented by two identical stone statues carrying bludgeons.\" CR>)> <JIGS-UP \"The Guardians awake, and in perfect unison, utterly destroy you with\r\ntheir stone bludgeons. Satisfied, they resume their posts.\"> <RTRUE>)> <SETG WOOD-OPEN-FLAG T> <ENABLE <QUEUE I-PININ 5>>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? CLOSE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CLOSE"
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't do that to the panel.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't do that to the panel.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<OR <VERB? PUSH> <AND <VERB? OPEN> <==? ,PRSO ,PINE-PANEL>>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<VERB? PUSH>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUSH"
                    }
                  ]
                },
                {
                  "Zil": "<AND <VERB? OPEN> <==? ,PRSO ,PINE-PANEL>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<VERB? OPEN>",
                      "Form": [
                        {
                          "Atom": "VERB?"
                        },
                        {
                          "Atom": "OPEN"
                        }
                      ]
                    },
                    {
                      "Zil": "<==? ,PRSO ,PINE-PANEL>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",PINE-PANEL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PINE-PANEL"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <0? <MOD ,MDIR 180>>> <TELL \"The structure rocks back and forth slightly but doesn't move.\" CR>) (<==? ,PRSO ,MAHOGANY-PANEL> <COND (<SET RM <MIRNS <L? ,MDIR 180>>> <MIRMOVE <0? ,MDIR> .RM>) (T <TELL \"The structure has reached the end of the stone channel and won't\r\nbudge.\" CR>)>) (T <TELL \"The pine wall swings open.\" CR> <COND (<OR <AND <==? ,MLOC ,MRD> <==? ,MDIR 0>> <AND <==? ,MLOC ,MRC> <==? ,MDIR 180>> <==? ,MLOC ,MRG>> <COND (,GUARDIANS-SEEN <TELL \"The pine door opens into the field of view of the Guardians.\" CR>) (T <TELL \"The pine door opens into the field of view of the Guardians of\r\nZork, represented by two identical stone statues carrying bludgeons.\" CR>)> <JIGS-UP \"The Guardians awake, and in perfect unison, utterly destroy you with\r\ntheir stone bludgeons. Satisfied, they resume their posts.\"> <RTRUE>)> <SETG WOOD-OPEN-FLAG T> <ENABLE <QUEUE I-PININ 5>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <0? <MOD ,MDIR 180>>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<0? <MOD ,MDIR 180>>",
                        "Form": [
                          {
                            "Atom": "0?"
                          },
                          {
                            "Zil": "<MOD ,MDIR 180>",
                            "Form": [
                              {
                                "Atom": "MOD"
                              },
                              {
                                "Zil": ",MDIR",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "MDIR"
                                  }
                                ]
                              },
                              180
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The structure rocks back and forth slightly but doesn't move.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The structure rocks back and forth slightly but doesn't move.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<==? ,PRSO ,MAHOGANY-PANEL>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",MAHOGANY-PANEL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MAHOGANY-PANEL"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<SET RM <MIRNS <L? ,MDIR 180>>> <MIRMOVE <0? ,MDIR> .RM>) (T <TELL \"The structure has reached the end of the stone channel and won't\r\nbudge.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<SET RM <MIRNS <L? ,MDIR 180>>>",
                          "Form": [
                            {
                              "Atom": "SET"
                            },
                            {
                              "Atom": "RM"
                            },
                            {
                              "Zil": "<MIRNS <L? ,MDIR 180>>",
                              "Form": [
                                {
                                  "Atom": "MIRNS"
                                },
                                {
                                  "Zil": "<L? ,MDIR 180>",
                                  "Form": [
                                    {
                                      "Atom": "L?"
                                    },
                                    {
                                      "Zil": ",MDIR",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "MDIR"
                                        }
                                      ]
                                    },
                                    180
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<MIRMOVE <0? ,MDIR> .RM>",
                          "Form": [
                            {
                              "Atom": "MIRMOVE"
                            },
                            {
                              "Zil": "<0? ,MDIR>",
                              "Form": [
                                {
                                  "Atom": "0?"
                                },
                                {
                                  "Zil": ",MDIR",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "MDIR"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": ".RM",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "RM"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"The structure has reached the end of the stone channel and won't\r\nbudge.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The structure has reached the end of the stone channel and won't\r\nbudge.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The pine wall swings open.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The pine wall swings open.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<OR <AND <==? ,MLOC ,MRD> <==? ,MDIR 0>> <AND <==? ,MLOC ,MRC> <==? ,MDIR 180>> <==? ,MLOC ,MRG>> <COND (,GUARDIANS-SEEN <TELL \"The pine door opens into the field of view of the Guardians.\" CR>) (T <TELL \"The pine door opens into the field of view of the Guardians of\r\nZork, represented by two identical stone statues carrying bludgeons.\" CR>)> <JIGS-UP \"The Guardians awake, and in perfect unison, utterly destroy you with\r\ntheir stone bludgeons. Satisfied, they resume their posts.\"> <RTRUE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<OR <AND <==? ,MLOC ,MRD> <==? ,MDIR 0>> <AND <==? ,MLOC ,MRC> <==? ,MDIR 180>> <==? ,MLOC ,MRG>>",
                          "Form": [
                            {
                              "Atom": "OR"
                            },
                            {
                              "Zil": "<AND <==? ,MLOC ,MRD> <==? ,MDIR 0>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<==? ,MLOC ,MRD>",
                                  "Form": [
                                    {
                                      "Atom": "==?"
                                    },
                                    {
                                      "Zil": ",MLOC",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "MLOC"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",MRD",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "MRD"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<==? ,MDIR 0>",
                                  "Form": [
                                    {
                                      "Atom": "==?"
                                    },
                                    {
                                      "Zil": ",MDIR",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "MDIR"
                                        }
                                      ]
                                    },
                                    0
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<AND <==? ,MLOC ,MRC> <==? ,MDIR 180>>",
                              "Form": [
                                {
                                  "Atom": "AND"
                                },
                                {
                                  "Zil": "<==? ,MLOC ,MRC>",
                                  "Form": [
                                    {
                                      "Atom": "==?"
                                    },
                                    {
                                      "Zil": ",MLOC",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "MLOC"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",MRC",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "MRC"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Zil": "<==? ,MDIR 180>",
                                  "Form": [
                                    {
                                      "Atom": "==?"
                                    },
                                    {
                                      "Zil": ",MDIR",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "MDIR"
                                        }
                                      ]
                                    },
                                    180
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<==? ,MLOC ,MRG>",
                              "Form": [
                                {
                                  "Atom": "==?"
                                },
                                {
                                  "Zil": ",MLOC",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "MLOC"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",MRG",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "MRG"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<COND (,GUARDIANS-SEEN <TELL \"The pine door opens into the field of view of the Guardians.\" CR>) (T <TELL \"The pine door opens into the field of view of the Guardians of\r\nZork, represented by two identical stone statues carrying bludgeons.\" CR>)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": ",GUARDIANS-SEEN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "GUARDIANS-SEEN"
                                  }
                                ]
                              },
                              {
                                "Zil": "<TELL \"The pine door opens into the field of view of the Guardians.\" CR>",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "The pine door opens into the field of view of the Guardians.",
                                  {
                                    "Atom": "CR"
                                  }
                                ]
                              }
                            ],
                            [
                              {
                                "Atom": "T"
                              },
                              {
                                "Zil": "<TELL \"The pine door opens into the field of view of the Guardians of\r\nZork, represented by two identical stone statues carrying bludgeons.\" CR>",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "The pine door opens into the field of view of the Guardians of\r\nZork, represented by two identical stone statues carrying bludgeons.",
                                  {
                                    "Atom": "CR"
                                  }
                                ]
                              }
                            ]
                          ]
                        },
                        {
                          "Zil": "<JIGS-UP \"The Guardians awake, and in perfect unison, utterly destroy you with\r\ntheir stone bludgeons. Satisfied, they resume their posts.\">",
                          "Form": [
                            {
                              "Atom": "JIGS-UP"
                            },
                            "The Guardians awake, and in perfect unison, utterly destroy you with\r\ntheir stone bludgeons. Satisfied, they resume their posts."
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<SETG WOOD-OPEN-FLAG T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "WOOD-OPEN-FLAG"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<ENABLE <QUEUE I-PININ 5>>",
                    "Form": [
                      {
                        "Atom": "ENABLE"
                      },
                      {
                        "Zil": "<QUEUE I-PININ 5>",
                        "Form": [
                          {
                            "Atom": "QUEUE"
                          },
                          {
                            "Atom": "I-PININ"
                          },
                          5
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1253",
    "Name": "I-PININ",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (,WOOD-OPEN-FLAG <SETG WOOD-OPEN-FLAG <>> <TELL \"The pine wall closes quietly.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",WOOD-OPEN-FLAG",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "WOOD-OPEN-FLAG"
                }
              ]
            },
            {
              "Zil": "<SETG WOOD-OPEN-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "WOOD-OPEN-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<TELL \"The pine wall closes quietly.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The pine wall closes quietly.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1258",
    "Name": "MIRMOVE",
    "ArgSpec": "(NORTH? RM \"AUX\" (PU? <>) (LOSE <>))",
    "Body": [
      {
        "Zil": "<COND (<NOT <0? ,POLEUP-FLAG>> <SET PU? T>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <0? ,POLEUP-FLAG>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<0? ,POLEUP-FLAG>",
                  "Form": [
                    {
                      "Atom": "0?"
                    },
                    {
                      "Zil": ",POLEUP-FLAG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "POLEUP-FLAG"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET PU? T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "PU?"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<TELL <COND (.PU? \"The structure sways unsteadily \") (T \"The structure slides \")> <COND (.NORTH? \"north\") (T \"south\")> \" and stops over another compass rose.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          {
            "Zil": "<COND (.PU? \"The structure sways unsteadily \") (T \"The structure slides \")>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": ".PU?",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "PU?"
                    }
                  ]
                },
                "The structure sways unsteadily "
              ],
              [
                {
                  "Atom": "T"
                },
                "The structure slides "
              ]
            ]
          },
          {
            "Zil": "<COND (.NORTH? \"north\") (T \"south\")>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": ".NORTH?",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "NORTH?"
                    }
                  ]
                },
                "north"
              ],
              [
                {
                  "Atom": "T"
                },
                "south"
              ]
            ]
          },
          " and stops over another compass rose.",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<SETG MLOC .RM>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "MLOC"
          },
          {
            "Zil": ".RM",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "RM"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND <==? .RM ,MRG> <==? ,HERE ,IN-MIRROR>> <COND (.PU? <SET LOSE T>) (<OR <NOT ,MR1-FLAG> <NOT ,MR2-FLAG>> <SET LOSE T>) (<OR ,MIRROR-OPEN-FLAG ,WOOD-OPEN-FLAG> <SET LOSE T>)> <COND (.LOSE <COND (,GUARDIANS-SEEN <JIGS-UP \"Suddenly the Guardians realize someone is trying to sneak by them in\r\nthe structure. They awake and, in perfect unison, hammer the contents\r\nof the box (in other words you) to pulp. They then resume their posts,\r\nsatisfied.\">) (T <JIGS-UP \"Suddenly, two identical stone bludgeons come through the roof and\r\nhammer the contents of the box to pulp. That includes you.\">)>)> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? .RM ,MRG> <==? ,HERE ,IN-MIRROR>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RM ,MRG>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RM",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RM"
                        }
                      ]
                    },
                    {
                      "Zil": ",MRG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MRG"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<==? ,HERE ,IN-MIRROR>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",IN-MIRROR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "IN-MIRROR"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (.PU? <SET LOSE T>) (<OR <NOT ,MR1-FLAG> <NOT ,MR2-FLAG>> <SET LOSE T>) (<OR ,MIRROR-OPEN-FLAG ,WOOD-OPEN-FLAG> <SET LOSE T>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ".PU?",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "PU?"
                      }
                    ]
                  },
                  {
                    "Zil": "<SET LOSE T>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "LOSE"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<OR <NOT ,MR1-FLAG> <NOT ,MR2-FLAG>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<NOT ,MR1-FLAG>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",MR1-FLAG",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MR1-FLAG"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT ,MR2-FLAG>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",MR2-FLAG",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MR2-FLAG"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET LOSE T>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "LOSE"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<OR ,MIRROR-OPEN-FLAG ,WOOD-OPEN-FLAG>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": ",MIRROR-OPEN-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MIRROR-OPEN-FLAG"
                          }
                        ]
                      },
                      {
                        "Zil": ",WOOD-OPEN-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WOOD-OPEN-FLAG"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET LOSE T>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "LOSE"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (.LOSE <COND (,GUARDIANS-SEEN <JIGS-UP \"Suddenly the Guardians realize someone is trying to sneak by them in\r\nthe structure. They awake and, in perfect unison, hammer the contents\r\nof the box (in other words you) to pulp. They then resume their posts,\r\nsatisfied.\">) (T <JIGS-UP \"Suddenly, two identical stone bludgeons come through the roof and\r\nhammer the contents of the box to pulp. That includes you.\">)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ".LOSE",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "LOSE"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (,GUARDIANS-SEEN <JIGS-UP \"Suddenly the Guardians realize someone is trying to sneak by them in\r\nthe structure. They awake and, in perfect unison, hammer the contents\r\nof the box (in other words you) to pulp. They then resume their posts,\r\nsatisfied.\">) (T <JIGS-UP \"Suddenly, two identical stone bludgeons come through the roof and\r\nhammer the contents of the box to pulp. That includes you.\">)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ",GUARDIANS-SEEN",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "GUARDIANS-SEEN"
                            }
                          ]
                        },
                        {
                          "Zil": "<JIGS-UP \"Suddenly the Guardians realize someone is trying to sneak by them in\r\nthe structure. They awake and, in perfect unison, hammer the contents\r\nof the box (in other words you) to pulp. They then resume their posts,\r\nsatisfied.\">",
                          "Form": [
                            {
                              "Atom": "JIGS-UP"
                            },
                            "Suddenly the Guardians realize someone is trying to sneak by them in\r\nthe structure. They awake and, in perfect unison, hammer the contents\r\nof the box (in other words you) to pulp. They then resume their posts,\r\nsatisfied."
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<JIGS-UP \"Suddenly, two identical stone bludgeons come through the roof and\r\nhammer the contents of the box to pulp. That includes you.\">",
                          "Form": [
                            {
                              "Atom": "JIGS-UP"
                            },
                            "Suddenly, two identical stone bludgeons come through the roof and\r\nhammer the contents of the box to pulp. That includes you."
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Atom": "T"
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1286",
    "Name": "SHORT-POLE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? RAISE MOVE> <COND (<==? ,POLEUP-FLAG 2> <TELL \"The pole cannot be raised further.\" CR>) (T <SETG POLEUP-FLAG 2> <TELL \"The pole is now slightly above the floor.\" CR>)>) (<OR <AND <VERB? PUT> <==? ,PRSI ,CHANNEL>> <VERB? PUSH LOWER>> <COND (<0? ,POLEUP-FLAG> <TELL \"The pole cannot be lowered further.\" CR>) (<0? <MOD ,MDIR 180>> <TELL \"The pole is lowered into the channel.\" CR> <SETG POLEUP-FLAG 0> T) (<AND <==? ,MDIR 270> <==? ,MLOC ,MRB>> <SETG POLEUP-FLAG 0> <TELL \"The pole is lowered into the stone hole.\" CR>) (<==? ,POLEUP-FLAG 1> <TELL \"The pole is already resting on the floor.\" CR>) (T <SETG POLEUP-FLAG 1> <TELL \"The pole now rests on the stone floor.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? RAISE MOVE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "RAISE"
                },
                {
                  "Atom": "MOVE"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,POLEUP-FLAG 2> <TELL \"The pole cannot be raised further.\" CR>) (T <SETG POLEUP-FLAG 2> <TELL \"The pole is now slightly above the floor.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,POLEUP-FLAG 2>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",POLEUP-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "POLEUP-FLAG"
                          }
                        ]
                      },
                      2
                    ]
                  },
                  {
                    "Zil": "<TELL \"The pole cannot be raised further.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The pole cannot be raised further.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SETG POLEUP-FLAG 2>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "POLEUP-FLAG"
                      },
                      2
                    ]
                  },
                  {
                    "Zil": "<TELL \"The pole is now slightly above the floor.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The pole is now slightly above the floor.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<OR <AND <VERB? PUT> <==? ,PRSI ,CHANNEL>> <VERB? PUSH LOWER>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<AND <VERB? PUT> <==? ,PRSI ,CHANNEL>>",
                  "Form": [
                    {
                      "Atom": "AND"
                    },
                    {
                      "Zil": "<VERB? PUT>",
                      "Form": [
                        {
                          "Atom": "VERB?"
                        },
                        {
                          "Atom": "PUT"
                        }
                      ]
                    },
                    {
                      "Zil": "<==? ,PRSI ,CHANNEL>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ",PRSI",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSI"
                            }
                          ]
                        },
                        {
                          "Zil": ",CHANNEL",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CHANNEL"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<VERB? PUSH LOWER>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUSH"
                    },
                    {
                      "Atom": "LOWER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<0? ,POLEUP-FLAG> <TELL \"The pole cannot be lowered further.\" CR>) (<0? <MOD ,MDIR 180>> <TELL \"The pole is lowered into the channel.\" CR> <SETG POLEUP-FLAG 0> T) (<AND <==? ,MDIR 270> <==? ,MLOC ,MRB>> <SETG POLEUP-FLAG 0> <TELL \"The pole is lowered into the stone hole.\" CR>) (<==? ,POLEUP-FLAG 1> <TELL \"The pole is already resting on the floor.\" CR>) (T <SETG POLEUP-FLAG 1> <TELL \"The pole now rests on the stone floor.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<0? ,POLEUP-FLAG>",
                    "Form": [
                      {
                        "Atom": "0?"
                      },
                      {
                        "Zil": ",POLEUP-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "POLEUP-FLAG"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The pole cannot be lowered further.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The pole cannot be lowered further.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<0? <MOD ,MDIR 180>>",
                    "Form": [
                      {
                        "Atom": "0?"
                      },
                      {
                        "Zil": "<MOD ,MDIR 180>",
                        "Form": [
                          {
                            "Atom": "MOD"
                          },
                          {
                            "Zil": ",MDIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MDIR"
                              }
                            ]
                          },
                          180
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The pole is lowered into the channel.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The pole is lowered into the channel.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG POLEUP-FLAG 0>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "POLEUP-FLAG"
                      },
                      0
                    ]
                  },
                  {
                    "Atom": "T"
                  }
                ],
                [
                  {
                    "Zil": "<AND <==? ,MDIR 270> <==? ,MLOC ,MRB>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<==? ,MDIR 270>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",MDIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MDIR"
                              }
                            ]
                          },
                          270
                        ]
                      },
                      {
                        "Zil": "<==? ,MLOC ,MRB>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",MLOC",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MLOC"
                              }
                            ]
                          },
                          {
                            "Zil": ",MRB",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "MRB"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG POLEUP-FLAG 0>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "POLEUP-FLAG"
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<TELL \"The pole is lowered into the stone hole.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The pole is lowered into the stone hole.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<==? ,POLEUP-FLAG 1>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",POLEUP-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "POLEUP-FLAG"
                          }
                        ]
                      },
                      1
                    ]
                  },
                  {
                    "Zil": "<TELL \"The pole is already resting on the floor.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The pole is already resting on the floor.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SETG POLEUP-FLAG 1>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "POLEUP-FLAG"
                      },
                      1
                    ]
                  },
                  {
                    "Zil": "<TELL \"The pole now rests on the stone floor.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The pole now rests on the stone floor.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1312",
    "Name": "DUNGEON-MASTER-F",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-OBJDESC> <RFALSE>) (<==? ,WINNER ,DUNGEON-MASTER> <COND (<VERB? FOLLOW> <COND (<IN? ,DUNGEON-MASTER <LOC ,PLAYER>> <ENABLE <QUEUE I-FOLIN -1>> <TELL \"The dungeon master answers, \\\"I will follow.\\\"\" CR>) (T <TELL \"The dungeon master's voice replies, \\\"You must come here first!\\\"\" CR>)>) (<VERB? STAY WAIT> <QUEUE I-FOLIN 0> <TELL \"The dungeon master answers, \\\"I will stay.\\\"\" CR>) (<VERB? WALK> <COND (<AND <EQUAL? ,PRSO ,P?SOUTH ,P?ENTER> <==? ,HERE ,NORTH-CORRIDOR>> <TELL \"\\\"I am not permitted to enter the prison cell.\\\"\" CR>) (<AND <==? ,PRSO ,P?NORTH> <==? ,HERE ,NORTH-CORRIDOR>> <MOVE ,DUNGEON-MASTER ,PARAPET> <SETG HERE ,PARAPET> <TELL \"\\\"Very well. I am at the parapet!\\\"\" CR> <QUEUE I-FOLIN 0>) (<AND <EQUAL? ,PRSO ,P?NORTH ,P?ENTER> <==? ,HERE ,SOUTH-CORRIDOR>> <TELL \"\\\"I am not permitted to enter the prison cell.\\\"\" CR>) (T <TELL \"\\\"I prefer to stay where I am, thank you.\\\"\" CR>)>) (<AND <VERB? WALK-TO> <==? ,PRSO ,PARAPET-OBJ>> <MOVE ,DUNGEON-MASTER ,PARAPET> <SETG HERE ,PARAPET> <QUEUE I-FOLIN 0> <TELL \"\\\"Very well!\\\"\" CR>) (<VERB? TAKE> <TELL \"\\\"I will have no use for that, I am afraid.\\\"\" CR>) (<AND <VERB? OPEN> <==? ,PRSO ,DUNGEON-DOOR> ,IN-DUNGEON> <TELL \"The dungeon master appears angered. \\\"Do not run from your quest: you are\r\nnearing the end!\\\"\" CR>) (<VERB? PUSH TURN SPIN FOLLOW STAY OPEN CLOSE WAIT ATTACK WALK-TO> <COND (<VERB? STAY FOLLOW WAIT> T) (T <TELL \"\\\"If you wish,\\\" he replies.\" CR>)> <RFALSE>) (T <TELL \"\\\"Do not be foolish! Consider the end of your quest!\\\"\" CR>)>) (<VERB? EXAMINE> <TELL \"He is dressed simply in a hood and cloak, wearing an amulet and ring,\r\ncarrying an old book under one arm, and leaning on a wooden staff. A single\r\nkey, as if to a prison cell, hangs from his belt.\" CR>) (<VERB? ATTACK MUNG> <REALLY-DEAD \"The dungeon master is taken by surprise. He dodges your blow, and\r\nwith a disappointed expression on his face, traces a complicated\r\npattern in the air with his staff. You crumble into dust.\">) (<VERB? TAKE> <TELL \"\\\"I'm willing to accompany you, but not ride in your pocket!\\\"\" CR>) (<AND <VERB? GIVE> <==? ,PRSI ,DUNGEON-MASTER>> <TELL \"\\\"I have no need for those things.\\\"\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-OBJDESC>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-OBJDESC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-OBJDESC"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,WINNER ,DUNGEON-MASTER>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                },
                {
                  "Zil": ",DUNGEON-MASTER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "DUNGEON-MASTER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<VERB? FOLLOW> <COND (<IN? ,DUNGEON-MASTER <LOC ,PLAYER>> <ENABLE <QUEUE I-FOLIN -1>> <TELL \"The dungeon master answers, \\\"I will follow.\\\"\" CR>) (T <TELL \"The dungeon master's voice replies, \\\"You must come here first!\\\"\" CR>)>) (<VERB? STAY WAIT> <QUEUE I-FOLIN 0> <TELL \"The dungeon master answers, \\\"I will stay.\\\"\" CR>) (<VERB? WALK> <COND (<AND <EQUAL? ,PRSO ,P?SOUTH ,P?ENTER> <==? ,HERE ,NORTH-CORRIDOR>> <TELL \"\\\"I am not permitted to enter the prison cell.\\\"\" CR>) (<AND <==? ,PRSO ,P?NORTH> <==? ,HERE ,NORTH-CORRIDOR>> <MOVE ,DUNGEON-MASTER ,PARAPET> <SETG HERE ,PARAPET> <TELL \"\\\"Very well. I am at the parapet!\\\"\" CR> <QUEUE I-FOLIN 0>) (<AND <EQUAL? ,PRSO ,P?NORTH ,P?ENTER> <==? ,HERE ,SOUTH-CORRIDOR>> <TELL \"\\\"I am not permitted to enter the prison cell.\\\"\" CR>) (T <TELL \"\\\"I prefer to stay where I am, thank you.\\\"\" CR>)>) (<AND <VERB? WALK-TO> <==? ,PRSO ,PARAPET-OBJ>> <MOVE ,DUNGEON-MASTER ,PARAPET> <SETG HERE ,PARAPET> <QUEUE I-FOLIN 0> <TELL \"\\\"Very well!\\\"\" CR>) (<VERB? TAKE> <TELL \"\\\"I will have no use for that, I am afraid.\\\"\" CR>) (<AND <VERB? OPEN> <==? ,PRSO ,DUNGEON-DOOR> ,IN-DUNGEON> <TELL \"The dungeon master appears angered. \\\"Do not run from your quest: you are\r\nnearing the end!\\\"\" CR>) (<VERB? PUSH TURN SPIN FOLLOW STAY OPEN CLOSE WAIT ATTACK WALK-TO> <COND (<VERB? STAY FOLLOW WAIT> T) (T <TELL \"\\\"If you wish,\\\" he replies.\" CR>)> <RFALSE>) (T <TELL \"\\\"Do not be foolish! Consider the end of your quest!\\\"\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<VERB? FOLLOW>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "FOLLOW"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<IN? ,DUNGEON-MASTER <LOC ,PLAYER>> <ENABLE <QUEUE I-FOLIN -1>> <TELL \"The dungeon master answers, \\\"I will follow.\\\"\" CR>) (T <TELL \"The dungeon master's voice replies, \\\"You must come here first!\\\"\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<IN? ,DUNGEON-MASTER <LOC ,PLAYER>>",
                          "Form": [
                            {
                              "Atom": "IN?"
                            },
                            {
                              "Zil": ",DUNGEON-MASTER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "DUNGEON-MASTER"
                                }
                              ]
                            },
                            {
                              "Zil": "<LOC ,PLAYER>",
                              "Form": [
                                {
                                  "Atom": "LOC"
                                },
                                {
                                  "Zil": ",PLAYER",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PLAYER"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<ENABLE <QUEUE I-FOLIN -1>>",
                          "Form": [
                            {
                              "Atom": "ENABLE"
                            },
                            {
                              "Zil": "<QUEUE I-FOLIN -1>",
                              "Form": [
                                {
                                  "Atom": "QUEUE"
                                },
                                {
                                  "Atom": "I-FOLIN"
                                },
                                -1
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The dungeon master answers, \\\"I will follow.\\\"\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The dungeon master answers, \"I will follow.\"",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"The dungeon master's voice replies, \\\"You must come here first!\\\"\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The dungeon master's voice replies, \"You must come here first!\"",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<VERB? STAY WAIT>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "STAY"
                      },
                      {
                        "Atom": "WAIT"
                      }
                    ]
                  },
                  {
                    "Zil": "<QUEUE I-FOLIN 0>",
                    "Form": [
                      {
                        "Atom": "QUEUE"
                      },
                      {
                        "Atom": "I-FOLIN"
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<TELL \"The dungeon master answers, \\\"I will stay.\\\"\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The dungeon master answers, \"I will stay.\"",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<VERB? WALK>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "WALK"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<AND <EQUAL? ,PRSO ,P?SOUTH ,P?ENTER> <==? ,HERE ,NORTH-CORRIDOR>> <TELL \"\\\"I am not permitted to enter the prison cell.\\\"\" CR>) (<AND <==? ,PRSO ,P?NORTH> <==? ,HERE ,NORTH-CORRIDOR>> <MOVE ,DUNGEON-MASTER ,PARAPET> <SETG HERE ,PARAPET> <TELL \"\\\"Very well. I am at the parapet!\\\"\" CR> <QUEUE I-FOLIN 0>) (<AND <EQUAL? ,PRSO ,P?NORTH ,P?ENTER> <==? ,HERE ,SOUTH-CORRIDOR>> <TELL \"\\\"I am not permitted to enter the prison cell.\\\"\" CR>) (T <TELL \"\\\"I prefer to stay where I am, thank you.\\\"\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<AND <EQUAL? ,PRSO ,P?SOUTH ,P?ENTER> <==? ,HERE ,NORTH-CORRIDOR>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": "<EQUAL? ,PRSO ,P?SOUTH ,P?ENTER>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ",PRSO",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PRSO"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P?SOUTH",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P?SOUTH"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P?ENTER",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P?ENTER"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<==? ,HERE ,NORTH-CORRIDOR>",
                              "Form": [
                                {
                                  "Atom": "==?"
                                },
                                {
                                  "Zil": ",HERE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "HERE"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",NORTH-CORRIDOR",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "NORTH-CORRIDOR"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"\\\"I am not permitted to enter the prison cell.\\\"\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "\"I am not permitted to enter the prison cell.\"",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<AND <==? ,PRSO ,P?NORTH> <==? ,HERE ,NORTH-CORRIDOR>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": "<==? ,PRSO ,P?NORTH>",
                              "Form": [
                                {
                                  "Atom": "==?"
                                },
                                {
                                  "Zil": ",PRSO",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PRSO"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P?NORTH",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P?NORTH"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<==? ,HERE ,NORTH-CORRIDOR>",
                              "Form": [
                                {
                                  "Atom": "==?"
                                },
                                {
                                  "Zil": ",HERE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "HERE"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",NORTH-CORRIDOR",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "NORTH-CORRIDOR"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<MOVE ,DUNGEON-MASTER ,PARAPET>",
                          "Form": [
                            {
                              "Atom": "MOVE"
                            },
                            {
                              "Zil": ",DUNGEON-MASTER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "DUNGEON-MASTER"
                                }
                              ]
                            },
                            {
                              "Zil": ",PARAPET",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PARAPET"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG HERE ,PARAPET>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "HERE"
                            },
                            {
                              "Zil": ",PARAPET",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PARAPET"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"\\\"Very well. I am at the parapet!\\\"\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "\"Very well. I am at the parapet!\"",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<QUEUE I-FOLIN 0>",
                          "Form": [
                            {
                              "Atom": "QUEUE"
                            },
                            {
                              "Atom": "I-FOLIN"
                            },
                            0
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<AND <EQUAL? ,PRSO ,P?NORTH ,P?ENTER> <==? ,HERE ,SOUTH-CORRIDOR>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": "<EQUAL? ,PRSO ,P?NORTH ,P?ENTER>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ",PRSO",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PRSO"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P?NORTH",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P?NORTH"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",P?ENTER",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P?ENTER"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<==? ,HERE ,SOUTH-CORRIDOR>",
                              "Form": [
                                {
                                  "Atom": "==?"
                                },
                                {
                                  "Zil": ",HERE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "HERE"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",SOUTH-CORRIDOR",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "SOUTH-CORRIDOR"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"\\\"I am not permitted to enter the prison cell.\\\"\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "\"I am not permitted to enter the prison cell.\"",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"\\\"I prefer to stay where I am, thank you.\\\"\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "\"I prefer to stay where I am, thank you.\"",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <VERB? WALK-TO> <==? ,PRSO ,PARAPET-OBJ>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<VERB? WALK-TO>",
                        "Form": [
                          {
                            "Atom": "VERB?"
                          },
                          {
                            "Atom": "WALK-TO"
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,PRSO ,PARAPET-OBJ>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",PARAPET-OBJ",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PARAPET-OBJ"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<MOVE ,DUNGEON-MASTER ,PARAPET>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ",DUNGEON-MASTER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "DUNGEON-MASTER"
                          }
                        ]
                      },
                      {
                        "Zil": ",PARAPET",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PARAPET"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG HERE ,PARAPET>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "HERE"
                      },
                      {
                        "Zil": ",PARAPET",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PARAPET"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<QUEUE I-FOLIN 0>",
                    "Form": [
                      {
                        "Atom": "QUEUE"
                      },
                      {
                        "Atom": "I-FOLIN"
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<TELL \"\\\"Very well!\\\"\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "\"Very well!\"",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<VERB? TAKE>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "TAKE"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"\\\"I will have no use for that, I am afraid.\\\"\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "\"I will have no use for that, I am afraid.\"",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <VERB? OPEN> <==? ,PRSO ,DUNGEON-DOOR> ,IN-DUNGEON>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<VERB? OPEN>",
                        "Form": [
                          {
                            "Atom": "VERB?"
                          },
                          {
                            "Atom": "OPEN"
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,PRSO ,DUNGEON-DOOR>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",DUNGEON-DOOR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "DUNGEON-DOOR"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",IN-DUNGEON",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "IN-DUNGEON"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The dungeon master appears angered. \\\"Do not run from your quest: you are\r\nnearing the end!\\\"\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The dungeon master appears angered. \"Do not run from your quest: you are\r\nnearing the end!\"",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<VERB? PUSH TURN SPIN FOLLOW STAY OPEN CLOSE WAIT ATTACK WALK-TO>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "PUSH"
                      },
                      {
                        "Atom": "TURN"
                      },
                      {
                        "Atom": "SPIN"
                      },
                      {
                        "Atom": "FOLLOW"
                      },
                      {
                        "Atom": "STAY"
                      },
                      {
                        "Atom": "OPEN"
                      },
                      {
                        "Atom": "CLOSE"
                      },
                      {
                        "Atom": "WAIT"
                      },
                      {
                        "Atom": "ATTACK"
                      },
                      {
                        "Atom": "WALK-TO"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<VERB? STAY FOLLOW WAIT> T) (T <TELL \"\\\"If you wish,\\\" he replies.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<VERB? STAY FOLLOW WAIT>",
                          "Form": [
                            {
                              "Atom": "VERB?"
                            },
                            {
                              "Atom": "STAY"
                            },
                            {
                              "Atom": "FOLLOW"
                            },
                            {
                              "Atom": "WAIT"
                            }
                          ]
                        },
                        {
                          "Atom": "T"
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"\\\"If you wish,\\\" he replies.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "\"If you wish,\" he replies.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"\\\"Do not be foolish! Consider the end of your quest!\\\"\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "\"Do not be foolish! Consider the end of your quest!\"",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"He is dressed simply in a hood and cloak, wearing an amulet and ring,\r\ncarrying an old book under one arm, and leaning on a wooden staff. A single\r\nkey, as if to a prison cell, hangs from his belt.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "He is dressed simply in a hood and cloak, wearing an amulet and ring,\r\ncarrying an old book under one arm, and leaning on a wooden staff. A single\r\nkey, as if to a prison cell, hangs from his belt.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? ATTACK MUNG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "ATTACK"
                },
                {
                  "Atom": "MUNG"
                }
              ]
            },
            {
              "Zil": "<REALLY-DEAD \"The dungeon master is taken by surprise. He dodges your blow, and\r\nwith a disappointed expression on his face, traces a complicated\r\npattern in the air with his staff. You crumble into dust.\">",
              "Form": [
                {
                  "Atom": "REALLY-DEAD"
                },
                "The dungeon master is taken by surprise. He dodges your blow, and\r\nwith a disappointed expression on his face, traces a complicated\r\npattern in the air with his staff. You crumble into dust."
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? TAKE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TAKE"
                }
              ]
            },
            {
              "Zil": "<TELL \"\\\"I'm willing to accompany you, but not ride in your pocket!\\\"\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "\"I'm willing to accompany you, but not ride in your pocket!\"",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? GIVE> <==? ,PRSI ,DUNGEON-MASTER>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? GIVE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "GIVE"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,DUNGEON-MASTER>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",DUNGEON-MASTER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "DUNGEON-MASTER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"\\\"I have no need for those things.\\\"\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "\"I have no need for those things.\"",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1385",
    "Name": "MASTER-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<EQUAL? ,HERE ,PRISON-CELL ,GOOD-CELL> <COND (<HELLO? ,MASTER> <TELL \"He can't hear you.\" CR>) (T <TELL \"He is not here.\" CR>)>) (<VERB? TELL> <COND (,IN-DUNGEON <SETG PRSO ,DUNGEON-MASTER> <RFALSE>) (ELSE <SETG P-CONT <>> <SETG QUOTE-FLAG <>> <TELL \"The dungeon master isn't here.\" CR>)>) (<AND <VERB? GIVE SGIVE> <IN? ,DUNGEON-MASTER ,HERE>> <TELL \"He politely refuses your offer.\" CR>) (<AND <VERB? EXAMINE> <EQUAL? ,HERE ,CELL ,NORTH-CORRIDOR> <IN? ,DUNGEON-MASTER ,PARAPET>> <TELL \"The dungeon master is standing on the parapet.\" CR>) (T <TELL \"The dungeon master isn't here.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,HERE ,PRISON-CELL ,GOOD-CELL>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",PRISON-CELL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRISON-CELL"
                    }
                  ]
                },
                {
                  "Zil": ",GOOD-CELL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GOOD-CELL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<HELLO? ,MASTER> <TELL \"He can't hear you.\" CR>) (T <TELL \"He is not here.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<HELLO? ,MASTER>",
                    "Form": [
                      {
                        "Atom": "HELLO?"
                      },
                      {
                        "Zil": ",MASTER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MASTER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"He can't hear you.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "He can't hear you.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"He is not here.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "He is not here.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? TELL>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TELL"
                }
              ]
            },
            {
              "Zil": "<COND (,IN-DUNGEON <SETG PRSO ,DUNGEON-MASTER> <RFALSE>) (ELSE <SETG P-CONT <>> <SETG QUOTE-FLAG <>> <TELL \"The dungeon master isn't here.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",IN-DUNGEON",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "IN-DUNGEON"
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG PRSO ,DUNGEON-MASTER>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "PRSO"
                      },
                      {
                        "Zil": ",DUNGEON-MASTER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "DUNGEON-MASTER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "ELSE"
                  },
                  {
                    "Zil": "<SETG P-CONT <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-CONT"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG QUOTE-FLAG <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "QUOTE-FLAG"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The dungeon master isn't here.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The dungeon master isn't here.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? GIVE SGIVE> <IN? ,DUNGEON-MASTER ,HERE>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? GIVE SGIVE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "GIVE"
                    },
                    {
                      "Atom": "SGIVE"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,DUNGEON-MASTER ,HERE>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",DUNGEON-MASTER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "DUNGEON-MASTER"
                        }
                      ]
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"He politely refuses your offer.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "He politely refuses your offer.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? EXAMINE> <EQUAL? ,HERE ,CELL ,NORTH-CORRIDOR> <IN? ,DUNGEON-MASTER ,PARAPET>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? EXAMINE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "EXAMINE"
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,HERE ,CELL ,NORTH-CORRIDOR>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",CELL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CELL"
                        }
                      ]
                    },
                    {
                      "Zil": ",NORTH-CORRIDOR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "NORTH-CORRIDOR"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,DUNGEON-MASTER ,PARAPET>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",DUNGEON-MASTER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "DUNGEON-MASTER"
                        }
                      ]
                    },
                    {
                      "Zil": ",PARAPET",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PARAPET"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The dungeon master is standing on the parapet.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The dungeon master is standing on the parapet.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"The dungeon master isn't here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The dungeon master isn't here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1409",
    "Name": "BEHIND-DOOR-F",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<AND <==? .RARG ,M-ENTER> <NOT ,DM-SEEN>> <ENABLE <QUEUE I-FOLIN -1>> <SETG DM-SEEN T>) (<==? .RARG ,M-LOOK> <TELL \"You are in a narrow north-south corridor. At the south end is a door\r\nand at the north end is an east-west corridor. The door is \"> <DPR ,DUNGEON-DOOR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? .RARG ,M-ENTER> <NOT ,DM-SEEN>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-ENTER>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-ENTER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-ENTER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,DM-SEEN>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",DM-SEEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "DM-SEEN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-FOLIN -1>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-FOLIN -1>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-FOLIN"
                    },
                    -1
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG DM-SEEN T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "DM-SEEN"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are in a narrow north-south corridor. At the south end is a door\r\nand at the north end is an east-west corridor. The door is \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are in a narrow north-south corridor. At the south end is a door\r\nand at the north end is an east-west corridor. The door is "
              ]
            },
            {
              "Zil": "<DPR ,DUNGEON-DOOR>",
              "Form": [
                {
                  "Atom": "DPR"
                },
                {
                  "Zil": ",DUNGEON-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "DUNGEON-DOOR"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1419",
    "Name": "FRONT-DOOR-F",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-ENTER> <QUEUE I-FOLIN 0>) (<==? .RARG ,M-LOOK> <LOOK-TO <> ,MRD> <TELL \"The wooden door has a barred panel in it at about head height. The\r\ndoor itself is \"> <DPR ,DUNGEON-DOOR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-ENTER>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-ENTER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-ENTER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<QUEUE I-FOLIN 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-FOLIN"
                },
                0
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<LOOK-TO <> ,MRD>",
              "Form": [
                {
                  "Atom": "LOOK-TO"
                },
                {
                  "Zil": "<>",
                  "Form": []
                },
                {
                  "Zil": ",MRD",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRD"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The wooden door has a barred panel in it at about head height. The\r\ndoor itself is \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The wooden door has a barred panel in it at about head height. The\r\ndoor itself is "
              ]
            },
            {
              "Zil": "<DPR ,DUNGEON-DOOR>",
              "Form": [
                {
                  "Atom": "DPR"
                },
                {
                  "Zil": ",DUNGEON-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "DUNGEON-DOOR"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1429",
    "Name": "LOOK-LIKE-DM?",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<AND <IN? ,CLOAK ,WINNER> <IN? ,HOOD ,WINNER> <IN? ,AMULET ,WINNER> <IN? ,STAFF ,WINNER> <IN? ,RING ,WINNER> <IN? ,LORE-BOOK ,WINNER> <IN? ,KEY ,WINNER>>",
        "Form": [
          {
            "Atom": "AND"
          },
          {
            "Zil": "<IN? ,CLOAK ,WINNER>",
            "Form": [
              {
                "Atom": "IN?"
              },
              {
                "Zil": ",CLOAK",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "CLOAK"
                  }
                ]
              },
              {
                "Zil": ",WINNER",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "WINNER"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<IN? ,HOOD ,WINNER>",
            "Form": [
              {
                "Atom": "IN?"
              },
              {
                "Zil": ",HOOD",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "HOOD"
                  }
                ]
              },
              {
                "Zil": ",WINNER",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "WINNER"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<IN? ,AMULET ,WINNER>",
            "Form": [
              {
                "Atom": "IN?"
              },
              {
                "Zil": ",AMULET",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "AMULET"
                  }
                ]
              },
              {
                "Zil": ",WINNER",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "WINNER"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<IN? ,STAFF ,WINNER>",
            "Form": [
              {
                "Atom": "IN?"
              },
              {
                "Zil": ",STAFF",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "STAFF"
                  }
                ]
              },
              {
                "Zil": ",WINNER",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "WINNER"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<IN? ,RING ,WINNER>",
            "Form": [
              {
                "Atom": "IN?"
              },
              {
                "Zil": ",RING",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "RING"
                  }
                ]
              },
              {
                "Zil": ",WINNER",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "WINNER"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<IN? ,LORE-BOOK ,WINNER>",
            "Form": [
              {
                "Atom": "IN?"
              },
              {
                "Zil": ",LORE-BOOK",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "LORE-BOOK"
                  }
                ]
              },
              {
                "Zil": ",WINNER",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "WINNER"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<IN? ,KEY ,WINNER>",
            "Form": [
              {
                "Atom": "IN?"
              },
              {
                "Zil": ",KEY",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "KEY"
                  }
                ]
              },
              {
                "Zil": ",WINNER",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "WINNER"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1438",
    "Name": "DUNGEON-PANEL-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? OPEN> <TELL \"You can't open the panel. It's set into the door.\" CR>) (<VERB? LOOK-INSIDE> <TELL \"There's not much to be seen.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? OPEN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't open the panel. It's set into the door.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't open the panel. It's set into the door.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LOOK-INSIDE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LOOK-INSIDE"
                }
              ]
            },
            {
              "Zil": "<TELL \"There's not much to be seen.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There's not much to be seen.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1444",
    "Name": "DUNGEON-DOOR-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? OPEN CLOSE> <TELL \"The door won't budge.\" CR>) (<AND <VERB? KNOCK> <EQUAL? ,HERE ,FRONT-DOOR>> <TELL \"The knock reverberates along the hall. For a time it seems there\r\nwill be no answer. Then you hear someone unlatching the small\r\npanel. Through the bars of the great door, the wrinkled\r\nface of an old man appears.\"> <COND (,INVIS <TELL \" He seems not to notice you\r\nfor a brief moment, then recovers.\">)> <COND (<LOOK-LIKE-DM?> <TELL \" He starts to smile broadly and opens the\r\nmassive door without a sound. The old man motions and you feel yourself\r\ndrawn toward him.|\r\n\\\"I am the Master of the Dungeon!\\\" he booms. \\\"I have been watching\r\nyou closely during your journey through the Great Underground Empire.\r\nYes!,\\\" he says, as if recalling some almost forgotten time, \\\"we have\r\nmet before, although I may not appear as I did then.\\\" You look\r\nclosely into his deeply lined face and see the faces of the old man by the\r\nsecret door, your \\\"friend\\\" at the cliff, and the hooded figure. \\\"You have\r\nshown kindness to the old man, and compassion toward the hooded one. You\r\ndisplayed patience in the puzzle and trust at the cliff. You have\r\ndemonstrated strength, ingenuity, and valor. However, one final test awaits\r\nyou. Now! Command me as you will, and complete your quest!\\\"|\" CR> <GOTO ,BEHIND-DOOR> <SETG IN-DUNGEON T>) (T <TELL \" He looks you over with a piercing gaze\r\nand then speaks gravely. \\\"I have been waiting a long time for you, \"> <TELL <GET ,DM-REASONS <DMISH>>> <TELL \"\r\nI will remain here. When you feel you are ready, go to the\r\nsecret door and 'SAY \\\"FROTZ OZMOO\\\"'! Go, now!\\\" He wags his finger\r\nin warning. \\\"Do not forget the double\r\nquotes!\\\" A moment later, you find yourself in the Button Room.\" CR> <GOTO ,MR-ANTE <>> <RTRUE>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? OPEN CLOSE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                },
                {
                  "Atom": "CLOSE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The door won't budge.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The door won't budge.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? KNOCK> <EQUAL? ,HERE ,FRONT-DOOR>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? KNOCK>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "KNOCK"
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,HERE ,FRONT-DOOR>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",FRONT-DOOR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "FRONT-DOOR"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The knock reverberates along the hall. For a time it seems there\r\nwill be no answer. Then you hear someone unlatching the small\r\npanel. Through the bars of the great door, the wrinkled\r\nface of an old man appears.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The knock reverberates along the hall. For a time it seems there\r\nwill be no answer. Then you hear someone unlatching the small\r\npanel. Through the bars of the great door, the wrinkled\r\nface of an old man appears."
              ]
            },
            {
              "Zil": "<COND (,INVIS <TELL \" He seems not to notice you\r\nfor a brief moment, then recovers.\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",INVIS",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "INVIS"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" He seems not to notice you\r\nfor a brief moment, then recovers.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " He seems not to notice you\r\nfor a brief moment, then recovers."
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<LOOK-LIKE-DM?> <TELL \" He starts to smile broadly and opens the\r\nmassive door without a sound. The old man motions and you feel yourself\r\ndrawn toward him.|\r\n\\\"I am the Master of the Dungeon!\\\" he booms. \\\"I have been watching\r\nyou closely during your journey through the Great Underground Empire.\r\nYes!,\\\" he says, as if recalling some almost forgotten time, \\\"we have\r\nmet before, although I may not appear as I did then.\\\" You look\r\nclosely into his deeply lined face and see the faces of the old man by the\r\nsecret door, your \\\"friend\\\" at the cliff, and the hooded figure. \\\"You have\r\nshown kindness to the old man, and compassion toward the hooded one. You\r\ndisplayed patience in the puzzle and trust at the cliff. You have\r\ndemonstrated strength, ingenuity, and valor. However, one final test awaits\r\nyou. Now! Command me as you will, and complete your quest!\\\"|\" CR> <GOTO ,BEHIND-DOOR> <SETG IN-DUNGEON T>) (T <TELL \" He looks you over with a piercing gaze\r\nand then speaks gravely. \\\"I have been waiting a long time for you, \"> <TELL <GET ,DM-REASONS <DMISH>>> <TELL \"\r\nI will remain here. When you feel you are ready, go to the\r\nsecret door and 'SAY \\\"FROTZ OZMOO\\\"'! Go, now!\\\" He wags his finger\r\nin warning. \\\"Do not forget the double\r\nquotes!\\\" A moment later, you find yourself in the Button Room.\" CR> <GOTO ,MR-ANTE <>> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<LOOK-LIKE-DM?>",
                    "Form": [
                      {
                        "Atom": "LOOK-LIKE-DM?"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" He starts to smile broadly and opens the\r\nmassive door without a sound. The old man motions and you feel yourself\r\ndrawn toward him.|\r\n\\\"I am the Master of the Dungeon!\\\" he booms. \\\"I have been watching\r\nyou closely during your journey through the Great Underground Empire.\r\nYes!,\\\" he says, as if recalling some almost forgotten time, \\\"we have\r\nmet before, although I may not appear as I did then.\\\" You look\r\nclosely into his deeply lined face and see the faces of the old man by the\r\nsecret door, your \\\"friend\\\" at the cliff, and the hooded figure. \\\"You have\r\nshown kindness to the old man, and compassion toward the hooded one. You\r\ndisplayed patience in the puzzle and trust at the cliff. You have\r\ndemonstrated strength, ingenuity, and valor. However, one final test awaits\r\nyou. Now! Command me as you will, and complete your quest!\\\"|\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " He starts to smile broadly and opens the\r\nmassive door without a sound. The old man motions and you feel yourself\r\ndrawn toward him.|\r\n\"I am the Master of the Dungeon!\" he booms. \"I have been watching\r\nyou closely during your journey through the Great Underground Empire.\r\nYes!,\" he says, as if recalling some almost forgotten time, \"we have\r\nmet before, although I may not appear as I did then.\" You look\r\nclosely into his deeply lined face and see the faces of the old man by the\r\nsecret door, your \"friend\" at the cliff, and the hooded figure. \"You have\r\nshown kindness to the old man, and compassion toward the hooded one. You\r\ndisplayed patience in the puzzle and trust at the cliff. You have\r\ndemonstrated strength, ingenuity, and valor. However, one final test awaits\r\nyou. Now! Command me as you will, and complete your quest!\"|",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<GOTO ,BEHIND-DOOR>",
                    "Form": [
                      {
                        "Atom": "GOTO"
                      },
                      {
                        "Zil": ",BEHIND-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "BEHIND-DOOR"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG IN-DUNGEON T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "IN-DUNGEON"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \" He looks you over with a piercing gaze\r\nand then speaks gravely. \\\"I have been waiting a long time for you, \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " He looks you over with a piercing gaze\r\nand then speaks gravely. \"I have been waiting a long time for you, "
                    ]
                  },
                  {
                    "Zil": "<TELL <GET ,DM-REASONS <DMISH>>>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<GET ,DM-REASONS <DMISH>>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",DM-REASONS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "DM-REASONS"
                              }
                            ]
                          },
                          {
                            "Zil": "<DMISH>",
                            "Form": [
                              {
                                "Atom": "DMISH"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"\r\nI will remain here. When you feel you are ready, go to the\r\nsecret door and 'SAY \\\"FROTZ OZMOO\\\"'! Go, now!\\\" He wags his finger\r\nin warning. \\\"Do not forget the double\r\nquotes!\\\" A moment later, you find yourself in the Button Room.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "\r\nI will remain here. When you feel you are ready, go to the\r\nsecret door and 'SAY \"FROTZ OZMOO\"'! Go, now!\" He wags his finger\r\nin warning. \"Do not forget the double\r\nquotes!\" A moment later, you find yourself in the Button Room.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<GOTO ,MR-ANTE <>>",
                    "Form": [
                      {
                        "Atom": "GOTO"
                      },
                      {
                        "Zil": ",MR-ANTE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MR-ANTE"
                          }
                        ]
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1495",
    "Name": "DMISH",
    "ArgSpec": "(\"AUX\" (CNT 0))",
    "Body": [
      {
        "Zil": "<COND (<IN? ,AMULET ,WINNER> <SET CNT <+ .CNT 1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,AMULET ,WINNER>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",AMULET",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "AMULET"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET CNT <+ .CNT 1>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CNT"
                },
                {
                  "Zil": "<+ .CNT 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<IN? ,LORE-BOOK ,WINNER> <SET CNT <+ .CNT 1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,LORE-BOOK ,WINNER>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",LORE-BOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LORE-BOOK"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET CNT <+ .CNT 1>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CNT"
                },
                {
                  "Zil": "<+ .CNT 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<IN? ,HOOD ,WINNER> <SET CNT <+ .CNT 1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,HOOD ,WINNER>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",HOOD",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HOOD"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET CNT <+ .CNT 1>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CNT"
                },
                {
                  "Zil": "<+ .CNT 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<IN? ,CLOAK ,WINNER> <SET CNT <+ .CNT 1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,CLOAK ,WINNER>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",CLOAK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLOAK"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET CNT <+ .CNT 1>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CNT"
                },
                {
                  "Zil": "<+ .CNT 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<IN? ,RING ,WINNER> <SET CNT <+ .CNT 1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,RING ,WINNER>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",RING",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "RING"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET CNT <+ .CNT 1>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CNT"
                },
                {
                  "Zil": "<+ .CNT 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<IN? ,KEY ,WINNER> <SET CNT <+ .CNT 1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,KEY ,WINNER>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",KEY",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "KEY"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET CNT <+ .CNT 1>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CNT"
                },
                {
                  "Zil": "<+ .CNT 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<IN? ,STAFF ,WINNER> <SET CNT <+ .CNT 1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,STAFF ,WINNER>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",STAFF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "STAFF"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET CNT <+ .CNT 1>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "CNT"
                },
                {
                  "Zil": "<+ .CNT 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": ".CNT",
        "Form": [
          {
            "Atom": "LVAL"
          },
          {
            "Atom": "CNT"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1507",
    "Name": "I-FOLIN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<IN? ,DUNGEON-MASTER ,HERE> <RFALSE>) (<AND <EQUAL? ,HERE ,PRISON-CELL ,CELL> ,FOLFLAG> <TELL \"You notice that the dungeon master doesn't follow you.\" CR> <SETG FOLFLAG <>> <RTRUE>) (<EQUAL? <LOC ,PLAYER> ,PRISON-CELL ,CELL> <RFALSE>) (<NOT ,FOLFLAG> <SETG FOLFLAG T> <TELL \"The dungeon master rejoins you.\" CR> <MOVE ,DUNGEON-MASTER ,HERE> <RTRUE>) (T <TELL \"The dungeon master follows you.\" CR> <MOVE ,DUNGEON-MASTER ,HERE> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,DUNGEON-MASTER ,HERE>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",DUNGEON-MASTER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "DUNGEON-MASTER"
                    }
                  ]
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <EQUAL? ,HERE ,PRISON-CELL ,CELL> ,FOLFLAG>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<EQUAL? ,HERE ,PRISON-CELL ,CELL>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",PRISON-CELL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRISON-CELL"
                        }
                      ]
                    },
                    {
                      "Zil": ",CELL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CELL"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",FOLFLAG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "FOLFLAG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You notice that the dungeon master doesn't follow you.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You notice that the dungeon master doesn't follow you.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG FOLFLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "FOLFLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? <LOC ,PLAYER> ,PRISON-CELL ,CELL>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": "<LOC ,PLAYER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",PLAYER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PLAYER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",PRISON-CELL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRISON-CELL"
                    }
                  ]
                },
                {
                  "Zil": ",CELL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CELL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT ,FOLFLAG>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",FOLFLAG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "FOLFLAG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG FOLFLAG T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "FOLFLAG"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<TELL \"The dungeon master rejoins you.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The dungeon master rejoins you.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<MOVE ,DUNGEON-MASTER ,HERE>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",DUNGEON-MASTER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "DUNGEON-MASTER"
                    }
                  ]
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"The dungeon master follows you.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The dungeon master follows you.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<MOVE ,DUNGEON-MASTER ,HERE>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",DUNGEON-MASTER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "DUNGEON-MASTER"
                    }
                  ]
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1536",
    "Name": "MOVE-CELL-OBJECTS",
    "ArgSpec": "(\"AUX\" TOP CNT F X)",
    "Body": [
      {
        "Zil": "<SET TOP <* 8 <- ,LCELL 1>>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "TOP"
          },
          {
            "Zil": "<* 8 <- ,LCELL 1>>",
            "Form": [
              {
                "Atom": "*"
              },
              8,
              {
                "Zil": "<- ,LCELL 1>",
                "Form": [
                  {
                    "Atom": "-"
                  },
                  {
                    "Zil": ",LCELL",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "LCELL"
                      }
                    ]
                  },
                  1
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET CNT <+ .TOP 1>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "CNT"
          },
          {
            "Zil": "<+ .TOP 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ".TOP",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "TOP"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<SET F <FIRST? ,CELL>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "F"
          },
          {
            "Zil": "<FIRST? ,CELL>",
            "Form": [
              {
                "Atom": "FIRST?"
              },
              {
                "Zil": ",CELL",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "CELL"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (.F <REPEAT () <SET X <NEXT? .F>> <COND (<NOT .F> <RETURN>) (T <PUT ,CELLOBJS .CNT .F> <REMOVE .F> <SET CNT <+ .CNT 1>>)> <COND (<NOT .X> <RETURN>) (T <SET F .X>)>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ".F",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "F"
                }
              ]
            },
            {
              "Zil": "<REPEAT () <SET X <NEXT? .F>> <COND (<NOT .F> <RETURN>) (T <PUT ,CELLOBJS .CNT .F> <REMOVE .F> <SET CNT <+ .CNT 1>>)> <COND (<NOT .X> <RETURN>) (T <SET F .X>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<SET X <NEXT? .F>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "X"
                    },
                    {
                      "Zil": "<NEXT? .F>",
                      "Form": [
                        {
                          "Atom": "NEXT?"
                        },
                        {
                          "Zil": ".F",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "F"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<NOT .F> <RETURN>) (T <PUT ,CELLOBJS .CNT .F> <REMOVE .F> <SET CNT <+ .CNT 1>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT .F>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".F",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "F"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<PUT ,CELLOBJS .CNT .F>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ",CELLOBJS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "CELLOBJS"
                              }
                            ]
                          },
                          {
                            "Zil": ".CNT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "CNT"
                              }
                            ]
                          },
                          {
                            "Zil": ".F",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "F"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<REMOVE .F>",
                        "Form": [
                          {
                            "Atom": "REMOVE"
                          },
                          {
                            "Zil": ".F",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "F"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET CNT <+ .CNT 1>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "CNT"
                          },
                          {
                            "Zil": "<+ .CNT 1>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".CNT",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "CNT"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<COND (<NOT .X> <RETURN>) (T <SET F .X>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT .X>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".X",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "X"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<SET F .X>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "F"
                          },
                          {
                            "Zil": ".X",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "X"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<PUT ,CELLOBJS .TOP <- <- .CNT .TOP> 1>>",
        "Form": [
          {
            "Atom": "PUT"
          },
          {
            "Zil": ",CELLOBJS",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CELLOBJS"
              }
            ]
          },
          {
            "Zil": ".TOP",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "TOP"
              }
            ]
          },
          {
            "Zil": "<- <- .CNT .TOP> 1>",
            "Form": [
              {
                "Atom": "-"
              },
              {
                "Zil": "<- .CNT .TOP>",
                "Form": [
                  {
                    "Atom": "-"
                  },
                  {
                    "Zil": ".CNT",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "CNT"
                      }
                    ]
                  },
                  {
                    "Zil": ".TOP",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "TOP"
                      }
                    ]
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<SET TOP <* 8 <- ,PNUMB 1>>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "TOP"
          },
          {
            "Zil": "<* 8 <- ,PNUMB 1>>",
            "Form": [
              {
                "Atom": "*"
              },
              8,
              {
                "Zil": "<- ,PNUMB 1>",
                "Form": [
                  {
                    "Atom": "-"
                  },
                  {
                    "Zil": ",PNUMB",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "PNUMB"
                      }
                    ]
                  },
                  1
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SET CNT <GET ,CELLOBJS .TOP>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "CNT"
          },
          {
            "Zil": "<GET ,CELLOBJS .TOP>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ",CELLOBJS",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "CELLOBJS"
                  }
                ]
              },
              {
                "Zil": ".TOP",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "TOP"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <COND (<0? .CNT> <RETURN>) (T <SET TOP <+ .TOP 1>> <MOVE <GET ,CELLOBJS .TOP> ,CELL> <SET CNT <- .CNT 1>>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<0? .CNT> <RETURN>) (T <SET TOP <+ .TOP 1>> <MOVE <GET ,CELLOBJS .TOP> ,CELL> <SET CNT <- .CNT 1>>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<0? .CNT>",
                  "Form": [
                    {
                      "Atom": "0?"
                    },
                    {
                      "Zil": ".CNT",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "CNT"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Atom": "T"
                },
                {
                  "Zil": "<SET TOP <+ .TOP 1>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "TOP"
                    },
                    {
                      "Zil": "<+ .TOP 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ".TOP",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TOP"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<MOVE <GET ,CELLOBJS .TOP> ,CELL>",
                  "Form": [
                    {
                      "Atom": "MOVE"
                    },
                    {
                      "Zil": "<GET ,CELLOBJS .TOP>",
                      "Form": [
                        {
                          "Atom": "GET"
                        },
                        {
                          "Zil": ",CELLOBJS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CELLOBJS"
                            }
                          ]
                        },
                        {
                          "Zil": ".TOP",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "TOP"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": ",CELL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CELL"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET CNT <- .CNT 1>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "CNT"
                    },
                    {
                      "Zil": "<- .CNT 1>",
                      "Form": [
                        {
                          "Atom": "-"
                        },
                        {
                          "Zil": ".CNT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "CNT"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1560",
    "Name": "CELL-MOVE",
    "ArgSpec": "(\"AUX\" F X)",
    "Body": [
      {
        "Zil": "<FCLEAR ,CELL-DOOR ,OPENBIT>",
        "Form": [
          {
            "Atom": "FCLEAR"
          },
          {
            "Zil": ",CELL-DOOR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CELL-DOOR"
              }
            ]
          },
          {
            "Zil": ",OPENBIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "OPENBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<FCLEAR ,BRONZE-DOOR ,OPENBIT>",
        "Form": [
          {
            "Atom": "FCLEAR"
          },
          {
            "Zil": ",BRONZE-DOOR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "BRONZE-DOOR"
              }
            ]
          },
          {
            "Zil": ",OPENBIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "OPENBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<NOT <==? ,PNUMB ,LCELL>> <COND (<==? ,PNUMB 4> <FCLEAR ,BRONZE-DOOR ,INVISIBLE>) (ELSE <FSET ,BRONZE-DOOR ,INVISIBLE>)> <COND (<IN? ,PLAYER ,CELL> <SETG WINNER ,PLAYER> <FCLEAR ,GOOD-CELL ,TOUCHBIT> <FCLEAR ,PRISON-CELL ,TOUCHBIT> <GOTO <COND (<==? ,LCELL 4> <FCLEAR ,BRONZE-DOOR ,INVISIBLE> ,GOOD-CELL) (ELSE ,PRISON-CELL)>> <SET F <FIRST? ,CELL>> <COND (.F <REPEAT () <SET X <NEXT? .F>> <COND (<NOT .F> <RETURN>) (T <MOVE .F ,HERE>)> <COND (<NOT .X> <RETURN>) (T <SET F .X>)>>)>) (T <MOVE-CELL-OBJECTS>)> <SETG LCELL ,PNUMB>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <==? ,PNUMB ,LCELL>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<==? ,PNUMB ,LCELL>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PNUMB",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PNUMB"
                        }
                      ]
                    },
                    {
                      "Zil": ",LCELL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "LCELL"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,PNUMB 4> <FCLEAR ,BRONZE-DOOR ,INVISIBLE>) (ELSE <FSET ,BRONZE-DOOR ,INVISIBLE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,PNUMB 4>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",PNUMB",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PNUMB"
                          }
                        ]
                      },
                      4
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,BRONZE-DOOR ,INVISIBLE>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",BRONZE-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "BRONZE-DOOR"
                          }
                        ]
                      },
                      {
                        "Zil": ",INVISIBLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "INVISIBLE"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "ELSE"
                  },
                  {
                    "Zil": "<FSET ,BRONZE-DOOR ,INVISIBLE>",
                    "Form": [
                      {
                        "Atom": "FSET"
                      },
                      {
                        "Zil": ",BRONZE-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "BRONZE-DOOR"
                          }
                        ]
                      },
                      {
                        "Zil": ",INVISIBLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "INVISIBLE"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<IN? ,PLAYER ,CELL> <SETG WINNER ,PLAYER> <FCLEAR ,GOOD-CELL ,TOUCHBIT> <FCLEAR ,PRISON-CELL ,TOUCHBIT> <GOTO <COND (<==? ,LCELL 4> <FCLEAR ,BRONZE-DOOR ,INVISIBLE> ,GOOD-CELL) (ELSE ,PRISON-CELL)>> <SET F <FIRST? ,CELL>> <COND (.F <REPEAT () <SET X <NEXT? .F>> <COND (<NOT .F> <RETURN>) (T <MOVE .F ,HERE>)> <COND (<NOT .X> <RETURN>) (T <SET F .X>)>>)>) (T <MOVE-CELL-OBJECTS>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<IN? ,PLAYER ,CELL>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ",PLAYER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PLAYER"
                          }
                        ]
                      },
                      {
                        "Zil": ",CELL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CELL"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG WINNER ,PLAYER>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "WINNER"
                      },
                      {
                        "Zil": ",PLAYER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PLAYER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,GOOD-CELL ,TOUCHBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",GOOD-CELL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "GOOD-CELL"
                          }
                        ]
                      },
                      {
                        "Zil": ",TOUCHBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TOUCHBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,PRISON-CELL ,TOUCHBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",PRISON-CELL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRISON-CELL"
                          }
                        ]
                      },
                      {
                        "Zil": ",TOUCHBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TOUCHBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<GOTO <COND (<==? ,LCELL 4> <FCLEAR ,BRONZE-DOOR ,INVISIBLE> ,GOOD-CELL) (ELSE ,PRISON-CELL)>>",
                    "Form": [
                      {
                        "Atom": "GOTO"
                      },
                      {
                        "Zil": "<COND (<==? ,LCELL 4> <FCLEAR ,BRONZE-DOOR ,INVISIBLE> ,GOOD-CELL) (ELSE ,PRISON-CELL)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<==? ,LCELL 4>",
                              "Form": [
                                {
                                  "Atom": "==?"
                                },
                                {
                                  "Zil": ",LCELL",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "LCELL"
                                    }
                                  ]
                                },
                                4
                              ]
                            },
                            {
                              "Zil": "<FCLEAR ,BRONZE-DOOR ,INVISIBLE>",
                              "Form": [
                                {
                                  "Atom": "FCLEAR"
                                },
                                {
                                  "Zil": ",BRONZE-DOOR",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "BRONZE-DOOR"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",INVISIBLE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "INVISIBLE"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": ",GOOD-CELL",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "GOOD-CELL"
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Atom": "ELSE"
                            },
                            {
                              "Zil": ",PRISON-CELL",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRISON-CELL"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SET F <FIRST? ,CELL>>",
                    "Form": [
                      {
                        "Atom": "SET"
                      },
                      {
                        "Atom": "F"
                      },
                      {
                        "Zil": "<FIRST? ,CELL>",
                        "Form": [
                          {
                            "Atom": "FIRST?"
                          },
                          {
                            "Zil": ",CELL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "CELL"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (.F <REPEAT () <SET X <NEXT? .F>> <COND (<NOT .F> <RETURN>) (T <MOVE .F ,HERE>)> <COND (<NOT .X> <RETURN>) (T <SET F .X>)>>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ".F",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "F"
                            }
                          ]
                        },
                        {
                          "Zil": "<REPEAT () <SET X <NEXT? .F>> <COND (<NOT .F> <RETURN>) (T <MOVE .F ,HERE>)> <COND (<NOT .X> <RETURN>) (T <SET F .X>)>>",
                          "Form": [
                            {
                              "Atom": "REPEAT"
                            },
                            [],
                            {
                              "Zil": "<SET X <NEXT? .F>>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "X"
                                },
                                {
                                  "Zil": "<NEXT? .F>",
                                  "Form": [
                                    {
                                      "Atom": "NEXT?"
                                    },
                                    {
                                      "Zil": ".F",
                                      "Form": [
                                        {
                                          "Atom": "LVAL"
                                        },
                                        {
                                          "Atom": "F"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<COND (<NOT .F> <RETURN>) (T <MOVE .F ,HERE>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<NOT .F>",
                                    "Form": [
                                      {
                                        "Atom": "NOT"
                                      },
                                      {
                                        "Zil": ".F",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "F"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RETURN>",
                                    "Form": [
                                      {
                                        "Atom": "RETURN"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  {
                                    "Zil": "<MOVE .F ,HERE>",
                                    "Form": [
                                      {
                                        "Atom": "MOVE"
                                      },
                                      {
                                        "Zil": ".F",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "F"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",HERE",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "HERE"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              ]
                            },
                            {
                              "Zil": "<COND (<NOT .X> <RETURN>) (T <SET F .X>)>",
                              "Form": [
                                {
                                  "Atom": "COND"
                                },
                                [
                                  {
                                    "Zil": "<NOT .X>",
                                    "Form": [
                                      {
                                        "Atom": "NOT"
                                      },
                                      {
                                        "Zil": ".X",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "X"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": "<RETURN>",
                                    "Form": [
                                      {
                                        "Atom": "RETURN"
                                      }
                                    ]
                                  }
                                ],
                                [
                                  {
                                    "Atom": "T"
                                  },
                                  {
                                    "Zil": "<SET F .X>",
                                    "Form": [
                                      {
                                        "Atom": "SET"
                                      },
                                      {
                                        "Atom": "F"
                                      },
                                      {
                                        "Zil": ".X",
                                        "Form": [
                                          {
                                            "Atom": "LVAL"
                                          },
                                          {
                                            "Atom": "X"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<MOVE-CELL-OBJECTS>",
                    "Form": [
                      {
                        "Atom": "MOVE-CELL-OBJECTS"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SETG LCELL ,PNUMB>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "LCELL"
                },
                {
                  "Zil": ",PNUMB",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PNUMB"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1585",
    "Name": "PARAPET-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"You are standing behind a stone retaining wall which rims a parapet\r\noverlooking a fiery pit. It is difficult to see through the\r\nsmoke and flame which fills the pit, but it seems to be bottomless.\r\nThe pit itself is circular, about two hundred feet in diameter,\r\nand is fashioned of roughly hewn stone. The flames generate considerable\r\nheat, so it is rather uncomfortable standing here.|\r\nThere is an object here which looks like a sundial. On it are an\r\nindicator arrow surrounding a large button. On the face of\r\nthe dial are numbers 1 through 8. The indicator points to the number \" N ,PNUMB \".\" CR> <TELL \"To the south, across a narrow corridor, is a prison cell.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are standing behind a stone retaining wall which rims a parapet\r\noverlooking a fiery pit. It is difficult to see through the\r\nsmoke and flame which fills the pit, but it seems to be bottomless.\r\nThe pit itself is circular, about two hundred feet in diameter,\r\nand is fashioned of roughly hewn stone. The flames generate considerable\r\nheat, so it is rather uncomfortable standing here.|\r\nThere is an object here which looks like a sundial. On it are an\r\nindicator arrow surrounding a large button. On the face of\r\nthe dial are numbers 1 through 8. The indicator points to the number \" N ,PNUMB \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are standing behind a stone retaining wall which rims a parapet\r\noverlooking a fiery pit. It is difficult to see through the\r\nsmoke and flame which fills the pit, but it seems to be bottomless.\r\nThe pit itself is circular, about two hundred feet in diameter,\r\nand is fashioned of roughly hewn stone. The flames generate considerable\r\nheat, so it is rather uncomfortable standing here.|\r\nThere is an object here which looks like a sundial. On it are an\r\nindicator arrow surrounding a large button. On the face of\r\nthe dial are numbers 1 through 8. The indicator points to the number ",
                {
                  "Atom": "N"
                },
                {
                  "Zil": ",PNUMB",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PNUMB"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<TELL \"To the south, across a narrow corridor, is a prison cell.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "To the south, across a narrow corridor, is a prison cell.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1601",
    "Name": "DIAL",
    "ArgSpec": "(\"AUX\" N)",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE> <TELL \"The dial points to \" N ,PNUMB \".\" CR>) (<VERB? TURN> <COND (<==? ,PRSI ,INTNUM> <COND (<OR <0? ,P-NUMBER> <G? ,P-NUMBER 8>> <TELL \"There is no such setting.\" CR> <RTRUE>)> <SETG PNUMB ,P-NUMBER> <COND (<==? ,WINNER ,PLAYER> <TELL \"The dial now points to \" N ,PNUMB \".\" CR>)> <RTRUE>) (<NOT ,PRSI> <TELL \"You must specify what to set the dial to.\" CR>) (T <TELL \"The dial face only contains numbers.\" CR>)>) (<VERB? SPIN> <SETG PNUMB <RANDOM 8>> <COND (<==? ,WINNER ,PLAYER> <TELL \"The dial spins and comes to a stop pointing at \" N ,PNUMB \".\">)> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The dial points to \" N ,PNUMB \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The dial points to ",
                {
                  "Atom": "N"
                },
                {
                  "Zil": ",PNUMB",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PNUMB"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? TURN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TURN"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,PRSI ,INTNUM> <COND (<OR <0? ,P-NUMBER> <G? ,P-NUMBER 8>> <TELL \"There is no such setting.\" CR> <RTRUE>)> <SETG PNUMB ,P-NUMBER> <COND (<==? ,WINNER ,PLAYER> <TELL \"The dial now points to \" N ,PNUMB \".\" CR>)> <RTRUE>) (<NOT ,PRSI> <TELL \"You must specify what to set the dial to.\" CR>) (T <TELL \"The dial face only contains numbers.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,PRSI ,INTNUM>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      {
                        "Zil": ",INTNUM",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "INTNUM"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<OR <0? ,P-NUMBER> <G? ,P-NUMBER 8>> <TELL \"There is no such setting.\" CR> <RTRUE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<OR <0? ,P-NUMBER> <G? ,P-NUMBER 8>>",
                          "Form": [
                            {
                              "Atom": "OR"
                            },
                            {
                              "Zil": "<0? ,P-NUMBER>",
                              "Form": [
                                {
                                  "Atom": "0?"
                                },
                                {
                                  "Zil": ",P-NUMBER",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-NUMBER"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<G? ,P-NUMBER 8>",
                              "Form": [
                                {
                                  "Atom": "G?"
                                },
                                {
                                  "Zil": ",P-NUMBER",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "P-NUMBER"
                                    }
                                  ]
                                },
                                8
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"There is no such setting.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "There is no such setting.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<SETG PNUMB ,P-NUMBER>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "PNUMB"
                      },
                      {
                        "Zil": ",P-NUMBER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P-NUMBER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<==? ,WINNER ,PLAYER> <TELL \"The dial now points to \" N ,PNUMB \".\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<==? ,WINNER ,PLAYER>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": ",WINNER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "WINNER"
                                }
                              ]
                            },
                            {
                              "Zil": ",PLAYER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PLAYER"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The dial now points to \" N ,PNUMB \".\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The dial now points to ",
                            {
                              "Atom": "N"
                            },
                            {
                              "Zil": ",PNUMB",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PNUMB"
                                }
                              ]
                            },
                            ".",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<NOT ,PRSI>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You must specify what to set the dial to.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You must specify what to set the dial to.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The dial face only contains numbers.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The dial face only contains numbers.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? SPIN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "SPIN"
                }
              ]
            },
            {
              "Zil": "<SETG PNUMB <RANDOM 8>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "PNUMB"
                },
                {
                  "Zil": "<RANDOM 8>",
                  "Form": [
                    {
                      "Atom": "RANDOM"
                    },
                    8
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,WINNER ,PLAYER> <TELL \"The dial spins and comes to a stop pointing at \" N ,PNUMB \".\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,WINNER ,PLAYER>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",WINNER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WINNER"
                          }
                        ]
                      },
                      {
                        "Zil": ",PLAYER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PLAYER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The dial spins and comes to a stop pointing at \" N ,PNUMB \".\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The dial spins and comes to a stop pointing at ",
                      {
                        "Atom": "N"
                      },
                      {
                        "Zil": ",PNUMB",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PNUMB"
                          }
                        ]
                      },
                      "."
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1625",
    "Name": "DIALBUTTON",
    "ArgSpec": "(\"AUX\" C)",
    "Body": [
      {
        "Zil": "<SET C <FSET? ,CELL-DOOR ,OPENBIT>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "C"
          },
          {
            "Zil": "<FSET? ,CELL-DOOR ,OPENBIT>",
            "Form": [
              {
                "Atom": "FSET?"
              },
              {
                "Zil": ",CELL-DOOR",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "CELL-DOOR"
                  }
                ]
              },
              {
                "Zil": ",OPENBIT",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "OPENBIT"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<FCLEAR ,CELL ,TOUCHBIT>",
        "Form": [
          {
            "Atom": "FCLEAR"
          },
          {
            "Zil": ",CELL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CELL"
              }
            ]
          },
          {
            "Zil": ",TOUCHBIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "TOUCHBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<VERB? PUSH> <COND (<==? ,WINNER ,PLAYER> <TELL \"The button depresses with a slight click, and pops back.\" CR>)> <CELL-MOVE> <COND (.C <TELL \"You notice that the cell door is now closed.\" CR>)> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? PUSH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "PUSH"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,WINNER ,PLAYER> <TELL \"The button depresses with a slight click, and pops back.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,WINNER ,PLAYER>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",WINNER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WINNER"
                          }
                        ]
                      },
                      {
                        "Zil": ",PLAYER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PLAYER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The button depresses with a slight click, and pops back.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The button depresses with a slight click, and pops back.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<CELL-MOVE>",
              "Form": [
                {
                  "Atom": "CELL-MOVE"
                }
              ]
            },
            {
              "Zil": "<COND (.C <TELL \"You notice that the cell door is now closed.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ".C",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "C"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You notice that the cell door is now closed.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You notice that the cell door is now closed.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1637",
    "Name": "CELL-ROOM",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"You are in a featureless prison cell. You can see \"> <COND (<FSET? ,CELL-DOOR ,OPENBIT> <TELL \"an east-west\r\ncorridor outside the cell door. Your view also takes in the parapet and\r\na large, fiery pit.\" CR>) (T <TELL \"through the small window\r\nin the closed door the parapet, and, behind that,\r\nsmoke and flames rising from a fiery pit.\" CR>)> <COND (<IN? ,DUNGEON-MASTER ,PARAPET> <TELL \"The dungeon master is at the parapet, leaning on his\r\nstaff. His keen gaze is fixed on you and he looks tense,\r\nas if waiting for something to happen.\" CR>)> <COND (<==? ,LCELL 4> <TELL \"Behind you, to the south, is a bronze door which is \"> <DPR ,BRONZE-DOOR>)> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are in a featureless prison cell. You can see \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are in a featureless prison cell. You can see "
              ]
            },
            {
              "Zil": "<COND (<FSET? ,CELL-DOOR ,OPENBIT> <TELL \"an east-west\r\ncorridor outside the cell door. Your view also takes in the parapet and\r\na large, fiery pit.\" CR>) (T <TELL \"through the small window\r\nin the closed door the parapet, and, behind that,\r\nsmoke and flames rising from a fiery pit.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,CELL-DOOR ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",CELL-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CELL-DOOR"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"an east-west\r\ncorridor outside the cell door. Your view also takes in the parapet and\r\na large, fiery pit.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "an east-west\r\ncorridor outside the cell door. Your view also takes in the parapet and\r\na large, fiery pit.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"through the small window\r\nin the closed door the parapet, and, behind that,\r\nsmoke and flames rising from a fiery pit.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "through the small window\r\nin the closed door the parapet, and, behind that,\r\nsmoke and flames rising from a fiery pit.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<IN? ,DUNGEON-MASTER ,PARAPET> <TELL \"The dungeon master is at the parapet, leaning on his\r\nstaff. His keen gaze is fixed on you and he looks tense,\r\nas if waiting for something to happen.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<IN? ,DUNGEON-MASTER ,PARAPET>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ",DUNGEON-MASTER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "DUNGEON-MASTER"
                          }
                        ]
                      },
                      {
                        "Zil": ",PARAPET",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PARAPET"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The dungeon master is at the parapet, leaning on his\r\nstaff. His keen gaze is fixed on you and he looks tense,\r\nas if waiting for something to happen.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The dungeon master is at the parapet, leaning on his\r\nstaff. His keen gaze is fixed on you and he looks tense,\r\nas if waiting for something to happen.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<==? ,LCELL 4> <TELL \"Behind you, to the south, is a bronze door which is \"> <DPR ,BRONZE-DOOR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,LCELL 4>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",LCELL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "LCELL"
                          }
                        ]
                      },
                      4
                    ]
                  },
                  {
                    "Zil": "<TELL \"Behind you, to the south, is a bronze door which is \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Behind you, to the south, is a bronze door which is "
                    ]
                  },
                  {
                    "Zil": "<DPR ,BRONZE-DOOR>",
                    "Form": [
                      {
                        "Atom": "DPR"
                      },
                      {
                        "Zil": ",BRONZE-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "BRONZE-DOOR"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1660",
    "Name": "NCELL-ROOM",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"You are in a bare prison cell. Its wooden door is securely fastened,\r\nand you can see only flames and smoke through its small window. On the\r\nsouth wall is a bronze door which seems to be \"> <DPR ,BRONZE-DOOR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are in a bare prison cell. Its wooden door is securely fastened,\r\nand you can see only flames and smoke through its small window. On the\r\nsouth wall is a bronze door which seems to be \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are in a bare prison cell. Its wooden door is securely fastened,\r\nand you can see only flames and smoke through its small window. On the\r\nsouth wall is a bronze door which seems to be "
              ]
            },
            {
              "Zil": "<DPR ,BRONZE-DOOR>",
              "Form": [
                {
                  "Atom": "DPR"
                },
                {
                  "Zil": ",BRONZE-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "BRONZE-DOOR"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1668",
    "Name": "DPR",
    "ArgSpec": "(OBJ)",
    "Body": [
      {
        "Zil": "<COND (<FSET? .OBJ ,OPENBIT> <TELL \"open.\" CR>) (T <TELL \"closed.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? .OBJ ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ".OBJ",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "OBJ"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"open.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "open.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"closed.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "closed.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1672",
    "Name": "NORTH-CORRIDOR-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"This is a wide east-west corridor which opens onto a northern\r\nparapet at its center. You can see flames and smoke as you peer\r\ntowards the parapet. The corridor turns south at either end, and in\r\nthe center of the south wall is a heavy wooden door with a small\r\nbarred window. The door is \"> <DPR ,CELL-DOOR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"This is a wide east-west corridor which opens onto a northern\r\nparapet at its center. You can see flames and smoke as you peer\r\ntowards the parapet. The corridor turns south at either end, and in\r\nthe center of the south wall is a heavy wooden door with a small\r\nbarred window. The door is \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "This is a wide east-west corridor which opens onto a northern\r\nparapet at its center. You can see flames and smoke as you peer\r\ntowards the parapet. The corridor turns south at either end, and in\r\nthe center of the south wall is a heavy wooden door with a small\r\nbarred window. The door is "
              ]
            },
            {
              "Zil": "<DPR ,CELL-DOOR>",
              "Form": [
                {
                  "Atom": "DPR"
                },
                {
                  "Zil": ",CELL-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CELL-DOOR"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1682",
    "Name": "SOUTH-CORRIDOR-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"You are in an east-west corridor which turns north at its eastern\r\nand western ends. The walls are made of the finest marble. Another\r\nhall leads south at the center of the corridor.\" CR> <COND (<==? ,LCELL 4> <TELL \"In the center of the north wall is a bronze door which is \"> <DPR ,BRONZE-DOOR>)> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are in an east-west corridor which turns north at its eastern\r\nand western ends. The walls are made of the finest marble. Another\r\nhall leads south at the center of the corridor.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are in an east-west corridor which turns north at its eastern\r\nand western ends. The walls are made of the finest marble. Another\r\nhall leads south at the center of the corridor.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,LCELL 4> <TELL \"In the center of the north wall is a bronze door which is \"> <DPR ,BRONZE-DOOR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,LCELL 4>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",LCELL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "LCELL"
                          }
                        ]
                      },
                      4
                    ]
                  },
                  {
                    "Zil": "<TELL \"In the center of the north wall is a bronze door which is \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "In the center of the north wall is a bronze door which is "
                    ]
                  },
                  {
                    "Zil": "<DPR ,BRONZE-DOOR>",
                    "Form": [
                      {
                        "Atom": "DPR"
                      },
                      {
                        "Zil": ",BRONZE-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "BRONZE-DOOR"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1696",
    "Name": "BRONZE-DOOR-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? OPEN> <NOT <FSET? ,BRONZE-DOOR ,OPENBIT>> <==? ,HERE ,GOOD-CELL> <NOT ,BRONZE-DOOR-LOCKED>> <TELL \"On the other side of the bronze door is a narrow passage which opens out\r\ninto a larger area.\" CR> <FSET ,BRONZE-DOOR ,OPENBIT>) (<AND <VERB? OPEN> ,BRONZE-DOOR-LOCKED> <TELL \"The bronze door is locked.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? OPEN> <NOT <FSET? ,BRONZE-DOOR ,OPENBIT>> <==? ,HERE ,GOOD-CELL> <NOT ,BRONZE-DOOR-LOCKED>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? OPEN>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "OPEN"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? ,BRONZE-DOOR ,OPENBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? ,BRONZE-DOOR ,OPENBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ",BRONZE-DOOR",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "BRONZE-DOOR"
                            }
                          ]
                        },
                        {
                          "Zil": ",OPENBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "OPENBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<==? ,HERE ,GOOD-CELL>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",GOOD-CELL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "GOOD-CELL"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,BRONZE-DOOR-LOCKED>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",BRONZE-DOOR-LOCKED",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "BRONZE-DOOR-LOCKED"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"On the other side of the bronze door is a narrow passage which opens out\r\ninto a larger area.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "On the other side of the bronze door is a narrow passage which opens out\r\ninto a larger area.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<FSET ,BRONZE-DOOR ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",BRONZE-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "BRONZE-DOOR"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? OPEN> ,BRONZE-DOOR-LOCKED>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? OPEN>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "OPEN"
                    }
                  ]
                },
                {
                  "Zil": ",BRONZE-DOOR-LOCKED",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "BRONZE-DOOR-LOCKED"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The bronze door is locked.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The bronze door is locked.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1709",
    "Name": "LOCKED-DOOR-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? OPEN UNLOCK> <TELL \"The door is securely fastened.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? OPEN UNLOCK>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                },
                {
                  "Atom": "UNLOCK"
                }
              ]
            },
            {
              "Zil": "<TELL \"The door is securely fastened.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The door is securely fastened.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1717",
    "Name": "NIRVANA-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-END> <TELL \"As you examine your new-found riches, the Dungeon Master\r\nmaterializes beside you, and says, \\\"Now that you have solved all the\r\nmysteries of the Dungeon, it is time for you to assume your rightly earned\r\nplace in the scheme of things. Long have I waited for one capable of\r\nreleasing me from my burden!\\\" He taps you lightly on the head with his\r\nstaff, mumbling a few well-chosen spells, and you feel yourself changing,\r\ngrowing older and more stooped. For a moment there are two identical mages\r\nstanding among the treasure, then your counterpart dissolves into a\r\nmist and disappears, a sardonic grin on his face.|\r\n|\r\nFor a moment you are relieved, safe in the knowledge that you have\r\nat last completed your quest in ZORK. You begin to feel the vast powers\r\nand lore at your command and thirst for an opportunity to use them.|\r\n|\r\n\"> <FINISH>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-END>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-END",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-END"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"As you examine your new-found riches, the Dungeon Master\r\nmaterializes beside you, and says, \\\"Now that you have solved all the\r\nmysteries of the Dungeon, it is time for you to assume your rightly earned\r\nplace in the scheme of things. Long have I waited for one capable of\r\nreleasing me from my burden!\\\" He taps you lightly on the head with his\r\nstaff, mumbling a few well-chosen spells, and you feel yourself changing,\r\ngrowing older and more stooped. For a moment there are two identical mages\r\nstanding among the treasure, then your counterpart dissolves into a\r\nmist and disappears, a sardonic grin on his face.|\r\n|\r\nFor a moment you are relieved, safe in the knowledge that you have\r\nat last completed your quest in ZORK. You begin to feel the vast powers\r\nand lore at your command and thirst for an opportunity to use them.|\r\n|\r\n\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "As you examine your new-found riches, the Dungeon Master\r\nmaterializes beside you, and says, \"Now that you have solved all the\r\nmysteries of the Dungeon, it is time for you to assume your rightly earned\r\nplace in the scheme of things. Long have I waited for one capable of\r\nreleasing me from my burden!\" He taps you lightly on the head with his\r\nstaff, mumbling a few well-chosen spells, and you feel yourself changing,\r\ngrowing older and more stooped. For a moment there are two identical mages\r\nstanding among the treasure, then your counterpart dissolves into a\r\nmist and disappears, a sardonic grin on his face.|\r\n|\r\nFor a moment you are relieved, safe in the knowledge that you have\r\nat last completed your quest in ZORK. You begin to feel the vast powers\r\nand lore at your command and thirst for an opportunity to use them.|\r\n|\r\n"
              ]
            },
            {
              "Zil": "<FINISH>",
              "Form": [
                {
                  "Atom": "FINISH"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1737",
    "Name": "BRONZE-DOOR-EXIT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<FSET? ,BRONZE-DOOR ,INVISIBLE> <TELL \"You can't go that way.\" CR> <RFALSE>) (<FSET? ,BRONZE-DOOR ,OPENBIT> ,CELL) (T <TELL \"The bronze door is closed.\" CR> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? ,BRONZE-DOOR ,INVISIBLE>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",BRONZE-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "BRONZE-DOOR"
                    }
                  ]
                },
                {
                  "Zil": ",INVISIBLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "INVISIBLE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't go that way.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't go that way.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<FSET? ,BRONZE-DOOR ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ",BRONZE-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "BRONZE-DOOR"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": ",CELL",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "CELL"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"The bronze door is closed.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The bronze door is closed.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1758",
    "Name": "SECRET-DOOR-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? OPEN> <NOT <FSET? ,SECRET-DOOR ,OPENBIT>>> <TELL \"The massive stone door opens noiselessly. \" ,SECRET-DOOR-DESC CR> <FSET ,SECRET-DOOR ,OPENBIT>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? OPEN> <NOT <FSET? ,SECRET-DOOR ,OPENBIT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? OPEN>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "OPEN"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? ,SECRET-DOOR ,OPENBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? ,SECRET-DOOR ,OPENBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ",SECRET-DOOR",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "SECRET-DOOR"
                            }
                          ]
                        },
                        {
                          "Zil": ",OPENBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "OPENBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The massive stone door opens noiselessly. \" ,SECRET-DOOR-DESC CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The massive stone door opens noiselessly. ",
                {
                  "Zil": ",SECRET-DOOR-DESC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SECRET-DOOR-DESC"
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<FSET ,SECRET-DOOR ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",SECRET-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SECRET-DOOR"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1764",
    "Name": "MSTAIRS-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<AND <==? .RARG ,M-ENTER> <PROB 30> <NOT ,OLD-MAN-FED> <NOT ,OLD-MAN-GONE>> <MOVE ,OLD-MAN ,HERE>) (<==? .RARG ,M-LOOK> <TELL \"You are in a room with passages heading southwest and southeast. The\r\nnorth wall is ornately carved, filled with strange runes and writing in\r\nan unfamiliar language.\" CR> <COND (<FSET? ,SECRET-DOOR ,OPENBIT> <TELL ,SECRET-DOOR-DESC CR>) (<NOT <FSET? ,SECRET-DOOR ,INVISIBLE>> <TELL \"The outline of a door is barely visible among the runes.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? .RARG ,M-ENTER> <PROB 30> <NOT ,OLD-MAN-FED> <NOT ,OLD-MAN-GONE>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-ENTER>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-ENTER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-ENTER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<PROB 30>",
                  "Form": [
                    {
                      "Atom": "PROB"
                    },
                    30
                  ]
                },
                {
                  "Zil": "<NOT ,OLD-MAN-FED>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",OLD-MAN-FED",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "OLD-MAN-FED"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,OLD-MAN-GONE>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",OLD-MAN-GONE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "OLD-MAN-GONE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,OLD-MAN ,HERE>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",OLD-MAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OLD-MAN"
                    }
                  ]
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are in a room with passages heading southwest and southeast. The\r\nnorth wall is ornately carved, filled with strange runes and writing in\r\nan unfamiliar language.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are in a room with passages heading southwest and southeast. The\r\nnorth wall is ornately carved, filled with strange runes and writing in\r\nan unfamiliar language.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,SECRET-DOOR ,OPENBIT> <TELL ,SECRET-DOOR-DESC CR>) (<NOT <FSET? ,SECRET-DOOR ,INVISIBLE>> <TELL \"The outline of a door is barely visible among the runes.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,SECRET-DOOR ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",SECRET-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SECRET-DOOR"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL ,SECRET-DOOR-DESC CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": ",SECRET-DOOR-DESC",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SECRET-DOOR-DESC"
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<NOT <FSET? ,SECRET-DOOR ,INVISIBLE>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? ,SECRET-DOOR ,INVISIBLE>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",SECRET-DOOR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SECRET-DOOR"
                              }
                            ]
                          },
                          {
                            "Zil": ",INVISIBLE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "INVISIBLE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The outline of a door is barely visible among the runes.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The outline of a door is barely visible among the runes.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1781",
    "Name": "HELLO?",
    "ArgSpec": "(WHO)",
    "Body": [
      {
        "Zil": "<COND (<OR <==? ,WINNER .WHO> <VERB? TELL ANSWER REPLY SAY HELLO INCANT>> <COND (<VERB? TELL ANSWER SAY INCANT REPLY> <SETG P-CONT <>> <SETG QUOTE-FLAG <>>)> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <==? ,WINNER .WHO> <VERB? TELL ANSWER REPLY SAY HELLO INCANT>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<==? ,WINNER .WHO>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    },
                    {
                      "Zil": ".WHO",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "WHO"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<VERB? TELL ANSWER REPLY SAY HELLO INCANT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "TELL"
                    },
                    {
                      "Atom": "ANSWER"
                    },
                    {
                      "Atom": "REPLY"
                    },
                    {
                      "Atom": "SAY"
                    },
                    {
                      "Atom": "HELLO"
                    },
                    {
                      "Atom": "INCANT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<VERB? TELL ANSWER SAY INCANT REPLY> <SETG P-CONT <>> <SETG QUOTE-FLAG <>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<VERB? TELL ANSWER SAY INCANT REPLY>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Atom": "ANSWER"
                      },
                      {
                        "Atom": "SAY"
                      },
                      {
                        "Atom": "INCANT"
                      },
                      {
                        "Atom": "REPLY"
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG P-CONT <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "P-CONT"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG QUOTE-FLAG <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "QUOTE-FLAG"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1789",
    "Name": "OLD-MAN-F",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-OBJDESC> <COND (,OLD-MAN-AWAKE <TELL \"There is an old man huddled in the corner, eyeing you cautiously.\r\nHe looks weak and tired.\" CR>) (T <TELL \"An old and wizened man is huddled, asleep, in the corner. He is snoring\r\nloudly, and looks quite weak and frail.\" CR>)>) (<AND <VERB? GIVE> <==? ,PRSI ,OLD-MAN>> <COND (,OLD-MAN-AWAKE <COND (<==? ,PRSO ,WAYBREAD> <REMOVE ,WAYBREAD> <TELL \"He looks up at you and takes the waybread. Slowly, he eats the\r\nbread and pauses when he is finished. He starts to speak: \\\"Perhaps what you\r\nseek is through there!\\\" He points at the carved wall to the north, where you\r\nnow notice the bare outline of a secret door. When you turn back, the old\r\nman is gone!\" CR> <FCLEAR ,SECRET-DOOR ,INVISIBLE> <SETG OLD-MAN-GONE T> <REMOVE ,OLD-MAN>) (<IN? ,WAYBREAD ,WINNER> <TELL \"He refuses your offer but motions with his arm to the waybread in your\r\nhand.\" CR>) (T <TELL \"The old man refuses the \" D ,PRSO \" with a wave of his hand.\" CR>)>) (T <TELL \"He is asleep!\" CR>)>) (<VERB? EXAMINE> <COND (,OLD-MAN-AWAKE <TELL \"The old man is barely awake and appears to nod off every few moments.\r\nHe has bright eyes, which appear to see right through your body.\" CR>) (T <TELL \"The man is very, very old and wizened. He has a long, stringy\r\nbeard and is snoring quite loudly.\" CR>)>) (<VERB? LISTEN> <COND (,OLD-MAN-AWAKE <TELL \"He isn't talking.\" CR>) (T <TELL \"He is snoring like a buzz saw.\" CR>)>) (<HELLO? ,OLD-MAN> <COND (,OLD-MAN-AWAKE <TELL \"He nods at you without seeming to have understood.\" CR>) (T <TELL \"He is sleeping soundly and does not respond.\" CR>)>) (<VERB? SHAKE ALARM> <TELL \"The old man is roused to consciousness. He peers at you through eyes which\r\nappear much younger and stronger than his frail body and waits, as if expecting\r\nsomething to happen.\" CR> <SETG OLD-MAN-AWAKE T> <ENABLE <QUEUE I-OLD-MAN-SLEEPS 3>>) (<VERB? ATTACK MUNG> <TELL \"The attack seems to have left the old man unharmed! You watch in awe as he\r\nrises to his feet and seems to tower above you. He peers down menacingly,\r\nthen sadly and wearily. \\\"Not yet,\\\" he mourns, and vanishes in a puff of\r\nsmoke.\" CR> <SETG OLD-MAN-GONE T> <REMOVE ,OLD-MAN>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-OBJDESC>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-OBJDESC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-OBJDESC"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (,OLD-MAN-AWAKE <TELL \"There is an old man huddled in the corner, eyeing you cautiously.\r\nHe looks weak and tired.\" CR>) (T <TELL \"An old and wizened man is huddled, asleep, in the corner. He is snoring\r\nloudly, and looks quite weak and frail.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",OLD-MAN-AWAKE",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "OLD-MAN-AWAKE"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"There is an old man huddled in the corner, eyeing you cautiously.\r\nHe looks weak and tired.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There is an old man huddled in the corner, eyeing you cautiously.\r\nHe looks weak and tired.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"An old and wizened man is huddled, asleep, in the corner. He is snoring\r\nloudly, and looks quite weak and frail.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "An old and wizened man is huddled, asleep, in the corner. He is snoring\r\nloudly, and looks quite weak and frail.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? GIVE> <==? ,PRSI ,OLD-MAN>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? GIVE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "GIVE"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,OLD-MAN>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",OLD-MAN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "OLD-MAN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (,OLD-MAN-AWAKE <COND (<==? ,PRSO ,WAYBREAD> <REMOVE ,WAYBREAD> <TELL \"He looks up at you and takes the waybread. Slowly, he eats the\r\nbread and pauses when he is finished. He starts to speak: \\\"Perhaps what you\r\nseek is through there!\\\" He points at the carved wall to the north, where you\r\nnow notice the bare outline of a secret door. When you turn back, the old\r\nman is gone!\" CR> <FCLEAR ,SECRET-DOOR ,INVISIBLE> <SETG OLD-MAN-GONE T> <REMOVE ,OLD-MAN>) (<IN? ,WAYBREAD ,WINNER> <TELL \"He refuses your offer but motions with his arm to the waybread in your\r\nhand.\" CR>) (T <TELL \"The old man refuses the \" D ,PRSO \" with a wave of his hand.\" CR>)>) (T <TELL \"He is asleep!\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",OLD-MAN-AWAKE",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "OLD-MAN-AWAKE"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<==? ,PRSO ,WAYBREAD> <REMOVE ,WAYBREAD> <TELL \"He looks up at you and takes the waybread. Slowly, he eats the\r\nbread and pauses when he is finished. He starts to speak: \\\"Perhaps what you\r\nseek is through there!\\\" He points at the carved wall to the north, where you\r\nnow notice the bare outline of a secret door. When you turn back, the old\r\nman is gone!\" CR> <FCLEAR ,SECRET-DOOR ,INVISIBLE> <SETG OLD-MAN-GONE T> <REMOVE ,OLD-MAN>) (<IN? ,WAYBREAD ,WINNER> <TELL \"He refuses your offer but motions with his arm to the waybread in your\r\nhand.\" CR>) (T <TELL \"The old man refuses the \" D ,PRSO \" with a wave of his hand.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<==? ,PRSO ,WAYBREAD>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",WAYBREAD",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "WAYBREAD"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<REMOVE ,WAYBREAD>",
                          "Form": [
                            {
                              "Atom": "REMOVE"
                            },
                            {
                              "Zil": ",WAYBREAD",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "WAYBREAD"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"He looks up at you and takes the waybread. Slowly, he eats the\r\nbread and pauses when he is finished. He starts to speak: \\\"Perhaps what you\r\nseek is through there!\\\" He points at the carved wall to the north, where you\r\nnow notice the bare outline of a secret door. When you turn back, the old\r\nman is gone!\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "He looks up at you and takes the waybread. Slowly, he eats the\r\nbread and pauses when he is finished. He starts to speak: \"Perhaps what you\r\nseek is through there!\" He points at the carved wall to the north, where you\r\nnow notice the bare outline of a secret door. When you turn back, the old\r\nman is gone!",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<FCLEAR ,SECRET-DOOR ,INVISIBLE>",
                          "Form": [
                            {
                              "Atom": "FCLEAR"
                            },
                            {
                              "Zil": ",SECRET-DOOR",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "SECRET-DOOR"
                                }
                              ]
                            },
                            {
                              "Zil": ",INVISIBLE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "INVISIBLE"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG OLD-MAN-GONE T>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "OLD-MAN-GONE"
                            },
                            {
                              "Atom": "T"
                            }
                          ]
                        },
                        {
                          "Zil": "<REMOVE ,OLD-MAN>",
                          "Form": [
                            {
                              "Atom": "REMOVE"
                            },
                            {
                              "Zil": ",OLD-MAN",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "OLD-MAN"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<IN? ,WAYBREAD ,WINNER>",
                          "Form": [
                            {
                              "Atom": "IN?"
                            },
                            {
                              "Zil": ",WAYBREAD",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "WAYBREAD"
                                }
                              ]
                            },
                            {
                              "Zil": ",WINNER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "WINNER"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"He refuses your offer but motions with his arm to the waybread in your\r\nhand.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "He refuses your offer but motions with his arm to the waybread in your\r\nhand.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"The old man refuses the \" D ,PRSO \" with a wave of his hand.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The old man refuses the ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            " with a wave of his hand.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"He is asleep!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "He is asleep!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<COND (,OLD-MAN-AWAKE <TELL \"The old man is barely awake and appears to nod off every few moments.\r\nHe has bright eyes, which appear to see right through your body.\" CR>) (T <TELL \"The man is very, very old and wizened. He has a long, stringy\r\nbeard and is snoring quite loudly.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",OLD-MAN-AWAKE",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "OLD-MAN-AWAKE"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The old man is barely awake and appears to nod off every few moments.\r\nHe has bright eyes, which appear to see right through your body.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The old man is barely awake and appears to nod off every few moments.\r\nHe has bright eyes, which appear to see right through your body.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The man is very, very old and wizened. He has a long, stringy\r\nbeard and is snoring quite loudly.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The man is very, very old and wizened. He has a long, stringy\r\nbeard and is snoring quite loudly.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LISTEN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LISTEN"
                }
              ]
            },
            {
              "Zil": "<COND (,OLD-MAN-AWAKE <TELL \"He isn't talking.\" CR>) (T <TELL \"He is snoring like a buzz saw.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",OLD-MAN-AWAKE",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "OLD-MAN-AWAKE"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"He isn't talking.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "He isn't talking.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"He is snoring like a buzz saw.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "He is snoring like a buzz saw.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<HELLO? ,OLD-MAN>",
              "Form": [
                {
                  "Atom": "HELLO?"
                },
                {
                  "Zil": ",OLD-MAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OLD-MAN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (,OLD-MAN-AWAKE <TELL \"He nods at you without seeming to have understood.\" CR>) (T <TELL \"He is sleeping soundly and does not respond.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",OLD-MAN-AWAKE",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "OLD-MAN-AWAKE"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"He nods at you without seeming to have understood.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "He nods at you without seeming to have understood.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"He is sleeping soundly and does not respond.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "He is sleeping soundly and does not respond.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? SHAKE ALARM>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "SHAKE"
                },
                {
                  "Atom": "ALARM"
                }
              ]
            },
            {
              "Zil": "<TELL \"The old man is roused to consciousness. He peers at you through eyes which\r\nappear much younger and stronger than his frail body and waits, as if expecting\r\nsomething to happen.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The old man is roused to consciousness. He peers at you through eyes which\r\nappear much younger and stronger than his frail body and waits, as if expecting\r\nsomething to happen.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG OLD-MAN-AWAKE T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "OLD-MAN-AWAKE"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-OLD-MAN-SLEEPS 3>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-OLD-MAN-SLEEPS 3>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-OLD-MAN-SLEEPS"
                    },
                    3
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? ATTACK MUNG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "ATTACK"
                },
                {
                  "Atom": "MUNG"
                }
              ]
            },
            {
              "Zil": "<TELL \"The attack seems to have left the old man unharmed! You watch in awe as he\r\nrises to his feet and seems to tower above you. He peers down menacingly,\r\nthen sadly and wearily. \\\"Not yet,\\\" he mourns, and vanishes in a puff of\r\nsmoke.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The attack seems to have left the old man unharmed! You watch in awe as he\r\nrises to his feet and seems to tower above you. He peers down menacingly,\r\nthen sadly and wearily. \"Not yet,\" he mourns, and vanishes in a puff of\r\nsmoke.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG OLD-MAN-GONE T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "OLD-MAN-GONE"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<REMOVE ,OLD-MAN>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",OLD-MAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OLD-MAN"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1859",
    "Name": "I-OLD-MAN-SLEEPS",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG OLD-MAN-AWAKE <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "OLD-MAN-AWAKE"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (<IN? ,OLD-MAN ,HERE> <TELL \"You notice that the old man has fallen asleep.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<IN? ,OLD-MAN ,HERE>",
              "Form": [
                {
                  "Atom": "IN?"
                },
                {
                  "Zil": ",OLD-MAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OLD-MAN"
                    }
                  ]
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You notice that the old man has fallen asleep.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You notice that the old man has fallen asleep.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1864",
    "Name": "RUNES-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE READ> <TELL \"The runes are in an ancient language. Some pictures among the runes depict\r\nflames, stone statues, and an old man.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE READ>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                },
                {
                  "Atom": "READ"
                }
              ]
            },
            {
              "Zil": "<TELL \"The runes are in an ancient language. Some pictures among the runes depict\r\nflames, stone statues, and an old man.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The runes are in an ancient language. Some pictures among the runes depict\r\nflames, stone statues, and an old man.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1870",
    "Name": "T-BAR-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? TURN> <TELL \"You don't have enough leverage to turn the T-bar. You might be able\r\nto turn the whole structure, however.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? TURN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TURN"
                }
              ]
            },
            {
              "Zil": "<TELL \"You don't have enough leverage to turn the T-bar. You might be able\r\nto turn the whole structure, however.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You don't have enough leverage to turn the T-bar. You might be able\r\nto turn the whole structure, however.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1876",
    "Name": "FLAMING-PIT-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE> <TELL \"The flaming pit is a seemingly bottomless abyss filled with smoke and\r\nflame.\" CR>) (<AND <VERB? PUT> <==? ,PRSI ,FLAMING-PIT>> <COND (<EQUAL? ,HERE ,PARAPET ,NORTH-CORRIDOR> <COND (<==? ,PRSO ,ME> <TELL \"It would be a pity to end your life so near the end of your quest!\" CR>) (T <TELL \"You cast the \" D ,PRSO \" into the pit, where it is lost forever.\" CR> <REMOVE ,PRSO>)>) (T <TELL \"You're not close enough.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The flaming pit is a seemingly bottomless abyss filled with smoke and\r\nflame.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The flaming pit is a seemingly bottomless abyss filled with smoke and\r\nflame.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? PUT> <==? ,PRSI ,FLAMING-PIT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,FLAMING-PIT>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",FLAMING-PIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "FLAMING-PIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? ,HERE ,PARAPET ,NORTH-CORRIDOR> <COND (<==? ,PRSO ,ME> <TELL \"It would be a pity to end your life so near the end of your quest!\" CR>) (T <TELL \"You cast the \" D ,PRSO \" into the pit, where it is lost forever.\" CR> <REMOVE ,PRSO>)>) (T <TELL \"You're not close enough.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? ,HERE ,PARAPET ,NORTH-CORRIDOR>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",PARAPET",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PARAPET"
                          }
                        ]
                      },
                      {
                        "Zil": ",NORTH-CORRIDOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "NORTH-CORRIDOR"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<==? ,PRSO ,ME> <TELL \"It would be a pity to end your life so near the end of your quest!\" CR>) (T <TELL \"You cast the \" D ,PRSO \" into the pit, where it is lost forever.\" CR> <REMOVE ,PRSO>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<==? ,PRSO ,ME>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",ME",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "ME"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"It would be a pity to end your life so near the end of your quest!\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "It would be a pity to end your life so near the end of your quest!",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"You cast the \" D ,PRSO \" into the pit, where it is lost forever.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "You cast the ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            " into the pit, where it is lost forever.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<REMOVE ,PRSO>",
                          "Form": [
                            {
                              "Atom": "REMOVE"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You're not close enough.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You're not close enough.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1892",
    "Name": "PARAPET-OBJ-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE> <COND (<EQUAL? ,HERE ,CELL ,NORTH-CORRIDOR> <TELL \"You can see the parapet and sundial from here.\"> <COND (<IN? ,DUNGEON-MASTER ,PARAPET> <TELL \" The dungeon master is there\r\nalso, leaning on his staff.\">)> <CRLF>) (T <V-LOOK>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? ,HERE ,CELL ,NORTH-CORRIDOR> <TELL \"You can see the parapet and sundial from here.\"> <COND (<IN? ,DUNGEON-MASTER ,PARAPET> <TELL \" The dungeon master is there\r\nalso, leaning on his staff.\">)> <CRLF>) (T <V-LOOK>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? ,HERE ,CELL ,NORTH-CORRIDOR>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",CELL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CELL"
                          }
                        ]
                      },
                      {
                        "Zil": ",NORTH-CORRIDOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "NORTH-CORRIDOR"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You can see the parapet and sundial from here.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can see the parapet and sundial from here."
                    ]
                  },
                  {
                    "Zil": "<COND (<IN? ,DUNGEON-MASTER ,PARAPET> <TELL \" The dungeon master is there\r\nalso, leaning on his staff.\">)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<IN? ,DUNGEON-MASTER ,PARAPET>",
                          "Form": [
                            {
                              "Atom": "IN?"
                            },
                            {
                              "Zil": ",DUNGEON-MASTER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "DUNGEON-MASTER"
                                }
                              ]
                            },
                            {
                              "Zil": ",PARAPET",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PARAPET"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \" The dungeon master is there\r\nalso, leaning on his staff.\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            " The dungeon master is there\r\nalso, leaning on his staff."
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<CRLF>",
                    "Form": [
                      {
                        "Atom": "CRLF"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<V-LOOK>",
                    "Form": [
                      {
                        "Atom": "V-LOOK"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1903",
    "Name": "ROSE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? TURN MOVE> <TELL \"The compass rose is made of stone and is imbedded in the ground.\r\nYou could not possibly turn it or move it.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? TURN MOVE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TURN"
                },
                {
                  "Atom": "MOVE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The compass rose is made of stone and is imbedded in the ground.\r\nYou could not possibly turn it or move it.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The compass rose is made of stone and is imbedded in the ground.\r\nYou could not possibly turn it or move it.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1909",
    "Name": "CELL-DOOR-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? PUT> <==? ,PRSI ,CELL-DOOR>> <TELL \"You will have to enter the cell first.\" CR>) (<VERB? THROUGH> <COND (<==? ,HERE ,CELL> <TELL \"Look around.\" CR>) (T <DO-WALK ,P?SOUTH> <RTRUE>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? PUT> <==? ,PRSI ,CELL-DOOR>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,CELL-DOOR>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",CELL-DOOR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CELL-DOOR"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You will have to enter the cell first.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You will have to enter the cell first.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? THROUGH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "THROUGH"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,HERE ,CELL> <TELL \"Look around.\" CR>) (T <DO-WALK ,P?SOUTH> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,HERE ,CELL>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",CELL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CELL"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Look around.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Look around.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<DO-WALK ,P?SOUTH>",
                    "Form": [
                      {
                        "Atom": "DO-WALK"
                      },
                      {
                        "Zil": ",P?SOUTH",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "P?SOUTH"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1919",
    "Name": "LORE-BOOK-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? BURN> <NOT <IN? ,LORE-BOOK ,WINNER>>> <TELL \"The book is consumed in a dazzling display of color.\" CR> <REMOVE ,PRSO> <RTRUE>) (<AND ,IN-DUNGEON <VERB? OPEN EXAMINE READ>> <TELL \"The book seems to will itself open to a specific page. It shows a picture of\r\neight small rooms located around a great circle of flame. All are identical\r\nsave one, which has a bronze door leading to a room bathed in golden light.\r\nA legend beneath the picture says \\\"The Dungeon and Treasury of Zork.\\\"\" CR>) (<VERB? OPEN> <TELL \"The book can be perused but not left open.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? BURN> <NOT <IN? ,LORE-BOOK ,WINNER>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? BURN>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "BURN"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <IN? ,LORE-BOOK ,WINNER>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<IN? ,LORE-BOOK ,WINNER>",
                      "Form": [
                        {
                          "Atom": "IN?"
                        },
                        {
                          "Zil": ",LORE-BOOK",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "LORE-BOOK"
                            }
                          ]
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The book is consumed in a dazzling display of color.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The book is consumed in a dazzling display of color.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<REMOVE ,PRSO>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND ,IN-DUNGEON <VERB? OPEN EXAMINE READ>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ",IN-DUNGEON",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "IN-DUNGEON"
                    }
                  ]
                },
                {
                  "Zil": "<VERB? OPEN EXAMINE READ>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "OPEN"
                    },
                    {
                      "Atom": "EXAMINE"
                    },
                    {
                      "Atom": "READ"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The book seems to will itself open to a specific page. It shows a picture of\r\neight small rooms located around a great circle of flame. All are identical\r\nsave one, which has a bronze door leading to a room bathed in golden light.\r\nA legend beneath the picture says \\\"The Dungeon and Treasury of Zork.\\\"\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The book seems to will itself open to a specific page. It shows a picture of\r\neight small rooms located around a great circle of flame. All are identical\r\nsave one, which has a bronze door leading to a room bathed in golden light.\r\nA legend beneath the picture says \"The Dungeon and Treasury of Zork.\"",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? OPEN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                }
              ]
            },
            {
              "Zil": "<TELL \"The book can be perused but not left open.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The book can be perused but not left open.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1935",
    "Name": "CP-HOLE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? THROUGH> <DO-WALK ,P?DOWN> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? THROUGH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "THROUGH"
                }
              ]
            },
            {
              "Zil": "<DO-WALK ,P?DOWN>",
              "Form": [
                {
                  "Atom": "DO-WALK"
                },
                {
                  "Zil": ",P?DOWN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?DOWN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1940",
    "Name": "TORCH-PSEUDO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"The torches are out of reach.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "The torches are out of reach.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1943",
    "Name": "WATER-FCN",
    "ArgSpec": "(\"AUX\" AV PI?)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<COND (<VERB? SGIVE> <RFALSE>) (<VERB? THROUGH> <PERFORM ,V?SWIM ,PRSO> <RTRUE>) (<VERB? FILL> <SETG PRSA ,V?PUT> <SETG PRSI ,PRSO> <SETG PRSO ,GLOBAL-WATER> <SET PI? <>>) (<EQUAL? ,PRSO ,GLOBAL-WATER> <SET PI? <>>) (,PRSI <SET PI? T>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? SGIVE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "SGIVE"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? THROUGH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "THROUGH"
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?SWIM ,PRSO>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?SWIM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?SWIM"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? FILL>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "FILL"
                }
              ]
            },
            {
              "Zil": "<SETG PRSA ,V?PUT>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "PRSA"
                },
                {
                  "Zil": ",V?PUT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?PUT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG PRSI ,PRSO>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "PRSI"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG PRSO ,GLOBAL-WATER>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "PRSO"
                },
                {
                  "Zil": ",GLOBAL-WATER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GLOBAL-WATER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET PI? <>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "PI?"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,PRSO ,GLOBAL-WATER>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",GLOBAL-WATER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GLOBAL-WATER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET PI? <>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "PI?"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ],
          [
            {
              "Zil": ",PRSI",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "PRSI"
                }
              ]
            },
            {
              "Zil": "<SET PI? T>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "PI?"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (.PI? <SETG PRSI ,GLOBAL-WATER>) (T <SETG PRSO ,GLOBAL-WATER>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ".PI?",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "PI?"
                }
              ]
            },
            {
              "Zil": "<SETG PRSI ,GLOBAL-WATER>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "PRSI"
                },
                {
                  "Zil": ",GLOBAL-WATER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GLOBAL-WATER"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SETG PRSO ,GLOBAL-WATER>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "PRSO"
                },
                {
                  "Zil": ",GLOBAL-WATER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GLOBAL-WATER"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<AND <VERB? TAKE PUT> <NOT .PI?>> <TELL \"The water slips through your fingers.\" CR>) (.PI? <TELL \"You can't do that.\" CR>) (<VERB? DROP GIVE THROW> <TELL \"You don't have any water.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? TAKE PUT> <NOT .PI?>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? TAKE PUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "TAKE"
                    },
                    {
                      "Atom": "PUT"
                    }
                  ]
                },
                {
                  "Zil": "<NOT .PI?>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".PI?",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "PI?"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The water slips through your fingers.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The water slips through your fingers.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": ".PI?",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "PI?"
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't do that.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't do that.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? DROP GIVE THROW>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "DROP"
                },
                {
                  "Atom": "GIVE"
                },
                {
                  "Atom": "THROW"
                }
              ]
            },
            {
              "Zil": "<TELL \"You don't have any water.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You don't have any water.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1966",
    "Name": "RANDOM-WALL",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? PUSH> <COND (<==? ,HERE ,IN-MIRROR> <TELL \"You should specify which panel you want to push.\" CR>) (T <TELL \"You can't budge it; at least from here.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? PUSH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "PUSH"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,HERE ,IN-MIRROR> <TELL \"You should specify which panel you want to push.\" CR>) (T <TELL \"You can't budge it; at least from here.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,HERE ,IN-MIRROR>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",IN-MIRROR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "IN-MIRROR"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You should specify which panel you want to push.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You should specify which panel you want to push.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You can't budge it; at least from here.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can't budge it; at least from here.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1980",
    "Name": "V-DIAGNOSE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL <GET ,DIAG ,P-STRENGTH> CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          {
            "Zil": "<GET ,DIAG ,P-STRENGTH>",
            "Form": [
              {
                "Atom": "GET"
              },
              {
                "Zil": ",DIAG",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "DIAG"
                  }
                ]
              },
              {
                "Zil": ",P-STRENGTH",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "P-STRENGTH"
                  }
                ]
              }
            ]
          },
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:1991",
    "Name": "JIGS-UP",
    "ArgSpec": "(DESC \"OPT\" (PLAYER? <>))",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<SETG SWORD-STATE 0>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "SWORD-STATE"
          },
          0
        ]
      },
      {
        "Zil": "<SETG P-STRENGTH 5>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-STRENGTH"
          },
          5
        ]
      },
      {
        "Zil": "<SETG S-STRENGTH 5>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "S-STRENGTH"
          },
          5
        ]
      },
      {
        "Zil": "<TELL .DESC CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          {
            "Zil": ".DESC",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "DESC"
              }
            ]
          },
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<COND (<NOT <==? ,YEAR ,YEAR-PRESENT>> <QUIT>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <==? ,YEAR ,YEAR-PRESENT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<==? ,YEAR ,YEAR-PRESENT>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",YEAR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "YEAR"
                        }
                      ]
                    },
                    {
                      "Zil": ",YEAR-PRESENT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "YEAR-PRESENT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<QUIT>",
              "Form": [
                {
                  "Atom": "QUIT"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT <==? ,ADVENTURER ,WINNER>> <TELL \"\r\n|    ****  The \" D ,WINNER \" has died  ****\r\n|\r\n|\"> <REMOVE ,WINNER> <SETG WINNER ,ADVENTURER> <SETG HERE <LOC ,WINNER>> <RFATAL>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <==? ,ADVENTURER ,WINNER>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<==? ,ADVENTURER ,WINNER>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",ADVENTURER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ADVENTURER"
                        }
                      ]
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"\r\n|    ****  The \" D ,WINNER \" has died  ****\r\n|\r\n|\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "\r\n|    ****  The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                },
                " has died  ****\r\n|\r\n|"
              ]
            },
            {
              "Zil": "<REMOVE ,WINNER>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG WINNER ,ADVENTURER>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "WINNER"
                },
                {
                  "Zil": ",ADVENTURER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ADVENTURER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG HERE <LOC ,WINNER>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "HERE"
                },
                {
                  "Zil": "<LOC ,WINNER>",
                  "Form": [
                    {
                      "Atom": "LOC"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFATAL>",
              "Form": [
                {
                  "Atom": "RFATAL"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<TELL \"|\r\n    ****  You have died  ****|\r\n|\r\n\">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "|\r\n    ****  You have died  ****|\r\n|\r\n"
        ]
      },
      {
        "Zil": "<COND (<G? <SETG DEATHS <+ ,DEATHS 1>> 3> <TELL \"You feel yourself disembodied in a deep blackness. A voice from the void\r\nspeaks:  \\\"I have waited a long age for you, my friend, but perhaps it has been\r\nanother that I have been seeking. Good night, oh worthy adventurer!\\\" It is\r\nthe last you hear.\" CR> <QUIT>) (T <TELL \"You find yourself deep within the earth in a barren prison cell.\r\nOutside the iron-barred window, you can see a great, fiery pit. Flames\r\nleap up and very nearly sear your flesh. After a while, footfalls can\r\nbe heard in the distance, then closer and closer.... The door swings\r\nopen, and in walks an old man.|\r\n|\r\nHe is dressed simply in a hood and cloak, wearing an amulet and ring,\r\ncarrying an old book under one arm, and leaning on a wooden staff. A single\r\nkey, as if to a massive prison cell, hangs from his belt.|\r\n|\r\nHe raises the staff toward you and you hear\r\nhim speak, as if in a dream: \\\"I await you, though your journey be long\r\nand full of peril. Go then, and let me not wait long!\\\" You feel some\r\ngreat power well up inside you and you fall to the floor. The next\r\nmoment, you are awakening, as if from a deep slumber.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<G? <SETG DEATHS <+ ,DEATHS 1>> 3>",
              "Form": [
                {
                  "Atom": "G?"
                },
                {
                  "Zil": "<SETG DEATHS <+ ,DEATHS 1>>",
                  "Form": [
                    {
                      "Atom": "SETG"
                    },
                    {
                      "Atom": "DEATHS"
                    },
                    {
                      "Zil": "<+ ,DEATHS 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ",DEATHS",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "DEATHS"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                },
                3
              ]
            },
            {
              "Zil": "<TELL \"You feel yourself disembodied in a deep blackness. A voice from the void\r\nspeaks:  \\\"I have waited a long age for you, my friend, but perhaps it has been\r\nanother that I have been seeking. Good night, oh worthy adventurer!\\\" It is\r\nthe last you hear.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You feel yourself disembodied in a deep blackness. A voice from the void\r\nspeaks:  \"I have waited a long age for you, my friend, but perhaps it has been\r\nanother that I have been seeking. Good night, oh worthy adventurer!\" It is\r\nthe last you hear.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<QUIT>",
              "Form": [
                {
                  "Atom": "QUIT"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"You find yourself deep within the earth in a barren prison cell.\r\nOutside the iron-barred window, you can see a great, fiery pit. Flames\r\nleap up and very nearly sear your flesh. After a while, footfalls can\r\nbe heard in the distance, then closer and closer.... The door swings\r\nopen, and in walks an old man.|\r\n|\r\nHe is dressed simply in a hood and cloak, wearing an amulet and ring,\r\ncarrying an old book under one arm, and leaning on a wooden staff. A single\r\nkey, as if to a massive prison cell, hangs from his belt.|\r\n|\r\nHe raises the staff toward you and you hear\r\nhim speak, as if in a dream: \\\"I await you, though your journey be long\r\nand full of peril. Go then, and let me not wait long!\\\" You feel some\r\ngreat power well up inside you and you fall to the floor. The next\r\nmoment, you are awakening, as if from a deep slumber.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You find yourself deep within the earth in a barren prison cell.\r\nOutside the iron-barred window, you can see a great, fiery pit. Flames\r\nleap up and very nearly sear your flesh. After a while, footfalls can\r\nbe heard in the distance, then closer and closer.... The door swings\r\nopen, and in walks an old man.|\r\n|\r\nHe is dressed simply in a hood and cloak, wearing an amulet and ring,\r\ncarrying an old book under one arm, and leaning on a wooden staff. A single\r\nkey, as if to a massive prison cell, hangs from his belt.|\r\n|\r\nHe raises the staff toward you and you hear\r\nhim speak, as if in a dream: \"I await you, though your journey be long\r\nand full of peril. Go then, and let me not wait long!\" You feel some\r\ngreat power well up inside you and you fall to the floor. The next\r\nmoment, you are awakening, as if from a deep slumber.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<MOVE ,CURRENT-LAMP ,ZORK2-STAIR>",
        "Form": [
          {
            "Atom": "MOVE"
          },
          {
            "Zil": ",CURRENT-LAMP",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CURRENT-LAMP"
              }
            ]
          },
          {
            "Zil": ",ZORK2-STAIR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "ZORK2-STAIR"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND <IN? ,KEY ,WINNER> <OR <EQUAL? ,HERE ,DARK-1 ,DARK-2 ,KEY-ROOM> <EQUAL? ,HERE ,AQ-1 ,AQ-2>>> <MOVE ,KEY ,KEY-ROOM>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <IN? ,KEY ,WINNER> <OR <EQUAL? ,HERE ,DARK-1 ,DARK-2 ,KEY-ROOM> <EQUAL? ,HERE ,AQ-1 ,AQ-2>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<IN? ,KEY ,WINNER>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",KEY",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "KEY"
                        }
                      ]
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<OR <EQUAL? ,HERE ,DARK-1 ,DARK-2 ,KEY-ROOM> <EQUAL? ,HERE ,AQ-1 ,AQ-2>>",
                  "Form": [
                    {
                      "Atom": "OR"
                    },
                    {
                      "Zil": "<EQUAL? ,HERE ,DARK-1 ,DARK-2 ,KEY-ROOM>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        },
                        {
                          "Zil": ",DARK-1",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "DARK-1"
                            }
                          ]
                        },
                        {
                          "Zil": ",DARK-2",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "DARK-2"
                            }
                          ]
                        },
                        {
                          "Zil": ",KEY-ROOM",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "KEY-ROOM"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "Zil": "<EQUAL? ,HERE ,AQ-1 ,AQ-2>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        },
                        {
                          "Zil": ",AQ-1",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "AQ-1"
                            }
                          ]
                        },
                        {
                          "Zil": ",AQ-2",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "AQ-2"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,KEY ,KEY-ROOM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",KEY",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "KEY"
                    }
                  ]
                },
                {
                  "Zil": ",KEY-ROOM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "KEY-ROOM"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<CRLF>",
        "Form": [
          {
            "Atom": "CRLF"
          }
        ]
      },
      {
        "Zil": "<GOTO ,ZORK2-STAIR>",
        "Form": [
          {
            "Atom": "GOTO"
          },
          {
            "Zil": ",ZORK2-STAIR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "ZORK2-STAIR"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG P-CONT <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "P-CONT"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<RANDOMIZE-OBJECTS>",
        "Form": [
          {
            "Atom": "RANDOMIZE-OBJECTS"
          }
        ]
      },
      {
        "Zil": "<KILL-INTERRUPTS>",
        "Form": [
          {
            "Atom": "KILL-INTERRUPTS"
          }
        ]
      },
      {
        "Zil": "<RFATAL>",
        "Form": [
          {
            "Atom": "RFATAL"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2047",
    "Name": "RANDOMIZE-OBJECTS",
    "ArgSpec": "(\"AUX\" (R <>) F N L)",
    "Body": [
      {
        "Zil": "<SET N <FIRST? ,WINNER>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "N"
          },
          {
            "Zil": "<FIRST? ,WINNER>",
            "Form": [
              {
                "Atom": "FIRST?"
              },
              {
                "Zil": ",WINNER",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "WINNER"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<REPEAT () <SET F .N> <COND (<NOT .F> <RETURN>)> <SET N <NEXT? .F>> <MOVE .F <RANDOM-ELEMENT ,DEAD-OBJ-LOCS>>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<SET F .N>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "F"
              },
              {
                "Zil": ".N",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "N"
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<COND (<NOT .F> <RETURN>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<NOT .F>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ".F",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ]
            ]
          },
          {
            "Zil": "<SET N <NEXT? .F>>",
            "Form": [
              {
                "Atom": "SET"
              },
              {
                "Atom": "N"
              },
              {
                "Zil": "<NEXT? .F>",
                "Form": [
                  {
                    "Atom": "NEXT?"
                  },
                  {
                    "Zil": ".F",
                    "Form": [
                      {
                        "Atom": "LVAL"
                      },
                      {
                        "Atom": "F"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "Zil": "<MOVE .F <RANDOM-ELEMENT ,DEAD-OBJ-LOCS>>",
            "Form": [
              {
                "Atom": "MOVE"
              },
              {
                "Zil": ".F",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "F"
                  }
                ]
              },
              {
                "Zil": "<RANDOM-ELEMENT ,DEAD-OBJ-LOCS>",
                "Form": [
                  {
                    "Atom": "RANDOM-ELEMENT"
                  },
                  {
                    "Zil": ",DEAD-OBJ-LOCS",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "DEAD-OBJ-LOCS"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2059",
    "Name": "KILL-INTERRUPTS",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<DISABLE <INT I-MAN-LEAVES>>",
        "Form": [
          {
            "Atom": "DISABLE"
          },
          {
            "Zil": "<INT I-MAN-LEAVES>",
            "Form": [
              {
                "Atom": "INT"
              },
              {
                "Atom": "I-MAN-LEAVES"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<DISABLE <INT I-MAN-RETURNS>>",
        "Form": [
          {
            "Atom": "DISABLE"
          },
          {
            "Zil": "<INT I-MAN-RETURNS>",
            "Form": [
              {
                "Atom": "INT"
              },
              {
                "Atom": "I-MAN-RETURNS"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<DISABLE <INT I-VIEW-SNAP>>",
        "Form": [
          {
            "Atom": "DISABLE"
          },
          {
            "Zil": "<INT I-VIEW-SNAP>",
            "Form": [
              {
                "Atom": "INT"
              },
              {
                "Atom": "I-VIEW-SNAP"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<DISABLE <INT I-FOLIN>>",
        "Form": [
          {
            "Atom": "DISABLE"
          },
          {
            "Zil": "<INT I-FOLIN>",
            "Form": [
              {
                "Atom": "INT"
              },
              {
                "Atom": "I-FOLIN"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2068",
    "Name": "V-SCORE",
    "ArgSpec": "(\"OPT\" (ASK? T))",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<TELL \"Your potential is \" N ,SCORE>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Your potential is ",
          {
            "Atom": "N"
          },
          {
            "Zil": ",SCORE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "SCORE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \" of a possible \" N ,SCORE-MAX \", in \">",
        "Form": [
          {
            "Atom": "TELL"
          },
          " of a possible ",
          {
            "Atom": "N"
          },
          {
            "Zil": ",SCORE-MAX",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "SCORE-MAX"
              }
            ]
          },
          ", in "
        ]
      },
      {
        "Zil": "<TELL N ,MOVES>",
        "Form": [
          {
            "Atom": "TELL"
          },
          {
            "Atom": "N"
          },
          {
            "Zil": ",MOVES",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "MOVES"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<1? ,MOVES> <TELL \" move.\">) (ELSE <TELL \" moves.\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<1? ,MOVES>",
              "Form": [
                {
                  "Atom": "1?"
                },
                {
                  "Zil": ",MOVES",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MOVES"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \" move.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " move."
              ]
            }
          ],
          [
            {
              "Atom": "ELSE"
            },
            {
              "Zil": "<TELL \" moves.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " moves."
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<CRLF>",
        "Form": [
          {
            "Atom": "CRLF"
          }
        ]
      },
      {
        "Zil": ",SCORE",
        "Form": [
          {
            "Atom": "GVAL"
          },
          {
            "Atom": "SCORE"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2311",
    "Name": "TM-HOLLOW-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? PUT> <EQUAL? ,PRSI ,TM-HOLLOW>> <PERFORM ,V?PUT-UNDER ,PRSO ,TM-SEAT> <RTRUE>) (<VERB? LOOK-INSIDE> <PERFORM ,V?LOOK-UNDER ,TM-SEAT> <RTRUE>) (<EQUAL? ,PRSO ,TM-HOLLOW> <PERFORM ,PRSA ,TM-SEAT ,PRSI> <RTRUE>) (<EQUAL? ,PRSI ,TM-HOLLOW> <PERFORM ,PRSA ,PRSO ,TM-SEAT> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? PUT> <EQUAL? ,PRSI ,TM-HOLLOW>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT"
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,PRSI ,TM-HOLLOW>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",TM-HOLLOW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TM-HOLLOW"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?PUT-UNDER ,PRSO ,TM-SEAT>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?PUT-UNDER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?PUT-UNDER"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",TM-SEAT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-SEAT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LOOK-INSIDE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LOOK-INSIDE"
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?LOOK-UNDER ,TM-SEAT>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?LOOK-UNDER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?LOOK-UNDER"
                    }
                  ]
                },
                {
                  "Zil": ",TM-SEAT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-SEAT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,PRSO ,TM-HOLLOW>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",TM-HOLLOW",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-HOLLOW"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,PRSA ,TM-SEAT ,PRSI>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",PRSA",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSA"
                    }
                  ]
                },
                {
                  "Zil": ",TM-SEAT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-SEAT"
                    }
                  ]
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,PRSI ,TM-HOLLOW>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                {
                  "Zil": ",TM-HOLLOW",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-HOLLOW"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,PRSA ,PRSO ,TM-SEAT>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",PRSA",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSA"
                    }
                  ]
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",TM-SEAT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-SEAT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2440",
    "Name": "IRON-DOOR-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? OPEN UNLOCK THROUGH> <COND (<L? ,YEAR ,YEAR-PRESENT> <TELL \"The iron door is locked from the outside.\" CR>) (T <TELL \"The iron door is rusted shut and cannot be opened.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? OPEN UNLOCK THROUGH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                },
                {
                  "Atom": "UNLOCK"
                },
                {
                  "Atom": "THROUGH"
                }
              ]
            },
            {
              "Zil": "<COND (<L? ,YEAR ,YEAR-PRESENT> <TELL \"The iron door is locked from the outside.\" CR>) (T <TELL \"The iron door is rusted shut and cannot be opened.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<L? ,YEAR ,YEAR-PRESENT>",
                    "Form": [
                      {
                        "Atom": "L?"
                      },
                      {
                        "Zil": ",YEAR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "YEAR"
                          }
                        ]
                      },
                      {
                        "Zil": ",YEAR-PRESENT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "YEAR-PRESENT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The iron door is locked from the outside.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The iron door is locked from the outside.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The iron door is rusted shut and cannot be opened.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The iron door is rusted shut and cannot be opened.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2451",
    "Name": "I-CLEFT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<OR <EQUAL? ,HERE ,ZORK-IV ,ROOM-8 ,TIMBER-ROOM> <EQUAL? ,HERE ,LOWER-SHAFT ,LADDER-BOTTOM ,LADDER-TOP>> <TELL \"You feel a mild tremor from within the earth which passes quickly.\" CR>) (T <TELL \"There is a great tremor from within the earth. The entire dungeon shakes\r\nviolently and loose debris falls from above you.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <EQUAL? ,HERE ,ZORK-IV ,ROOM-8 ,TIMBER-ROOM> <EQUAL? ,HERE ,LOWER-SHAFT ,LADDER-BOTTOM ,LADDER-TOP>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<EQUAL? ,HERE ,ZORK-IV ,ROOM-8 ,TIMBER-ROOM>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",ZORK-IV",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ZORK-IV"
                        }
                      ]
                    },
                    {
                      "Zil": ",ROOM-8",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ROOM-8"
                        }
                      ]
                    },
                    {
                      "Zil": ",TIMBER-ROOM",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TIMBER-ROOM"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,HERE ,LOWER-SHAFT ,LADDER-BOTTOM ,LADDER-TOP>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",LOWER-SHAFT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "LOWER-SHAFT"
                        }
                      ]
                    },
                    {
                      "Zil": ",LADDER-BOTTOM",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "LADDER-BOTTOM"
                        }
                      ]
                    },
                    {
                      "Zil": ",LADDER-TOP",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "LADDER-TOP"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You feel a mild tremor from within the earth which passes quickly.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You feel a mild tremor from within the earth which passes quickly.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"There is a great tremor from within the earth. The entire dungeon shakes\r\nviolently and loose debris falls from above you.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is a great tremor from within the earth. The entire dungeon shakes\r\nviolently and loose debris falls from above you.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<==? ,HERE ,MUSEUM-ANTE> <TELL \"To the east, next to the great iron door, a cleft opens up,\r\nrevealing an open area behind!\" CR>) (<==? ,HERE ,AQ-VIEW> <TELL \"One of the giant pillars supporting the aqueduct collapses in a pile\r\nof smoke and rubble!\" CR>) (<EQUAL? ,HERE ,AQ-2 ,AQ-3> <TELL \"The channel beneath your feet trembles. Then the channel just to the \"> <COND (<==? ,HERE ,AQ-2> <TELL \"north\">) (T <TELL \"south\">)> <TELL \" collapses and falls into the chasm!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,HERE ,MUSEUM-ANTE>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",MUSEUM-ANTE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MUSEUM-ANTE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"To the east, next to the great iron door, a cleft opens up,\r\nrevealing an open area behind!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "To the east, next to the great iron door, a cleft opens up,\r\nrevealing an open area behind!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,HERE ,AQ-VIEW>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",AQ-VIEW",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "AQ-VIEW"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"One of the giant pillars supporting the aqueduct collapses in a pile\r\nof smoke and rubble!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "One of the giant pillars supporting the aqueduct collapses in a pile\r\nof smoke and rubble!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,HERE ,AQ-2 ,AQ-3>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",AQ-2",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "AQ-2"
                    }
                  ]
                },
                {
                  "Zil": ",AQ-3",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "AQ-3"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The channel beneath your feet trembles. Then the channel just to the \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The channel beneath your feet trembles. Then the channel just to the "
              ]
            },
            {
              "Zil": "<COND (<==? ,HERE ,AQ-2> <TELL \"north\">) (T <TELL \"south\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,HERE ,AQ-2>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",AQ-2",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "AQ-2"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"north\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "north"
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"south\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "south"
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \" collapses and falls into the chasm!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " collapses and falls into the chasm!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG CLEFT-FLAG T>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "CLEFT-FLAG"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<FCLEAR ,CLEFT ,INVISIBLE>",
        "Form": [
          {
            "Atom": "FCLEAR"
          },
          {
            "Zil": ",CLEFT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "CLEFT"
              }
            ]
          },
          {
            "Zil": ",INVISIBLE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "INVISIBLE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG AQ-FLAG <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "AQ-FLAG"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2479",
    "Name": "CLEFT-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT <==? ,YEAR ,YEAR-PRESENT>> <TELL \"There is no cleft here.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <==? ,YEAR ,YEAR-PRESENT>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<==? ,YEAR ,YEAR-PRESENT>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",YEAR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "YEAR"
                        }
                      ]
                    },
                    {
                      "Zil": ",YEAR-PRESENT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "YEAR-PRESENT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"There is no cleft here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is no cleft here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2483",
    "Name": "MUSEUM-ANTE-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <COND (,CLEFT-FLAG <TELL \"This is the south end of a monumental hall, full of debris from\r\na recent earthquake. To the east is a great iron door, rusted shut. To its\r\nright, however, is a gaping cleft in the rock and behind, a cleared area.\" CR>) (T <TELL \"You are in the southern half of a monumental hall. To the east lies\r\na tremendous iron door which appears to be rusted shut.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (,CLEFT-FLAG <TELL \"This is the south end of a monumental hall, full of debris from\r\na recent earthquake. To the east is a great iron door, rusted shut. To its\r\nright, however, is a gaping cleft in the rock and behind, a cleared area.\" CR>) (T <TELL \"You are in the southern half of a monumental hall. To the east lies\r\na tremendous iron door which appears to be rusted shut.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",CLEFT-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CLEFT-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"This is the south end of a monumental hall, full of debris from\r\na recent earthquake. To the east is a great iron door, rusted shut. To its\r\nright, however, is a gaping cleft in the rock and behind, a cleared area.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "This is the south end of a monumental hall, full of debris from\r\na recent earthquake. To the east is a great iron door, rusted shut. To its\r\nright, however, is a gaping cleft in the rock and behind, a cleared area.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You are in the southern half of a monumental hall. To the east lies\r\na tremendous iron door which appears to be rusted shut.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You are in the southern half of a monumental hall. To the east lies\r\na tremendous iron door which appears to be rusted shut.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2495",
    "Name": "DDESC",
    "ArgSpec": "(STR1 DOOR STR2)",
    "Body": [
      "[Zilf.Interpreter.Values.ZilDecl]",
      {
        "Zil": "<TELL .STR1>",
        "Form": [
          {
            "Atom": "TELL"
          },
          {
            "Zil": ".STR1",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "STR1"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<FSET? .DOOR ,OPENBIT> <TELL \"open\">) (T <TELL \"closed\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<FSET? .DOOR ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FSET?"
                },
                {
                  "Zil": ".DOOR",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "DOOR"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"open\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "open"
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"closed\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "closed"
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<TELL .STR2 CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          {
            "Zil": ".STR2",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "STR2"
              }
            ]
          },
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2502",
    "Name": "MUSEUM-ENTRANCE-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <COND (<FSET? ,CAGE ,INVISIBLE> <TELL \"This is an entrance hall of some sort, judging by the grand iron\r\ndoor to the west, and the ornate stone and wooden doors which lead to the east\r\nand north, respectively. A few wide steps lead south.\" CR>) (T <TELL \"This is the entrance to the Royal Museum, the finest and grandest in the\r\nGreat Underground Empire. To the south, down a few steps, is the entrance\r\nto the Royal Puzzle and to the east, through a stone door, is the Royal\r\nJewel Collection. A wooden door to the north is \"> <TELL <COND (<FSET? ,WOODEN-DOOR ,OPENBIT> \"open\") (T \"closed\")> \"\r\nand leads to the Museum of Technology. \"> <COND (<==? ,YEAR ,YEAR-PRESENT> <TELL \"To the west is a great iron door, rusted shut. To its left, however, is a\r\ncleft in the rock providing an exit from the museum.\" CR>) (<L? ,YEAR ,YEAR-PRESENT> <TELL \"To the west is a great iron door, rusted shut.\" CR>) (T <TELL \"To the west is a great iron door, rusted shut. The cleft in the rock,\r\npresent when you started, has filled in with rubble.\" CR>)>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,CAGE ,INVISIBLE> <TELL \"This is an entrance hall of some sort, judging by the grand iron\r\ndoor to the west, and the ornate stone and wooden doors which lead to the east\r\nand north, respectively. A few wide steps lead south.\" CR>) (T <TELL \"This is the entrance to the Royal Museum, the finest and grandest in the\r\nGreat Underground Empire. To the south, down a few steps, is the entrance\r\nto the Royal Puzzle and to the east, through a stone door, is the Royal\r\nJewel Collection. A wooden door to the north is \"> <TELL <COND (<FSET? ,WOODEN-DOOR ,OPENBIT> \"open\") (T \"closed\")> \"\r\nand leads to the Museum of Technology. \"> <COND (<==? ,YEAR ,YEAR-PRESENT> <TELL \"To the west is a great iron door, rusted shut. To its left, however, is a\r\ncleft in the rock providing an exit from the museum.\" CR>) (<L? ,YEAR ,YEAR-PRESENT> <TELL \"To the west is a great iron door, rusted shut.\" CR>) (T <TELL \"To the west is a great iron door, rusted shut. The cleft in the rock,\r\npresent when you started, has filled in with rubble.\" CR>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,CAGE ,INVISIBLE>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",CAGE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CAGE"
                          }
                        ]
                      },
                      {
                        "Zil": ",INVISIBLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "INVISIBLE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"This is an entrance hall of some sort, judging by the grand iron\r\ndoor to the west, and the ornate stone and wooden doors which lead to the east\r\nand north, respectively. A few wide steps lead south.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "This is an entrance hall of some sort, judging by the grand iron\r\ndoor to the west, and the ornate stone and wooden doors which lead to the east\r\nand north, respectively. A few wide steps lead south.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"This is the entrance to the Royal Museum, the finest and grandest in the\r\nGreat Underground Empire. To the south, down a few steps, is the entrance\r\nto the Royal Puzzle and to the east, through a stone door, is the Royal\r\nJewel Collection. A wooden door to the north is \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "This is the entrance to the Royal Museum, the finest and grandest in the\r\nGreat Underground Empire. To the south, down a few steps, is the entrance\r\nto the Royal Puzzle and to the east, through a stone door, is the Royal\r\nJewel Collection. A wooden door to the north is "
                    ]
                  },
                  {
                    "Zil": "<TELL <COND (<FSET? ,WOODEN-DOOR ,OPENBIT> \"open\") (T \"closed\")> \"\r\nand leads to the Museum of Technology. \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<COND (<FSET? ,WOODEN-DOOR ,OPENBIT> \"open\") (T \"closed\")>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<FSET? ,WOODEN-DOOR ,OPENBIT>",
                              "Form": [
                                {
                                  "Atom": "FSET?"
                                },
                                {
                                  "Zil": ",WOODEN-DOOR",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "WOODEN-DOOR"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",OPENBIT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "OPENBIT"
                                    }
                                  ]
                                }
                              ]
                            },
                            "open"
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            "closed"
                          ]
                        ]
                      },
                      "\r\nand leads to the Museum of Technology. "
                    ]
                  },
                  {
                    "Zil": "<COND (<==? ,YEAR ,YEAR-PRESENT> <TELL \"To the west is a great iron door, rusted shut. To its left, however, is a\r\ncleft in the rock providing an exit from the museum.\" CR>) (<L? ,YEAR ,YEAR-PRESENT> <TELL \"To the west is a great iron door, rusted shut.\" CR>) (T <TELL \"To the west is a great iron door, rusted shut. The cleft in the rock,\r\npresent when you started, has filled in with rubble.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<==? ,YEAR ,YEAR-PRESENT>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": ",YEAR",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "YEAR"
                                }
                              ]
                            },
                            {
                              "Zil": ",YEAR-PRESENT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "YEAR-PRESENT"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"To the west is a great iron door, rusted shut. To its left, however, is a\r\ncleft in the rock providing an exit from the museum.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "To the west is a great iron door, rusted shut. To its left, however, is a\r\ncleft in the rock providing an exit from the museum.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<L? ,YEAR ,YEAR-PRESENT>",
                          "Form": [
                            {
                              "Atom": "L?"
                            },
                            {
                              "Zil": ",YEAR",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "YEAR"
                                }
                              ]
                            },
                            {
                              "Zil": ",YEAR-PRESENT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "YEAR-PRESENT"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"To the west is a great iron door, rusted shut.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "To the west is a great iron door, rusted shut.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"To the west is a great iron door, rusted shut. The cleft in the rock,\r\npresent when you started, has filled in with rubble.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "To the west is a great iron door, rusted shut. The cleft in the rock,\r\npresent when you started, has filled in with rubble.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2532",
    "Name": "TIME-MACHINE-F",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-OBJDESC> <TELL \"Directly in front of you is a large golden machine, which has a seat with a\r\nconsole in front. On the console is a single button and a dial connected to\r\na three-digit display which reads \" N ,TM-YEAR \". The machine is surprisingly shiny and shows few signs of age.\" CR>) (<==? .RARG ,M-BEG> <COND (<VERB? MOVE> <TELL \"You might be able to move the machine by pushing it.\" CR>) (<AND <VERB? PUSH-TO> <==? ,PRSO ,TIME-MACHINE>> <TELL \"That would be a good trick from inside it.\" CR>) (<VERB? WALK> <TELL \"You're not going anywhere in this heap.\" CR>) (<AND <VERB? TAKE PUT MOVE PUSH OPEN CLOSE> <NOT <HELD? ,PRSO>> <NOT <IN? ,PRSO ,TIME-MACHINE>>> <TELL \"You can't do that from inside the machine.\" CR>)>) (<NOT .RARG> <COND (<AND <VERB? PUT> <==? ,PRSI ,TIME-MACHINE>> <TELL \"You can't put anything on or inside the machine itself.\" CR>) (<==? ,PRSO ,TIME-MACHINE> <COND (<VERB? OPEN CLOSE> <TELL \"This is a machine, not a box.\" CR>) (<VERB? EXAMINE> <TELL \"The machine consists of a seat and a console containing one small button\r\nand a dial connected to a display which reads \" N ,TM-YEAR \".\" CR>) (<AND <VERB? BOARD> <FIRST? ,TM-SEAT>> <TELL \"That will be somewhat uncomfortable!\" CR>) (<VERB? TAKE RAISE> <TELL \"The machine must weigh hundreds of pounds and cannot be carried.\" CR>) (<VERB? PUSH MOVE> <TELL \"You should specify in which direction to push the machine.\" CR>) (<VERB? PUSH-TO> <COND (<NOT <==? <DO-WALK ,P-DIRECTION> ,M-FATAL>> <TELL \"With some effort, you push the machine into the room with you.\" CR> <COND (<EQUAL? ,HERE ,CP-ANTE ,MID-CP-ANTE> <TELL \"However, the machine seems to have sustained some damage as a result\r\nof going over the stairs.\" CR> <SETG MACHINE-DAMAGED T>) (<==? ,HERE ,MUSEUM-ANTE> <TELL \"Pushing the machine through the cleft seems to have damaged it.\" CR> <SETG MACHINE-DAMAGED T>)> <MOVE ,TIME-MACHINE ,HERE>)> <RTRUE>)>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-OBJDESC>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-OBJDESC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-OBJDESC"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Directly in front of you is a large golden machine, which has a seat with a\r\nconsole in front. On the console is a single button and a dial connected to\r\na three-digit display which reads \" N ,TM-YEAR \". The machine is surprisingly shiny and shows few signs of age.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Directly in front of you is a large golden machine, which has a seat with a\r\nconsole in front. On the console is a single button and a dial connected to\r\na three-digit display which reads ",
                {
                  "Atom": "N"
                },
                {
                  "Zil": ",TM-YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-YEAR"
                    }
                  ]
                },
                ". The machine is surprisingly shiny and shows few signs of age.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-BEG>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-BEG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-BEG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<VERB? MOVE> <TELL \"You might be able to move the machine by pushing it.\" CR>) (<AND <VERB? PUSH-TO> <==? ,PRSO ,TIME-MACHINE>> <TELL \"That would be a good trick from inside it.\" CR>) (<VERB? WALK> <TELL \"You're not going anywhere in this heap.\" CR>) (<AND <VERB? TAKE PUT MOVE PUSH OPEN CLOSE> <NOT <HELD? ,PRSO>> <NOT <IN? ,PRSO ,TIME-MACHINE>>> <TELL \"You can't do that from inside the machine.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<VERB? MOVE>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "MOVE"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You might be able to move the machine by pushing it.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You might be able to move the machine by pushing it.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <VERB? PUSH-TO> <==? ,PRSO ,TIME-MACHINE>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<VERB? PUSH-TO>",
                        "Form": [
                          {
                            "Atom": "VERB?"
                          },
                          {
                            "Atom": "PUSH-TO"
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,PRSO ,TIME-MACHINE>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",TIME-MACHINE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "TIME-MACHINE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"That would be a good trick from inside it.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "That would be a good trick from inside it.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<VERB? WALK>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "WALK"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You're not going anywhere in this heap.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You're not going anywhere in this heap.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <VERB? TAKE PUT MOVE PUSH OPEN CLOSE> <NOT <HELD? ,PRSO>> <NOT <IN? ,PRSO ,TIME-MACHINE>>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<VERB? TAKE PUT MOVE PUSH OPEN CLOSE>",
                        "Form": [
                          {
                            "Atom": "VERB?"
                          },
                          {
                            "Atom": "TAKE"
                          },
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Atom": "MOVE"
                          },
                          {
                            "Atom": "PUSH"
                          },
                          {
                            "Atom": "OPEN"
                          },
                          {
                            "Atom": "CLOSE"
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <HELD? ,PRSO>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<HELD? ,PRSO>",
                            "Form": [
                              {
                                "Atom": "HELD?"
                              },
                              {
                                "Zil": ",PRSO",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "PRSO"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <IN? ,PRSO ,TIME-MACHINE>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<IN? ,PRSO ,TIME-MACHINE>",
                            "Form": [
                              {
                                "Atom": "IN?"
                              },
                              {
                                "Zil": ",PRSO",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "PRSO"
                                  }
                                ]
                              },
                              {
                                "Zil": ",TIME-MACHINE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "TIME-MACHINE"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You can't do that from inside the machine.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can't do that from inside the machine.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<NOT .RARG>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND <VERB? PUT> <==? ,PRSI ,TIME-MACHINE>> <TELL \"You can't put anything on or inside the machine itself.\" CR>) (<==? ,PRSO ,TIME-MACHINE> <COND (<VERB? OPEN CLOSE> <TELL \"This is a machine, not a box.\" CR>) (<VERB? EXAMINE> <TELL \"The machine consists of a seat and a console containing one small button\r\nand a dial connected to a display which reads \" N ,TM-YEAR \".\" CR>) (<AND <VERB? BOARD> <FIRST? ,TM-SEAT>> <TELL \"That will be somewhat uncomfortable!\" CR>) (<VERB? TAKE RAISE> <TELL \"The machine must weigh hundreds of pounds and cannot be carried.\" CR>) (<VERB? PUSH MOVE> <TELL \"You should specify in which direction to push the machine.\" CR>) (<VERB? PUSH-TO> <COND (<NOT <==? <DO-WALK ,P-DIRECTION> ,M-FATAL>> <TELL \"With some effort, you push the machine into the room with you.\" CR> <COND (<EQUAL? ,HERE ,CP-ANTE ,MID-CP-ANTE> <TELL \"However, the machine seems to have sustained some damage as a result\r\nof going over the stairs.\" CR> <SETG MACHINE-DAMAGED T>) (<==? ,HERE ,MUSEUM-ANTE> <TELL \"Pushing the machine through the cleft seems to have damaged it.\" CR> <SETG MACHINE-DAMAGED T>)> <MOVE ,TIME-MACHINE ,HERE>)> <RTRUE>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <VERB? PUT> <==? ,PRSI ,TIME-MACHINE>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<VERB? PUT>",
                        "Form": [
                          {
                            "Atom": "VERB?"
                          },
                          {
                            "Atom": "PUT"
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,PRSI ,TIME-MACHINE>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",PRSI",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSI"
                              }
                            ]
                          },
                          {
                            "Zil": ",TIME-MACHINE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "TIME-MACHINE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You can't put anything on or inside the machine itself.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can't put anything on or inside the machine itself.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<==? ,PRSO ,TIME-MACHINE>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",TIME-MACHINE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TIME-MACHINE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<VERB? OPEN CLOSE> <TELL \"This is a machine, not a box.\" CR>) (<VERB? EXAMINE> <TELL \"The machine consists of a seat and a console containing one small button\r\nand a dial connected to a display which reads \" N ,TM-YEAR \".\" CR>) (<AND <VERB? BOARD> <FIRST? ,TM-SEAT>> <TELL \"That will be somewhat uncomfortable!\" CR>) (<VERB? TAKE RAISE> <TELL \"The machine must weigh hundreds of pounds and cannot be carried.\" CR>) (<VERB? PUSH MOVE> <TELL \"You should specify in which direction to push the machine.\" CR>) (<VERB? PUSH-TO> <COND (<NOT <==? <DO-WALK ,P-DIRECTION> ,M-FATAL>> <TELL \"With some effort, you push the machine into the room with you.\" CR> <COND (<EQUAL? ,HERE ,CP-ANTE ,MID-CP-ANTE> <TELL \"However, the machine seems to have sustained some damage as a result\r\nof going over the stairs.\" CR> <SETG MACHINE-DAMAGED T>) (<==? ,HERE ,MUSEUM-ANTE> <TELL \"Pushing the machine through the cleft seems to have damaged it.\" CR> <SETG MACHINE-DAMAGED T>)> <MOVE ,TIME-MACHINE ,HERE>)> <RTRUE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<VERB? OPEN CLOSE>",
                          "Form": [
                            {
                              "Atom": "VERB?"
                            },
                            {
                              "Atom": "OPEN"
                            },
                            {
                              "Atom": "CLOSE"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"This is a machine, not a box.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "This is a machine, not a box.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<VERB? EXAMINE>",
                          "Form": [
                            {
                              "Atom": "VERB?"
                            },
                            {
                              "Atom": "EXAMINE"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The machine consists of a seat and a console containing one small button\r\nand a dial connected to a display which reads \" N ,TM-YEAR \".\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The machine consists of a seat and a console containing one small button\r\nand a dial connected to a display which reads ",
                            {
                              "Atom": "N"
                            },
                            {
                              "Zil": ",TM-YEAR",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "TM-YEAR"
                                }
                              ]
                            },
                            ".",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<AND <VERB? BOARD> <FIRST? ,TM-SEAT>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": "<VERB? BOARD>",
                              "Form": [
                                {
                                  "Atom": "VERB?"
                                },
                                {
                                  "Atom": "BOARD"
                                }
                              ]
                            },
                            {
                              "Zil": "<FIRST? ,TM-SEAT>",
                              "Form": [
                                {
                                  "Atom": "FIRST?"
                                },
                                {
                                  "Zil": ",TM-SEAT",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "TM-SEAT"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"That will be somewhat uncomfortable!\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "That will be somewhat uncomfortable!",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<VERB? TAKE RAISE>",
                          "Form": [
                            {
                              "Atom": "VERB?"
                            },
                            {
                              "Atom": "TAKE"
                            },
                            {
                              "Atom": "RAISE"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The machine must weigh hundreds of pounds and cannot be carried.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The machine must weigh hundreds of pounds and cannot be carried.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<VERB? PUSH MOVE>",
                          "Form": [
                            {
                              "Atom": "VERB?"
                            },
                            {
                              "Atom": "PUSH"
                            },
                            {
                              "Atom": "MOVE"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"You should specify in which direction to push the machine.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "You should specify in which direction to push the machine.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<VERB? PUSH-TO>",
                          "Form": [
                            {
                              "Atom": "VERB?"
                            },
                            {
                              "Atom": "PUSH-TO"
                            }
                          ]
                        },
                        {
                          "Zil": "<COND (<NOT <==? <DO-WALK ,P-DIRECTION> ,M-FATAL>> <TELL \"With some effort, you push the machine into the room with you.\" CR> <COND (<EQUAL? ,HERE ,CP-ANTE ,MID-CP-ANTE> <TELL \"However, the machine seems to have sustained some damage as a result\r\nof going over the stairs.\" CR> <SETG MACHINE-DAMAGED T>) (<==? ,HERE ,MUSEUM-ANTE> <TELL \"Pushing the machine through the cleft seems to have damaged it.\" CR> <SETG MACHINE-DAMAGED T>)> <MOVE ,TIME-MACHINE ,HERE>)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<NOT <==? <DO-WALK ,P-DIRECTION> ,M-FATAL>>",
                                "Form": [
                                  {
                                    "Atom": "NOT"
                                  },
                                  {
                                    "Zil": "<==? <DO-WALK ,P-DIRECTION> ,M-FATAL>",
                                    "Form": [
                                      {
                                        "Atom": "==?"
                                      },
                                      {
                                        "Zil": "<DO-WALK ,P-DIRECTION>",
                                        "Form": [
                                          {
                                            "Atom": "DO-WALK"
                                          },
                                          {
                                            "Zil": ",P-DIRECTION",
                                            "Form": [
                                              {
                                                "Atom": "GVAL"
                                              },
                                              {
                                                "Atom": "P-DIRECTION"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",M-FATAL",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "M-FATAL"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<TELL \"With some effort, you push the machine into the room with you.\" CR>",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "With some effort, you push the machine into the room with you.",
                                  {
                                    "Atom": "CR"
                                  }
                                ]
                              },
                              {
                                "Zil": "<COND (<EQUAL? ,HERE ,CP-ANTE ,MID-CP-ANTE> <TELL \"However, the machine seems to have sustained some damage as a result\r\nof going over the stairs.\" CR> <SETG MACHINE-DAMAGED T>) (<==? ,HERE ,MUSEUM-ANTE> <TELL \"Pushing the machine through the cleft seems to have damaged it.\" CR> <SETG MACHINE-DAMAGED T>)>",
                                "Form": [
                                  {
                                    "Atom": "COND"
                                  },
                                  [
                                    {
                                      "Zil": "<EQUAL? ,HERE ,CP-ANTE ,MID-CP-ANTE>",
                                      "Form": [
                                        {
                                          "Atom": "EQUAL?"
                                        },
                                        {
                                          "Zil": ",HERE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "HERE"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",CP-ANTE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "CP-ANTE"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",MID-CP-ANTE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "MID-CP-ANTE"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<TELL \"However, the machine seems to have sustained some damage as a result\r\nof going over the stairs.\" CR>",
                                      "Form": [
                                        {
                                          "Atom": "TELL"
                                        },
                                        "However, the machine seems to have sustained some damage as a result\r\nof going over the stairs.",
                                        {
                                          "Atom": "CR"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<SETG MACHINE-DAMAGED T>",
                                      "Form": [
                                        {
                                          "Atom": "SETG"
                                        },
                                        {
                                          "Atom": "MACHINE-DAMAGED"
                                        },
                                        {
                                          "Atom": "T"
                                        }
                                      ]
                                    }
                                  ],
                                  [
                                    {
                                      "Zil": "<==? ,HERE ,MUSEUM-ANTE>",
                                      "Form": [
                                        {
                                          "Atom": "==?"
                                        },
                                        {
                                          "Zil": ",HERE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "HERE"
                                            }
                                          ]
                                        },
                                        {
                                          "Zil": ",MUSEUM-ANTE",
                                          "Form": [
                                            {
                                              "Atom": "GVAL"
                                            },
                                            {
                                              "Atom": "MUSEUM-ANTE"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<TELL \"Pushing the machine through the cleft seems to have damaged it.\" CR>",
                                      "Form": [
                                        {
                                          "Atom": "TELL"
                                        },
                                        "Pushing the machine through the cleft seems to have damaged it.",
                                        {
                                          "Atom": "CR"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": "<SETG MACHINE-DAMAGED T>",
                                      "Form": [
                                        {
                                          "Atom": "SETG"
                                        },
                                        {
                                          "Atom": "MACHINE-DAMAGED"
                                        },
                                        {
                                          "Atom": "T"
                                        }
                                      ]
                                    }
                                  ]
                                ]
                              },
                              {
                                "Zil": "<MOVE ,TIME-MACHINE ,HERE>",
                                "Form": [
                                  {
                                    "Atom": "MOVE"
                                  },
                                  {
                                    "Zil": ",TIME-MACHINE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "TIME-MACHINE"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",HERE",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "HERE"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2595",
    "Name": "TM-SEAT-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? CLIMB-ON BOARD> <PERFORM ,V?BOARD ,TIME-MACHINE> <RTRUE>) (<AND <VERB? PUT-UNDER PUT-BEHIND> <==? ,PRSI ,TM-SEAT>> <COND (<==? ,PRSO ,RING> <TELL \"The ring is concealed underneath the seat.\" CR> <SETG RING-CONCEALED T> <REMOVE ,RING>) (T <TELL \"It's too big to hide under the seat.\" CR>)>) (<VERB? RUB> <TELL \"There's nothing odd about the feel of the seat.\" CR>) (<VERB? LOOK-UNDER RAISE MOVE> <COND (,RING-CONCEALED <TELL \"You find the ring under the seat and put it on your finger.\" CR> <MOVE ,RING ,WINNER> <SETG RING-CONCEALED <>> <RTRUE>) (T <TELL \"You notice a small hollow area under the seat.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? CLIMB-ON BOARD>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CLIMB-ON"
                },
                {
                  "Atom": "BOARD"
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?BOARD ,TIME-MACHINE>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?BOARD",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?BOARD"
                    }
                  ]
                },
                {
                  "Zil": ",TIME-MACHINE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TIME-MACHINE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? PUT-UNDER PUT-BEHIND> <==? ,PRSI ,TM-SEAT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT-UNDER PUT-BEHIND>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT-UNDER"
                    },
                    {
                      "Atom": "PUT-BEHIND"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,TM-SEAT>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",TM-SEAT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TM-SEAT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,PRSO ,RING> <TELL \"The ring is concealed underneath the seat.\" CR> <SETG RING-CONCEALED T> <REMOVE ,RING>) (T <TELL \"It's too big to hide under the seat.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,PRSO ,RING>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",RING",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "RING"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The ring is concealed underneath the seat.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ring is concealed underneath the seat.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG RING-CONCEALED T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "RING-CONCEALED"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<REMOVE ,RING>",
                    "Form": [
                      {
                        "Atom": "REMOVE"
                      },
                      {
                        "Zil": ",RING",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "RING"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"It's too big to hide under the seat.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It's too big to hide under the seat.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? RUB>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "RUB"
                }
              ]
            },
            {
              "Zil": "<TELL \"There's nothing odd about the feel of the seat.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There's nothing odd about the feel of the seat.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LOOK-UNDER RAISE MOVE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LOOK-UNDER"
                },
                {
                  "Atom": "RAISE"
                },
                {
                  "Atom": "MOVE"
                }
              ]
            },
            {
              "Zil": "<COND (,RING-CONCEALED <TELL \"You find the ring under the seat and put it on your finger.\" CR> <MOVE ,RING ,WINNER> <SETG RING-CONCEALED <>> <RTRUE>) (T <TELL \"You notice a small hollow area under the seat.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",RING-CONCEALED",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "RING-CONCEALED"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You find the ring under the seat and put it on your finger.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You find the ring under the seat and put it on your finger.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<MOVE ,RING ,WINNER>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ",RING",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "RING"
                          }
                        ]
                      },
                      {
                        "Zil": ",WINNER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WINNER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG RING-CONCEALED <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "RING-CONCEALED"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You notice a small hollow area under the seat.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You notice a small hollow area under the seat.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2619",
    "Name": "TM-DIAL-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE> <TELL \"The dial is set to \" N ,TM-YEAR \".\" CR>) (<VERB? TURN> <COND (<==? ,PRSI ,INTNUM> <COND (<G? ,P-NUMBER 999> <TELL \"You can't set it beyond 999.\" CR>) (T <SETG TM-YEAR ,P-NUMBER> <TELL \"The dial is set to \" N ,TM-YEAR \".\" CR>)>) (<NOT ,PRSI> <TELL \"You have to say what to turn it to!\" CR>) (T <TELL \"You can't do that!\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The dial is set to \" N ,TM-YEAR \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The dial is set to ",
                {
                  "Atom": "N"
                },
                {
                  "Zil": ",TM-YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-YEAR"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? TURN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TURN"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,PRSI ,INTNUM> <COND (<G? ,P-NUMBER 999> <TELL \"You can't set it beyond 999.\" CR>) (T <SETG TM-YEAR ,P-NUMBER> <TELL \"The dial is set to \" N ,TM-YEAR \".\" CR>)>) (<NOT ,PRSI> <TELL \"You have to say what to turn it to!\" CR>) (T <TELL \"You can't do that!\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,PRSI ,INTNUM>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      {
                        "Zil": ",INTNUM",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "INTNUM"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<G? ,P-NUMBER 999> <TELL \"You can't set it beyond 999.\" CR>) (T <SETG TM-YEAR ,P-NUMBER> <TELL \"The dial is set to \" N ,TM-YEAR \".\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<G? ,P-NUMBER 999>",
                          "Form": [
                            {
                              "Atom": "G?"
                            },
                            {
                              "Zil": ",P-NUMBER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-NUMBER"
                                }
                              ]
                            },
                            999
                          ]
                        },
                        {
                          "Zil": "<TELL \"You can't set it beyond 999.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "You can't set it beyond 999.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<SETG TM-YEAR ,P-NUMBER>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "TM-YEAR"
                            },
                            {
                              "Zil": ",P-NUMBER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "P-NUMBER"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The dial is set to \" N ,TM-YEAR \".\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The dial is set to ",
                            {
                              "Atom": "N"
                            },
                            {
                              "Zil": ",TM-YEAR",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "TM-YEAR"
                                }
                              ]
                            },
                            ".",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<NOT ,PRSI>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You have to say what to turn it to!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You have to say what to turn it to!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You can't do that!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can't do that!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2635",
    "Name": "TM-BUTTON-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? PUSH> <COND (<AND <==? ,TM-YEAR ,YEAR-BUILT> <NOT ,TM-POINT>> <SETG SCORE <+ ,SCORE 1>> <SETG TM-POINT T>)> <COND (<OR ,MACHINE-DAMAGED <NOT <IN? ,WINNER ,TIME-MACHINE>>> <TELL \"Nothing seems to have happened.\" CR>) (<L? ,TM-YEAR ,YEAR-BUILT> <REALLY-DEAD \"You experience a period of disorientation. The area around you seems\r\nto be solidifying! Rock formations close in on you and you become\r\nengulfed in stone!\">) (<==? ,YEAR ,TM-YEAR> <TELL \"Nothing seems to have happened.\" CR>) (<L? ,TM-YEAR ,YEAR-CLOSED> <TELL \"You experience a brief period of disorientation. When your vision returns, \"> <COND (<EQUAL? ,HERE ,MUSEUM-ENTRANCE ,MID-MUSEUM-ENTRANCE ,OLD-MUSEUM-ENTRANCE> <COND (<==? ,TM-YEAR ,YEAR-CAGED> <TELL \"you are surrounded by a number of heavily armed guards, the dress and\r\nspeech of which seem strange and unfamiliar. A commotion starts at a door\r\nto the east and a person with a flat head, wearing a gaudy crown and a purple\r\nrobe, bursts into the room.\" CR> <FLATHEAD-SENTENCE>) (T <GUARDS-KILL>)>) (<EQUAL? ,HERE ,JEWEL-ROOM ,MID-JEWEL-ROOM ,OLD-JEWEL-ROOM> <COND (<==? ,TM-YEAR ,YEAR-CAGED> <TELL \"you find yourself in the middle of some kind of ceremony, with a strange\r\nflat-headed man wearing royal vestments about to break a bottle on the bars\r\nof an iron cage containing magnificent jewels. He appears pleased\r\nby your presence. \"> <FLATHEAD-SENTENCE>) (<G? ,TM-YEAR ,YEAR-CAGED> <GUARDS-KILL>) (T <TELL ,SURROUNDINGS-CHANGED CR> <TGOTO ,OLD-JEWEL-ROOM>)>) (<EQUAL? ,HERE ,TECH-MUSEUM ,MID-TECH-MUSEUM ,OLD-TECH-MUSEUM> <COND (<NOT <==? ,TM-YEAR ,YEAR-BUILT>> <GUARDS-KILL>) (T <TELL ,SURROUNDINGS-CHANGED CR> <TGOTO ,OLD-TECH-MUSEUM>)>)>) (T <HAPPY-NEW-YEAR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? PUSH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "PUSH"
                }
              ]
            },
            {
              "Zil": "<COND (<AND <==? ,TM-YEAR ,YEAR-BUILT> <NOT ,TM-POINT>> <SETG SCORE <+ ,SCORE 1>> <SETG TM-POINT T>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <==? ,TM-YEAR ,YEAR-BUILT> <NOT ,TM-POINT>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<==? ,TM-YEAR ,YEAR-BUILT>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",TM-YEAR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "TM-YEAR"
                              }
                            ]
                          },
                          {
                            "Zil": ",YEAR-BUILT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "YEAR-BUILT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT ,TM-POINT>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",TM-POINT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "TM-POINT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG SCORE <+ ,SCORE 1>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "SCORE"
                      },
                      {
                        "Zil": "<+ ,SCORE 1>",
                        "Form": [
                          {
                            "Atom": "+"
                          },
                          {
                            "Zil": ",SCORE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SCORE"
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG TM-POINT T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "TM-POINT"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (<OR ,MACHINE-DAMAGED <NOT <IN? ,WINNER ,TIME-MACHINE>>> <TELL \"Nothing seems to have happened.\" CR>) (<L? ,TM-YEAR ,YEAR-BUILT> <REALLY-DEAD \"You experience a period of disorientation. The area around you seems\r\nto be solidifying! Rock formations close in on you and you become\r\nengulfed in stone!\">) (<==? ,YEAR ,TM-YEAR> <TELL \"Nothing seems to have happened.\" CR>) (<L? ,TM-YEAR ,YEAR-CLOSED> <TELL \"You experience a brief period of disorientation. When your vision returns, \"> <COND (<EQUAL? ,HERE ,MUSEUM-ENTRANCE ,MID-MUSEUM-ENTRANCE ,OLD-MUSEUM-ENTRANCE> <COND (<==? ,TM-YEAR ,YEAR-CAGED> <TELL \"you are surrounded by a number of heavily armed guards, the dress and\r\nspeech of which seem strange and unfamiliar. A commotion starts at a door\r\nto the east and a person with a flat head, wearing a gaudy crown and a purple\r\nrobe, bursts into the room.\" CR> <FLATHEAD-SENTENCE>) (T <GUARDS-KILL>)>) (<EQUAL? ,HERE ,JEWEL-ROOM ,MID-JEWEL-ROOM ,OLD-JEWEL-ROOM> <COND (<==? ,TM-YEAR ,YEAR-CAGED> <TELL \"you find yourself in the middle of some kind of ceremony, with a strange\r\nflat-headed man wearing royal vestments about to break a bottle on the bars\r\nof an iron cage containing magnificent jewels. He appears pleased\r\nby your presence. \"> <FLATHEAD-SENTENCE>) (<G? ,TM-YEAR ,YEAR-CAGED> <GUARDS-KILL>) (T <TELL ,SURROUNDINGS-CHANGED CR> <TGOTO ,OLD-JEWEL-ROOM>)>) (<EQUAL? ,HERE ,TECH-MUSEUM ,MID-TECH-MUSEUM ,OLD-TECH-MUSEUM> <COND (<NOT <==? ,TM-YEAR ,YEAR-BUILT>> <GUARDS-KILL>) (T <TELL ,SURROUNDINGS-CHANGED CR> <TGOTO ,OLD-TECH-MUSEUM>)>)>) (T <HAPPY-NEW-YEAR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<OR ,MACHINE-DAMAGED <NOT <IN? ,WINNER ,TIME-MACHINE>>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": ",MACHINE-DAMAGED",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MACHINE-DAMAGED"
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <IN? ,WINNER ,TIME-MACHINE>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<IN? ,WINNER ,TIME-MACHINE>",
                            "Form": [
                              {
                                "Atom": "IN?"
                              },
                              {
                                "Zil": ",WINNER",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "WINNER"
                                  }
                                ]
                              },
                              {
                                "Zil": ",TIME-MACHINE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "TIME-MACHINE"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Nothing seems to have happened.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Nothing seems to have happened.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<L? ,TM-YEAR ,YEAR-BUILT>",
                    "Form": [
                      {
                        "Atom": "L?"
                      },
                      {
                        "Zil": ",TM-YEAR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TM-YEAR"
                          }
                        ]
                      },
                      {
                        "Zil": ",YEAR-BUILT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "YEAR-BUILT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<REALLY-DEAD \"You experience a period of disorientation. The area around you seems\r\nto be solidifying! Rock formations close in on you and you become\r\nengulfed in stone!\">",
                    "Form": [
                      {
                        "Atom": "REALLY-DEAD"
                      },
                      "You experience a period of disorientation. The area around you seems\r\nto be solidifying! Rock formations close in on you and you become\r\nengulfed in stone!"
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<==? ,YEAR ,TM-YEAR>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",YEAR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "YEAR"
                          }
                        ]
                      },
                      {
                        "Zil": ",TM-YEAR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TM-YEAR"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Nothing seems to have happened.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Nothing seems to have happened.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<L? ,TM-YEAR ,YEAR-CLOSED>",
                    "Form": [
                      {
                        "Atom": "L?"
                      },
                      {
                        "Zil": ",TM-YEAR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TM-YEAR"
                          }
                        ]
                      },
                      {
                        "Zil": ",YEAR-CLOSED",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "YEAR-CLOSED"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You experience a brief period of disorientation. When your vision returns, \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You experience a brief period of disorientation. When your vision returns, "
                    ]
                  },
                  {
                    "Zil": "<COND (<EQUAL? ,HERE ,MUSEUM-ENTRANCE ,MID-MUSEUM-ENTRANCE ,OLD-MUSEUM-ENTRANCE> <COND (<==? ,TM-YEAR ,YEAR-CAGED> <TELL \"you are surrounded by a number of heavily armed guards, the dress and\r\nspeech of which seem strange and unfamiliar. A commotion starts at a door\r\nto the east and a person with a flat head, wearing a gaudy crown and a purple\r\nrobe, bursts into the room.\" CR> <FLATHEAD-SENTENCE>) (T <GUARDS-KILL>)>) (<EQUAL? ,HERE ,JEWEL-ROOM ,MID-JEWEL-ROOM ,OLD-JEWEL-ROOM> <COND (<==? ,TM-YEAR ,YEAR-CAGED> <TELL \"you find yourself in the middle of some kind of ceremony, with a strange\r\nflat-headed man wearing royal vestments about to break a bottle on the bars\r\nof an iron cage containing magnificent jewels. He appears pleased\r\nby your presence. \"> <FLATHEAD-SENTENCE>) (<G? ,TM-YEAR ,YEAR-CAGED> <GUARDS-KILL>) (T <TELL ,SURROUNDINGS-CHANGED CR> <TGOTO ,OLD-JEWEL-ROOM>)>) (<EQUAL? ,HERE ,TECH-MUSEUM ,MID-TECH-MUSEUM ,OLD-TECH-MUSEUM> <COND (<NOT <==? ,TM-YEAR ,YEAR-BUILT>> <GUARDS-KILL>) (T <TELL ,SURROUNDINGS-CHANGED CR> <TGOTO ,OLD-TECH-MUSEUM>)>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<EQUAL? ,HERE ,MUSEUM-ENTRANCE ,MID-MUSEUM-ENTRANCE ,OLD-MUSEUM-ENTRANCE>",
                          "Form": [
                            {
                              "Atom": "EQUAL?"
                            },
                            {
                              "Zil": ",HERE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "HERE"
                                }
                              ]
                            },
                            {
                              "Zil": ",MUSEUM-ENTRANCE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MUSEUM-ENTRANCE"
                                }
                              ]
                            },
                            {
                              "Zil": ",MID-MUSEUM-ENTRANCE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MID-MUSEUM-ENTRANCE"
                                }
                              ]
                            },
                            {
                              "Zil": ",OLD-MUSEUM-ENTRANCE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "OLD-MUSEUM-ENTRANCE"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<COND (<==? ,TM-YEAR ,YEAR-CAGED> <TELL \"you are surrounded by a number of heavily armed guards, the dress and\r\nspeech of which seem strange and unfamiliar. A commotion starts at a door\r\nto the east and a person with a flat head, wearing a gaudy crown and a purple\r\nrobe, bursts into the room.\" CR> <FLATHEAD-SENTENCE>) (T <GUARDS-KILL>)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<==? ,TM-YEAR ,YEAR-CAGED>",
                                "Form": [
                                  {
                                    "Atom": "==?"
                                  },
                                  {
                                    "Zil": ",TM-YEAR",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "TM-YEAR"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",YEAR-CAGED",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "YEAR-CAGED"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<TELL \"you are surrounded by a number of heavily armed guards, the dress and\r\nspeech of which seem strange and unfamiliar. A commotion starts at a door\r\nto the east and a person with a flat head, wearing a gaudy crown and a purple\r\nrobe, bursts into the room.\" CR>",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "you are surrounded by a number of heavily armed guards, the dress and\r\nspeech of which seem strange and unfamiliar. A commotion starts at a door\r\nto the east and a person with a flat head, wearing a gaudy crown and a purple\r\nrobe, bursts into the room.",
                                  {
                                    "Atom": "CR"
                                  }
                                ]
                              },
                              {
                                "Zil": "<FLATHEAD-SENTENCE>",
                                "Form": [
                                  {
                                    "Atom": "FLATHEAD-SENTENCE"
                                  }
                                ]
                              }
                            ],
                            [
                              {
                                "Atom": "T"
                              },
                              {
                                "Zil": "<GUARDS-KILL>",
                                "Form": [
                                  {
                                    "Atom": "GUARDS-KILL"
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<EQUAL? ,HERE ,JEWEL-ROOM ,MID-JEWEL-ROOM ,OLD-JEWEL-ROOM>",
                          "Form": [
                            {
                              "Atom": "EQUAL?"
                            },
                            {
                              "Zil": ",HERE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "HERE"
                                }
                              ]
                            },
                            {
                              "Zil": ",JEWEL-ROOM",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "JEWEL-ROOM"
                                }
                              ]
                            },
                            {
                              "Zil": ",MID-JEWEL-ROOM",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MID-JEWEL-ROOM"
                                }
                              ]
                            },
                            {
                              "Zil": ",OLD-JEWEL-ROOM",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "OLD-JEWEL-ROOM"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<COND (<==? ,TM-YEAR ,YEAR-CAGED> <TELL \"you find yourself in the middle of some kind of ceremony, with a strange\r\nflat-headed man wearing royal vestments about to break a bottle on the bars\r\nof an iron cage containing magnificent jewels. He appears pleased\r\nby your presence. \"> <FLATHEAD-SENTENCE>) (<G? ,TM-YEAR ,YEAR-CAGED> <GUARDS-KILL>) (T <TELL ,SURROUNDINGS-CHANGED CR> <TGOTO ,OLD-JEWEL-ROOM>)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<==? ,TM-YEAR ,YEAR-CAGED>",
                                "Form": [
                                  {
                                    "Atom": "==?"
                                  },
                                  {
                                    "Zil": ",TM-YEAR",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "TM-YEAR"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",YEAR-CAGED",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "YEAR-CAGED"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<TELL \"you find yourself in the middle of some kind of ceremony, with a strange\r\nflat-headed man wearing royal vestments about to break a bottle on the bars\r\nof an iron cage containing magnificent jewels. He appears pleased\r\nby your presence. \">",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  "you find yourself in the middle of some kind of ceremony, with a strange\r\nflat-headed man wearing royal vestments about to break a bottle on the bars\r\nof an iron cage containing magnificent jewels. He appears pleased\r\nby your presence. "
                                ]
                              },
                              {
                                "Zil": "<FLATHEAD-SENTENCE>",
                                "Form": [
                                  {
                                    "Atom": "FLATHEAD-SENTENCE"
                                  }
                                ]
                              }
                            ],
                            [
                              {
                                "Zil": "<G? ,TM-YEAR ,YEAR-CAGED>",
                                "Form": [
                                  {
                                    "Atom": "G?"
                                  },
                                  {
                                    "Zil": ",TM-YEAR",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "TM-YEAR"
                                      }
                                    ]
                                  },
                                  {
                                    "Zil": ",YEAR-CAGED",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "YEAR-CAGED"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<GUARDS-KILL>",
                                "Form": [
                                  {
                                    "Atom": "GUARDS-KILL"
                                  }
                                ]
                              }
                            ],
                            [
                              {
                                "Atom": "T"
                              },
                              {
                                "Zil": "<TELL ,SURROUNDINGS-CHANGED CR>",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  {
                                    "Zil": ",SURROUNDINGS-CHANGED",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "SURROUNDINGS-CHANGED"
                                      }
                                    ]
                                  },
                                  {
                                    "Atom": "CR"
                                  }
                                ]
                              },
                              {
                                "Zil": "<TGOTO ,OLD-JEWEL-ROOM>",
                                "Form": [
                                  {
                                    "Atom": "TGOTO"
                                  },
                                  {
                                    "Zil": ",OLD-JEWEL-ROOM",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "OLD-JEWEL-ROOM"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<EQUAL? ,HERE ,TECH-MUSEUM ,MID-TECH-MUSEUM ,OLD-TECH-MUSEUM>",
                          "Form": [
                            {
                              "Atom": "EQUAL?"
                            },
                            {
                              "Zil": ",HERE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "HERE"
                                }
                              ]
                            },
                            {
                              "Zil": ",TECH-MUSEUM",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "TECH-MUSEUM"
                                }
                              ]
                            },
                            {
                              "Zil": ",MID-TECH-MUSEUM",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MID-TECH-MUSEUM"
                                }
                              ]
                            },
                            {
                              "Zil": ",OLD-TECH-MUSEUM",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "OLD-TECH-MUSEUM"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<COND (<NOT <==? ,TM-YEAR ,YEAR-BUILT>> <GUARDS-KILL>) (T <TELL ,SURROUNDINGS-CHANGED CR> <TGOTO ,OLD-TECH-MUSEUM>)>",
                          "Form": [
                            {
                              "Atom": "COND"
                            },
                            [
                              {
                                "Zil": "<NOT <==? ,TM-YEAR ,YEAR-BUILT>>",
                                "Form": [
                                  {
                                    "Atom": "NOT"
                                  },
                                  {
                                    "Zil": "<==? ,TM-YEAR ,YEAR-BUILT>",
                                    "Form": [
                                      {
                                        "Atom": "==?"
                                      },
                                      {
                                        "Zil": ",TM-YEAR",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "TM-YEAR"
                                          }
                                        ]
                                      },
                                      {
                                        "Zil": ",YEAR-BUILT",
                                        "Form": [
                                          {
                                            "Atom": "GVAL"
                                          },
                                          {
                                            "Atom": "YEAR-BUILT"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "Zil": "<GUARDS-KILL>",
                                "Form": [
                                  {
                                    "Atom": "GUARDS-KILL"
                                  }
                                ]
                              }
                            ],
                            [
                              {
                                "Atom": "T"
                              },
                              {
                                "Zil": "<TELL ,SURROUNDINGS-CHANGED CR>",
                                "Form": [
                                  {
                                    "Atom": "TELL"
                                  },
                                  {
                                    "Zil": ",SURROUNDINGS-CHANGED",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "SURROUNDINGS-CHANGED"
                                      }
                                    ]
                                  },
                                  {
                                    "Atom": "CR"
                                  }
                                ]
                              },
                              {
                                "Zil": "<TGOTO ,OLD-TECH-MUSEUM>",
                                "Form": [
                                  {
                                    "Atom": "TGOTO"
                                  },
                                  {
                                    "Zil": ",OLD-TECH-MUSEUM",
                                    "Form": [
                                      {
                                        "Atom": "GVAL"
                                      },
                                      {
                                        "Atom": "OLD-TECH-MUSEUM"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<HAPPY-NEW-YEAR>",
                    "Form": [
                      {
                        "Atom": "HAPPY-NEW-YEAR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2693",
    "Name": "HAPPY-NEW-YEAR",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You experience a brief period of disorientation. When your vision returns,\r\nyour surroundings appear somewhat altered.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You experience a brief period of disorientation. When your vision returns,\r\nyour surroundings appear somewhat altered.",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<COND (<EQUAL? ,HERE ,OLD-JEWEL-ROOM ,MID-JEWEL-ROOM ,JEWEL-ROOM> <COND (<L? ,TM-YEAR ,YEAR-PRESENT> <TGOTO ,MID-JEWEL-ROOM>) (T <TGOTO ,JEWEL-ROOM>)>) (<EQUAL? ,HERE ,OLD-TECH-MUSEUM ,MID-TECH-MUSEUM ,TECH-MUSEUM> <COND (<L? ,TM-YEAR ,YEAR-PRESENT> <TGOTO ,MID-TECH-MUSEUM>) (T <TGOTO ,TECH-MUSEUM>)>) (<L? ,TM-YEAR ,YEAR-PRESENT> <TGOTO ,MID-MUSEUM-ENTRANCE>) (T <TGOTO ,MUSEUM-ENTRANCE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,HERE ,OLD-JEWEL-ROOM ,MID-JEWEL-ROOM ,JEWEL-ROOM>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",OLD-JEWEL-ROOM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OLD-JEWEL-ROOM"
                    }
                  ]
                },
                {
                  "Zil": ",MID-JEWEL-ROOM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MID-JEWEL-ROOM"
                    }
                  ]
                },
                {
                  "Zil": ",JEWEL-ROOM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "JEWEL-ROOM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<L? ,TM-YEAR ,YEAR-PRESENT> <TGOTO ,MID-JEWEL-ROOM>) (T <TGOTO ,JEWEL-ROOM>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<L? ,TM-YEAR ,YEAR-PRESENT>",
                    "Form": [
                      {
                        "Atom": "L?"
                      },
                      {
                        "Zil": ",TM-YEAR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TM-YEAR"
                          }
                        ]
                      },
                      {
                        "Zil": ",YEAR-PRESENT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "YEAR-PRESENT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TGOTO ,MID-JEWEL-ROOM>",
                    "Form": [
                      {
                        "Atom": "TGOTO"
                      },
                      {
                        "Zil": ",MID-JEWEL-ROOM",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MID-JEWEL-ROOM"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TGOTO ,JEWEL-ROOM>",
                    "Form": [
                      {
                        "Atom": "TGOTO"
                      },
                      {
                        "Zil": ",JEWEL-ROOM",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "JEWEL-ROOM"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<EQUAL? ,HERE ,OLD-TECH-MUSEUM ,MID-TECH-MUSEUM ,TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",OLD-TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OLD-TECH-MUSEUM"
                    }
                  ]
                },
                {
                  "Zil": ",MID-TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MID-TECH-MUSEUM"
                    }
                  ]
                },
                {
                  "Zil": ",TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TECH-MUSEUM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<L? ,TM-YEAR ,YEAR-PRESENT> <TGOTO ,MID-TECH-MUSEUM>) (T <TGOTO ,TECH-MUSEUM>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<L? ,TM-YEAR ,YEAR-PRESENT>",
                    "Form": [
                      {
                        "Atom": "L?"
                      },
                      {
                        "Zil": ",TM-YEAR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TM-YEAR"
                          }
                        ]
                      },
                      {
                        "Zil": ",YEAR-PRESENT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "YEAR-PRESENT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TGOTO ,MID-TECH-MUSEUM>",
                    "Form": [
                      {
                        "Atom": "TGOTO"
                      },
                      {
                        "Zil": ",MID-TECH-MUSEUM",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MID-TECH-MUSEUM"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TGOTO ,TECH-MUSEUM>",
                    "Form": [
                      {
                        "Atom": "TGOTO"
                      },
                      {
                        "Zil": ",TECH-MUSEUM",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TECH-MUSEUM"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<L? ,TM-YEAR ,YEAR-PRESENT>",
              "Form": [
                {
                  "Atom": "L?"
                },
                {
                  "Zil": ",TM-YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-YEAR"
                    }
                  ]
                },
                {
                  "Zil": ",YEAR-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR-PRESENT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TGOTO ,MID-MUSEUM-ENTRANCE>",
              "Form": [
                {
                  "Atom": "TGOTO"
                },
                {
                  "Zil": ",MID-MUSEUM-ENTRANCE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MID-MUSEUM-ENTRANCE"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TGOTO ,MUSEUM-ENTRANCE>",
              "Form": [
                {
                  "Atom": "TGOTO"
                },
                {
                  "Zil": ",MUSEUM-ENTRANCE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MUSEUM-ENTRANCE"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2709",
    "Name": "I-SNAP",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<==? ,YEAR ,YEAR-PRESENT> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,YEAR ,YEAR-PRESENT>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR"
                    }
                  ]
                },
                {
                  "Zil": ",YEAR-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR-PRESENT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG TM-YEAR ,YEAR-PRESENT>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "TM-YEAR"
          },
          {
            "Zil": ",YEAR-PRESENT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "YEAR-PRESENT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<TELL \"You start to feel light-headed and quickly become completely disoriented.\r\nWhen your head clears, you realize that your surroundings have changed.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You start to feel light-headed and quickly become completely disoriented.\r\nWhen your head clears, you realize that your surroundings have changed.",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<TGOTO ,SNAP-LOC T>",
        "Form": [
          {
            "Atom": "TGOTO"
          },
          {
            "Zil": ",SNAP-LOC",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "SNAP-LOC"
              }
            ]
          },
          {
            "Atom": "T"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2718",
    "Name": "MOVE-JEWELS",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<==? ,TM-YEAR ,YEAR-BUILT> <MOVE ,PEDESTAL ,OLD-JEWEL-ROOM>) (<L? ,TM-YEAR ,YEAR-PRESENT> <MOVE ,PEDESTAL ,MID-JEWEL-ROOM>) (T <MOVE ,PEDESTAL ,JEWEL-ROOM>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,TM-YEAR ,YEAR-BUILT>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",TM-YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-YEAR"
                    }
                  ]
                },
                {
                  "Zil": ",YEAR-BUILT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR-BUILT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,PEDESTAL ,OLD-JEWEL-ROOM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PEDESTAL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PEDESTAL"
                    }
                  ]
                },
                {
                  "Zil": ",OLD-JEWEL-ROOM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OLD-JEWEL-ROOM"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<L? ,TM-YEAR ,YEAR-PRESENT>",
              "Form": [
                {
                  "Atom": "L?"
                },
                {
                  "Zil": ",TM-YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-YEAR"
                    }
                  ]
                },
                {
                  "Zil": ",YEAR-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR-PRESENT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,PEDESTAL ,MID-JEWEL-ROOM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PEDESTAL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PEDESTAL"
                    }
                  ]
                },
                {
                  "Zil": ",MID-JEWEL-ROOM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MID-JEWEL-ROOM"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<MOVE ,PEDESTAL ,JEWEL-ROOM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PEDESTAL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PEDESTAL"
                    }
                  ]
                },
                {
                  "Zil": ",JEWEL-ROOM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "JEWEL-ROOM"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (,RING-STOLEN <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",RING-STOLEN",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "RING-STOLEN"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<MOVE ,SCEPTRE ,PEDESTAL>",
        "Form": [
          {
            "Atom": "MOVE"
          },
          {
            "Zil": ",SCEPTRE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "SCEPTRE"
              }
            ]
          },
          {
            "Zil": ",PEDESTAL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PEDESTAL"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<FSET ,SCEPTRE ,NDESCBIT>",
        "Form": [
          {
            "Atom": "FSET"
          },
          {
            "Zil": ",SCEPTRE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "SCEPTRE"
              }
            ]
          },
          {
            "Zil": ",NDESCBIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "NDESCBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<MOVE ,JEWELLED-KNIFE ,PEDESTAL>",
        "Form": [
          {
            "Atom": "MOVE"
          },
          {
            "Zil": ",JEWELLED-KNIFE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "JEWELLED-KNIFE"
              }
            ]
          },
          {
            "Zil": ",PEDESTAL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "PEDESTAL"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<FSET ,JEWELLED-KNIFE ,NDESCBIT>",
        "Form": [
          {
            "Atom": "FSET"
          },
          {
            "Zil": ",JEWELLED-KNIFE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "JEWELLED-KNIFE"
              }
            ]
          },
          {
            "Zil": ",NDESCBIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "NDESCBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<NOT ,RING-CONCEALED> <MOVE ,RING ,PEDESTAL> <FSET ,RING ,NDESCBIT>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,RING-CONCEALED>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",RING-CONCEALED",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "RING-CONCEALED"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,RING ,PEDESTAL>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",RING",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "RING"
                    }
                  ]
                },
                {
                  "Zil": ",PEDESTAL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PEDESTAL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FSET ,RING ,NDESCBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",RING",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "RING"
                    }
                  ]
                },
                {
                  "Zil": ",NDESCBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "NDESCBIT"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2734",
    "Name": "TGOTO",
    "ArgSpec": "(\"OPT\" (RM <>) (SNAP <>))",
    "Body": [
      {
        "Zil": "<SETG MOVES <+ ,MOVES 1>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "MOVES"
          },
          {
            "Zil": "<+ ,MOVES 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ",MOVES",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "MOVES"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<QUEUE I-GUARDS-LEAVE 0>",
        "Form": [
          {
            "Atom": "QUEUE"
          },
          {
            "Atom": "I-GUARDS-LEAVE"
          },
          0
        ]
      },
      {
        "Zil": "<SETG INVIS <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "INVIS"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (<G? ,YEAR ,YEAR-BUILT> <SETG GUARDS-PRESENT T>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<G? ,YEAR ,YEAR-BUILT>",
              "Form": [
                {
                  "Atom": "G?"
                },
                {
                  "Zil": ",YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR"
                    }
                  ]
                },
                {
                  "Zil": ",YEAR-BUILT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR-BUILT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG GUARDS-PRESENT T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "GUARDS-PRESENT"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<==? ,YEAR ,YEAR-PRESENT> <SETG SNAP-LOC ,HERE> <ENABLE <QUEUE I-SNAP 40>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,YEAR ,YEAR-PRESENT>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR"
                    }
                  ]
                },
                {
                  "Zil": ",YEAR-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR-PRESENT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG SNAP-LOC ,HERE>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "SNAP-LOC"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-SNAP 40>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-SNAP 40>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-SNAP"
                    },
                    40
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<==? ,TM-YEAR ,YEAR-PRESENT> <SETG CLEFT-FLAG T>) (T <SETG CLEFT-FLAG <>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,TM-YEAR ,YEAR-PRESENT>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",TM-YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-YEAR"
                    }
                  ]
                },
                {
                  "Zil": ",YEAR-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR-PRESENT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG CLEFT-FLAG T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CLEFT-FLAG"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<SETG CLEFT-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CLEFT-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<FCLEAR ,JEWEL-DOOR ,OPENBIT>",
        "Form": [
          {
            "Atom": "FCLEAR"
          },
          {
            "Zil": ",JEWEL-DOOR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "JEWEL-DOOR"
              }
            ]
          },
          {
            "Zil": ",OPENBIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "OPENBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<FCLEAR ,WOODEN-DOOR ,OPENBIT>",
        "Form": [
          {
            "Atom": "FCLEAR"
          },
          {
            "Zil": ",WOODEN-DOOR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "WOODEN-DOOR"
              }
            ]
          },
          {
            "Zil": ",OPENBIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "OPENBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<FCLEAR ,IRON-DOOR ,OPENBIT>",
        "Form": [
          {
            "Atom": "FCLEAR"
          },
          {
            "Zil": ",IRON-DOOR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "IRON-DOOR"
              }
            ]
          },
          {
            "Zil": ",OPENBIT",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "OPENBIT"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<==? ,YEAR ,YEAR-BUILT> <COND (<AND ,RING-CONCEALED <IN? ,TIME-MACHINE ,OLD-TECH-MUSEUM> <IN? ,SCEPTRE ,PEDESTAL> <IN? ,JEWELLED-KNIFE ,PEDESTAL>> <SETG RING-STOLEN T> <FSET ,CAGE ,INVISIBLE> <REMOVE ,SCEPTRE> <REMOVE ,JEWELLED-KNIFE>) (<OR <NOT <IN? ,TIME-MACHINE ,OLD-TECH-MUSEUM>> ,RING-CONCEALED> <SETG CLUMSY-ROBBERY T> <REMOVE ,TIME-MACHINE>) (<OR <NOT <IN? ,RING ,PEDESTAL>> <NOT <IN? ,SCEPTRE ,PEDESTAL>> <NOT <IN? ,JEWELLED-KNIFE ,PEDESTAL>>> <SETG MYSTERY T>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,YEAR ,YEAR-BUILT>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR"
                    }
                  ]
                },
                {
                  "Zil": ",YEAR-BUILT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR-BUILT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND ,RING-CONCEALED <IN? ,TIME-MACHINE ,OLD-TECH-MUSEUM> <IN? ,SCEPTRE ,PEDESTAL> <IN? ,JEWELLED-KNIFE ,PEDESTAL>> <SETG RING-STOLEN T> <FSET ,CAGE ,INVISIBLE> <REMOVE ,SCEPTRE> <REMOVE ,JEWELLED-KNIFE>) (<OR <NOT <IN? ,TIME-MACHINE ,OLD-TECH-MUSEUM>> ,RING-CONCEALED> <SETG CLUMSY-ROBBERY T> <REMOVE ,TIME-MACHINE>) (<OR <NOT <IN? ,RING ,PEDESTAL>> <NOT <IN? ,SCEPTRE ,PEDESTAL>> <NOT <IN? ,JEWELLED-KNIFE ,PEDESTAL>>> <SETG MYSTERY T>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND ,RING-CONCEALED <IN? ,TIME-MACHINE ,OLD-TECH-MUSEUM> <IN? ,SCEPTRE ,PEDESTAL> <IN? ,JEWELLED-KNIFE ,PEDESTAL>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": ",RING-CONCEALED",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "RING-CONCEALED"
                          }
                        ]
                      },
                      {
                        "Zil": "<IN? ,TIME-MACHINE ,OLD-TECH-MUSEUM>",
                        "Form": [
                          {
                            "Atom": "IN?"
                          },
                          {
                            "Zil": ",TIME-MACHINE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "TIME-MACHINE"
                              }
                            ]
                          },
                          {
                            "Zil": ",OLD-TECH-MUSEUM",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "OLD-TECH-MUSEUM"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<IN? ,SCEPTRE ,PEDESTAL>",
                        "Form": [
                          {
                            "Atom": "IN?"
                          },
                          {
                            "Zil": ",SCEPTRE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SCEPTRE"
                              }
                            ]
                          },
                          {
                            "Zil": ",PEDESTAL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PEDESTAL"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<IN? ,JEWELLED-KNIFE ,PEDESTAL>",
                        "Form": [
                          {
                            "Atom": "IN?"
                          },
                          {
                            "Zil": ",JEWELLED-KNIFE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "JEWELLED-KNIFE"
                              }
                            ]
                          },
                          {
                            "Zil": ",PEDESTAL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PEDESTAL"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG RING-STOLEN T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "RING-STOLEN"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<FSET ,CAGE ,INVISIBLE>",
                    "Form": [
                      {
                        "Atom": "FSET"
                      },
                      {
                        "Zil": ",CAGE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CAGE"
                          }
                        ]
                      },
                      {
                        "Zil": ",INVISIBLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "INVISIBLE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<REMOVE ,SCEPTRE>",
                    "Form": [
                      {
                        "Atom": "REMOVE"
                      },
                      {
                        "Zil": ",SCEPTRE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SCEPTRE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<REMOVE ,JEWELLED-KNIFE>",
                    "Form": [
                      {
                        "Atom": "REMOVE"
                      },
                      {
                        "Zil": ",JEWELLED-KNIFE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "JEWELLED-KNIFE"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<OR <NOT <IN? ,TIME-MACHINE ,OLD-TECH-MUSEUM>> ,RING-CONCEALED>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<NOT <IN? ,TIME-MACHINE ,OLD-TECH-MUSEUM>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<IN? ,TIME-MACHINE ,OLD-TECH-MUSEUM>",
                            "Form": [
                              {
                                "Atom": "IN?"
                              },
                              {
                                "Zil": ",TIME-MACHINE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "TIME-MACHINE"
                                  }
                                ]
                              },
                              {
                                "Zil": ",OLD-TECH-MUSEUM",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "OLD-TECH-MUSEUM"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": ",RING-CONCEALED",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "RING-CONCEALED"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG CLUMSY-ROBBERY T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "CLUMSY-ROBBERY"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<REMOVE ,TIME-MACHINE>",
                    "Form": [
                      {
                        "Atom": "REMOVE"
                      },
                      {
                        "Zil": ",TIME-MACHINE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TIME-MACHINE"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<OR <NOT <IN? ,RING ,PEDESTAL>> <NOT <IN? ,SCEPTRE ,PEDESTAL>> <NOT <IN? ,JEWELLED-KNIFE ,PEDESTAL>>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<NOT <IN? ,RING ,PEDESTAL>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<IN? ,RING ,PEDESTAL>",
                            "Form": [
                              {
                                "Atom": "IN?"
                              },
                              {
                                "Zil": ",RING",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "RING"
                                  }
                                ]
                              },
                              {
                                "Zil": ",PEDESTAL",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "PEDESTAL"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <IN? ,SCEPTRE ,PEDESTAL>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<IN? ,SCEPTRE ,PEDESTAL>",
                            "Form": [
                              {
                                "Atom": "IN?"
                              },
                              {
                                "Zil": ",SCEPTRE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "SCEPTRE"
                                  }
                                ]
                              },
                              {
                                "Zil": ",PEDESTAL",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "PEDESTAL"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<NOT <IN? ,JEWELLED-KNIFE ,PEDESTAL>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<IN? ,JEWELLED-KNIFE ,PEDESTAL>",
                            "Form": [
                              {
                                "Atom": "IN?"
                              },
                              {
                                "Zil": ",JEWELLED-KNIFE",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "JEWELLED-KNIFE"
                                  }
                                ]
                              },
                              {
                                "Zil": ",PEDESTAL",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "PEDESTAL"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG MYSTERY T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "MYSTERY"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<==? ,TM-YEAR ,YEAR-BUILT> <SETG MYSTERY <>> <SETG CLUMSY-ROBBERY <>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,TM-YEAR ,YEAR-BUILT>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",TM-YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TM-YEAR"
                    }
                  ]
                },
                {
                  "Zil": ",YEAR-BUILT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR-BUILT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG MYSTERY <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MYSTERY"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG CLUMSY-ROBBERY <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CLUMSY-ROBBERY"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SETG YEAR ,TM-YEAR>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "YEAR"
          },
          {
            "Zil": ",TM-YEAR",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "TM-YEAR"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<MOVE-TM-OBJECTS>",
        "Form": [
          {
            "Atom": "MOVE-TM-OBJECTS"
          }
        ]
      },
      {
        "Zil": "<MOVE-JEWELS>",
        "Form": [
          {
            "Atom": "MOVE-JEWELS"
          }
        ]
      },
      {
        "Zil": "<MOVE ,WINNER ,HERE>",
        "Form": [
          {
            "Atom": "MOVE"
          },
          {
            "Zil": ",WINNER",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "WINNER"
              }
            ]
          },
          {
            "Zil": ",HERE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "HERE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<GOTO .RM <>>",
        "Form": [
          {
            "Atom": "GOTO"
          },
          {
            "Zil": ".RM",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "RM"
              }
            ]
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (<==? ,YEAR ,YEAR-BUILT> <MOVE ,TIME-MACHINE ,OLD-TECH-MUSEUM> <MOVE ,SPINNER ,OLD-TECH-MUSEUM> <MOVE ,PRESSURIZER ,OLD-TECH-MUSEUM> <MOVE ,TECH-PLAQUE ,OLD-TECH-MUSEUM>) (<L? ,YEAR ,YEAR-PRESENT> <COND (<NOT ,CLUMSY-ROBBERY> <MOVE ,TIME-MACHINE ,MID-TECH-MUSEUM>)> <MOVE ,SPINNER ,MID-TECH-MUSEUM> <MOVE ,PRESSURIZER ,MID-TECH-MUSEUM> <MOVE ,TECH-PLAQUE ,MID-TECH-MUSEUM> <MOVE ,CAGE ,MID-JEWEL-ROOM>) (T <MOVE ,TIME-MACHINE ,TECH-MUSEUM> <MOVE ,SPINNER ,TECH-MUSEUM> <MOVE ,PRESSURIZER ,TECH-MUSEUM> <MOVE ,TECH-PLAQUE ,TECH-MUSEUM> <MOVE ,CAGE ,JEWEL-ROOM>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,YEAR ,YEAR-BUILT>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR"
                    }
                  ]
                },
                {
                  "Zil": ",YEAR-BUILT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR-BUILT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,TIME-MACHINE ,OLD-TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",TIME-MACHINE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TIME-MACHINE"
                    }
                  ]
                },
                {
                  "Zil": ",OLD-TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OLD-TECH-MUSEUM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,SPINNER ,OLD-TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",SPINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SPINNER"
                    }
                  ]
                },
                {
                  "Zil": ",OLD-TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OLD-TECH-MUSEUM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,PRESSURIZER ,OLD-TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PRESSURIZER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRESSURIZER"
                    }
                  ]
                },
                {
                  "Zil": ",OLD-TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OLD-TECH-MUSEUM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,TECH-PLAQUE ,OLD-TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",TECH-PLAQUE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TECH-PLAQUE"
                    }
                  ]
                },
                {
                  "Zil": ",OLD-TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OLD-TECH-MUSEUM"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<L? ,YEAR ,YEAR-PRESENT>",
              "Form": [
                {
                  "Atom": "L?"
                },
                {
                  "Zil": ",YEAR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR"
                    }
                  ]
                },
                {
                  "Zil": ",YEAR-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "YEAR-PRESENT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT ,CLUMSY-ROBBERY> <MOVE ,TIME-MACHINE ,MID-TECH-MUSEUM>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,CLUMSY-ROBBERY>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",CLUMSY-ROBBERY",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CLUMSY-ROBBERY"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<MOVE ,TIME-MACHINE ,MID-TECH-MUSEUM>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ",TIME-MACHINE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TIME-MACHINE"
                          }
                        ]
                      },
                      {
                        "Zil": ",MID-TECH-MUSEUM",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MID-TECH-MUSEUM"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<MOVE ,SPINNER ,MID-TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",SPINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SPINNER"
                    }
                  ]
                },
                {
                  "Zil": ",MID-TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MID-TECH-MUSEUM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,PRESSURIZER ,MID-TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PRESSURIZER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRESSURIZER"
                    }
                  ]
                },
                {
                  "Zil": ",MID-TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MID-TECH-MUSEUM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,TECH-PLAQUE ,MID-TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",TECH-PLAQUE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TECH-PLAQUE"
                    }
                  ]
                },
                {
                  "Zil": ",MID-TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MID-TECH-MUSEUM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,CAGE ,MID-JEWEL-ROOM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",CAGE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CAGE"
                    }
                  ]
                },
                {
                  "Zil": ",MID-JEWEL-ROOM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MID-JEWEL-ROOM"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<MOVE ,TIME-MACHINE ,TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",TIME-MACHINE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TIME-MACHINE"
                    }
                  ]
                },
                {
                  "Zil": ",TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TECH-MUSEUM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,SPINNER ,TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",SPINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SPINNER"
                    }
                  ]
                },
                {
                  "Zil": ",TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TECH-MUSEUM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,PRESSURIZER ,TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PRESSURIZER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRESSURIZER"
                    }
                  ]
                },
                {
                  "Zil": ",TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TECH-MUSEUM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,TECH-PLAQUE ,TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",TECH-PLAQUE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TECH-PLAQUE"
                    }
                  ]
                },
                {
                  "Zil": ",TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TECH-MUSEUM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,CAGE ,JEWEL-ROOM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",CAGE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CAGE"
                    }
                  ]
                },
                {
                  "Zil": ",JEWEL-ROOM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "JEWEL-ROOM"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<OR ,CLUMSY-ROBBERY <NOT <EQUAL? ,HERE ,TECH-MUSEUM ,MID-TECH-MUSEUM ,OLD-TECH-MUSEUM>>> <COND (<NOT .SNAP> <TELL \"You notice that the golden machine has disappeared!\" CR>)>) (T <MOVE ,WINNER ,TIME-MACHINE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR ,CLUMSY-ROBBERY <NOT <EQUAL? ,HERE ,TECH-MUSEUM ,MID-TECH-MUSEUM ,OLD-TECH-MUSEUM>>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": ",CLUMSY-ROBBERY",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLUMSY-ROBBERY"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <EQUAL? ,HERE ,TECH-MUSEUM ,MID-TECH-MUSEUM ,OLD-TECH-MUSEUM>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? ,HERE ,TECH-MUSEUM ,MID-TECH-MUSEUM ,OLD-TECH-MUSEUM>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        },
                        {
                          "Zil": ",TECH-MUSEUM",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "TECH-MUSEUM"
                            }
                          ]
                        },
                        {
                          "Zil": ",MID-TECH-MUSEUM",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MID-TECH-MUSEUM"
                            }
                          ]
                        },
                        {
                          "Zil": ",OLD-TECH-MUSEUM",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "OLD-TECH-MUSEUM"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT .SNAP> <TELL \"You notice that the golden machine has disappeared!\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT .SNAP>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ".SNAP",
                        "Form": [
                          {
                            "Atom": "LVAL"
                          },
                          {
                            "Atom": "SNAP"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You notice that the golden machine has disappeared!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You notice that the golden machine has disappeared!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<MOVE ,WINNER ,TIME-MACHINE>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                },
                {
                  "Zil": ",TIME-MACHINE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TIME-MACHINE"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (,CLUMSY-ROBBERY <REMOVE ,TIME-MACHINE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",CLUMSY-ROBBERY",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "CLUMSY-ROBBERY"
                }
              ]
            },
            {
              "Zil": "<REMOVE ,TIME-MACHINE>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",TIME-MACHINE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TIME-MACHINE"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2804",
    "Name": "MOVE-TM-OBJECTS",
    "ArgSpec": "(\"AUX\" F (MFLG <>) (WFLG <>) N)",
    "Body": [
      {
        "Zil": "<SET F <FIRST? ,TIME-MACHINE>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "F"
          },
          {
            "Zil": "<FIRST? ,TIME-MACHINE>",
            "Form": [
              {
                "Atom": "FIRST?"
              },
              {
                "Zil": ",TIME-MACHINE",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "TIME-MACHINE"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (.F <REPEAT () <COND (<OR <EQUAL? .F ,TM-DIAL ,TM-SEAT ,TM-BUTTON> <EQUAL? .F ,PLAYER>> T) (<NOT .MFLG> <SET MFLG T> <TELL \"You notice that everything in the machine is gone\">)> <SET N <NEXT? .F>> <COND (<NOT <EQUAL? .F ,TM-DIAL ,TM-SEAT ,TM-BUTTON>> <MOVE .F ,HERE>)> <SET F .N> <COND (<NOT .F> <RETURN>)>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ".F",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "F"
                }
              ]
            },
            {
              "Zil": "<REPEAT () <COND (<OR <EQUAL? .F ,TM-DIAL ,TM-SEAT ,TM-BUTTON> <EQUAL? .F ,PLAYER>> T) (<NOT .MFLG> <SET MFLG T> <TELL \"You notice that everything in the machine is gone\">)> <SET N <NEXT? .F>> <COND (<NOT <EQUAL? .F ,TM-DIAL ,TM-SEAT ,TM-BUTTON>> <MOVE .F ,HERE>)> <SET F .N> <COND (<NOT .F> <RETURN>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<OR <EQUAL? .F ,TM-DIAL ,TM-SEAT ,TM-BUTTON> <EQUAL? .F ,PLAYER>> T) (<NOT .MFLG> <SET MFLG T> <TELL \"You notice that everything in the machine is gone\">)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<OR <EQUAL? .F ,TM-DIAL ,TM-SEAT ,TM-BUTTON> <EQUAL? .F ,PLAYER>>",
                        "Form": [
                          {
                            "Atom": "OR"
                          },
                          {
                            "Zil": "<EQUAL? .F ,TM-DIAL ,TM-SEAT ,TM-BUTTON>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".F",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "F"
                                  }
                                ]
                              },
                              {
                                "Zil": ",TM-DIAL",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "TM-DIAL"
                                  }
                                ]
                              },
                              {
                                "Zil": ",TM-SEAT",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "TM-SEAT"
                                  }
                                ]
                              },
                              {
                                "Zil": ",TM-BUTTON",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "TM-BUTTON"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "Zil": "<EQUAL? .F ,PLAYER>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".F",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "F"
                                  }
                                ]
                              },
                              {
                                "Zil": ",PLAYER",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "PLAYER"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Atom": "T"
                      }
                    ],
                    [
                      {
                        "Zil": "<NOT .MFLG>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".MFLG",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "MFLG"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET MFLG T>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "MFLG"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      },
                      {
                        "Zil": "<TELL \"You notice that everything in the machine is gone\">",
                        "Form": [
                          {
                            "Atom": "TELL"
                          },
                          "You notice that everything in the machine is gone"
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<SET N <NEXT? .F>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "N"
                    },
                    {
                      "Zil": "<NEXT? .F>",
                      "Form": [
                        {
                          "Atom": "NEXT?"
                        },
                        {
                          "Zil": ".F",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "F"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<NOT <EQUAL? .F ,TM-DIAL ,TM-SEAT ,TM-BUTTON>> <MOVE .F ,HERE>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT <EQUAL? .F ,TM-DIAL ,TM-SEAT ,TM-BUTTON>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<EQUAL? .F ,TM-DIAL ,TM-SEAT ,TM-BUTTON>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".F",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "F"
                                  }
                                ]
                              },
                              {
                                "Zil": ",TM-DIAL",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "TM-DIAL"
                                  }
                                ]
                              },
                              {
                                "Zil": ",TM-SEAT",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "TM-SEAT"
                                  }
                                ]
                              },
                              {
                                "Zil": ",TM-BUTTON",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "TM-BUTTON"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<MOVE .F ,HERE>",
                        "Form": [
                          {
                            "Atom": "MOVE"
                          },
                          {
                            "Zil": ".F",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "F"
                              }
                            ]
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<SET F .N>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "F"
                    },
                    {
                      "Zil": ".N",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "N"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<NOT .F> <RETURN>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT .F>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".F",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "F"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<SET F <FIRST? ,WINNER>>",
        "Form": [
          {
            "Atom": "SET"
          },
          {
            "Atom": "F"
          },
          {
            "Zil": "<FIRST? ,WINNER>",
            "Form": [
              {
                "Atom": "FIRST?"
              },
              {
                "Zil": ",WINNER",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "WINNER"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (.F <REPEAT () <COND (<NOT .WFLG> <SET WFLG T> <COND (.MFLG <TELL \": come to mention\r\nit, everything you were holding has vanished too\">) (T <TELL \"You notice that everything you were holding is gone\">)>)> <SET N <NEXT? .F>> <MOVE .F ,HERE> <SET F .N> <COND (<NOT .F> <RETURN>)>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ".F",
              "Form": [
                {
                  "Atom": "LVAL"
                },
                {
                  "Atom": "F"
                }
              ]
            },
            {
              "Zil": "<REPEAT () <COND (<NOT .WFLG> <SET WFLG T> <COND (.MFLG <TELL \": come to mention\r\nit, everything you were holding has vanished too\">) (T <TELL \"You notice that everything you were holding is gone\">)>)> <SET N <NEXT? .F>> <MOVE .F ,HERE> <SET F .N> <COND (<NOT .F> <RETURN>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<NOT .WFLG> <SET WFLG T> <COND (.MFLG <TELL \": come to mention\r\nit, everything you were holding has vanished too\">) (T <TELL \"You notice that everything you were holding is gone\">)>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT .WFLG>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".WFLG",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "WFLG"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET WFLG T>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "WFLG"
                          },
                          {
                            "Atom": "T"
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (.MFLG <TELL \": come to mention\r\nit, everything you were holding has vanished too\">) (T <TELL \"You notice that everything you were holding is gone\">)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": ".MFLG",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "MFLG"
                                }
                              ]
                            },
                            {
                              "Zil": "<TELL \": come to mention\r\nit, everything you were holding has vanished too\">",
                              "Form": [
                                {
                                  "Atom": "TELL"
                                },
                                ": come to mention\r\nit, everything you were holding has vanished too"
                              ]
                            }
                          ],
                          [
                            {
                              "Atom": "T"
                            },
                            {
                              "Zil": "<TELL \"You notice that everything you were holding is gone\">",
                              "Form": [
                                {
                                  "Atom": "TELL"
                                },
                                "You notice that everything you were holding is gone"
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<SET N <NEXT? .F>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "N"
                    },
                    {
                      "Zil": "<NEXT? .F>",
                      "Form": [
                        {
                          "Atom": "NEXT?"
                        },
                        {
                          "Zil": ".F",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "F"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<MOVE .F ,HERE>",
                  "Form": [
                    {
                      "Atom": "MOVE"
                    },
                    {
                      "Zil": ".F",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "F"
                        }
                      ]
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<SET F .N>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "F"
                    },
                    {
                      "Zil": ".N",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "N"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<NOT .F> <RETURN>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT .F>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".F",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "F"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<OR .MFLG .WFLG> <TELL \"!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR .MFLG .WFLG>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": ".MFLG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "MFLG"
                    }
                  ]
                },
                {
                  "Zil": ".WFLG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "WFLG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2835",
    "Name": "GUARDS-KILL",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL <PICK-ONE ,GUARD-KILLERS> CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          {
            "Zil": "<PICK-ONE ,GUARD-KILLERS>",
            "Form": [
              {
                "Atom": "PICK-ONE"
              },
              {
                "Zil": ",GUARD-KILLERS",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "GUARD-KILLERS"
                  }
                ]
              }
            ]
          },
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<REALLY-DEAD \" \">",
        "Form": [
          {
            "Atom": "REALLY-DEAD"
          },
          " "
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2852",
    "Name": "FLATHEAD-SENTENCE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<REALLY-DEAD \"He speaks loudly, nearly deafening the poor civil\r\nservant whose duty it is to see that his wishes are carried out. \\\"Aha! A\r\nthief! Didn't I tell you that we needed more security! But, no! You all\r\nsaid my idea to build the museum under two miles of mountain and surrounded\r\nby five hundred feet of steel was impractical! Now, what to do with this ...\r\nintruder? I have it! We'll build a tremendous fortress on the highest mountain\r\npeak, with one narrow ladder stretching thousands of feet to the pinnacle.\r\nThere he will stay for the rest of his life!\\\" His brow-beaten assistant\r\nhesitates. \\\"Don't you think, Your Lordship, that your plan is a bit, well,\r\na bit much?\\\" Flathead gives it a second's thought. \\\"No, not really.\\\" he\r\nsays, and you are led away. A few years later, your prison is finished. You\r\nare taken there, and spend the rest of your life in misery.\">",
        "Form": [
          {
            "Atom": "REALLY-DEAD"
          },
          "He speaks loudly, nearly deafening the poor civil\r\nservant whose duty it is to see that his wishes are carried out. \"Aha! A\r\nthief! Didn't I tell you that we needed more security! But, no! You all\r\nsaid my idea to build the museum under two miles of mountain and surrounded\r\nby five hundred feet of steel was impractical! Now, what to do with this ...\r\nintruder? I have it! We'll build a tremendous fortress on the highest mountain\r\npeak, with one narrow ladder stretching thousands of feet to the pinnacle.\r\nThere he will stay for the rest of his life!\" His brow-beaten assistant\r\nhesitates. \"Don't you think, Your Lordship, that your plan is a bit, well,\r\na bit much?\" Flathead gives it a second's thought. \"No, not really.\" he\r\nsays, and you are led away. A few years later, your prison is finished. You\r\nare taken there, and spend the rest of your life in misery."
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2866",
    "Name": "REALLY-DEAD",
    "ArgSpec": "(STR)",
    "Body": [
      {
        "Zil": "<TELL .STR \"|\r\n|\r\n****  You have died  ****|\r\n|\r\n\">",
        "Form": [
          {
            "Atom": "TELL"
          },
          {
            "Zil": ".STR",
            "Form": [
              {
                "Atom": "LVAL"
              },
              {
                "Atom": "STR"
              }
            ]
          },
          "|\r\n|\r\n****  You have died  ****|\r\n|\r\n"
        ]
      },
      {
        "Zil": "<FINISH>",
        "Form": [
          {
            "Atom": "FINISH"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2882",
    "Name": "HEAR-FLATHEAD",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG FLATHEAD-HEARD T>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "FLATHEAD-HEARD"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<TELL \"One particularly loud and grating voice can be heard above the\r\nothers outside the room. \\\"Very nice! Very nice! Not enough security, but\r\nvery nice! Now, Lord Feepness, pay attention! I've been thinking that what\r\nwe need is a dam, a tremendous dam to control the Frigid River, with\r\nthousands of gates. We shall call it ... Flood Control Dam #2. No, not\r\nquite right. Aha! Flood Control Dam #3.\\\" \\\"Pardon me, my Lord, but wouldn't\r\nthat be just a tad excessive?\\\" \\\"Nonsense! Now, let me tell you my idea for\r\nhollowing out volcanoes...\\\" With that, the voices trail out nothingness.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "One particularly loud and grating voice can be heard above the\r\nothers outside the room. \"Very nice! Very nice! Not enough security, but\r\nvery nice! Now, Lord Feepness, pay attention! I've been thinking that what\r\nwe need is a dam, a tremendous dam to control the Frigid River, with\r\nthousands of gates. We shall call it ... Flood Control Dam #2. No, not\r\nquite right. Aha! Flood Control Dam #3.\" \"Pardon me, my Lord, but wouldn't\r\nthat be just a tad excessive?\" \"Nonsense! Now, let me tell you my idea for\r\nhollowing out volcanoes...\" With that, the voices trail out nothingness.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2894",
    "Name": "OLD-TECH-MUSEUM-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<AND <==? .RARG ,M-LOOK> <==? ,HERE ,OLD-JEWEL-ROOM>> <TELL \"You are in a high-ceilinged chamber, in the center of which\r\nis a pedestal which \"> <COND (<NOT ,RING-STOLEN> <TELL \"is the intended home of the Crown\r\nJewels of the Great Underground Empire: a jewelled knife, a golden ring, and\r\nthe royal sceptre.\"> <COND (<OR <NOT <IN? ,SCEPTRE ,PEDESTAL>> <NOT <IN? ,RING ,PEDESTAL>> <NOT <IN? ,JEWELLED-KNIFE ,PEDESTAL>>> <TELL \" Not all of the jewels are in place, however.\">)>) (T <TELL \"is bare.\">)> <TELL \"\r\nThe room is, by appearances, unfinished.\" CR> <COND (,GUARDS-PRESENT <TELL ,HEAR-VOICES CR>)> <RTRUE>) (<==? .RARG ,M-LOOK> <COND (<==? ,HERE ,OLD-TECH-MUSEUM> <TELL \"You are in a large, unfinished room, probably intended to be a\r\npart of the Royal Museum.\" CR>) (T <TELL \"This appears to be an unfinished entranceway to the Royal Museum. There are\r\ndoors to the east and north, and a blind stairway to the south. A heavy iron\r\ndoor to the west is closed and locked.\" CR>)> <COND (,GUARDS-PRESENT <TELL ,HEAR-VOICES CR>)> <RTRUE>) (<AND <==? .RARG ,M-END> <NOT ,FLATHEAD-HEARD> ,GUARDS-PRESENT <PROB 6>> <HEAR-FLATHEAD>) (<AND <==? .RARG ,M-ENTER> ,GUARDS-PRESENT> <ENABLE <QUEUE I-GUARDS-LEAVE <+ 3 <RANDOM 12>>>>) (<AND <==? .RARG ,M-BEG> <VERB? OPEN> <EQUAL? ,PRSO ,WOODEN-DOOR ,JEWEL-DOOR> ,GUARDS-PRESENT> <TELL \"You open the door ever so slightly and see dozens of armed officials.\r\nYou shut the door quickly, realizing that you would be killed\r\nin an instant if you left the room.\" CR>) (<AND <==? .RARG ,M-BEG> ,GUARDS-PRESENT <PROB 3>> <GUARD-CAUGHT>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? .RARG ,M-LOOK> <==? ,HERE ,OLD-JEWEL-ROOM>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-LOOK>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-LOOK",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-LOOK"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<==? ,HERE ,OLD-JEWEL-ROOM>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",OLD-JEWEL-ROOM",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "OLD-JEWEL-ROOM"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are in a high-ceilinged chamber, in the center of which\r\nis a pedestal which \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are in a high-ceilinged chamber, in the center of which\r\nis a pedestal which "
              ]
            },
            {
              "Zil": "<COND (<NOT ,RING-STOLEN> <TELL \"is the intended home of the Crown\r\nJewels of the Great Underground Empire: a jewelled knife, a golden ring, and\r\nthe royal sceptre.\"> <COND (<OR <NOT <IN? ,SCEPTRE ,PEDESTAL>> <NOT <IN? ,RING ,PEDESTAL>> <NOT <IN? ,JEWELLED-KNIFE ,PEDESTAL>>> <TELL \" Not all of the jewels are in place, however.\">)>) (T <TELL \"is bare.\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,RING-STOLEN>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",RING-STOLEN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "RING-STOLEN"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"is the intended home of the Crown\r\nJewels of the Great Underground Empire: a jewelled knife, a golden ring, and\r\nthe royal sceptre.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "is the intended home of the Crown\r\nJewels of the Great Underground Empire: a jewelled knife, a golden ring, and\r\nthe royal sceptre."
                    ]
                  },
                  {
                    "Zil": "<COND (<OR <NOT <IN? ,SCEPTRE ,PEDESTAL>> <NOT <IN? ,RING ,PEDESTAL>> <NOT <IN? ,JEWELLED-KNIFE ,PEDESTAL>>> <TELL \" Not all of the jewels are in place, however.\">)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<OR <NOT <IN? ,SCEPTRE ,PEDESTAL>> <NOT <IN? ,RING ,PEDESTAL>> <NOT <IN? ,JEWELLED-KNIFE ,PEDESTAL>>>",
                          "Form": [
                            {
                              "Atom": "OR"
                            },
                            {
                              "Zil": "<NOT <IN? ,SCEPTRE ,PEDESTAL>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<IN? ,SCEPTRE ,PEDESTAL>",
                                  "Form": [
                                    {
                                      "Atom": "IN?"
                                    },
                                    {
                                      "Zil": ",SCEPTRE",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "SCEPTRE"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PEDESTAL",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PEDESTAL"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<NOT <IN? ,RING ,PEDESTAL>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<IN? ,RING ,PEDESTAL>",
                                  "Form": [
                                    {
                                      "Atom": "IN?"
                                    },
                                    {
                                      "Zil": ",RING",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "RING"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PEDESTAL",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PEDESTAL"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<NOT <IN? ,JEWELLED-KNIFE ,PEDESTAL>>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": "<IN? ,JEWELLED-KNIFE ,PEDESTAL>",
                                  "Form": [
                                    {
                                      "Atom": "IN?"
                                    },
                                    {
                                      "Zil": ",JEWELLED-KNIFE",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "JEWELLED-KNIFE"
                                        }
                                      ]
                                    },
                                    {
                                      "Zil": ",PEDESTAL",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "PEDESTAL"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \" Not all of the jewels are in place, however.\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            " Not all of the jewels are in place, however."
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"is bare.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "is bare."
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \"\r\nThe room is, by appearances, unfinished.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "\r\nThe room is, by appearances, unfinished.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<COND (,GUARDS-PRESENT <TELL ,HEAR-VOICES CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",GUARDS-PRESENT",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "GUARDS-PRESENT"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL ,HEAR-VOICES CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": ",HEAR-VOICES",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HEAR-VOICES"
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,HERE ,OLD-TECH-MUSEUM> <TELL \"You are in a large, unfinished room, probably intended to be a\r\npart of the Royal Museum.\" CR>) (T <TELL \"This appears to be an unfinished entranceway to the Royal Museum. There are\r\ndoors to the east and north, and a blind stairway to the south. A heavy iron\r\ndoor to the west is closed and locked.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,HERE ,OLD-TECH-MUSEUM>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",OLD-TECH-MUSEUM",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OLD-TECH-MUSEUM"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You are in a large, unfinished room, probably intended to be a\r\npart of the Royal Museum.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You are in a large, unfinished room, probably intended to be a\r\npart of the Royal Museum.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"This appears to be an unfinished entranceway to the Royal Museum. There are\r\ndoors to the east and north, and a blind stairway to the south. A heavy iron\r\ndoor to the west is closed and locked.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "This appears to be an unfinished entranceway to the Royal Museum. There are\r\ndoors to the east and north, and a blind stairway to the south. A heavy iron\r\ndoor to the west is closed and locked.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (,GUARDS-PRESENT <TELL ,HEAR-VOICES CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",GUARDS-PRESENT",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "GUARDS-PRESENT"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL ,HEAR-VOICES CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": ",HEAR-VOICES",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HEAR-VOICES"
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? .RARG ,M-END> <NOT ,FLATHEAD-HEARD> ,GUARDS-PRESENT <PROB 6>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-END>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-END",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-END"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,FLATHEAD-HEARD>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",FLATHEAD-HEARD",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "FLATHEAD-HEARD"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",GUARDS-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDS-PRESENT"
                    }
                  ]
                },
                {
                  "Zil": "<PROB 6>",
                  "Form": [
                    {
                      "Atom": "PROB"
                    },
                    6
                  ]
                }
              ]
            },
            {
              "Zil": "<HEAR-FLATHEAD>",
              "Form": [
                {
                  "Atom": "HEAR-FLATHEAD"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? .RARG ,M-ENTER> ,GUARDS-PRESENT>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-ENTER>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-ENTER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-ENTER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",GUARDS-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDS-PRESENT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-GUARDS-LEAVE <+ 3 <RANDOM 12>>>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-GUARDS-LEAVE <+ 3 <RANDOM 12>>>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-GUARDS-LEAVE"
                    },
                    {
                      "Zil": "<+ 3 <RANDOM 12>>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        3,
                        {
                          "Zil": "<RANDOM 12>",
                          "Form": [
                            {
                              "Atom": "RANDOM"
                            },
                            12
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? .RARG ,M-BEG> <VERB? OPEN> <EQUAL? ,PRSO ,WOODEN-DOOR ,JEWEL-DOOR> ,GUARDS-PRESENT>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-BEG>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-BEG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-BEG"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<VERB? OPEN>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "OPEN"
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,PRSO ,WOODEN-DOOR ,JEWEL-DOOR>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",WOODEN-DOOR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WOODEN-DOOR"
                        }
                      ]
                    },
                    {
                      "Zil": ",JEWEL-DOOR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "JEWEL-DOOR"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",GUARDS-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDS-PRESENT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You open the door ever so slightly and see dozens of armed officials.\r\nYou shut the door quickly, realizing that you would be killed\r\nin an instant if you left the room.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You open the door ever so slightly and see dozens of armed officials.\r\nYou shut the door quickly, realizing that you would be killed\r\nin an instant if you left the room.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? .RARG ,M-BEG> ,GUARDS-PRESENT <PROB 3>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-BEG>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-BEG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-BEG"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",GUARDS-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDS-PRESENT"
                    }
                  ]
                },
                {
                  "Zil": "<PROB 3>",
                  "Form": [
                    {
                      "Atom": "PROB"
                    },
                    3
                  ]
                }
              ]
            },
            {
              "Zil": "<GUARD-CAUGHT>",
              "Form": [
                {
                  "Atom": "GUARD-CAUGHT"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2949",
    "Name": "I-GUARDS-LEAVE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG GUARDS-PRESENT <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "GUARDS-PRESENT"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<TELL \"You hear, from outside the door, guards marching away, their voices fading.\r\nAfter a few moments, a booming crash signals the close of what must be a\r\ntremendous door. Then there is silence.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You hear, from outside the door, guards marching away, their voices fading.\r\nAfter a few moments, a booming crash signals the close of what must be a\r\ntremendous door. Then there is silence.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2956",
    "Name": "GUARD-CAUGHT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<REALLY-DEAD \"A particularly vicious-looking guard enters the room and sees you.\r\nHe grinds his teeth unpleasantly, pulls a waffle out of his\r\ngarment, and vaporizes you with a flick of his finger.\">",
        "Form": [
          {
            "Atom": "REALLY-DEAD"
          },
          "A particularly vicious-looking guard enters the room and sees you.\r\nHe grinds his teeth unpleasantly, pulls a waffle out of his\r\ngarment, and vaporizes you with a flick of his finger."
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2968",
    "Name": "ROBOT-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? FOLLOW> <TELL \"It moved quickly and left the door closed.\" CR>) (T <TELL \"There is no robot here.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? FOLLOW>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "FOLLOW"
                }
              ]
            },
            {
              "Zil": "<TELL \"It moved quickly and left the door closed.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It moved quickly and left the door closed.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"There is no robot here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is no robot here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:2973",
    "Name": "JEWEL-ROOM-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<AND <==? .RARG ,M-END> <IN? ,TIME-MACHINE ,HERE> <PROB 4>> <TELL \"An odd robot-like device glides in, dusting the floor as it moves. Its\r\nhead gyrates briefly as it scans the machine. \\\"Shame. Shame,\\\"\r\nit says, rather tinnily. \\\"Someone has been tampering with the machines\r\nagain.\\\" Six beady mechanical eyes focus on you as the robot picks up the\r\ngold machine. \\\"Hands off, adventurer!\\\" it says as it leaves the\r\nroom, closing the door behind it.\" CR> <FCLEAR ,JEWEL-DOOR ,OPENBIT> <FCLEAR ,WOODEN-DOOR ,OPENBIT> <MOVE ,TIME-MACHINE ,TECH-MUSEUM>) (<==? .RARG ,M-LOOK> <TELL \"You are in a high-ceilinged chamber\"> <COND (<NOT <FSET? ,CAGE ,INVISIBLE>> <TELL \" in the middle of which\r\nsits a tall, round steel cage, which is securely locked. In the\r\nmiddle of the cage is a pedestal on which sit the Crown Jewels\r\nof the Great Underground Empire: a sceptre, a jewelled knife, and a golden\r\nring. A small bronze plaque, now tarnished, is on the cage.\" CR>) (T <TELL \" in the middle of which is a bare\r\npedestal. The room is unfinished with no\r\nindication of its purpose. A small plaque is fastened to a wall.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? .RARG ,M-END> <IN? ,TIME-MACHINE ,HERE> <PROB 4>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-END>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-END",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-END"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,TIME-MACHINE ,HERE>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",TIME-MACHINE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TIME-MACHINE"
                        }
                      ]
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<PROB 4>",
                  "Form": [
                    {
                      "Atom": "PROB"
                    },
                    4
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"An odd robot-like device glides in, dusting the floor as it moves. Its\r\nhead gyrates briefly as it scans the machine. \\\"Shame. Shame,\\\"\r\nit says, rather tinnily. \\\"Someone has been tampering with the machines\r\nagain.\\\" Six beady mechanical eyes focus on you as the robot picks up the\r\ngold machine. \\\"Hands off, adventurer!\\\" it says as it leaves the\r\nroom, closing the door behind it.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "An odd robot-like device glides in, dusting the floor as it moves. Its\r\nhead gyrates briefly as it scans the machine. \"Shame. Shame,\"\r\nit says, rather tinnily. \"Someone has been tampering with the machines\r\nagain.\" Six beady mechanical eyes focus on you as the robot picks up the\r\ngold machine. \"Hands off, adventurer!\" it says as it leaves the\r\nroom, closing the door behind it.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<FCLEAR ,JEWEL-DOOR ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FCLEAR"
                },
                {
                  "Zil": ",JEWEL-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "JEWEL-DOOR"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FCLEAR ,WOODEN-DOOR ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FCLEAR"
                },
                {
                  "Zil": ",WOODEN-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WOODEN-DOOR"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,TIME-MACHINE ,TECH-MUSEUM>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",TIME-MACHINE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TIME-MACHINE"
                    }
                  ]
                },
                {
                  "Zil": ",TECH-MUSEUM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TECH-MUSEUM"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are in a high-ceilinged chamber\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are in a high-ceilinged chamber"
              ]
            },
            {
              "Zil": "<COND (<NOT <FSET? ,CAGE ,INVISIBLE>> <TELL \" in the middle of which\r\nsits a tall, round steel cage, which is securely locked. In the\r\nmiddle of the cage is a pedestal on which sit the Crown Jewels\r\nof the Great Underground Empire: a sceptre, a jewelled knife, and a golden\r\nring. A small bronze plaque, now tarnished, is on the cage.\" CR>) (T <TELL \" in the middle of which is a bare\r\npedestal. The room is unfinished with no\r\nindication of its purpose. A small plaque is fastened to a wall.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <FSET? ,CAGE ,INVISIBLE>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? ,CAGE ,INVISIBLE>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",CAGE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "CAGE"
                              }
                            ]
                          },
                          {
                            "Zil": ",INVISIBLE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "INVISIBLE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" in the middle of which\r\nsits a tall, round steel cage, which is securely locked. In the\r\nmiddle of the cage is a pedestal on which sit the Crown Jewels\r\nof the Great Underground Empire: a sceptre, a jewelled knife, and a golden\r\nring. A small bronze plaque, now tarnished, is on the cage.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " in the middle of which\r\nsits a tall, round steel cage, which is securely locked. In the\r\nmiddle of the cage is a pedestal on which sit the Crown Jewels\r\nof the Great Underground Empire: a sceptre, a jewelled knife, and a golden\r\nring. A small bronze plaque, now tarnished, is on the cage.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \" in the middle of which is a bare\r\npedestal. The room is unfinished with no\r\nindication of its purpose. A small plaque is fastened to a wall.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " in the middle of which is a bare\r\npedestal. The room is unfinished with no\r\nindication of its purpose. A small plaque is fastened to a wall.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3004",
    "Name": "CROWN-JEWELS-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? TAKE> <COND (<HELD? ,PRSO> <RFALSE>) (<OR <==? ,YEAR ,YEAR-BUILT> <FSET? ,CAGE ,INVISIBLE>> <FCLEAR ,PRSO ,NDESCBIT> <RFALSE>) (T <TELL \"The jewels are inside a locked cage.\" CR>)>) (<AND <VERB? PUT> <==? ,PRSI ,PEDESTAL> <IN? ,PRSO ,WINNER>> <TELL \"The \" D ,PRSO \" is now resting on the pedestal.\" CR> <MOVE ,PRSO ,PEDESTAL> <FSET ,PRSO ,NDESCBIT> <RTRUE>) (<AND <VERB? PUT> <NOT <HELD? ,PRSO>>> <TELL \"You don't have the \" D ,PRSO \".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? TAKE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TAKE"
                }
              ]
            },
            {
              "Zil": "<COND (<HELD? ,PRSO> <RFALSE>) (<OR <==? ,YEAR ,YEAR-BUILT> <FSET? ,CAGE ,INVISIBLE>> <FCLEAR ,PRSO ,NDESCBIT> <RFALSE>) (T <TELL \"The jewels are inside a locked cage.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<HELD? ,PRSO>",
                    "Form": [
                      {
                        "Atom": "HELD?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<OR <==? ,YEAR ,YEAR-BUILT> <FSET? ,CAGE ,INVISIBLE>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<==? ,YEAR ,YEAR-BUILT>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",YEAR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "YEAR"
                              }
                            ]
                          },
                          {
                            "Zil": ",YEAR-BUILT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "YEAR-BUILT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<FSET? ,CAGE ,INVISIBLE>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",CAGE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "CAGE"
                              }
                            ]
                          },
                          {
                            "Zil": ",INVISIBLE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "INVISIBLE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,PRSO ,NDESCBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",NDESCBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "NDESCBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The jewels are inside a locked cage.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The jewels are inside a locked cage.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? PUT> <==? ,PRSI ,PEDESTAL> <IN? ,PRSO ,WINNER>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,PEDESTAL>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",PEDESTAL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PEDESTAL"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,PRSO ,WINNER>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D ,PRSO \" is now resting on the pedestal.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " is now resting on the pedestal.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<MOVE ,PRSO ,PEDESTAL>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",PEDESTAL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PEDESTAL"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FSET ,PRSO ,NDESCBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",NDESCBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "NDESCBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? PUT> <NOT <HELD? ,PRSO>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <HELD? ,PRSO>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<HELD? ,PRSO>",
                      "Form": [
                        {
                          "Atom": "HELD?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You don't have the \" D ,PRSO \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You don't have the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3024",
    "Name": "TECH-MUSEUM-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <COND (<FSET? ,CAGE ,INVISIBLE> <DDESC \"This is an exhibit of Empire technology. A wooden door to the\r\nsouth is \" ,WOODEN-DOOR \".\">) (T <DDESC \"This is a large hall which hosted the technological exhibits of the\r\nGreat Underground Empire. A door to the south is \" ,WOODEN-DOOR \".\">)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,CAGE ,INVISIBLE> <DDESC \"This is an exhibit of Empire technology. A wooden door to the\r\nsouth is \" ,WOODEN-DOOR \".\">) (T <DDESC \"This is a large hall which hosted the technological exhibits of the\r\nGreat Underground Empire. A door to the south is \" ,WOODEN-DOOR \".\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,CAGE ,INVISIBLE>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",CAGE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CAGE"
                          }
                        ]
                      },
                      {
                        "Zil": ",INVISIBLE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "INVISIBLE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<DDESC \"This is an exhibit of Empire technology. A wooden door to the\r\nsouth is \" ,WOODEN-DOOR \".\">",
                    "Form": [
                      {
                        "Atom": "DDESC"
                      },
                      "This is an exhibit of Empire technology. A wooden door to the\r\nsouth is ",
                      {
                        "Zil": ",WOODEN-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WOODEN-DOOR"
                          }
                        ]
                      },
                      "."
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<DDESC \"This is a large hall which hosted the technological exhibits of the\r\nGreat Underground Empire. A door to the south is \" ,WOODEN-DOOR \".\">",
                    "Form": [
                      {
                        "Atom": "DDESC"
                      },
                      "This is a large hall which hosted the technological exhibits of the\r\nGreat Underground Empire. A door to the south is ",
                      {
                        "Zil": ",WOODEN-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WOODEN-DOOR"
                          }
                        ]
                      },
                      "."
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3036",
    "Name": "PLAQUE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE READ> <COND (,RING-STOLEN <TELL \"The plaque explains that this room was to be the home of the Crown Jewels\r\nof the Empire. However, following the unexplained disappearance of a\r\npriceless ring during the final stages of construction, Lord Flathead\r\ndecided to place the remaining jewels in a safer location.\r\nInterestingly, he placed his most prized possesion, an incredibly gaudy\r\ncrown, in a locked safe in a volcano specifically hollowed out for that\r\npurpose.\" CR> <RTRUE>)> <FIXED-FONT-ON> <TELL \"|\r\n         Crown Jewels|\r\n|\r\n  Presented To The Royal Museum|\r\n      By His Gracious Lord|\r\n|\r\n        DIMWIT FLATHEAD|\r\n|\r\n          Dedicated|\r\n         * 777 GUE *\"> <FIXED-FONT-OFF> <COND (,CLUMSY-ROBBERY <TELL CR CR \"Underneath the plaque, in small lettering, is a description of a clumsy\r\nattempt to steal the jewels using a time machine from the Technological\r\nMuseum which the curators were surprised to discover was not a nonworking\r\nmodel. After the attempt, the machine was removed from the exhibit.\">) (,MYSTERY <TELL CR CR \"Underneath the plaque, in small lettering, is a description of\r\na mysterious happening during the final stages of construction of\r\nthe Museum, in which some of the crown jewels were found displaced\r\nfrom their proper positions. Fortunately, nothing was missing.\r\nThe mystery was never solved and the museum was opened despite the objections\r\nof Lord Flathead that security was too lax.\">)> <CRLF> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE READ>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                },
                {
                  "Atom": "READ"
                }
              ]
            },
            {
              "Zil": "<COND (,RING-STOLEN <TELL \"The plaque explains that this room was to be the home of the Crown Jewels\r\nof the Empire. However, following the unexplained disappearance of a\r\npriceless ring during the final stages of construction, Lord Flathead\r\ndecided to place the remaining jewels in a safer location.\r\nInterestingly, he placed his most prized possesion, an incredibly gaudy\r\ncrown, in a locked safe in a volcano specifically hollowed out for that\r\npurpose.\" CR> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",RING-STOLEN",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "RING-STOLEN"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The plaque explains that this room was to be the home of the Crown Jewels\r\nof the Empire. However, following the unexplained disappearance of a\r\npriceless ring during the final stages of construction, Lord Flathead\r\ndecided to place the remaining jewels in a safer location.\r\nInterestingly, he placed his most prized possesion, an incredibly gaudy\r\ncrown, in a locked safe in a volcano specifically hollowed out for that\r\npurpose.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The plaque explains that this room was to be the home of the Crown Jewels\r\nof the Empire. However, following the unexplained disappearance of a\r\npriceless ring during the final stages of construction, Lord Flathead\r\ndecided to place the remaining jewels in a safer location.\r\nInterestingly, he placed his most prized possesion, an incredibly gaudy\r\ncrown, in a locked safe in a volcano specifically hollowed out for that\r\npurpose.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<FIXED-FONT-ON>",
              "Form": [
                {
                  "Atom": "FIXED-FONT-ON"
                }
              ]
            },
            {
              "Zil": "<TELL \"|\r\n         Crown Jewels|\r\n|\r\n  Presented To The Royal Museum|\r\n      By His Gracious Lord|\r\n|\r\n        DIMWIT FLATHEAD|\r\n|\r\n          Dedicated|\r\n         * 777 GUE *\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "|\r\n         Crown Jewels|\r\n|\r\n  Presented To The Royal Museum|\r\n      By His Gracious Lord|\r\n|\r\n        DIMWIT FLATHEAD|\r\n|\r\n          Dedicated|\r\n         * 777 GUE *"
              ]
            },
            {
              "Zil": "<FIXED-FONT-OFF>",
              "Form": [
                {
                  "Atom": "FIXED-FONT-OFF"
                }
              ]
            },
            {
              "Zil": "<COND (,CLUMSY-ROBBERY <TELL CR CR \"Underneath the plaque, in small lettering, is a description of a clumsy\r\nattempt to steal the jewels using a time machine from the Technological\r\nMuseum which the curators were surprised to discover was not a nonworking\r\nmodel. After the attempt, the machine was removed from the exhibit.\">) (,MYSTERY <TELL CR CR \"Underneath the plaque, in small lettering, is a description of\r\na mysterious happening during the final stages of construction of\r\nthe Museum, in which some of the crown jewels were found displaced\r\nfrom their proper positions. Fortunately, nothing was missing.\r\nThe mystery was never solved and the museum was opened despite the objections\r\nof Lord Flathead that security was too lax.\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",CLUMSY-ROBBERY",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CLUMSY-ROBBERY"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL CR CR \"Underneath the plaque, in small lettering, is a description of a clumsy\r\nattempt to steal the jewels using a time machine from the Technological\r\nMuseum which the curators were surprised to discover was not a nonworking\r\nmodel. After the attempt, the machine was removed from the exhibit.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Atom": "CR"
                      },
                      {
                        "Atom": "CR"
                      },
                      "Underneath the plaque, in small lettering, is a description of a clumsy\r\nattempt to steal the jewels using a time machine from the Technological\r\nMuseum which the curators were surprised to discover was not a nonworking\r\nmodel. After the attempt, the machine was removed from the exhibit."
                    ]
                  }
                ],
                [
                  {
                    "Zil": ",MYSTERY",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "MYSTERY"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL CR CR \"Underneath the plaque, in small lettering, is a description of\r\na mysterious happening during the final stages of construction of\r\nthe Museum, in which some of the crown jewels were found displaced\r\nfrom their proper positions. Fortunately, nothing was missing.\r\nThe mystery was never solved and the museum was opened despite the objections\r\nof Lord Flathead that security was too lax.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Atom": "CR"
                      },
                      {
                        "Atom": "CR"
                      },
                      "Underneath the plaque, in small lettering, is a description of\r\na mysterious happening during the final stages of construction of\r\nthe Museum, in which some of the crown jewels were found displaced\r\nfrom their proper positions. Fortunately, nothing was missing.\r\nThe mystery was never solved and the museum was opened despite the objections\r\nof Lord Flathead that security was too lax."
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3078",
    "Name": "WOODEN-DOOR-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? LISTEN> ,GUARDS-PRESENT> <PERFORM ,V?LISTEN ,VOICES> <RTRUE>) (<AND <VERB? KNOCK> ,GUARDS-PRESENT> <TELL \"You realize that calling attention to yourself would be fatal.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? LISTEN> ,GUARDS-PRESENT>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? LISTEN>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "LISTEN"
                    }
                  ]
                },
                {
                  "Zil": ",GUARDS-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDS-PRESENT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?LISTEN ,VOICES>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?LISTEN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?LISTEN"
                    }
                  ]
                },
                {
                  "Zil": ",VOICES",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "VOICES"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? KNOCK> ,GUARDS-PRESENT>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? KNOCK>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "KNOCK"
                    }
                  ]
                },
                {
                  "Zil": ",GUARDS-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDS-PRESENT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You realize that calling attention to yourself would be fatal.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You realize that calling attention to yourself would be fatal.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3086",
    "Name": "JEWEL-DOOR-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? KNOCK> ,GUARDS-PRESENT> <PERFORM ,V?KNOCK ,WOODEN-DOOR> <RTRUE>) (<VERB? OPEN UNLOCK> <COND (<FSET? ,JEWEL-DOOR ,OPENBIT> <TELL \"It is already open.\" CR>) (<AND <==? ,YEAR ,YEAR-BUILT> <==? ,HERE ,OLD-MUSEUM-ENTRANCE>> <TELL \"The door is locked, probably by the guards on their way out.\" CR>) (T <TELL \"The door is now open.\" CR> <FSET ,JEWEL-DOOR ,OPENBIT>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? KNOCK> ,GUARDS-PRESENT>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? KNOCK>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "KNOCK"
                    }
                  ]
                },
                {
                  "Zil": ",GUARDS-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDS-PRESENT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?KNOCK ,WOODEN-DOOR>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?KNOCK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?KNOCK"
                    }
                  ]
                },
                {
                  "Zil": ",WOODEN-DOOR",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WOODEN-DOOR"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? OPEN UNLOCK>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                },
                {
                  "Atom": "UNLOCK"
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,JEWEL-DOOR ,OPENBIT> <TELL \"It is already open.\" CR>) (<AND <==? ,YEAR ,YEAR-BUILT> <==? ,HERE ,OLD-MUSEUM-ENTRANCE>> <TELL \"The door is locked, probably by the guards on their way out.\" CR>) (T <TELL \"The door is now open.\" CR> <FSET ,JEWEL-DOOR ,OPENBIT>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,JEWEL-DOOR ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",JEWEL-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "JEWEL-DOOR"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"It is already open.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It is already open.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <==? ,YEAR ,YEAR-BUILT> <==? ,HERE ,OLD-MUSEUM-ENTRANCE>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<==? ,YEAR ,YEAR-BUILT>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",YEAR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "YEAR"
                              }
                            ]
                          },
                          {
                            "Zil": ",YEAR-BUILT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "YEAR-BUILT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,HERE ,OLD-MUSEUM-ENTRANCE>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          },
                          {
                            "Zil": ",OLD-MUSEUM-ENTRANCE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "OLD-MUSEUM-ENTRANCE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The door is locked, probably by the guards on their way out.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The door is locked, probably by the guards on their way out.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The door is now open.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The door is now open.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<FSET ,JEWEL-DOOR ,OPENBIT>",
                    "Form": [
                      {
                        "Atom": "FSET"
                      },
                      {
                        "Zil": ",JEWEL-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "JEWEL-DOOR"
                          }
                        ]
                      },
                      {
                        "Zil": ",OPENBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "OPENBIT"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3102",
    "Name": "CAGE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? OPEN> <TELL \"The cage is locked.\" CR>) (<VERB? CLOSE> <TELL \"The cage is already closed.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? OPEN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                }
              ]
            },
            {
              "Zil": "<TELL \"The cage is locked.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The cage is locked.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? CLOSE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CLOSE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The cage is already closed.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The cage is already closed.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3106",
    "Name": "VOICES-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND ,GUARDS-PRESENT <==? ,YEAR ,YEAR-BUILT>> <TELL \"The voices are muffled by the door which (fortunately for you) separates\r\nyou. They seem to be in heated debate on the topic of\r\n\"> <TELL <PICK-ONE ,BLATHER> \".\" CR>) (T <TELL \"Are you hearing things now?\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND ,GUARDS-PRESENT <==? ,YEAR ,YEAR-BUILT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ",GUARDS-PRESENT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GUARDS-PRESENT"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,YEAR ,YEAR-BUILT>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",YEAR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "YEAR"
                        }
                      ]
                    },
                    {
                      "Zil": ",YEAR-BUILT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "YEAR-BUILT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The voices are muffled by the door which (fortunately for you) separates\r\nyou. They seem to be in heated debate on the topic of\r\n\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The voices are muffled by the door which (fortunately for you) separates\r\nyou. They seem to be in heated debate on the topic of\r\n"
              ]
            },
            {
              "Zil": "<TELL <PICK-ONE ,BLATHER> \".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<PICK-ONE ,BLATHER>",
                  "Form": [
                    {
                      "Atom": "PICK-ONE"
                    },
                    {
                      "Zil": ",BLATHER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "BLATHER"
                        }
                      ]
                    }
                  ]
                },
                ".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Are you hearing things now?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Are you hearing things now?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3124",
    "Name": "MUSEUM-PIECES",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-OBJDESC> <COND (<==? ,DESC-OBJECT ,SPINNER> <RTRUE>)> <TELL \"A strange grey machine, shaped somewhat like a clothes dryer, is on one side\r\nof the room. On the other side of the hall is a powerful-looking black\r\nmachine, a tight tangle of wires, pipes, and motors.|\r\nA plaque is mounted near the door.\"> <COND (<L? ,YEAR ,YEAR-CLOSED> <TELL \" The grey machine, it turns out, is a Frobozz\r\nMagic Pressurizer, used in the coal mines of the Empire. The black machine is\r\na Frobozz Magic Room Spinner. The golden machine is referred to as a\r\nTemporizer. All are nonworking models donated by Frobozzco president John\r\nD. Flathead.\" CR>) (T <TELL \" The writing is faded, however, and cannot be\r\nmade out clearly. The two machines seem to be in bad shape, rusting in many\r\nspots.\" CR>)>) (<VERB? TAKE MOVE> <TELL \"It's massive and cannot even be moved.\" CR>) (<VERB? PUSH PUSH-TO> <TELL \"It's too heavy to be pushed.\" CR>) (<VERB? MUNG> <TELL \"It seems quite indestructible.\" CR>) (<AND <VERB? PUT> <EQUAL? ,PRSI ,SPINNER ,PRESSURIZER>> <TELL \"There's no good place to put anything there.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-OBJDESC>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-OBJDESC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-OBJDESC"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,DESC-OBJECT ,SPINNER> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,DESC-OBJECT ,SPINNER>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",DESC-OBJECT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "DESC-OBJECT"
                          }
                        ]
                      },
                      {
                        "Zil": ",SPINNER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SPINNER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \"A strange grey machine, shaped somewhat like a clothes dryer, is on one side\r\nof the room. On the other side of the hall is a powerful-looking black\r\nmachine, a tight tangle of wires, pipes, and motors.|\r\nA plaque is mounted near the door.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "A strange grey machine, shaped somewhat like a clothes dryer, is on one side\r\nof the room. On the other side of the hall is a powerful-looking black\r\nmachine, a tight tangle of wires, pipes, and motors.|\r\nA plaque is mounted near the door."
              ]
            },
            {
              "Zil": "<COND (<L? ,YEAR ,YEAR-CLOSED> <TELL \" The grey machine, it turns out, is a Frobozz\r\nMagic Pressurizer, used in the coal mines of the Empire. The black machine is\r\na Frobozz Magic Room Spinner. The golden machine is referred to as a\r\nTemporizer. All are nonworking models donated by Frobozzco president John\r\nD. Flathead.\" CR>) (T <TELL \" The writing is faded, however, and cannot be\r\nmade out clearly. The two machines seem to be in bad shape, rusting in many\r\nspots.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<L? ,YEAR ,YEAR-CLOSED>",
                    "Form": [
                      {
                        "Atom": "L?"
                      },
                      {
                        "Zil": ",YEAR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "YEAR"
                          }
                        ]
                      },
                      {
                        "Zil": ",YEAR-CLOSED",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "YEAR-CLOSED"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" The grey machine, it turns out, is a Frobozz\r\nMagic Pressurizer, used in the coal mines of the Empire. The black machine is\r\na Frobozz Magic Room Spinner. The golden machine is referred to as a\r\nTemporizer. All are nonworking models donated by Frobozzco president John\r\nD. Flathead.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " The grey machine, it turns out, is a Frobozz\r\nMagic Pressurizer, used in the coal mines of the Empire. The black machine is\r\na Frobozz Magic Room Spinner. The golden machine is referred to as a\r\nTemporizer. All are nonworking models donated by Frobozzco president John\r\nD. Flathead.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \" The writing is faded, however, and cannot be\r\nmade out clearly. The two machines seem to be in bad shape, rusting in many\r\nspots.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " The writing is faded, however, and cannot be\r\nmade out clearly. The two machines seem to be in bad shape, rusting in many\r\nspots.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? TAKE MOVE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TAKE"
                },
                {
                  "Atom": "MOVE"
                }
              ]
            },
            {
              "Zil": "<TELL \"It's massive and cannot even be moved.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's massive and cannot even be moved.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? PUSH PUSH-TO>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "PUSH"
                },
                {
                  "Atom": "PUSH-TO"
                }
              ]
            },
            {
              "Zil": "<TELL \"It's too heavy to be pushed.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's too heavy to be pushed.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? MUNG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "MUNG"
                }
              ]
            },
            {
              "Zil": "<TELL \"It seems quite indestructible.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It seems quite indestructible.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? PUT> <EQUAL? ,PRSI ,SPINNER ,PRESSURIZER>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT"
                    }
                  ]
                },
                {
                  "Zil": "<EQUAL? ,PRSI ,SPINNER ,PRESSURIZER>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",SPINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SPINNER"
                        }
                      ]
                    },
                    {
                      "Zil": ",PRESSURIZER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRESSURIZER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"There's no good place to put anything there.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There's no good place to put anything there.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3154",
    "Name": "TECH-PLAQUE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? TAKE> <TELL \"It's bolted to the wall.\" CR>) (<VERB? EXAMINE READ> <COND (<L? ,YEAR ,YEAR-CLOSED> <TELL \"The plaque merely identifies the machines and names their donor. They are\r\nnonworking models of existing state-of-the-art machinery.\" CR>) (T <TELL \"The words cannot be made out.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? TAKE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TAKE"
                }
              ]
            },
            {
              "Zil": "<TELL \"It's bolted to the wall.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's bolted to the wall.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE READ>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                },
                {
                  "Atom": "READ"
                }
              ]
            },
            {
              "Zil": "<COND (<L? ,YEAR ,YEAR-CLOSED> <TELL \"The plaque merely identifies the machines and names their donor. They are\r\nnonworking models of existing state-of-the-art machinery.\" CR>) (T <TELL \"The words cannot be made out.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<L? ,YEAR ,YEAR-CLOSED>",
                    "Form": [
                      {
                        "Atom": "L?"
                      },
                      {
                        "Zil": ",YEAR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "YEAR"
                          }
                        ]
                      },
                      {
                        "Zil": ",YEAR-CLOSED",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "YEAR-CLOSED"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The plaque merely identifies the machines and names their donor. They are\r\nnonworking models of existing state-of-the-art machinery.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The plaque merely identifies the machines and names their donor. They are\r\nnonworking models of existing state-of-the-art machinery.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The words cannot be made out.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The words cannot be made out.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3164",
    "Name": "PEDESTAL-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE LOOK-ON> <COND (<FIRST? ,PEDESTAL> <TELL \"The Royal Jewels are on the pedestal.\" CR>)>) (<AND <VERB? PUT PUT-ON TAKE> <NOT <FSET? ,CAGE ,INVISIBLE>>> <TELL \"You can't reach it through the cage.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE LOOK-ON>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                },
                {
                  "Atom": "LOOK-ON"
                }
              ]
            },
            {
              "Zil": "<COND (<FIRST? ,PEDESTAL> <TELL \"The Royal Jewels are on the pedestal.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FIRST? ,PEDESTAL>",
                    "Form": [
                      {
                        "Atom": "FIRST?"
                      },
                      {
                        "Zil": ",PEDESTAL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PEDESTAL"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The Royal Jewels are on the pedestal.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The Royal Jewels are on the pedestal.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? PUT PUT-ON TAKE> <NOT <FSET? ,CAGE ,INVISIBLE>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT PUT-ON TAKE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Atom": "PUT-ON"
                    },
                    {
                      "Atom": "TAKE"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <FSET? ,CAGE ,INVISIBLE>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? ,CAGE ,INVISIBLE>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ",CAGE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CAGE"
                            }
                          ]
                        },
                        {
                          "Zil": ",INVISIBLE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "INVISIBLE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't reach it through the cage.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't reach it through the cage.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3389",
    "Name": "PICK-DIRECTION",
    "ArgSpec": "(RM \"AUX\" (NXT 0) (CNT 0) (OFFS 0))",
    "Body": [
      {
        "Zil": "<REPEAT () <COND (<==? <SET NXT <NEXTP .RM .NXT>> 0> <RETURN>) (<NOT <L? .NXT ,LOW-DIRECTION>> <COND (<NOT <EQUAL? .NXT ,P?UP ,P?DOWN>> <SET OFFS <+ .OFFS 1>> <PUT ,DIR-TBL .OFFS .NXT> <SET CNT <+ .CNT 1>>)>)>>",
        "Form": [
          {
            "Atom": "REPEAT"
          },
          [],
          {
            "Zil": "<COND (<==? <SET NXT <NEXTP .RM .NXT>> 0> <RETURN>) (<NOT <L? .NXT ,LOW-DIRECTION>> <COND (<NOT <EQUAL? .NXT ,P?UP ,P?DOWN>> <SET OFFS <+ .OFFS 1>> <PUT ,DIR-TBL .OFFS .NXT> <SET CNT <+ .CNT 1>>)>)>",
            "Form": [
              {
                "Atom": "COND"
              },
              [
                {
                  "Zil": "<==? <SET NXT <NEXTP .RM .NXT>> 0>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": "<SET NXT <NEXTP .RM .NXT>>",
                      "Form": [
                        {
                          "Atom": "SET"
                        },
                        {
                          "Atom": "NXT"
                        },
                        {
                          "Zil": "<NEXTP .RM .NXT>",
                          "Form": [
                            {
                              "Atom": "NEXTP"
                            },
                            {
                              "Zil": ".RM",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "RM"
                                }
                              ]
                            },
                            {
                              "Zil": ".NXT",
                              "Form": [
                                {
                                  "Atom": "LVAL"
                                },
                                {
                                  "Atom": "NXT"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    0
                  ]
                },
                {
                  "Zil": "<RETURN>",
                  "Form": [
                    {
                      "Atom": "RETURN"
                    }
                  ]
                }
              ],
              [
                {
                  "Zil": "<NOT <L? .NXT ,LOW-DIRECTION>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<L? .NXT ,LOW-DIRECTION>",
                      "Form": [
                        {
                          "Atom": "L?"
                        },
                        {
                          "Zil": ".NXT",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "NXT"
                            }
                          ]
                        },
                        {
                          "Zil": ",LOW-DIRECTION",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "LOW-DIRECTION"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<NOT <EQUAL? .NXT ,P?UP ,P?DOWN>> <SET OFFS <+ .OFFS 1>> <PUT ,DIR-TBL .OFFS .NXT> <SET CNT <+ .CNT 1>>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT <EQUAL? .NXT ,P?UP ,P?DOWN>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<EQUAL? .NXT ,P?UP ,P?DOWN>",
                            "Form": [
                              {
                                "Atom": "EQUAL?"
                              },
                              {
                                "Zil": ".NXT",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "NXT"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P?UP",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P?UP"
                                  }
                                ]
                              },
                              {
                                "Zil": ",P?DOWN",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "P?DOWN"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET OFFS <+ .OFFS 1>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "OFFS"
                          },
                          {
                            "Zil": "<+ .OFFS 1>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".OFFS",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "OFFS"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<PUT ,DIR-TBL .OFFS .NXT>",
                        "Form": [
                          {
                            "Atom": "PUT"
                          },
                          {
                            "Zil": ",DIR-TBL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "DIR-TBL"
                              }
                            ]
                          },
                          {
                            "Zil": ".OFFS",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "OFFS"
                              }
                            ]
                          },
                          {
                            "Zil": ".NXT",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "NXT"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<SET CNT <+ .CNT 1>>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "CNT"
                          },
                          {
                            "Zil": "<+ .CNT 1>",
                            "Form": [
                              {
                                "Atom": "+"
                              },
                              {
                                "Zil": ".CNT",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "CNT"
                                  }
                                ]
                              },
                              1
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            ]
          }
        ]
      },
      {
        "Zil": "<GET ,DIR-TBL <RANDOM .CNT>>",
        "Form": [
          {
            "Atom": "GET"
          },
          {
            "Zil": ",DIR-TBL",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "DIR-TBL"
              }
            ]
          },
          {
            "Zil": "<RANDOM .CNT>",
            "Form": [
              {
                "Atom": "RANDOM"
              },
              {
                "Zil": ".CNT",
                "Form": [
                  {
                    "Atom": "LVAL"
                  },
                  {
                    "Atom": "CNT"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3400",
    "Name": "SHADOW-F",
    "ArgSpec": "(\"OPT\" (RARG <>))",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-OBJDESC> <COND (<NOT ,BLOCKED-DIR> <SETG BLOCKED-DIR <PICK-DIRECTION ,HERE>>)> <TELL \"A cloaked and hooded person, carrying a sword not unlike your own,\"> <COND (<G? ,S-STRENGTH 3> <TELL \"\r\nis standing blocking the way to the \"> <TELL <LKP ,BLOCKED-DIR ,DIRS> \".\" CR>) (T <TELL \"\r\nis here.\" CR>)> <TELL \"The hooded figure\" <GET ,SHADOW-DIAG ,S-STRENGTH> CR>) (<AND <VERB? GIVE> <==? ,PRSI ,SHADOW>> <TELL \"The hooded figure isn't interested in your gifts.\" CR>) (<HELLO? ,SHADOW> <TELL \"The hooded figure does not respond to your words.\" CR>) (<AND <VERB? ATTACK> <==? ,PRSI ,SWORD>> <COND (<NOT ,SHADOW-POINT-2> <SETG SCORE <+ ,SCORE 1>> <SETG SHADOW-POINT-2 T>)> <SHADOW-ATTACK>) (<VERB? ATTACK> <TELL \"The hooded figure ignores your feeble attack.\" CR> <SETG ATTACK-MODE T> <ENABLE <QUEUE I-CURE 10>> <ENABLE <QUEUE I-SHADOW-REPLY -1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-OBJDESC>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-OBJDESC",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-OBJDESC"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT ,BLOCKED-DIR> <SETG BLOCKED-DIR <PICK-DIRECTION ,HERE>>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,BLOCKED-DIR>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",BLOCKED-DIR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "BLOCKED-DIR"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG BLOCKED-DIR <PICK-DIRECTION ,HERE>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "BLOCKED-DIR"
                      },
                      {
                        "Zil": "<PICK-DIRECTION ,HERE>",
                        "Form": [
                          {
                            "Atom": "PICK-DIRECTION"
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \"A cloaked and hooded person, carrying a sword not unlike your own,\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "A cloaked and hooded person, carrying a sword not unlike your own,"
              ]
            },
            {
              "Zil": "<COND (<G? ,S-STRENGTH 3> <TELL \"\r\nis standing blocking the way to the \"> <TELL <LKP ,BLOCKED-DIR ,DIRS> \".\" CR>) (T <TELL \"\r\nis here.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<G? ,S-STRENGTH 3>",
                    "Form": [
                      {
                        "Atom": "G?"
                      },
                      {
                        "Zil": ",S-STRENGTH",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "S-STRENGTH"
                          }
                        ]
                      },
                      3
                    ]
                  },
                  {
                    "Zil": "<TELL \"\r\nis standing blocking the way to the \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "\r\nis standing blocking the way to the "
                    ]
                  },
                  {
                    "Zil": "<TELL <LKP ,BLOCKED-DIR ,DIRS> \".\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<LKP ,BLOCKED-DIR ,DIRS>",
                        "Form": [
                          {
                            "Atom": "LKP"
                          },
                          {
                            "Zil": ",BLOCKED-DIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "BLOCKED-DIR"
                              }
                            ]
                          },
                          {
                            "Zil": ",DIRS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "DIRS"
                              }
                            ]
                          }
                        ]
                      },
                      ".",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"\r\nis here.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "\r\nis here.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<TELL \"The hooded figure\" <GET ,SHADOW-DIAG ,S-STRENGTH> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The hooded figure",
                {
                  "Zil": "<GET ,SHADOW-DIAG ,S-STRENGTH>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",SHADOW-DIAG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SHADOW-DIAG"
                        }
                      ]
                    },
                    {
                      "Zil": ",S-STRENGTH",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "S-STRENGTH"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? GIVE> <==? ,PRSI ,SHADOW>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? GIVE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "GIVE"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,SHADOW>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",SHADOW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SHADOW"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The hooded figure isn't interested in your gifts.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The hooded figure isn't interested in your gifts.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<HELLO? ,SHADOW>",
              "Form": [
                {
                  "Atom": "HELLO?"
                },
                {
                  "Zil": ",SHADOW",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SHADOW"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The hooded figure does not respond to your words.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The hooded figure does not respond to your words.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? ATTACK> <==? ,PRSI ,SWORD>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? ATTACK>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "ATTACK"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,SWORD>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",SWORD",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SWORD"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT ,SHADOW-POINT-2> <SETG SCORE <+ ,SCORE 1>> <SETG SHADOW-POINT-2 T>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,SHADOW-POINT-2>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",SHADOW-POINT-2",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SHADOW-POINT-2"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG SCORE <+ ,SCORE 1>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "SCORE"
                      },
                      {
                        "Zil": "<+ ,SCORE 1>",
                        "Form": [
                          {
                            "Atom": "+"
                          },
                          {
                            "Zil": ",SCORE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SCORE"
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG SHADOW-POINT-2 T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "SHADOW-POINT-2"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SHADOW-ATTACK>",
              "Form": [
                {
                  "Atom": "SHADOW-ATTACK"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? ATTACK>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "ATTACK"
                }
              ]
            },
            {
              "Zil": "<TELL \"The hooded figure ignores your feeble attack.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The hooded figure ignores your feeble attack.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG ATTACK-MODE T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "ATTACK-MODE"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-CURE 10>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-CURE 10>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-CURE"
                    },
                    10
                  ]
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-SHADOW-REPLY -1>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-SHADOW-REPLY -1>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-SHADOW-REPLY"
                    },
                    -1
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3446",
    "Name": "I-CURE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT <==? ,P-STRENGTH 5>> <SETG P-STRENGTH <+ ,P-STRENGTH 1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <==? ,P-STRENGTH 5>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<==? ,P-STRENGTH 5>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",P-STRENGTH",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-STRENGTH"
                        }
                      ]
                    },
                    5
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG P-STRENGTH <+ ,P-STRENGTH 1>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "P-STRENGTH"
                },
                {
                  "Zil": "<+ ,P-STRENGTH 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ",P-STRENGTH",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "P-STRENGTH"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT <==? ,S-STRENGTH 5>> <SETG S-STRENGTH <+ ,S-STRENGTH 1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <==? ,S-STRENGTH 5>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<==? ,S-STRENGTH 5>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",S-STRENGTH",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "S-STRENGTH"
                        }
                      ]
                    },
                    5
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG S-STRENGTH <+ ,S-STRENGTH 1>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "S-STRENGTH"
                },
                {
                  "Zil": "<+ ,S-STRENGTH 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ",S-STRENGTH",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "S-STRENGTH"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT <==? <+ ,P-STRENGTH ,S-STRENGTH> 10>> <QUEUE I-CURE 10>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <==? <+ ,P-STRENGTH ,S-STRENGTH> 10>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<==? <+ ,P-STRENGTH ,S-STRENGTH> 10>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": "<+ ,P-STRENGTH ,S-STRENGTH>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ",P-STRENGTH",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-STRENGTH"
                            }
                          ]
                        },
                        {
                          "Zil": ",S-STRENGTH",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "S-STRENGTH"
                            }
                          ]
                        }
                      ]
                    },
                    10
                  ]
                }
              ]
            },
            {
              "Zil": "<QUEUE I-CURE 10>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-CURE"
                },
                10
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<RFALSE>",
        "Form": [
          {
            "Atom": "RFALSE"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3455",
    "Name": "SHADOW-ATTACK",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT ,ATTACK-MODE> <ENABLE <QUEUE I-CURE 10>> <SETG ATTACK-MODE T> <ENABLE <QUEUE I-SHADOW-REPLY -1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,ATTACK-MODE>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",ATTACK-MODE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ATTACK-MODE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-CURE 10>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-CURE 10>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-CURE"
                    },
                    10
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG ATTACK-MODE T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "ATTACK-MODE"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-SHADOW-REPLY -1>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-SHADOW-REPLY -1>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-SHADOW-REPLY"
                    },
                    -1
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<PROB <+ <* ,P-STRENGTH 10> 10>> <COND (<PROB 85> <SETG S-STRENGTH <- ,S-STRENGTH 1>> <COND (<0? ,S-STRENGTH> <SHADOW-DIES> <RTRUE>)> <TELL <PICK-ONE ,P-HITS> CR> <TELL \"The figure\" <GET ,SHADOW-DIAG ,S-STRENGTH> CR>) (T <SETG S-STRENGTH <- ,S-STRENGTH 2>> <COND (<0? ,S-STRENGTH> <SETG S-STRENGTH 1>) (<L? ,S-STRENGTH 1> <SHADOW-DIES> <RTRUE>)> <TELL \"A sharp thrust and the hooded figure is badly wounded!\" CR> <TELL \"The figure\" <GET ,SHADOW-DIAG ,S-STRENGTH> CR>)>) (T <COND (<L? ,S-STRENGTH 2> <TELL \"Your opponent blocks your attack with its sword.\" CR>) (T <TELL <PICK-ONE ,P-MISSES> CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<PROB <+ <* ,P-STRENGTH 10> 10>>",
              "Form": [
                {
                  "Atom": "PROB"
                },
                {
                  "Zil": "<+ <* ,P-STRENGTH 10> 10>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": "<* ,P-STRENGTH 10>",
                      "Form": [
                        {
                          "Atom": "*"
                        },
                        {
                          "Zil": ",P-STRENGTH",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "P-STRENGTH"
                            }
                          ]
                        },
                        10
                      ]
                    },
                    10
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<PROB 85> <SETG S-STRENGTH <- ,S-STRENGTH 1>> <COND (<0? ,S-STRENGTH> <SHADOW-DIES> <RTRUE>)> <TELL <PICK-ONE ,P-HITS> CR> <TELL \"The figure\" <GET ,SHADOW-DIAG ,S-STRENGTH> CR>) (T <SETG S-STRENGTH <- ,S-STRENGTH 2>> <COND (<0? ,S-STRENGTH> <SETG S-STRENGTH 1>) (<L? ,S-STRENGTH 1> <SHADOW-DIES> <RTRUE>)> <TELL \"A sharp thrust and the hooded figure is badly wounded!\" CR> <TELL \"The figure\" <GET ,SHADOW-DIAG ,S-STRENGTH> CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<PROB 85>",
                    "Form": [
                      {
                        "Atom": "PROB"
                      },
                      85
                    ]
                  },
                  {
                    "Zil": "<SETG S-STRENGTH <- ,S-STRENGTH 1>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "S-STRENGTH"
                      },
                      {
                        "Zil": "<- ,S-STRENGTH 1>",
                        "Form": [
                          {
                            "Atom": "-"
                          },
                          {
                            "Zil": ",S-STRENGTH",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "S-STRENGTH"
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<0? ,S-STRENGTH> <SHADOW-DIES> <RTRUE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<0? ,S-STRENGTH>",
                          "Form": [
                            {
                              "Atom": "0?"
                            },
                            {
                              "Zil": ",S-STRENGTH",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "S-STRENGTH"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SHADOW-DIES>",
                          "Form": [
                            {
                              "Atom": "SHADOW-DIES"
                            }
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<TELL <PICK-ONE ,P-HITS> CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<PICK-ONE ,P-HITS>",
                        "Form": [
                          {
                            "Atom": "PICK-ONE"
                          },
                          {
                            "Zil": ",P-HITS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-HITS"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The figure\" <GET ,SHADOW-DIAG ,S-STRENGTH> CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The figure",
                      {
                        "Zil": "<GET ,SHADOW-DIAG ,S-STRENGTH>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",SHADOW-DIAG",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SHADOW-DIAG"
                              }
                            ]
                          },
                          {
                            "Zil": ",S-STRENGTH",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "S-STRENGTH"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<SETG S-STRENGTH <- ,S-STRENGTH 2>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "S-STRENGTH"
                      },
                      {
                        "Zil": "<- ,S-STRENGTH 2>",
                        "Form": [
                          {
                            "Atom": "-"
                          },
                          {
                            "Zil": ",S-STRENGTH",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "S-STRENGTH"
                              }
                            ]
                          },
                          2
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<0? ,S-STRENGTH> <SETG S-STRENGTH 1>) (<L? ,S-STRENGTH 1> <SHADOW-DIES> <RTRUE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<0? ,S-STRENGTH>",
                          "Form": [
                            {
                              "Atom": "0?"
                            },
                            {
                              "Zil": ",S-STRENGTH",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "S-STRENGTH"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG S-STRENGTH 1>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "S-STRENGTH"
                            },
                            1
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<L? ,S-STRENGTH 1>",
                          "Form": [
                            {
                              "Atom": "L?"
                            },
                            {
                              "Zil": ",S-STRENGTH",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "S-STRENGTH"
                                }
                              ]
                            },
                            1
                          ]
                        },
                        {
                          "Zil": "<SHADOW-DIES>",
                          "Form": [
                            {
                              "Atom": "SHADOW-DIES"
                            }
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<TELL \"A sharp thrust and the hooded figure is badly wounded!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "A sharp thrust and the hooded figure is badly wounded!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The figure\" <GET ,SHADOW-DIAG ,S-STRENGTH> CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The figure",
                      {
                        "Zil": "<GET ,SHADOW-DIAG ,S-STRENGTH>",
                        "Form": [
                          {
                            "Atom": "GET"
                          },
                          {
                            "Zil": ",SHADOW-DIAG",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SHADOW-DIAG"
                              }
                            ]
                          },
                          {
                            "Zil": ",S-STRENGTH",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "S-STRENGTH"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<COND (<L? ,S-STRENGTH 2> <TELL \"Your opponent blocks your attack with its sword.\" CR>) (T <TELL <PICK-ONE ,P-MISSES> CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<L? ,S-STRENGTH 2>",
                    "Form": [
                      {
                        "Atom": "L?"
                      },
                      {
                        "Zil": ",S-STRENGTH",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "S-STRENGTH"
                          }
                        ]
                      },
                      2
                    ]
                  },
                  {
                    "Zil": "<TELL \"Your opponent blocks your attack with its sword.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Your opponent blocks your attack with its sword.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL <PICK-ONE ,P-MISSES> CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<PICK-ONE ,P-MISSES>",
                        "Form": [
                          {
                            "Atom": "PICK-ONE"
                          },
                          {
                            "Zil": ",P-MISSES",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "P-MISSES"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3501",
    "Name": "I-SHADOW-REPLY",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<OR <NOT ,ATTACK-MODE> <NOT <IN? ,SHADOW ,HERE>>> <QUEUE I-SHADOW-REPLY 0> <SETG ATTACK-MODE <>> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <NOT ,ATTACK-MODE> <NOT <IN? ,SHADOW ,HERE>>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<NOT ,ATTACK-MODE>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",ATTACK-MODE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ATTACK-MODE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <IN? ,SHADOW ,HERE>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<IN? ,SHADOW ,HERE>",
                      "Form": [
                        {
                          "Atom": "IN?"
                        },
                        {
                          "Zil": ",SHADOW",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "SHADOW"
                            }
                          ]
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<QUEUE I-SHADOW-REPLY 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-SHADOW-REPLY"
                },
                0
              ]
            },
            {
              "Zil": "<SETG ATTACK-MODE <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "ATTACK-MODE"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT <IN? ,SWORD ,WINNER>> <MOVE ,SWORD ,WINNER> <TELL \"Your sword, glowing wildly, leaps into your hand!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <IN? ,SWORD ,WINNER>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<IN? ,SWORD ,WINNER>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",SWORD",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SWORD"
                        }
                      ]
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,SWORD ,WINNER>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",SWORD",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SWORD"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Your sword, glowing wildly, leaps into your hand!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Your sword, glowing wildly, leaps into your hand!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<AND <PROB <+ <* ,S-STRENGTH 10> 10>> <G? ,S-STRENGTH 1>> <COND (<PROB 90> <COND (<L? <SETG P-STRENGTH <- ,P-STRENGTH 1>> 1> <SETG P-STRENGTH 1> <TELL \"The hooded figure swings its sword and sends yours flying to the ground.\r\nAlthough you are defenseless, the figure reaches for your sword and hands it\r\nback to you, nodding grimly.\" CR>) (T <TELL <PICK-ONE ,S-HITS> CR>)>) (T <COND (<L? <SETG P-STRENGTH <- ,P-STRENGTH 2>> 1> <JIGS-UP \"In your wounded state, you cannot defend yourself against your still-quick\r\nopponent. Slowly and carefully, the figure starts to remove its hood as you\r\nfall to the ground, dead.\">) (T <TELL \"A brilliant feint puts you off guard, and the hooded figure slips its\r\nsword between your ribs. You are hurt very badly.\" CR>)>)>) (<L? ,S-STRENGTH 3> <TELL \"The hooded figure attempts a thrust, but its weakened state prevents\r\nhitting you.\" CR>) (T <TELL <PICK-ONE ,S-MISSES> CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <PROB <+ <* ,S-STRENGTH 10> 10>> <G? ,S-STRENGTH 1>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<PROB <+ <* ,S-STRENGTH 10> 10>>",
                  "Form": [
                    {
                      "Atom": "PROB"
                    },
                    {
                      "Zil": "<+ <* ,S-STRENGTH 10> 10>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": "<* ,S-STRENGTH 10>",
                          "Form": [
                            {
                              "Atom": "*"
                            },
                            {
                              "Zil": ",S-STRENGTH",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "S-STRENGTH"
                                }
                              ]
                            },
                            10
                          ]
                        },
                        10
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<G? ,S-STRENGTH 1>",
                  "Form": [
                    {
                      "Atom": "G?"
                    },
                    {
                      "Zil": ",S-STRENGTH",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "S-STRENGTH"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<PROB 90> <COND (<L? <SETG P-STRENGTH <- ,P-STRENGTH 1>> 1> <SETG P-STRENGTH 1> <TELL \"The hooded figure swings its sword and sends yours flying to the ground.\r\nAlthough you are defenseless, the figure reaches for your sword and hands it\r\nback to you, nodding grimly.\" CR>) (T <TELL <PICK-ONE ,S-HITS> CR>)>) (T <COND (<L? <SETG P-STRENGTH <- ,P-STRENGTH 2>> 1> <JIGS-UP \"In your wounded state, you cannot defend yourself against your still-quick\r\nopponent. Slowly and carefully, the figure starts to remove its hood as you\r\nfall to the ground, dead.\">) (T <TELL \"A brilliant feint puts you off guard, and the hooded figure slips its\r\nsword between your ribs. You are hurt very badly.\" CR>)>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<PROB 90>",
                    "Form": [
                      {
                        "Atom": "PROB"
                      },
                      90
                    ]
                  },
                  {
                    "Zil": "<COND (<L? <SETG P-STRENGTH <- ,P-STRENGTH 1>> 1> <SETG P-STRENGTH 1> <TELL \"The hooded figure swings its sword and sends yours flying to the ground.\r\nAlthough you are defenseless, the figure reaches for your sword and hands it\r\nback to you, nodding grimly.\" CR>) (T <TELL <PICK-ONE ,S-HITS> CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<L? <SETG P-STRENGTH <- ,P-STRENGTH 1>> 1>",
                          "Form": [
                            {
                              "Atom": "L?"
                            },
                            {
                              "Zil": "<SETG P-STRENGTH <- ,P-STRENGTH 1>>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-STRENGTH"
                                },
                                {
                                  "Zil": "<- ,P-STRENGTH 1>",
                                  "Form": [
                                    {
                                      "Atom": "-"
                                    },
                                    {
                                      "Zil": ",P-STRENGTH",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-STRENGTH"
                                        }
                                      ]
                                    },
                                    1
                                  ]
                                }
                              ]
                            },
                            1
                          ]
                        },
                        {
                          "Zil": "<SETG P-STRENGTH 1>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "P-STRENGTH"
                            },
                            1
                          ]
                        },
                        {
                          "Zil": "<TELL \"The hooded figure swings its sword and sends yours flying to the ground.\r\nAlthough you are defenseless, the figure reaches for your sword and hands it\r\nback to you, nodding grimly.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The hooded figure swings its sword and sends yours flying to the ground.\r\nAlthough you are defenseless, the figure reaches for your sword and hands it\r\nback to you, nodding grimly.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL <PICK-ONE ,S-HITS> CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            {
                              "Zil": "<PICK-ONE ,S-HITS>",
                              "Form": [
                                {
                                  "Atom": "PICK-ONE"
                                },
                                {
                                  "Zil": ",S-HITS",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "S-HITS"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<COND (<L? <SETG P-STRENGTH <- ,P-STRENGTH 2>> 1> <JIGS-UP \"In your wounded state, you cannot defend yourself against your still-quick\r\nopponent. Slowly and carefully, the figure starts to remove its hood as you\r\nfall to the ground, dead.\">) (T <TELL \"A brilliant feint puts you off guard, and the hooded figure slips its\r\nsword between your ribs. You are hurt very badly.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<L? <SETG P-STRENGTH <- ,P-STRENGTH 2>> 1>",
                          "Form": [
                            {
                              "Atom": "L?"
                            },
                            {
                              "Zil": "<SETG P-STRENGTH <- ,P-STRENGTH 2>>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "P-STRENGTH"
                                },
                                {
                                  "Zil": "<- ,P-STRENGTH 2>",
                                  "Form": [
                                    {
                                      "Atom": "-"
                                    },
                                    {
                                      "Zil": ",P-STRENGTH",
                                      "Form": [
                                        {
                                          "Atom": "GVAL"
                                        },
                                        {
                                          "Atom": "P-STRENGTH"
                                        }
                                      ]
                                    },
                                    2
                                  ]
                                }
                              ]
                            },
                            1
                          ]
                        },
                        {
                          "Zil": "<JIGS-UP \"In your wounded state, you cannot defend yourself against your still-quick\r\nopponent. Slowly and carefully, the figure starts to remove its hood as you\r\nfall to the ground, dead.\">",
                          "Form": [
                            {
                              "Atom": "JIGS-UP"
                            },
                            "In your wounded state, you cannot defend yourself against your still-quick\r\nopponent. Slowly and carefully, the figure starts to remove its hood as you\r\nfall to the ground, dead."
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"A brilliant feint puts you off guard, and the hooded figure slips its\r\nsword between your ribs. You are hurt very badly.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "A brilliant feint puts you off guard, and the hooded figure slips its\r\nsword between your ribs. You are hurt very badly.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<L? ,S-STRENGTH 3>",
              "Form": [
                {
                  "Atom": "L?"
                },
                {
                  "Zil": ",S-STRENGTH",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "S-STRENGTH"
                    }
                  ]
                },
                3
              ]
            },
            {
              "Zil": "<TELL \"The hooded figure attempts a thrust, but its weakened state prevents\r\nhitting you.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The hooded figure attempts a thrust, but its weakened state prevents\r\nhitting you.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL <PICK-ONE ,S-MISSES> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<PICK-ONE ,S-MISSES>",
                  "Form": [
                    {
                      "Atom": "PICK-ONE"
                    },
                    {
                      "Zil": ",S-MISSES",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "S-MISSES"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3544",
    "Name": "SHADOW-DIES",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"The hooded figure, fatally wounded, slumps to the ground. It gazes up at\r\nyou once, and you catch a brief glimpse of deep and sorrowful eyes. Before\r\nyou can react, the figure vanishes in a cloud of fetid vapor.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "The hooded figure, fatally wounded, slumps to the ground. It gazes up at\r\nyou once, and you catch a brief glimpse of deep and sorrowful eyes. Before\r\nyou can react, the figure vanishes in a cloud of fetid vapor.",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<REMOVE ,SHADOW>",
        "Form": [
          {
            "Atom": "REMOVE"
          },
          {
            "Zil": ",SHADOW",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "SHADOW"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG SHADOW-GONE T>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "SHADOW-GONE"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<SETG BLOCKED-DIR <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "BLOCKED-DIR"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3553",
    "Name": "HOOD-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? LOOK-UNDER> <IN? ,HOOD ,SHADOW>> <TELL \"The figure's hood casts a dark shadow over its face. There is no way from\r\nwhere you stand to look beneath it.\" CR>) (<AND <VERB? TAKE PUT> <IN? ,HOOD ,SHADOW>> <COND (<==? ,S-STRENGTH 1> <TELL \"You slowly remove the hood from your badly wounded opponent and recoil\r\nin horror at the sight of your own face, weary and wounded. A faint\r\nsmile comes to the lips and then the face starts to change, very slowly,\r\ninto that of an old, wizened person. The image fades and with it the body\r\nof your hooded opponent. The cloak remains on the ground.\" CR> <REMOVE ,SHADOW> <SETG SHADOW-GONE T> <MOVE ,HOOD ,WINNER> <FCLEAR ,HOOD ,NDESCBIT> <MOVE ,CLOAK ,HERE> <FCLEAR ,CLOAK ,NDESCBIT>) (<==? ,S-STRENGTH 2> <TELL \"The hooded figure, though recovering from wounds, is strong enough to\r\nforce you back.\" CR>) (T <TELL \"You cannot get close enough to the hooded figure to remove the hood.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? LOOK-UNDER> <IN? ,HOOD ,SHADOW>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? LOOK-UNDER>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "LOOK-UNDER"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,HOOD ,SHADOW>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",HOOD",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HOOD"
                        }
                      ]
                    },
                    {
                      "Zil": ",SHADOW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SHADOW"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The figure's hood casts a dark shadow over its face. There is no way from\r\nwhere you stand to look beneath it.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The figure's hood casts a dark shadow over its face. There is no way from\r\nwhere you stand to look beneath it.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? TAKE PUT> <IN? ,HOOD ,SHADOW>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? TAKE PUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "TAKE"
                    },
                    {
                      "Atom": "PUT"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,HOOD ,SHADOW>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",HOOD",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HOOD"
                        }
                      ]
                    },
                    {
                      "Zil": ",SHADOW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SHADOW"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,S-STRENGTH 1> <TELL \"You slowly remove the hood from your badly wounded opponent and recoil\r\nin horror at the sight of your own face, weary and wounded. A faint\r\nsmile comes to the lips and then the face starts to change, very slowly,\r\ninto that of an old, wizened person. The image fades and with it the body\r\nof your hooded opponent. The cloak remains on the ground.\" CR> <REMOVE ,SHADOW> <SETG SHADOW-GONE T> <MOVE ,HOOD ,WINNER> <FCLEAR ,HOOD ,NDESCBIT> <MOVE ,CLOAK ,HERE> <FCLEAR ,CLOAK ,NDESCBIT>) (<==? ,S-STRENGTH 2> <TELL \"The hooded figure, though recovering from wounds, is strong enough to\r\nforce you back.\" CR>) (T <TELL \"You cannot get close enough to the hooded figure to remove the hood.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,S-STRENGTH 1>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",S-STRENGTH",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "S-STRENGTH"
                          }
                        ]
                      },
                      1
                    ]
                  },
                  {
                    "Zil": "<TELL \"You slowly remove the hood from your badly wounded opponent and recoil\r\nin horror at the sight of your own face, weary and wounded. A faint\r\nsmile comes to the lips and then the face starts to change, very slowly,\r\ninto that of an old, wizened person. The image fades and with it the body\r\nof your hooded opponent. The cloak remains on the ground.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You slowly remove the hood from your badly wounded opponent and recoil\r\nin horror at the sight of your own face, weary and wounded. A faint\r\nsmile comes to the lips and then the face starts to change, very slowly,\r\ninto that of an old, wizened person. The image fades and with it the body\r\nof your hooded opponent. The cloak remains on the ground.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<REMOVE ,SHADOW>",
                    "Form": [
                      {
                        "Atom": "REMOVE"
                      },
                      {
                        "Zil": ",SHADOW",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SHADOW"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG SHADOW-GONE T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "SHADOW-GONE"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<MOVE ,HOOD ,WINNER>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ",HOOD",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HOOD"
                          }
                        ]
                      },
                      {
                        "Zil": ",WINNER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WINNER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,HOOD ,NDESCBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",HOOD",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HOOD"
                          }
                        ]
                      },
                      {
                        "Zil": ",NDESCBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "NDESCBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<MOVE ,CLOAK ,HERE>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ",CLOAK",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CLOAK"
                          }
                        ]
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,CLOAK ,NDESCBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",CLOAK",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CLOAK"
                          }
                        ]
                      },
                      {
                        "Zil": ",NDESCBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "NDESCBIT"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<==? ,S-STRENGTH 2>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",S-STRENGTH",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "S-STRENGTH"
                          }
                        ]
                      },
                      2
                    ]
                  },
                  {
                    "Zil": "<TELL \"The hooded figure, though recovering from wounds, is strong enough to\r\nforce you back.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The hooded figure, though recovering from wounds, is strong enough to\r\nforce you back.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You cannot get close enough to the hooded figure to remove the hood.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You cannot get close enough to the hooded figure to remove the hood.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3580",
    "Name": "CLOAK-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? LOOK-UNDER> <IN? ,CLOAK ,SHADOW>> <TELL \"You cannot get close enough to look underneath the cloak.\" CR>) (<AND <VERB? TAKE> <IN? ,CLOAK ,SHADOW>> <TELL \"The cloak is fastened around the neck of the hooded figure. It would be\r\ndifficult to remove.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? LOOK-UNDER> <IN? ,CLOAK ,SHADOW>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? LOOK-UNDER>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "LOOK-UNDER"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,CLOAK ,SHADOW>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",CLOAK",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CLOAK"
                        }
                      ]
                    },
                    {
                      "Zil": ",SHADOW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SHADOW"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You cannot get close enough to look underneath the cloak.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You cannot get close enough to look underneath the cloak.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? TAKE> <IN? ,CLOAK ,SHADOW>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? TAKE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "TAKE"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,CLOAK ,SHADOW>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",CLOAK",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CLOAK"
                        }
                      ]
                    },
                    {
                      "Zil": ",SHADOW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SHADOW"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The cloak is fastened around the neck of the hooded figure. It would be\r\ndifficult to remove.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The cloak is fastened around the neck of the hooded figure. It would be\r\ndifficult to remove.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3591",
    "Name": "SHADOW-ROOMS",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<AND <==? .RARG ,M-BEG> <VERB? WALK> <==? ,PRSO ,BLOCKED-DIR>> <TELL \"Your way is blocked by the hooded figure.\" CR>) (<==? .RARG ,M-END> <COND (<NOT <IN? ,SHADOW ,HERE>> <SETG BLOCKED-DIR <>> <REMOVE ,SHADOW>)> <COND (,SHADOW-GONE <RFALSE>) (<IN? ,SHADOW ,HERE> <COND (<AND <PROB 30> <NOT ,ATTACK-MODE>> <SETG ATTACK-MODE T> <ENABLE <QUEUE I-CURE 10>> <ENABLE <QUEUE I-SHADOW-REPLY -1>>)>) (<PROB 30> <TELL \"You can hear quiet footsteps nearby.\" CR>) (<AND <PROB 30> ,LIT <G? ,S-STRENGTH 3>> <SETG BLOCKED-DIR <PICK-DIRECTION ,HERE>> <TELL \"Through the shadows, a cloaked and hooded figure appears before you,\r\nblocking the \"> <TELL <LKP ,BLOCKED-DIR ,DIRS> \"ern exit from the room and carrying a\r\nbrightly glowing sword.\" CR> <SHADOW-ARRIVAL> <RTRUE>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? .RARG ,M-BEG> <VERB? WALK> <==? ,PRSO ,BLOCKED-DIR>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-BEG>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-BEG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-BEG"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<VERB? WALK>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "WALK"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSO ,BLOCKED-DIR>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",BLOCKED-DIR",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "BLOCKED-DIR"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Your way is blocked by the hooded figure.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Your way is blocked by the hooded figure.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-END>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-END",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-END"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <IN? ,SHADOW ,HERE>> <SETG BLOCKED-DIR <>> <REMOVE ,SHADOW>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <IN? ,SHADOW ,HERE>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<IN? ,SHADOW ,HERE>",
                        "Form": [
                          {
                            "Atom": "IN?"
                          },
                          {
                            "Zil": ",SHADOW",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SHADOW"
                              }
                            ]
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG BLOCKED-DIR <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "BLOCKED-DIR"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<REMOVE ,SHADOW>",
                    "Form": [
                      {
                        "Atom": "REMOVE"
                      },
                      {
                        "Zil": ",SHADOW",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SHADOW"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<COND (,SHADOW-GONE <RFALSE>) (<IN? ,SHADOW ,HERE> <COND (<AND <PROB 30> <NOT ,ATTACK-MODE>> <SETG ATTACK-MODE T> <ENABLE <QUEUE I-CURE 10>> <ENABLE <QUEUE I-SHADOW-REPLY -1>>)>) (<PROB 30> <TELL \"You can hear quiet footsteps nearby.\" CR>) (<AND <PROB 30> ,LIT <G? ,S-STRENGTH 3>> <SETG BLOCKED-DIR <PICK-DIRECTION ,HERE>> <TELL \"Through the shadows, a cloaked and hooded figure appears before you,\r\nblocking the \"> <TELL <LKP ,BLOCKED-DIR ,DIRS> \"ern exit from the room and carrying a\r\nbrightly glowing sword.\" CR> <SHADOW-ARRIVAL> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",SHADOW-GONE",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "SHADOW-GONE"
                      }
                    ]
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<IN? ,SHADOW ,HERE>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ",SHADOW",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SHADOW"
                          }
                        ]
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<AND <PROB 30> <NOT ,ATTACK-MODE>> <SETG ATTACK-MODE T> <ENABLE <QUEUE I-CURE 10>> <ENABLE <QUEUE I-SHADOW-REPLY -1>>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<AND <PROB 30> <NOT ,ATTACK-MODE>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": "<PROB 30>",
                              "Form": [
                                {
                                  "Atom": "PROB"
                                },
                                30
                              ]
                            },
                            {
                              "Zil": "<NOT ,ATTACK-MODE>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": ",ATTACK-MODE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "ATTACK-MODE"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG ATTACK-MODE T>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "ATTACK-MODE"
                            },
                            {
                              "Atom": "T"
                            }
                          ]
                        },
                        {
                          "Zil": "<ENABLE <QUEUE I-CURE 10>>",
                          "Form": [
                            {
                              "Atom": "ENABLE"
                            },
                            {
                              "Zil": "<QUEUE I-CURE 10>",
                              "Form": [
                                {
                                  "Atom": "QUEUE"
                                },
                                {
                                  "Atom": "I-CURE"
                                },
                                10
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<ENABLE <QUEUE I-SHADOW-REPLY -1>>",
                          "Form": [
                            {
                              "Atom": "ENABLE"
                            },
                            {
                              "Zil": "<QUEUE I-SHADOW-REPLY -1>",
                              "Form": [
                                {
                                  "Atom": "QUEUE"
                                },
                                {
                                  "Atom": "I-SHADOW-REPLY"
                                },
                                -1
                              ]
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<PROB 30>",
                    "Form": [
                      {
                        "Atom": "PROB"
                      },
                      30
                    ]
                  },
                  {
                    "Zil": "<TELL \"You can hear quiet footsteps nearby.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can hear quiet footsteps nearby.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <PROB 30> ,LIT <G? ,S-STRENGTH 3>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<PROB 30>",
                        "Form": [
                          {
                            "Atom": "PROB"
                          },
                          30
                        ]
                      },
                      {
                        "Zil": ",LIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "LIT"
                          }
                        ]
                      },
                      {
                        "Zil": "<G? ,S-STRENGTH 3>",
                        "Form": [
                          {
                            "Atom": "G?"
                          },
                          {
                            "Zil": ",S-STRENGTH",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "S-STRENGTH"
                              }
                            ]
                          },
                          3
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG BLOCKED-DIR <PICK-DIRECTION ,HERE>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "BLOCKED-DIR"
                      },
                      {
                        "Zil": "<PICK-DIRECTION ,HERE>",
                        "Form": [
                          {
                            "Atom": "PICK-DIRECTION"
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Through the shadows, a cloaked and hooded figure appears before you,\r\nblocking the \">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Through the shadows, a cloaked and hooded figure appears before you,\r\nblocking the "
                    ]
                  },
                  {
                    "Zil": "<TELL <LKP ,BLOCKED-DIR ,DIRS> \"ern exit from the room and carrying a\r\nbrightly glowing sword.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      {
                        "Zil": "<LKP ,BLOCKED-DIR ,DIRS>",
                        "Form": [
                          {
                            "Atom": "LKP"
                          },
                          {
                            "Zil": ",BLOCKED-DIR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "BLOCKED-DIR"
                              }
                            ]
                          },
                          {
                            "Zil": ",DIRS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "DIRS"
                              }
                            ]
                          }
                        ]
                      },
                      "ern exit from the room and carrying a\r\nbrightly glowing sword.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<SHADOW-ARRIVAL>",
                    "Form": [
                      {
                        "Atom": "SHADOW-ARRIVAL"
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3620",
    "Name": "SHADOW-ARRIVAL",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<MOVE ,SHADOW ,HERE>",
        "Form": [
          {
            "Atom": "MOVE"
          },
          {
            "Zil": ",SHADOW",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "SHADOW"
              }
            ]
          },
          {
            "Zil": ",HERE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "HERE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<NOT ,SHADOW-POINT-1> <SETG SCORE <+ ,SCORE 1>> <SETG SHADOW-POINT-1 T>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,SHADOW-POINT-1>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",SHADOW-POINT-1",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SHADOW-POINT-1"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG SCORE <+ ,SCORE 1>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "SCORE"
                },
                {
                  "Zil": "<+ ,SCORE 1>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ",SCORE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SCORE"
                        }
                      ]
                    },
                    1
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG SHADOW-POINT-1 T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "SHADOW-POINT-1"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT <IN? ,SWORD ,WINNER>> <MOVE ,SWORD ,WINNER> <COND (,SWORD-IN-STONE? <TELL \"From nowhere, the sword from the junction appears in your hand, wildly\r\nglowing!\" CR>) (T <TELL \"Your sword, glowing wildly, appears in your hand!\" CR>)> <SETG SWORD-IN-STONE? <>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <IN? ,SWORD ,WINNER>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<IN? ,SWORD ,WINNER>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",SWORD",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SWORD"
                        }
                      ]
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,SWORD ,WINNER>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",SWORD",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "SWORD"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (,SWORD-IN-STONE? <TELL \"From nowhere, the sword from the junction appears in your hand, wildly\r\nglowing!\" CR>) (T <TELL \"Your sword, glowing wildly, appears in your hand!\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",SWORD-IN-STONE?",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "SWORD-IN-STONE?"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"From nowhere, the sword from the junction appears in your hand, wildly\r\nglowing!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "From nowhere, the sword from the junction appears in your hand, wildly\r\nglowing!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"Your sword, glowing wildly, appears in your hand!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Your sword, glowing wildly, appears in your hand!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<SETG SWORD-IN-STONE? <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "SWORD-IN-STONE?"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3639",
    "Name": "CREEPY-CRAWL-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-END> <SETG BLOCKED-DIR <>> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-END>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-END",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-END"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG BLOCKED-DIR <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "BLOCKED-DIR"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3951",
    "Name": "LEDGE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <==? ,HERE ,CLIFF-LEDGE> <VERB? THROW-OFF> <==? ,PRSI ,LEDGE>> <COND (<NOT <IN? ,PRSO ,WINNER>> <TELL \"You're not holding that!\" CR> <RTRUE>)> <MOVE ,PRSO ,CLIFF-BASE> <TELL \"The \" D ,PRSO \" falls to the base of the cliff below.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? ,HERE ,CLIFF-LEDGE> <VERB? THROW-OFF> <==? ,PRSI ,LEDGE>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? ,HERE ,CLIFF-LEDGE>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",CLIFF-LEDGE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CLIFF-LEDGE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<VERB? THROW-OFF>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "THROW-OFF"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,LEDGE>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",LEDGE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "LEDGE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <IN? ,PRSO ,WINNER>> <TELL \"You're not holding that!\" CR> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <IN? ,PRSO ,WINNER>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<IN? ,PRSO ,WINNER>",
                        "Form": [
                          {
                            "Atom": "IN?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You're not holding that!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You're not holding that!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<MOVE ,PRSO ,CLIFF-BASE>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",CLIFF-BASE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLIFF-BASE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D ,PRSO \" falls to the base of the cliff below.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " falls to the base of the cliff below.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:3975",
    "Name": "WAYBREAD-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? CUT> <==? ,PRSI ,SWORD>> <TELL \"The bread is crushed rather than cut by your sword, and the crumbs scatter to\r\nthe wind.\" CR> <REMOVE ,WAYBREAD>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? CUT> <==? ,PRSI ,SWORD>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? CUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "CUT"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,SWORD>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",SWORD",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SWORD"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The bread is crushed rather than cut by your sword, and the crumbs scatter to\r\nthe wind.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The bread is crushed rather than cut by your sword, and the crumbs scatter to\r\nthe wind.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<REMOVE ,WAYBREAD>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",WAYBREAD",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WAYBREAD"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4021",
    "Name": "STAFF-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? BURN> <==? ,PRSI ,TORCH>> <REMOVE ,PRSO> <JIGS-UP \"The staff is instantly consumed in a ball of flame. You along with it.\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? BURN> <==? ,PRSI ,TORCH>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? BURN>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "BURN"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,TORCH>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",TORCH",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "TORCH"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REMOVE ,PRSO>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<JIGS-UP \"The staff is instantly consumed in a ball of flame. You along with it.\">",
              "Form": [
                {
                  "Atom": "JIGS-UP"
                },
                "The staff is instantly consumed in a ball of flame. You along with it."
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4062",
    "Name": "I-MAN-APPEARS",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<OR <NOT <==? ,HERE ,CLIFF-LEDGE>> <NOT <EQUAL? <LOC ,CHEST> ,CLIFF-LEDGE ,WINNER>>> <RFALSE>) (,CHEST-TIED <SETG MAN-SEEN T> <TELL \"All at once, the chest is lifted from you. Looking up, you see a\r\nman at the top of the cliff, pulling intently at the rope. \\\"That is\r\nuncommonly good of you, I do say!\\\" He chuckles unpleasantly. \\\"Oh,\r\nyou are stuck, aren't you. Well, I'll be right back to get you!\\\"\r\nHe leaves your sight.\" CR> <SETG CHEST-LIFTED T> <MOVE ,CHEST ,MAN> <FSET ,CHEST ,TOUCHBIT> <SETG ROPE-FLAG <>> <SETG CHEST-TIED <>> <ENABLE <QUEUE I-MAN-RETURNS 10>> <RTRUE>) (T <TELL \"At the edge of the cliff above you, a man appears. He looks down at\r\nyou and speaks. \\\"Hello, down there! You seem to have a problem. Maybe I\r\ncan help you.\\\" He chuckles in an unsettling sort of way. \\\"Perhaps if you\r\ntied that chest to the end of the rope I might be able to drag it up for you.\r\nThen, I'll be more than happy to help you up!\\\" He laughs again.\" CR> <SETG MAN-FLAG T> <SETG MAN-SEEN T> <ENABLE <QUEUE I-MAN-PRESENT -1>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <NOT <==? ,HERE ,CLIFF-LEDGE>> <NOT <EQUAL? <LOC ,CHEST> ,CLIFF-LEDGE ,WINNER>>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<NOT <==? ,HERE ,CLIFF-LEDGE>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<==? ,HERE ,CLIFF-LEDGE>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        },
                        {
                          "Zil": ",CLIFF-LEDGE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CLIFF-LEDGE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT <EQUAL? <LOC ,CHEST> ,CLIFF-LEDGE ,WINNER>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? <LOC ,CHEST> ,CLIFF-LEDGE ,WINNER>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": "<LOC ,CHEST>",
                          "Form": [
                            {
                              "Atom": "LOC"
                            },
                            {
                              "Zil": ",CHEST",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "CHEST"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": ",CLIFF-LEDGE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CLIFF-LEDGE"
                            }
                          ]
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": ",CHEST-TIED",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "CHEST-TIED"
                }
              ]
            },
            {
              "Zil": "<SETG MAN-SEEN T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MAN-SEEN"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<TELL \"All at once, the chest is lifted from you. Looking up, you see a\r\nman at the top of the cliff, pulling intently at the rope. \\\"That is\r\nuncommonly good of you, I do say!\\\" He chuckles unpleasantly. \\\"Oh,\r\nyou are stuck, aren't you. Well, I'll be right back to get you!\\\"\r\nHe leaves your sight.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "All at once, the chest is lifted from you. Looking up, you see a\r\nman at the top of the cliff, pulling intently at the rope. \"That is\r\nuncommonly good of you, I do say!\" He chuckles unpleasantly. \"Oh,\r\nyou are stuck, aren't you. Well, I'll be right back to get you!\"\r\nHe leaves your sight.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG CHEST-LIFTED T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CHEST-LIFTED"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<MOVE ,CHEST ,MAN>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",CHEST",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST"
                    }
                  ]
                },
                {
                  "Zil": ",MAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MAN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FSET ,CHEST ,TOUCHBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",CHEST",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST"
                    }
                  ]
                },
                {
                  "Zil": ",TOUCHBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "TOUCHBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG ROPE-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "ROPE-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG CHEST-TIED <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CHEST-TIED"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-MAN-RETURNS 10>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-MAN-RETURNS 10>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-MAN-RETURNS"
                    },
                    10
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"At the edge of the cliff above you, a man appears. He looks down at\r\nyou and speaks. \\\"Hello, down there! You seem to have a problem. Maybe I\r\ncan help you.\\\" He chuckles in an unsettling sort of way. \\\"Perhaps if you\r\ntied that chest to the end of the rope I might be able to drag it up for you.\r\nThen, I'll be more than happy to help you up!\\\" He laughs again.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "At the edge of the cliff above you, a man appears. He looks down at\r\nyou and speaks. \"Hello, down there! You seem to have a problem. Maybe I\r\ncan help you.\" He chuckles in an unsettling sort of way. \"Perhaps if you\r\ntied that chest to the end of the rope I might be able to drag it up for you.\r\nThen, I'll be more than happy to help you up!\" He laughs again.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG MAN-FLAG T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MAN-FLAG"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<SETG MAN-SEEN T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MAN-SEEN"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-MAN-PRESENT -1>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-MAN-PRESENT -1>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-MAN-PRESENT"
                    },
                    -1
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4094",
    "Name": "I-MAN-PRESENT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<OR <NOT <==? ,HERE ,CLIFF-LEDGE>> <NOT ,MAN-FLAG> <IN? ,CHEST ,MAN>> <QUEUE I-MAN-PRESENT 0> <SETG MAN-FLAG <>> <RFALSE>) (<G? <SETG MAN-WAITING <+ ,MAN-WAITING 1>> 10> <TELL \"The man looks quite displeased. \\\"All right, then. I guess someone else\r\ncan always help me! See you around, sport!\\\" He disappears.\" CR> <QUEUE I-MAN-PRESENT 0> <SETG MAN-FLAG <>> <RTRUE>) (T <TELL <PICK-ONE ,MAN-WAITS> CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<OR <NOT <==? ,HERE ,CLIFF-LEDGE>> <NOT ,MAN-FLAG> <IN? ,CHEST ,MAN>>",
              "Form": [
                {
                  "Atom": "OR"
                },
                {
                  "Zil": "<NOT <==? ,HERE ,CLIFF-LEDGE>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<==? ,HERE ,CLIFF-LEDGE>",
                      "Form": [
                        {
                          "Atom": "==?"
                        },
                        {
                          "Zil": ",HERE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "HERE"
                            }
                          ]
                        },
                        {
                          "Zil": ",CLIFF-LEDGE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CLIFF-LEDGE"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,MAN-FLAG>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",MAN-FLAG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MAN-FLAG"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,CHEST ,MAN>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",CHEST",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CHEST"
                        }
                      ]
                    },
                    {
                      "Zil": ",MAN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MAN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<QUEUE I-MAN-PRESENT 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-MAN-PRESENT"
                },
                0
              ]
            },
            {
              "Zil": "<SETG MAN-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MAN-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<G? <SETG MAN-WAITING <+ ,MAN-WAITING 1>> 10>",
              "Form": [
                {
                  "Atom": "G?"
                },
                {
                  "Zil": "<SETG MAN-WAITING <+ ,MAN-WAITING 1>>",
                  "Form": [
                    {
                      "Atom": "SETG"
                    },
                    {
                      "Atom": "MAN-WAITING"
                    },
                    {
                      "Zil": "<+ ,MAN-WAITING 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ",MAN-WAITING",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MAN-WAITING"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                },
                10
              ]
            },
            {
              "Zil": "<TELL \"The man looks quite displeased. \\\"All right, then. I guess someone else\r\ncan always help me! See you around, sport!\\\" He disappears.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The man looks quite displeased. \"All right, then. I guess someone else\r\ncan always help me! See you around, sport!\" He disappears.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<QUEUE I-MAN-PRESENT 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-MAN-PRESENT"
                },
                0
              ]
            },
            {
              "Zil": "<SETG MAN-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MAN-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL <PICK-ONE ,MAN-WAITS> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<PICK-ONE ,MAN-WAITS>",
                  "Form": [
                    {
                      "Atom": "PICK-ONE"
                    },
                    {
                      "Zil": ",MAN-WAITS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MAN-WAITS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4110",
    "Name": "CLIFF-BASE-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<AND <==? .RARG ,M-ENTER> ,CHEST-TIED> <SETG CHEST-TIED <>> <SETG ROPE-FLAG <>> <QUEUE I-MAN-APPEARS 0>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? .RARG ,M-ENTER> ,CHEST-TIED>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-ENTER>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-ENTER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-ENTER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",CHEST-TIED",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST-TIED"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG CHEST-TIED <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CHEST-TIED"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG ROPE-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "ROPE-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<QUEUE I-MAN-APPEARS 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-MAN-APPEARS"
                },
                0
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4134",
    "Name": "CLIFF-LEDGE-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<AND <==? .RARG ,M-BEG> <VERB? WALK> <IN? ,CHEST ,WINNER> ,CHEST-TIED> <TELL \"You can't go anywhere holding that chest. The rope is tied around it!\" CR>) (<AND <==? .RARG ,M-ENTER> <NOT ,MAN-SEEN> <NOT ,MAN-FLAG> <NOT ,MAN-GONE>> <COND (<NOT ,MAN-POINT> <SETG SCORE <+ ,SCORE 1>> <SETG MAN-POINT T>)> <ENABLE <QUEUE I-MAN-APPEARS 5>>) (<==? .RARG ,M-LOOK> <TELL \"This is a rock-strewn ledge near the base of a tall cliff. The bottom of the\r\ncliff is another fifteen feet below. You have little hope of climbing up the\r\ncliff face, but you might be able to scramble down from here (though it's\r\ndoubtful you could return).\" CR> <COND (,ROPE-FLAG <TELL \"A long piece of rope is dangling down from the top of the cliff and\r\nis within your reach.\" CR>)> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? .RARG ,M-BEG> <VERB? WALK> <IN? ,CHEST ,WINNER> ,CHEST-TIED>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-BEG>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-BEG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-BEG"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<VERB? WALK>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "WALK"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,CHEST ,WINNER>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",CHEST",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CHEST"
                        }
                      ]
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",CHEST-TIED",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST-TIED"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't go anywhere holding that chest. The rope is tied around it!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't go anywhere holding that chest. The rope is tied around it!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? .RARG ,M-ENTER> <NOT ,MAN-SEEN> <NOT ,MAN-FLAG> <NOT ,MAN-GONE>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-ENTER>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-ENTER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-ENTER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,MAN-SEEN>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",MAN-SEEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MAN-SEEN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,MAN-FLAG>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",MAN-FLAG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MAN-FLAG"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,MAN-GONE>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",MAN-GONE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MAN-GONE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<NOT ,MAN-POINT> <SETG SCORE <+ ,SCORE 1>> <SETG MAN-POINT T>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,MAN-POINT>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",MAN-POINT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MAN-POINT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG SCORE <+ ,SCORE 1>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "SCORE"
                      },
                      {
                        "Zil": "<+ ,SCORE 1>",
                        "Form": [
                          {
                            "Atom": "+"
                          },
                          {
                            "Zil": ",SCORE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SCORE"
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG MAN-POINT T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "MAN-POINT"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-MAN-APPEARS 5>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-MAN-APPEARS 5>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-MAN-APPEARS"
                    },
                    5
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"This is a rock-strewn ledge near the base of a tall cliff. The bottom of the\r\ncliff is another fifteen feet below. You have little hope of climbing up the\r\ncliff face, but you might be able to scramble down from here (though it's\r\ndoubtful you could return).\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "This is a rock-strewn ledge near the base of a tall cliff. The bottom of the\r\ncliff is another fifteen feet below. You have little hope of climbing up the\r\ncliff face, but you might be able to scramble down from here (though it's\r\ndoubtful you could return).",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<COND (,ROPE-FLAG <TELL \"A long piece of rope is dangling down from the top of the cliff and\r\nis within your reach.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",ROPE-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "ROPE-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"A long piece of rope is dangling down from the top of the cliff and\r\nis within your reach.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "A long piece of rope is dangling down from the top of the cliff and\r\nis within your reach.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4161",
    "Name": "CLIFF-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<AND <==? .RARG ,M-ENTER> <IN? ,CHEST ,MAN>> <QUEUE I-MAN-RETURNS 0> <MOVE ,CHEST ,HERE> <FSET ,CHEST ,OPENBIT> <SETG ROPE-FLAG T> <SETG CHEST-TIED <>> <SETG CHEST-OPENED T> <RFALSE>) (<==? .RARG ,M-LOOK> <TELL \"This is a remarkable spot in the dungeon. Perhaps two hundred feet above\r\nyou is a gaping hole in the earth's surface through which pours bright\r\nsunshine! A few seedlings from the world above, nurtured by the sunlight\r\nand occasional rains, have grown into giant trees, making this a virtual oasis\r\nin the desert of the Underground Empire. To the west is a sheer precipice,\r\ndropping nearly fifty feet to jagged rocks below. The way south is barred by\r\na forbidding stone wall, crumbling from age. There is a jagged opening in the\r\nwall to the southwest, through which leaks a fine mist. The land to the east\r\nlooks lifeless and barren.\" CR> <COND (,ROPE-FLAG <TELL \"A rope is tied to one of the large trees here and is dangling over\r\nthe side of the cliff, reaching down to the shelf below.\" CR>)> <RTRUE>) (<AND <==? .RARG ,M-END> <PROB 15> <NOT <FSET? ,CLIFF-LEDGE ,TOUCHBIT>>> <TELL \"You catch, out of the corner of your eye, some movement among the\r\ntrees.\" CR>) (<AND <==? .RARG ,M-END> <PROB 20>> <TELL \"You seem to hear, from the southwest, the sounds of the sea.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? .RARG ,M-ENTER> <IN? ,CHEST ,MAN>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-ENTER>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-ENTER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-ENTER"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,CHEST ,MAN>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",CHEST",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CHEST"
                        }
                      ]
                    },
                    {
                      "Zil": ",MAN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MAN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<QUEUE I-MAN-RETURNS 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-MAN-RETURNS"
                },
                0
              ]
            },
            {
              "Zil": "<MOVE ,CHEST ,HERE>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",CHEST",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST"
                    }
                  ]
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FSET ,CHEST ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",CHEST",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG ROPE-FLAG T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "ROPE-FLAG"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<SETG CHEST-TIED <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CHEST-TIED"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG CHEST-OPENED T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CHEST-OPENED"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"This is a remarkable spot in the dungeon. Perhaps two hundred feet above\r\nyou is a gaping hole in the earth's surface through which pours bright\r\nsunshine! A few seedlings from the world above, nurtured by the sunlight\r\nand occasional rains, have grown into giant trees, making this a virtual oasis\r\nin the desert of the Underground Empire. To the west is a sheer precipice,\r\ndropping nearly fifty feet to jagged rocks below. The way south is barred by\r\na forbidding stone wall, crumbling from age. There is a jagged opening in the\r\nwall to the southwest, through which leaks a fine mist. The land to the east\r\nlooks lifeless and barren.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "This is a remarkable spot in the dungeon. Perhaps two hundred feet above\r\nyou is a gaping hole in the earth's surface through which pours bright\r\nsunshine! A few seedlings from the world above, nurtured by the sunlight\r\nand occasional rains, have grown into giant trees, making this a virtual oasis\r\nin the desert of the Underground Empire. To the west is a sheer precipice,\r\ndropping nearly fifty feet to jagged rocks below. The way south is barred by\r\na forbidding stone wall, crumbling from age. There is a jagged opening in the\r\nwall to the southwest, through which leaks a fine mist. The land to the east\r\nlooks lifeless and barren.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<COND (,ROPE-FLAG <TELL \"A rope is tied to one of the large trees here and is dangling over\r\nthe side of the cliff, reaching down to the shelf below.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",ROPE-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "ROPE-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"A rope is tied to one of the large trees here and is dangling over\r\nthe side of the cliff, reaching down to the shelf below.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "A rope is tied to one of the large trees here and is dangling over\r\nthe side of the cliff, reaching down to the shelf below.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? .RARG ,M-END> <PROB 15> <NOT <FSET? ,CLIFF-LEDGE ,TOUCHBIT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-END>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-END",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-END"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<PROB 15>",
                  "Form": [
                    {
                      "Atom": "PROB"
                    },
                    15
                  ]
                },
                {
                  "Zil": "<NOT <FSET? ,CLIFF-LEDGE ,TOUCHBIT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<FSET? ,CLIFF-LEDGE ,TOUCHBIT>",
                      "Form": [
                        {
                          "Atom": "FSET?"
                        },
                        {
                          "Zil": ",CLIFF-LEDGE",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "CLIFF-LEDGE"
                            }
                          ]
                        },
                        {
                          "Zil": ",TOUCHBIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "TOUCHBIT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You catch, out of the corner of your eye, some movement among the\r\ntrees.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You catch, out of the corner of your eye, some movement among the\r\ntrees.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? .RARG ,M-END> <PROB 20>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-END>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-END",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-END"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<PROB 20>",
                  "Form": [
                    {
                      "Atom": "PROB"
                    },
                    20
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You seem to hear, from the southwest, the sounds of the sea.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You seem to hear, from the southwest, the sounds of the sea.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4197",
    "Name": "GLOBAL-ROPE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT ,ROPE-FLAG> <TELL \"You can't see any rope here.\" CR>) (<VERB? CLIMB-FOO> <V-CLIMB-UP ,P?DOWN T>) (<VERB? TAKE MOVE CLIMB-ON> <COND (<NOT ,MAN-FLAG> <TELL \"A short tug on the rope convinces you that it is securely fastened\r\nfrom above.\" CR>) (<IN? ,CHEST ,MAN> <SETG HOLDING-ROPE T> <TELL \"You grab securely on to the rope.\" CR>) (T <TELL \"The man scowls. \\\"I may help you up, but not before I have that chest.\\\" He\r\npoints to the chest near you on the ledge.\" CR>)>) (<VERB? CLIMB-UP> <TELL \"You try to climb the rope, but you cannot reach the top even with your best\r\neffort.\" CR>) (<VERB? TIE> <COND (<EQUAL? ,CHEST ,PRSO ,PRSI> <TELL \"The chest is now tied to the rope.\" CR> <SETG CHEST-TIED T> <COND (<AND ,MAN-FLAG <NOT ,MAN-GONE>> <TELL \"The man above you looks pleased. \\\"Now there's a good friend! Thank\r\nyou very much, indeed!\\\" He pulls on the rope and the chest is lifted\r\nto the top of the cliff and out of sight. With a short laugh, he\r\ndisappears. \\\"I'll be back in a short while!\\\" are his last words.\" CR> <MOVE ,CHEST ,MAN> <FSET ,CHEST ,TOUCHBIT> <SETG CHEST-TIED <>> <SETG ROPE-FLAG <>> <ENABLE <QUEUE I-MAN-RETURNS 10>> <SETG MAN-FLAG <>> <RTRUE>)> <RTRUE>) (<EQUAL? ,ME ,PRSI ,PRSO> <COND (<AND ,MAN-FLAG <IN? ,CHEST ,MAN>> <TELL \"\\\"Just grab onto it!\\\", the man bellows.\" CR>) (,MAN-FLAG <TELL \"The man looks cross. \\\"I want the chest, not you!\\\" he snaps. \\\"Now stop\r\nfooling around and pass it up!\\\"\" CR>) (T <TELL \"You're unable to tie the rope around yourself.\" CR>)>) (T <TELL \"You're unable to tie the rope to that.\" CR>)>) (<VERB? UNTIE> <COND (,CHEST-TIED <SETG CHEST-TIED <>> <TELL \"The chest is now disconnected from the rope.\" CR>) (T <TELL \"The rope isn't tied to anything.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT ,ROPE-FLAG>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",ROPE-FLAG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ROPE-FLAG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't see any rope here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't see any rope here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? CLIMB-FOO>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CLIMB-FOO"
                }
              ]
            },
            {
              "Zil": "<V-CLIMB-UP ,P?DOWN T>",
              "Form": [
                {
                  "Atom": "V-CLIMB-UP"
                },
                {
                  "Zil": ",P?DOWN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?DOWN"
                    }
                  ]
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? TAKE MOVE CLIMB-ON>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TAKE"
                },
                {
                  "Atom": "MOVE"
                },
                {
                  "Atom": "CLIMB-ON"
                }
              ]
            },
            {
              "Zil": "<COND (<NOT ,MAN-FLAG> <TELL \"A short tug on the rope convinces you that it is securely fastened\r\nfrom above.\" CR>) (<IN? ,CHEST ,MAN> <SETG HOLDING-ROPE T> <TELL \"You grab securely on to the rope.\" CR>) (T <TELL \"The man scowls. \\\"I may help you up, but not before I have that chest.\\\" He\r\npoints to the chest near you on the ledge.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,MAN-FLAG>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",MAN-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MAN-FLAG"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"A short tug on the rope convinces you that it is securely fastened\r\nfrom above.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "A short tug on the rope convinces you that it is securely fastened\r\nfrom above.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<IN? ,CHEST ,MAN>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ",CHEST",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CHEST"
                          }
                        ]
                      },
                      {
                        "Zil": ",MAN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MAN"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG HOLDING-ROPE T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "HOLDING-ROPE"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You grab securely on to the rope.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You grab securely on to the rope.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The man scowls. \\\"I may help you up, but not before I have that chest.\\\" He\r\npoints to the chest near you on the ledge.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The man scowls. \"I may help you up, but not before I have that chest.\" He\r\npoints to the chest near you on the ledge.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? CLIMB-UP>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CLIMB-UP"
                }
              ]
            },
            {
              "Zil": "<TELL \"You try to climb the rope, but you cannot reach the top even with your best\r\neffort.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You try to climb the rope, but you cannot reach the top even with your best\r\neffort.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? TIE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TIE"
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? ,CHEST ,PRSO ,PRSI> <TELL \"The chest is now tied to the rope.\" CR> <SETG CHEST-TIED T> <COND (<AND ,MAN-FLAG <NOT ,MAN-GONE>> <TELL \"The man above you looks pleased. \\\"Now there's a good friend! Thank\r\nyou very much, indeed!\\\" He pulls on the rope and the chest is lifted\r\nto the top of the cliff and out of sight. With a short laugh, he\r\ndisappears. \\\"I'll be back in a short while!\\\" are his last words.\" CR> <MOVE ,CHEST ,MAN> <FSET ,CHEST ,TOUCHBIT> <SETG CHEST-TIED <>> <SETG ROPE-FLAG <>> <ENABLE <QUEUE I-MAN-RETURNS 10>> <SETG MAN-FLAG <>> <RTRUE>)> <RTRUE>) (<EQUAL? ,ME ,PRSI ,PRSO> <COND (<AND ,MAN-FLAG <IN? ,CHEST ,MAN>> <TELL \"\\\"Just grab onto it!\\\", the man bellows.\" CR>) (,MAN-FLAG <TELL \"The man looks cross. \\\"I want the chest, not you!\\\" he snaps. \\\"Now stop\r\nfooling around and pass it up!\\\"\" CR>) (T <TELL \"You're unable to tie the rope around yourself.\" CR>)>) (T <TELL \"You're unable to tie the rope to that.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? ,CHEST ,PRSO ,PRSI>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",CHEST",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CHEST"
                          }
                        ]
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The chest is now tied to the rope.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The chest is now tied to the rope.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG CHEST-TIED T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "CHEST-TIED"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<AND ,MAN-FLAG <NOT ,MAN-GONE>> <TELL \"The man above you looks pleased. \\\"Now there's a good friend! Thank\r\nyou very much, indeed!\\\" He pulls on the rope and the chest is lifted\r\nto the top of the cliff and out of sight. With a short laugh, he\r\ndisappears. \\\"I'll be back in a short while!\\\" are his last words.\" CR> <MOVE ,CHEST ,MAN> <FSET ,CHEST ,TOUCHBIT> <SETG CHEST-TIED <>> <SETG ROPE-FLAG <>> <ENABLE <QUEUE I-MAN-RETURNS 10>> <SETG MAN-FLAG <>> <RTRUE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<AND ,MAN-FLAG <NOT ,MAN-GONE>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": ",MAN-FLAG",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MAN-FLAG"
                                }
                              ]
                            },
                            {
                              "Zil": "<NOT ,MAN-GONE>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": ",MAN-GONE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "MAN-GONE"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The man above you looks pleased. \\\"Now there's a good friend! Thank\r\nyou very much, indeed!\\\" He pulls on the rope and the chest is lifted\r\nto the top of the cliff and out of sight. With a short laugh, he\r\ndisappears. \\\"I'll be back in a short while!\\\" are his last words.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The man above you looks pleased. \"Now there's a good friend! Thank\r\nyou very much, indeed!\" He pulls on the rope and the chest is lifted\r\nto the top of the cliff and out of sight. With a short laugh, he\r\ndisappears. \"I'll be back in a short while!\" are his last words.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<MOVE ,CHEST ,MAN>",
                          "Form": [
                            {
                              "Atom": "MOVE"
                            },
                            {
                              "Zil": ",CHEST",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "CHEST"
                                }
                              ]
                            },
                            {
                              "Zil": ",MAN",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MAN"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<FSET ,CHEST ,TOUCHBIT>",
                          "Form": [
                            {
                              "Atom": "FSET"
                            },
                            {
                              "Zil": ",CHEST",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "CHEST"
                                }
                              ]
                            },
                            {
                              "Zil": ",TOUCHBIT",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "TOUCHBIT"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG CHEST-TIED <>>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "CHEST-TIED"
                            },
                            {
                              "Zil": "<>",
                              "Form": []
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG ROPE-FLAG <>>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "ROPE-FLAG"
                            },
                            {
                              "Zil": "<>",
                              "Form": []
                            }
                          ]
                        },
                        {
                          "Zil": "<ENABLE <QUEUE I-MAN-RETURNS 10>>",
                          "Form": [
                            {
                              "Atom": "ENABLE"
                            },
                            {
                              "Zil": "<QUEUE I-MAN-RETURNS 10>",
                              "Form": [
                                {
                                  "Atom": "QUEUE"
                                },
                                {
                                  "Atom": "I-MAN-RETURNS"
                                },
                                10
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG MAN-FLAG <>>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "MAN-FLAG"
                            },
                            {
                              "Zil": "<>",
                              "Form": []
                            }
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<EQUAL? ,ME ,PRSI ,PRSO>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",ME",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ME"
                          }
                        ]
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<AND ,MAN-FLAG <IN? ,CHEST ,MAN>> <TELL \"\\\"Just grab onto it!\\\", the man bellows.\" CR>) (,MAN-FLAG <TELL \"The man looks cross. \\\"I want the chest, not you!\\\" he snaps. \\\"Now stop\r\nfooling around and pass it up!\\\"\" CR>) (T <TELL \"You're unable to tie the rope around yourself.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<AND ,MAN-FLAG <IN? ,CHEST ,MAN>>",
                          "Form": [
                            {
                              "Atom": "AND"
                            },
                            {
                              "Zil": ",MAN-FLAG",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MAN-FLAG"
                                }
                              ]
                            },
                            {
                              "Zil": "<IN? ,CHEST ,MAN>",
                              "Form": [
                                {
                                  "Atom": "IN?"
                                },
                                {
                                  "Zil": ",CHEST",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "CHEST"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",MAN",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "MAN"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"\\\"Just grab onto it!\\\", the man bellows.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "\"Just grab onto it!\", the man bellows.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": ",MAN-FLAG",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "MAN-FLAG"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The man looks cross. \\\"I want the chest, not you!\\\" he snaps. \\\"Now stop\r\nfooling around and pass it up!\\\"\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The man looks cross. \"I want the chest, not you!\" he snaps. \"Now stop\r\nfooling around and pass it up!\"",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"You're unable to tie the rope around yourself.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "You're unable to tie the rope around yourself.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You're unable to tie the rope to that.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You're unable to tie the rope to that.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? UNTIE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "UNTIE"
                }
              ]
            },
            {
              "Zil": "<COND (,CHEST-TIED <SETG CHEST-TIED <>> <TELL \"The chest is now disconnected from the rope.\" CR>) (T <TELL \"The rope isn't tied to anything.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",CHEST-TIED",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "CHEST-TIED"
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG CHEST-TIED <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "CHEST-TIED"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The chest is now disconnected from the rope.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The chest is now disconnected from the rope.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The rope isn't tied to anything.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The rope isn't tied to anything.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4264",
    "Name": "I-MAN-RETURNS",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG ROPE-FLAG T>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "ROPE-FLAG"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<COND (<==? ,HERE ,CLIFF-LEDGE> <TELL \"A familiar voice calls down to you. \\\"Are you still there?\\\" he bellows with a\r\ncoarse laugh. \\\"Well, then, grab onto the rope and we'll see what we can do.\\\"\r\nThe rope drops to within your reach.\" CR> <SETG MAN-FLAG T> <ENABLE <QUEUE I-MAN-LIFT -1>> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,HERE ,CLIFF-LEDGE>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",CLIFF-LEDGE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLIFF-LEDGE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"A familiar voice calls down to you. \\\"Are you still there?\\\" he bellows with a\r\ncoarse laugh. \\\"Well, then, grab onto the rope and we'll see what we can do.\\\"\r\nThe rope drops to within your reach.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "A familiar voice calls down to you. \"Are you still there?\" he bellows with a\r\ncoarse laugh. \"Well, then, grab onto the rope and we'll see what we can do.\"\r\nThe rope drops to within your reach.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG MAN-FLAG T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MAN-FLAG"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-MAN-LIFT -1>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-MAN-LIFT -1>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-MAN-LIFT"
                    },
                    -1
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4277",
    "Name": "I-MAN-LIFT",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT <==? ,HERE ,CLIFF-LEDGE>> <QUEUE I-MAN-LIFT 0> <MOVE ,CHEST ,CLIFF> <FSET ,CHEST ,OPENBIT> <SETG CHEST-OPENED T> <REMOVE ,MAN> <RFALSE>) (,HOLDING-ROPE <TELL \"The man starts to heave on the rope and within a few moments you arrive at\r\nthe top of the cliff. The man removes the last few valuables from the chest\r\nand prepares to leave. \\\"You've been a good sport! Here, take this, for\r\nwhatever good it is! I can't see that I'll be needing one!\\\" He hands you a\r\nplain wooden staff from the bottom of the chest and begins examining his\r\nvaluables.\" CR> <QUEUE I-MAN-LIFT 0> <MOVE ,STAFF ,WINNER> <SETG HOLDING-ROPE <>> <SETG ROPE-FLAG T> <MOVE ,WINNER ,CLIFF> <MOVE ,CHEST ,CLIFF> <FSET ,CHEST ,OPENBIT> <TELL \"The chest, open and empty, is at your feet.\" CR> <SETG CHEST-OPENED T> <MOVE ,MAN ,CLIFF> <ENABLE <QUEUE I-MAN-LEAVES -1>> <RTRUE>) (<G? <SETG LIFT-WAIT <+ ,LIFT-WAIT 1>> 4> <TELL \"\\\"Well, I don't have all day. See you around sometime.\\\" Showering you with\r\ngravel, he disappears from sight.\" CR> <SETG MAN-FLAG <>> <MOVE ,CHEST ,CLIFF> <FSET ,CHEST ,OPENBIT> <SETG CHEST-OPENED T> <QUEUE I-MAN-LIFT 0>) (T <TELL \"The man appears impatient. \\\"Are you coming up then, or not?\\\"\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <==? ,HERE ,CLIFF-LEDGE>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<==? ,HERE ,CLIFF-LEDGE>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",CLIFF-LEDGE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CLIFF-LEDGE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<QUEUE I-MAN-LIFT 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-MAN-LIFT"
                },
                0
              ]
            },
            {
              "Zil": "<MOVE ,CHEST ,CLIFF>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",CHEST",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST"
                    }
                  ]
                },
                {
                  "Zil": ",CLIFF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLIFF"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FSET ,CHEST ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",CHEST",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG CHEST-OPENED T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CHEST-OPENED"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<REMOVE ,MAN>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",MAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MAN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": ",HOLDING-ROPE",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "HOLDING-ROPE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The man starts to heave on the rope and within a few moments you arrive at\r\nthe top of the cliff. The man removes the last few valuables from the chest\r\nand prepares to leave. \\\"You've been a good sport! Here, take this, for\r\nwhatever good it is! I can't see that I'll be needing one!\\\" He hands you a\r\nplain wooden staff from the bottom of the chest and begins examining his\r\nvaluables.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The man starts to heave on the rope and within a few moments you arrive at\r\nthe top of the cliff. The man removes the last few valuables from the chest\r\nand prepares to leave. \"You've been a good sport! Here, take this, for\r\nwhatever good it is! I can't see that I'll be needing one!\" He hands you a\r\nplain wooden staff from the bottom of the chest and begins examining his\r\nvaluables.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<QUEUE I-MAN-LIFT 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-MAN-LIFT"
                },
                0
              ]
            },
            {
              "Zil": "<MOVE ,STAFF ,WINNER>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",STAFF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "STAFF"
                    }
                  ]
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG HOLDING-ROPE <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "HOLDING-ROPE"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG ROPE-FLAG T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "ROPE-FLAG"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<MOVE ,WINNER ,CLIFF>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",WINNER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "WINNER"
                    }
                  ]
                },
                {
                  "Zil": ",CLIFF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLIFF"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<MOVE ,CHEST ,CLIFF>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",CHEST",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST"
                    }
                  ]
                },
                {
                  "Zil": ",CLIFF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLIFF"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FSET ,CHEST ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",CHEST",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The chest, open and empty, is at your feet.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The chest, open and empty, is at your feet.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG CHEST-OPENED T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CHEST-OPENED"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<MOVE ,MAN ,CLIFF>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",MAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MAN"
                    }
                  ]
                },
                {
                  "Zil": ",CLIFF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLIFF"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-MAN-LEAVES -1>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-MAN-LEAVES -1>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-MAN-LEAVES"
                    },
                    -1
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<G? <SETG LIFT-WAIT <+ ,LIFT-WAIT 1>> 4>",
              "Form": [
                {
                  "Atom": "G?"
                },
                {
                  "Zil": "<SETG LIFT-WAIT <+ ,LIFT-WAIT 1>>",
                  "Form": [
                    {
                      "Atom": "SETG"
                    },
                    {
                      "Atom": "LIFT-WAIT"
                    },
                    {
                      "Zil": "<+ ,LIFT-WAIT 1>",
                      "Form": [
                        {
                          "Atom": "+"
                        },
                        {
                          "Zil": ",LIFT-WAIT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "LIFT-WAIT"
                            }
                          ]
                        },
                        1
                      ]
                    }
                  ]
                },
                4
              ]
            },
            {
              "Zil": "<TELL \"\\\"Well, I don't have all day. See you around sometime.\\\" Showering you with\r\ngravel, he disappears from sight.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "\"Well, I don't have all day. See you around sometime.\" Showering you with\r\ngravel, he disappears from sight.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG MAN-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MAN-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<MOVE ,CHEST ,CLIFF>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",CHEST",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST"
                    }
                  ]
                },
                {
                  "Zil": ",CLIFF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLIFF"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<FSET ,CHEST ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",CHEST",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CHEST"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG CHEST-OPENED T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "CHEST-OPENED"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<QUEUE I-MAN-LIFT 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-MAN-LIFT"
                },
                0
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"The man appears impatient. \\\"Are you coming up then, or not?\\\"\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The man appears impatient. \"Are you coming up then, or not?\"",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4321",
    "Name": "CHEST-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (,CHEST-OPENED <COND (<AND <VERB? TIE> <==? ,ROPE ,PRSO ,PRSI>> <TELL \"What's the point?\" CR>) (<AND <VERB? PUT> <EQUAL? ,PRSO ,STAFF ,LAMP ,TORCH>> <TELL \"It doesn't fit.\"> <COND (<EQUAL? ,PRSO ,STAFF> <TELL \" Awfully peculiar, though, since it's where the staff came from.\">)> <CRLF>) (T <RFALSE>)>) (<VERB? OPEN UNLOCK> <COND (,MAN-FLAG <TELL \"The man calls down to you. \\\"Is this what you're looking for?\\\" he cackles,\r\nwaving a small key over his head. You try to open the chest, but it is\r\nlocked.\" CR>) (T <TELL \"The chest is locked and cannot be opened.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",CHEST-OPENED",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "CHEST-OPENED"
                }
              ]
            },
            {
              "Zil": "<COND (<AND <VERB? TIE> <==? ,ROPE ,PRSO ,PRSI>> <TELL \"What's the point?\" CR>) (<AND <VERB? PUT> <EQUAL? ,PRSO ,STAFF ,LAMP ,TORCH>> <TELL \"It doesn't fit.\"> <COND (<EQUAL? ,PRSO ,STAFF> <TELL \" Awfully peculiar, though, since it's where the staff came from.\">)> <CRLF>) (T <RFALSE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <VERB? TIE> <==? ,ROPE ,PRSO ,PRSI>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<VERB? TIE>",
                        "Form": [
                          {
                            "Atom": "VERB?"
                          },
                          {
                            "Atom": "TIE"
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,ROPE ,PRSO ,PRSI>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",ROPE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "ROPE"
                              }
                            ]
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",PRSI",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSI"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"What's the point?\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "What's the point?",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <VERB? PUT> <EQUAL? ,PRSO ,STAFF ,LAMP ,TORCH>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<VERB? PUT>",
                        "Form": [
                          {
                            "Atom": "VERB?"
                          },
                          {
                            "Atom": "PUT"
                          }
                        ]
                      },
                      {
                        "Zil": "<EQUAL? ,PRSO ,STAFF ,LAMP ,TORCH>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",STAFF",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "STAFF"
                              }
                            ]
                          },
                          {
                            "Zil": ",LAMP",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "LAMP"
                              }
                            ]
                          },
                          {
                            "Zil": ",TORCH",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "TORCH"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"It doesn't fit.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It doesn't fit."
                    ]
                  },
                  {
                    "Zil": "<COND (<EQUAL? ,PRSO ,STAFF> <TELL \" Awfully peculiar, though, since it's where the staff came from.\">)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<EQUAL? ,PRSO ,STAFF>",
                          "Form": [
                            {
                              "Atom": "EQUAL?"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",STAFF",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "STAFF"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \" Awfully peculiar, though, since it's where the staff came from.\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            " Awfully peculiar, though, since it's where the staff came from."
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<CRLF>",
                    "Form": [
                      {
                        "Atom": "CRLF"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<RFALSE>",
                    "Form": [
                      {
                        "Atom": "RFALSE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? OPEN UNLOCK>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                },
                {
                  "Atom": "UNLOCK"
                }
              ]
            },
            {
              "Zil": "<COND (,MAN-FLAG <TELL \"The man calls down to you. \\\"Is this what you're looking for?\\\" he cackles,\r\nwaving a small key over his head. You try to open the chest, but it is\r\nlocked.\" CR>) (T <TELL \"The chest is locked and cannot be opened.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",MAN-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "MAN-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The man calls down to you. \\\"Is this what you're looking for?\\\" he cackles,\r\nwaving a small key over his head. You try to open the chest, but it is\r\nlocked.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The man calls down to you. \"Is this what you're looking for?\" he cackles,\r\nwaving a small key over his head. You try to open the chest, but it is\r\nlocked.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The chest is locked and cannot be opened.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The chest is locked and cannot be opened.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4344",
    "Name": "I-MAN-LEAVES",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT <==? ,HERE ,CLIFF>> <REMOVE ,MAN> <SETG MAN-GONE T> <SETG MAN-FLAG <>> <SETG ROPE-FLAG T> <QUEUE I-MAN-LEAVES 0> <RFALSE>) (<PROB 40> <TELL \"Your \\\"friend\\\", moving quickly, dodges behind some trees and is lost from\r\nsight.\" CR> <REMOVE ,MAN> <SETG MAN-FLAG <>> <SETG MAN-GONE T> <SETG ROPE-FLAG T> <QUEUE I-MAN-LEAVES 0> <RTRUE>) (T <TELL \"Your \\\"friend\\\" examines his valuables with great pride.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <==? ,HERE ,CLIFF>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<==? ,HERE ,CLIFF>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",CLIFF",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CLIFF"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REMOVE ,MAN>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",MAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MAN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG MAN-GONE T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MAN-GONE"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<SETG MAN-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MAN-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG ROPE-FLAG T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "ROPE-FLAG"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<QUEUE I-MAN-LEAVES 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-MAN-LEAVES"
                },
                0
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<PROB 40>",
              "Form": [
                {
                  "Atom": "PROB"
                },
                40
              ]
            },
            {
              "Zil": "<TELL \"Your \\\"friend\\\", moving quickly, dodges behind some trees and is lost from\r\nsight.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Your \"friend\", moving quickly, dodges behind some trees and is lost from\r\nsight.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<REMOVE ,MAN>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",MAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MAN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG MAN-FLAG <>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MAN-FLAG"
                },
                {
                  "Zil": "<>",
                  "Form": []
                }
              ]
            },
            {
              "Zil": "<SETG MAN-GONE T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "MAN-GONE"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<SETG ROPE-FLAG T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "ROPE-FLAG"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<QUEUE I-MAN-LEAVES 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-MAN-LEAVES"
                },
                0
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"Your \\\"friend\\\" examines his valuables with great pride.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Your \"friend\" examines his valuables with great pride.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4366",
    "Name": "MAN-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? HELLO> <TELL \"He responds cheerfully. \\\"It is a wonderful day, isn't it?\\\"\" CR>) (<HELLO? ,MAN> <TELL \"The man is thoroughly engrossed in the examination of his booty and\r\ndoesn't seem to hear you.\" CR>) (<VERB? EXAMINE> <TELL \"The man is stocky and of medium height, with several days' growth of stubble\r\non his face. He is carrying a number of valuables under his arm, presumably\r\nfrom the now-open chest.\" CR>) (<VERB? ATTACK> <COND (<==? ,PRSI ,SWORD> <TELL \"The man is taken by surprise and is hit with the sword. He grabs you\r\nand throws you to the ground\"> <COND (<EQUAL? <LOC ,STAFF> ,WINNER ,HERE> <TELL \", breaking the staff in the process\"> <REMOVE ,STAFF> <MOVE ,BROKEN-STAFF ,HERE>)> <TELL \", but you\r\nfinish him off with a quick thrust to the chest. He dies, and disappears\r\nwithout ceremony in the usual style of the Great Underground Empire.\r\nHis assorted valuables remain behind.\" CR> <REMOVE ,MAN> <MOVE ,VALUABLES ,HERE> <FCLEAR ,VALUABLES ,NDESCBIT> <QUEUE I-MAN-LEAVES 0> <SETG MAN-GONE T>) (T <TELL \"You wouldn't hurt him with that!\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? HELLO>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "HELLO"
                }
              ]
            },
            {
              "Zil": "<TELL \"He responds cheerfully. \\\"It is a wonderful day, isn't it?\\\"\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "He responds cheerfully. \"It is a wonderful day, isn't it?\"",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<HELLO? ,MAN>",
              "Form": [
                {
                  "Atom": "HELLO?"
                },
                {
                  "Zil": ",MAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MAN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The man is thoroughly engrossed in the examination of his booty and\r\ndoesn't seem to hear you.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The man is thoroughly engrossed in the examination of his booty and\r\ndoesn't seem to hear you.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The man is stocky and of medium height, with several days' growth of stubble\r\non his face. He is carrying a number of valuables under his arm, presumably\r\nfrom the now-open chest.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The man is stocky and of medium height, with several days' growth of stubble\r\non his face. He is carrying a number of valuables under his arm, presumably\r\nfrom the now-open chest.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? ATTACK>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "ATTACK"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,PRSI ,SWORD> <TELL \"The man is taken by surprise and is hit with the sword. He grabs you\r\nand throws you to the ground\"> <COND (<EQUAL? <LOC ,STAFF> ,WINNER ,HERE> <TELL \", breaking the staff in the process\"> <REMOVE ,STAFF> <MOVE ,BROKEN-STAFF ,HERE>)> <TELL \", but you\r\nfinish him off with a quick thrust to the chest. He dies, and disappears\r\nwithout ceremony in the usual style of the Great Underground Empire.\r\nHis assorted valuables remain behind.\" CR> <REMOVE ,MAN> <MOVE ,VALUABLES ,HERE> <FCLEAR ,VALUABLES ,NDESCBIT> <QUEUE I-MAN-LEAVES 0> <SETG MAN-GONE T>) (T <TELL \"You wouldn't hurt him with that!\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,PRSI ,SWORD>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      },
                      {
                        "Zil": ",SWORD",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SWORD"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The man is taken by surprise and is hit with the sword. He grabs you\r\nand throws you to the ground\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The man is taken by surprise and is hit with the sword. He grabs you\r\nand throws you to the ground"
                    ]
                  },
                  {
                    "Zil": "<COND (<EQUAL? <LOC ,STAFF> ,WINNER ,HERE> <TELL \", breaking the staff in the process\"> <REMOVE ,STAFF> <MOVE ,BROKEN-STAFF ,HERE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<EQUAL? <LOC ,STAFF> ,WINNER ,HERE>",
                          "Form": [
                            {
                              "Atom": "EQUAL?"
                            },
                            {
                              "Zil": "<LOC ,STAFF>",
                              "Form": [
                                {
                                  "Atom": "LOC"
                                },
                                {
                                  "Zil": ",STAFF",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "STAFF"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": ",WINNER",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "WINNER"
                                }
                              ]
                            },
                            {
                              "Zil": ",HERE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "HERE"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \", breaking the staff in the process\">",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            ", breaking the staff in the process"
                          ]
                        },
                        {
                          "Zil": "<REMOVE ,STAFF>",
                          "Form": [
                            {
                              "Atom": "REMOVE"
                            },
                            {
                              "Zil": ",STAFF",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "STAFF"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<MOVE ,BROKEN-STAFF ,HERE>",
                          "Form": [
                            {
                              "Atom": "MOVE"
                            },
                            {
                              "Zil": ",BROKEN-STAFF",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "BROKEN-STAFF"
                                }
                              ]
                            },
                            {
                              "Zil": ",HERE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "HERE"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<TELL \", but you\r\nfinish him off with a quick thrust to the chest. He dies, and disappears\r\nwithout ceremony in the usual style of the Great Underground Empire.\r\nHis assorted valuables remain behind.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      ", but you\r\nfinish him off with a quick thrust to the chest. He dies, and disappears\r\nwithout ceremony in the usual style of the Great Underground Empire.\r\nHis assorted valuables remain behind.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<REMOVE ,MAN>",
                    "Form": [
                      {
                        "Atom": "REMOVE"
                      },
                      {
                        "Zil": ",MAN",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MAN"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<MOVE ,VALUABLES ,HERE>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ",VALUABLES",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "VALUABLES"
                          }
                        ]
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,VALUABLES ,NDESCBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",VALUABLES",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "VALUABLES"
                          }
                        ]
                      },
                      {
                        "Zil": ",NDESCBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "NDESCBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<QUEUE I-MAN-LEAVES 0>",
                    "Form": [
                      {
                        "Atom": "QUEUE"
                      },
                      {
                        "Atom": "I-MAN-LEAVES"
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<SETG MAN-GONE T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "MAN-GONE"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You wouldn't hurt him with that!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You wouldn't hurt him with that!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4399",
    "Name": "VALUABLES-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? TAKE PUT MOVE> <IN? ,MAN ,CLIFF>> <TELL \"The man recoils sharply. \\\"These here things are mine. It's my chest and\r\nthey're my valuables. You've a lot of nerve trying to take them from me\r\nafter me saving you like that!\\\"\" CR>) (<AND ,MAN-GONE <IN? ,VALUABLES ,MAN>> <TELL \"What valuables?\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? TAKE PUT MOVE> <IN? ,MAN ,CLIFF>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? TAKE PUT MOVE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "TAKE"
                    },
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Atom": "MOVE"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,MAN ,CLIFF>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",MAN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MAN"
                        }
                      ]
                    },
                    {
                      "Zil": ",CLIFF",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "CLIFF"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The man recoils sharply. \\\"These here things are mine. It's my chest and\r\nthey're my valuables. You've a lot of nerve trying to take them from me\r\nafter me saving you like that!\\\"\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The man recoils sharply. \"These here things are mine. It's my chest and\r\nthey're my valuables. You've a lot of nerve trying to take them from me\r\nafter me saving you like that!\"",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND ,MAN-GONE <IN? ,VALUABLES ,MAN>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": ",MAN-GONE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MAN-GONE"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,VALUABLES ,MAN>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",VALUABLES",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VALUABLES"
                        }
                      ]
                    },
                    {
                      "Zil": ",MAN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MAN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"What valuables?\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "What valuables?",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4409",
    "Name": "ROPE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? TAKE MOVE> <COND (,ROPE-FLAG <TELL \"The rope is tied to a tree.\" CR>)>) (<VERB? CLIMB-FOO> <V-CLIMB-UP ,P?DOWN T>) (<VERB? BURN> <TELL \"The rope won't catch fire.\" CR>) (<VERB? UNTIE> <TELL \"The rope is very securely tied and cannot be undone.\" CR>) (<AND <VERB? CUT> <==? ,PRSI ,SWORD>> <TELL \"The rope is made of pretty tough stuff and won't cut.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? TAKE MOVE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TAKE"
                },
                {
                  "Atom": "MOVE"
                }
              ]
            },
            {
              "Zil": "<COND (,ROPE-FLAG <TELL \"The rope is tied to a tree.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",ROPE-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "ROPE-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The rope is tied to a tree.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The rope is tied to a tree.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? CLIMB-FOO>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CLIMB-FOO"
                }
              ]
            },
            {
              "Zil": "<V-CLIMB-UP ,P?DOWN T>",
              "Form": [
                {
                  "Atom": "V-CLIMB-UP"
                },
                {
                  "Zil": ",P?DOWN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?DOWN"
                    }
                  ]
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? BURN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "BURN"
                }
              ]
            },
            {
              "Zil": "<TELL \"The rope won't catch fire.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The rope won't catch fire.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? UNTIE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "UNTIE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The rope is very securely tied and cannot be undone.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The rope is very securely tied and cannot be undone.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? CUT> <==? ,PRSI ,SWORD>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? CUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "CUT"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,SWORD>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",SWORD",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SWORD"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The rope is made of pretty tough stuff and won't cut.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The rope is made of pretty tough stuff and won't cut.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4426",
    "Name": "GLOBAL-MAN-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<==? ,HERE ,CLIFF> <COND (,MAN-GONE <TELL \"You've lost him among the trees.\" CR>) (T <TELL \"You can't see any man here.\" CR>)>) (<NOT ,MAN-FLAG> <TELL \"You can't see any man here.\" CR>) (<VERB? GIVE> <TELL \"You aren't even close to him!\" CR>) (<VERB? HELLO> <TELL \"The man waves back in a friendly way.\" CR>) (<HELLO? ,GLOBAL-MAN> <TELL \"He yells back, \\\"What's that you say? I can't hear you very well.\"> <COND (<NOT ,CHEST-LIFTED> <TELL \" Just tie the rope to the chest and we can chat afterwards!\\\" He smiles\r\nbroadly.\">) (T <TELL \"\\\"\">)> <CRLF>) (<VERB? ATTACK MUNG> <TELL \"It's unlikely you'll succeed at this distance.\" CR>) (<AND <VERB? THROW> <==? ,PRSI ,GLOBAL-MAN> <IN? ,PRSO ,WINNER>> <TELL \"The \" D ,PRSO \" flies upward, but not nearly far enough to hit the man. It\r\ndoes seem to amuse him, however, especially as it passes within inches of\r\nyour head. \\\"We're wasting time now. Be a good fellow and tie the rope!\\\"\" CR> <MOVE ,PRSO ,HERE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,HERE ,CLIFF>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",CLIFF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLIFF"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (,MAN-GONE <TELL \"You've lost him among the trees.\" CR>) (T <TELL \"You can't see any man here.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",MAN-GONE",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "MAN-GONE"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You've lost him among the trees.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You've lost him among the trees.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You can't see any man here.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can't see any man here.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<NOT ,MAN-FLAG>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ",MAN-FLAG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MAN-FLAG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't see any man here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't see any man here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? GIVE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "GIVE"
                }
              ]
            },
            {
              "Zil": "<TELL \"You aren't even close to him!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You aren't even close to him!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? HELLO>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "HELLO"
                }
              ]
            },
            {
              "Zil": "<TELL \"The man waves back in a friendly way.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The man waves back in a friendly way.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<HELLO? ,GLOBAL-MAN>",
              "Form": [
                {
                  "Atom": "HELLO?"
                },
                {
                  "Zil": ",GLOBAL-MAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "GLOBAL-MAN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"He yells back, \\\"What's that you say? I can't hear you very well.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "He yells back, \"What's that you say? I can't hear you very well."
              ]
            },
            {
              "Zil": "<COND (<NOT ,CHEST-LIFTED> <TELL \" Just tie the rope to the chest and we can chat afterwards!\\\" He smiles\r\nbroadly.\">) (T <TELL \"\\\"\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,CHEST-LIFTED>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",CHEST-LIFTED",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CHEST-LIFTED"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" Just tie the rope to the chest and we can chat afterwards!\\\" He smiles\r\nbroadly.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " Just tie the rope to the chest and we can chat afterwards!\" He smiles\r\nbroadly."
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"\\\"\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "\""
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? ATTACK MUNG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "ATTACK"
                },
                {
                  "Atom": "MUNG"
                }
              ]
            },
            {
              "Zil": "<TELL \"It's unlikely you'll succeed at this distance.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's unlikely you'll succeed at this distance.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? THROW> <==? ,PRSI ,GLOBAL-MAN> <IN? ,PRSO ,WINNER>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? THROW>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "THROW"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,GLOBAL-MAN>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",GLOBAL-MAN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "GLOBAL-MAN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,PRSO ,WINNER>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D ,PRSO \" flies upward, but not nearly far enough to hit the man. It\r\ndoes seem to amuse him, however, especially as it passes within inches of\r\nyour head. \\\"We're wasting time now. Be a good fellow and tie the rope!\\\"\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " flies upward, but not nearly far enough to hit the man. It\r\ndoes seem to amuse him, however, especially as it passes within inches of\r\nyour head. \"We're wasting time now. Be a good fellow and tie the rope!\"",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<MOVE ,PRSO ,HERE>",
              "Form": [
                {
                  "Atom": "MOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4462",
    "Name": "LAKE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? THROUGH LEAP BOARD> <COND (<EQUAL? ,HERE ,LAKE-SHORE ,FAR-SHORE ,SOUTH-SHORE> <GO-ON-LAKE>) (<==? ,HERE ,ON-LAKE> <GOTO ,IN-LAKE>) (T <TELL \"Just where do you think you are?\" CR>)>) (<VERB? LOOK-UNDER> <COND (<==? ,HERE ,ON-LAKE> <TELL \"You can't quite make out the bottom of the lake from here...\" CR>) (T <TELL \"You can't see under the surface from here.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? THROUGH LEAP BOARD>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "THROUGH"
                },
                {
                  "Atom": "LEAP"
                },
                {
                  "Atom": "BOARD"
                }
              ]
            },
            {
              "Zil": "<COND (<EQUAL? ,HERE ,LAKE-SHORE ,FAR-SHORE ,SOUTH-SHORE> <GO-ON-LAKE>) (<==? ,HERE ,ON-LAKE> <GOTO ,IN-LAKE>) (T <TELL \"Just where do you think you are?\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<EQUAL? ,HERE ,LAKE-SHORE ,FAR-SHORE ,SOUTH-SHORE>",
                    "Form": [
                      {
                        "Atom": "EQUAL?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",LAKE-SHORE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "LAKE-SHORE"
                          }
                        ]
                      },
                      {
                        "Zil": ",FAR-SHORE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "FAR-SHORE"
                          }
                        ]
                      },
                      {
                        "Zil": ",SOUTH-SHORE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SOUTH-SHORE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<GO-ON-LAKE>",
                    "Form": [
                      {
                        "Atom": "GO-ON-LAKE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<==? ,HERE ,ON-LAKE>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",ON-LAKE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ON-LAKE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<GOTO ,IN-LAKE>",
                    "Form": [
                      {
                        "Atom": "GOTO"
                      },
                      {
                        "Zil": ",IN-LAKE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "IN-LAKE"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"Just where do you think you are?\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Just where do you think you are?",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LOOK-UNDER>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LOOK-UNDER"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,HERE ,ON-LAKE> <TELL \"You can't quite make out the bottom of the lake from here...\" CR>) (T <TELL \"You can't see under the surface from here.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,HERE ,ON-LAKE>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",ON-LAKE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ON-LAKE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You can't quite make out the bottom of the lake from here...\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can't quite make out the bottom of the lake from here...",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You can't see under the surface from here.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can't see under the surface from here.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4477",
    "Name": "IN-LAKE-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-ENTER> <ENABLE <QUEUE I-IN-LAKE 3>>) (<AND <==? .RARG ,M-BEG> <VERB? TAKE> <NOT <EQUAL? ,PRSO ,SHINY-OBJECT>>> <COND (<G? <WEIGHT ,WINNER> 25> <TELL \"You can't carry that much underwater.\" CR>) (<NOT <FSET? ,PRSO ,TAKEBIT>> <TELL \"You can't take that!\" CR>) (<PROB 30> <TELL \"The \" D ,PRSO \" is yours for a moment, but drops from your grasp.\" CR>)>) (<==? .RARG ,M-END> <COND (<PROB 10> <TELL \"A large and hungry-looking fish is swimming in the neighborhood.\" CR>) (<AND <PROB 4> <NOT ,INVIS>> <QUEUE I-ROC 0> <QUEUE I-ON-LAKE 0> <JIGS-UP \"Oh, no! A tremendous fish just swallowed you whole!\">) (<IN? ,SHINY-OBJECT ,HERE> <COND (<==? ,MOVES ,LAST-MOVES> <RTRUE>) (<PROB 40> <TELL \"Out of the corner of your eye, a small, shiny object appears in the\r\nsand. A moment later, it is gone!\" CR>) (<PROB 70> <TELL \"You catch a brief glimpse of something shiny in the sand.\" CR>) (T <TELL \"Something sparkling in the sand catches your eye for a moment.\" CR>)> <SETG LAST-MOVES ,MOVES>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-ENTER>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-ENTER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-ENTER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-IN-LAKE 3>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-IN-LAKE 3>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-IN-LAKE"
                    },
                    3
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? .RARG ,M-BEG> <VERB? TAKE> <NOT <EQUAL? ,PRSO ,SHINY-OBJECT>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-BEG>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-BEG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-BEG"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<VERB? TAKE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "TAKE"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <EQUAL? ,PRSO ,SHINY-OBJECT>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<EQUAL? ,PRSO ,SHINY-OBJECT>",
                      "Form": [
                        {
                          "Atom": "EQUAL?"
                        },
                        {
                          "Zil": ",PRSO",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "PRSO"
                            }
                          ]
                        },
                        {
                          "Zil": ",SHINY-OBJECT",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "SHINY-OBJECT"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<G? <WEIGHT ,WINNER> 25> <TELL \"You can't carry that much underwater.\" CR>) (<NOT <FSET? ,PRSO ,TAKEBIT>> <TELL \"You can't take that!\" CR>) (<PROB 30> <TELL \"The \" D ,PRSO \" is yours for a moment, but drops from your grasp.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<G? <WEIGHT ,WINNER> 25>",
                    "Form": [
                      {
                        "Atom": "G?"
                      },
                      {
                        "Zil": "<WEIGHT ,WINNER>",
                        "Form": [
                          {
                            "Atom": "WEIGHT"
                          },
                          {
                            "Zil": ",WINNER",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "WINNER"
                              }
                            ]
                          }
                        ]
                      },
                      25
                    ]
                  },
                  {
                    "Zil": "<TELL \"You can't carry that much underwater.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can't carry that much underwater.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<NOT <FSET? ,PRSO ,TAKEBIT>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? ,PRSO ,TAKEBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",TAKEBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "TAKEBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You can't take that!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You can't take that!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<PROB 30>",
                    "Form": [
                      {
                        "Atom": "PROB"
                      },
                      30
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" is yours for a moment, but drops from your grasp.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " is yours for a moment, but drops from your grasp.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<==? .RARG ,M-END>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-END",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-END"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<PROB 10> <TELL \"A large and hungry-looking fish is swimming in the neighborhood.\" CR>) (<AND <PROB 4> <NOT ,INVIS>> <QUEUE I-ROC 0> <QUEUE I-ON-LAKE 0> <JIGS-UP \"Oh, no! A tremendous fish just swallowed you whole!\">) (<IN? ,SHINY-OBJECT ,HERE> <COND (<==? ,MOVES ,LAST-MOVES> <RTRUE>) (<PROB 40> <TELL \"Out of the corner of your eye, a small, shiny object appears in the\r\nsand. A moment later, it is gone!\" CR>) (<PROB 70> <TELL \"You catch a brief glimpse of something shiny in the sand.\" CR>) (T <TELL \"Something sparkling in the sand catches your eye for a moment.\" CR>)> <SETG LAST-MOVES ,MOVES>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<PROB 10>",
                    "Form": [
                      {
                        "Atom": "PROB"
                      },
                      10
                    ]
                  },
                  {
                    "Zil": "<TELL \"A large and hungry-looking fish is swimming in the neighborhood.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "A large and hungry-looking fish is swimming in the neighborhood.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <PROB 4> <NOT ,INVIS>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<PROB 4>",
                        "Form": [
                          {
                            "Atom": "PROB"
                          },
                          4
                        ]
                      },
                      {
                        "Zil": "<NOT ,INVIS>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ",INVIS",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "INVIS"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<QUEUE I-ROC 0>",
                    "Form": [
                      {
                        "Atom": "QUEUE"
                      },
                      {
                        "Atom": "I-ROC"
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<QUEUE I-ON-LAKE 0>",
                    "Form": [
                      {
                        "Atom": "QUEUE"
                      },
                      {
                        "Atom": "I-ON-LAKE"
                      },
                      0
                    ]
                  },
                  {
                    "Zil": "<JIGS-UP \"Oh, no! A tremendous fish just swallowed you whole!\">",
                    "Form": [
                      {
                        "Atom": "JIGS-UP"
                      },
                      "Oh, no! A tremendous fish just swallowed you whole!"
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<IN? ,SHINY-OBJECT ,HERE>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ",SHINY-OBJECT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SHINY-OBJECT"
                          }
                        ]
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<==? ,MOVES ,LAST-MOVES> <RTRUE>) (<PROB 40> <TELL \"Out of the corner of your eye, a small, shiny object appears in the\r\nsand. A moment later, it is gone!\" CR>) (<PROB 70> <TELL \"You catch a brief glimpse of something shiny in the sand.\" CR>) (T <TELL \"Something sparkling in the sand catches your eye for a moment.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<==? ,MOVES ,LAST-MOVES>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": ",MOVES",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "MOVES"
                                }
                              ]
                            },
                            {
                              "Zil": ",LAST-MOVES",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "LAST-MOVES"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<PROB 40>",
                          "Form": [
                            {
                              "Atom": "PROB"
                            },
                            40
                          ]
                        },
                        {
                          "Zil": "<TELL \"Out of the corner of your eye, a small, shiny object appears in the\r\nsand. A moment later, it is gone!\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Out of the corner of your eye, a small, shiny object appears in the\r\nsand. A moment later, it is gone!",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<PROB 70>",
                          "Form": [
                            {
                              "Atom": "PROB"
                            },
                            70
                          ]
                        },
                        {
                          "Zil": "<TELL \"You catch a brief glimpse of something shiny in the sand.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "You catch a brief glimpse of something shiny in the sand.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"Something sparkling in the sand catches your eye for a moment.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "Something sparkling in the sand catches your eye for a moment.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<SETG LAST-MOVES ,MOVES>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "LAST-MOVES"
                      },
                      {
                        "Zil": ",MOVES",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "MOVES"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4515",
    "Name": "I-IN-LAKE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<==? ,HERE ,IN-LAKE> <TELL \"You run out of air and return to the surface.\" CR> <GOTO ,ON-LAKE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,HERE ,IN-LAKE>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",IN-LAKE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "IN-LAKE"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You run out of air and return to the surface.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You run out of air and return to the surface.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<GOTO ,ON-LAKE>",
              "Form": [
                {
                  "Atom": "GOTO"
                },
                {
                  "Zil": ",ON-LAKE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ON-LAKE"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4523",
    "Name": "ON-LAKE-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-ENTER> <QUEUE I-IN-LAKE 0> <COND (<NOT ,LAKE-POINT> <SETG SCORE <+ ,SCORE 1>> <SETG LAKE-POINT T>)>) (<AND <==? .RARG ,M-BEG> <VERB? LEAP> <NOT ,PRSO>> <DO-WALK ,P?DOWN> <RTRUE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-ENTER>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-ENTER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-ENTER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<QUEUE I-IN-LAKE 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-IN-LAKE"
                },
                0
              ]
            },
            {
              "Zil": "<COND (<NOT ,LAKE-POINT> <SETG SCORE <+ ,SCORE 1>> <SETG LAKE-POINT T>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,LAKE-POINT>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",LAKE-POINT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "LAKE-POINT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG SCORE <+ ,SCORE 1>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "SCORE"
                      },
                      {
                        "Zil": "<+ ,SCORE 1>",
                        "Form": [
                          {
                            "Atom": "+"
                          },
                          {
                            "Zil": ",SCORE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "SCORE"
                              }
                            ]
                          },
                          1
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG LAKE-POINT T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "LAKE-POINT"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? .RARG ,M-BEG> <VERB? LEAP> <NOT ,PRSO>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-BEG>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-BEG",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-BEG"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<VERB? LEAP>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "LEAP"
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,PRSO>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<DO-WALK ,P?DOWN>",
              "Form": [
                {
                  "Atom": "DO-WALK"
                },
                {
                  "Zil": ",P?DOWN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "P?DOWN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4535",
    "Name": "GO-ON-LAKE",
    "ArgSpec": "(\"AUX\" F N (TOLD <>))",
    "Body": [
      {
        "Zil": "<COND (<SET F <FIRST? ,WINNER>> <REPEAT () <SET N <NEXT? .F>> <COND (<NOT <FSET? .F ,WEARBIT>> <MOVE .F ,IN-LAKE> <COND (<==? .F ,TORCH> <REMOVE ,TORCH> <MOVE ,FRIED-TORCH ,IN-LAKE>) (<EQUAL? .F ,LAMP> <MOVE ,LAMP ,LOCAL-GLOBALS> <MOVE ,FRIED-LAMP ,IN-LAKE> <SETG CURRENT-LAMP ,FRIED-LAMP>) (<==? .F ,WAYBREAD> <REMOVE ,WAYBREAD>)> <COND (<NOT .TOLD> <SET TOLD T> <TELL \"The shock of entering the frigid water has made you drop all your\r\npossessions into the lake!\" CR>)>)> <COND (<NOT .N> <RETURN>) (T <SET F .N>)>>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<SET F <FIRST? ,WINNER>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "F"
                },
                {
                  "Zil": "<FIRST? ,WINNER>",
                  "Form": [
                    {
                      "Atom": "FIRST?"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REPEAT () <SET N <NEXT? .F>> <COND (<NOT <FSET? .F ,WEARBIT>> <MOVE .F ,IN-LAKE> <COND (<==? .F ,TORCH> <REMOVE ,TORCH> <MOVE ,FRIED-TORCH ,IN-LAKE>) (<EQUAL? .F ,LAMP> <MOVE ,LAMP ,LOCAL-GLOBALS> <MOVE ,FRIED-LAMP ,IN-LAKE> <SETG CURRENT-LAMP ,FRIED-LAMP>) (<==? .F ,WAYBREAD> <REMOVE ,WAYBREAD>)> <COND (<NOT .TOLD> <SET TOLD T> <TELL \"The shock of entering the frigid water has made you drop all your\r\npossessions into the lake!\" CR>)>)> <COND (<NOT .N> <RETURN>) (T <SET F .N>)>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<SET N <NEXT? .F>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "N"
                    },
                    {
                      "Zil": "<NEXT? .F>",
                      "Form": [
                        {
                          "Atom": "NEXT?"
                        },
                        {
                          "Zil": ".F",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "F"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<COND (<NOT <FSET? .F ,WEARBIT>> <MOVE .F ,IN-LAKE> <COND (<==? .F ,TORCH> <REMOVE ,TORCH> <MOVE ,FRIED-TORCH ,IN-LAKE>) (<EQUAL? .F ,LAMP> <MOVE ,LAMP ,LOCAL-GLOBALS> <MOVE ,FRIED-LAMP ,IN-LAKE> <SETG CURRENT-LAMP ,FRIED-LAMP>) (<==? .F ,WAYBREAD> <REMOVE ,WAYBREAD>)> <COND (<NOT .TOLD> <SET TOLD T> <TELL \"The shock of entering the frigid water has made you drop all your\r\npossessions into the lake!\" CR>)>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT <FSET? .F ,WEARBIT>>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": "<FSET? .F ,WEARBIT>",
                            "Form": [
                              {
                                "Atom": "FSET?"
                              },
                              {
                                "Zil": ".F",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "F"
                                  }
                                ]
                              },
                              {
                                "Zil": ",WEARBIT",
                                "Form": [
                                  {
                                    "Atom": "GVAL"
                                  },
                                  {
                                    "Atom": "WEARBIT"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<MOVE .F ,IN-LAKE>",
                        "Form": [
                          {
                            "Atom": "MOVE"
                          },
                          {
                            "Zil": ".F",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "F"
                              }
                            ]
                          },
                          {
                            "Zil": ",IN-LAKE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "IN-LAKE"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<COND (<==? .F ,TORCH> <REMOVE ,TORCH> <MOVE ,FRIED-TORCH ,IN-LAKE>) (<EQUAL? .F ,LAMP> <MOVE ,LAMP ,LOCAL-GLOBALS> <MOVE ,FRIED-LAMP ,IN-LAKE> <SETG CURRENT-LAMP ,FRIED-LAMP>) (<==? .F ,WAYBREAD> <REMOVE ,WAYBREAD>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<==? .F ,TORCH>",
                              "Form": [
                                {
                                  "Atom": "==?"
                                },
                                {
                                  "Zil": ".F",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "F"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",TORCH",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "TORCH"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<REMOVE ,TORCH>",
                              "Form": [
                                {
                                  "Atom": "REMOVE"
                                },
                                {
                                  "Zil": ",TORCH",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "TORCH"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<MOVE ,FRIED-TORCH ,IN-LAKE>",
                              "Form": [
                                {
                                  "Atom": "MOVE"
                                },
                                {
                                  "Zil": ",FRIED-TORCH",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "FRIED-TORCH"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",IN-LAKE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "IN-LAKE"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<EQUAL? .F ,LAMP>",
                              "Form": [
                                {
                                  "Atom": "EQUAL?"
                                },
                                {
                                  "Zil": ".F",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "F"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",LAMP",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "LAMP"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<MOVE ,LAMP ,LOCAL-GLOBALS>",
                              "Form": [
                                {
                                  "Atom": "MOVE"
                                },
                                {
                                  "Zil": ",LAMP",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "LAMP"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",LOCAL-GLOBALS",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "LOCAL-GLOBALS"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<MOVE ,FRIED-LAMP ,IN-LAKE>",
                              "Form": [
                                {
                                  "Atom": "MOVE"
                                },
                                {
                                  "Zil": ",FRIED-LAMP",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "FRIED-LAMP"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",IN-LAKE",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "IN-LAKE"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SETG CURRENT-LAMP ,FRIED-LAMP>",
                              "Form": [
                                {
                                  "Atom": "SETG"
                                },
                                {
                                  "Atom": "CURRENT-LAMP"
                                },
                                {
                                  "Zil": ",FRIED-LAMP",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "FRIED-LAMP"
                                    }
                                  ]
                                }
                              ]
                            }
                          ],
                          [
                            {
                              "Zil": "<==? .F ,WAYBREAD>",
                              "Form": [
                                {
                                  "Atom": "==?"
                                },
                                {
                                  "Zil": ".F",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "F"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",WAYBREAD",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "WAYBREAD"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<REMOVE ,WAYBREAD>",
                              "Form": [
                                {
                                  "Atom": "REMOVE"
                                },
                                {
                                  "Zil": ",WAYBREAD",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "WAYBREAD"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      },
                      {
                        "Zil": "<COND (<NOT .TOLD> <SET TOLD T> <TELL \"The shock of entering the frigid water has made you drop all your\r\npossessions into the lake!\" CR>)>",
                        "Form": [
                          {
                            "Atom": "COND"
                          },
                          [
                            {
                              "Zil": "<NOT .TOLD>",
                              "Form": [
                                {
                                  "Atom": "NOT"
                                },
                                {
                                  "Zil": ".TOLD",
                                  "Form": [
                                    {
                                      "Atom": "LVAL"
                                    },
                                    {
                                      "Atom": "TOLD"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Zil": "<SET TOLD T>",
                              "Form": [
                                {
                                  "Atom": "SET"
                                },
                                {
                                  "Atom": "TOLD"
                                },
                                {
                                  "Atom": "T"
                                }
                              ]
                            },
                            {
                              "Zil": "<TELL \"The shock of entering the frigid water has made you drop all your\r\npossessions into the lake!\" CR>",
                              "Form": [
                                {
                                  "Atom": "TELL"
                                },
                                "The shock of entering the frigid water has made you drop all your\r\npossessions into the lake!",
                                {
                                  "Atom": "CR"
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<COND (<NOT .N> <RETURN>) (T <SET F .N>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT .N>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".N",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "N"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Atom": "T"
                      },
                      {
                        "Zil": "<SET F .N>",
                        "Form": [
                          {
                            "Atom": "SET"
                          },
                          {
                            "Atom": "F"
                          },
                          {
                            "Zil": ".N",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "N"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<COND (<NOT .TOLD> <TELL \"You are nearly paralyzed by the icy waters as you swim into the\r\ncenter of the lake.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT .TOLD>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": ".TOLD",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "TOLD"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are nearly paralyzed by the icy waters as you swim into the\r\ncenter of the lake.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are nearly paralyzed by the icy waters as you swim into the\r\ncenter of the lake.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<CRLF>",
        "Form": [
          {
            "Atom": "CRLF"
          }
        ]
      },
      {
        "Zil": "<GOTO ,ON-LAKE>",
        "Form": [
          {
            "Atom": "GOTO"
          },
          {
            "Zil": ",ON-LAKE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "ON-LAKE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG LAKE-TIME 0>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "LAKE-TIME"
          },
          0
        ]
      },
      {
        "Zil": "<ENABLE <QUEUE I-ON-LAKE -1>>",
        "Form": [
          {
            "Atom": "ENABLE"
          },
          {
            "Zil": "<QUEUE I-ON-LAKE -1>",
            "Form": [
              {
                "Atom": "QUEUE"
              },
              {
                "Atom": "I-ON-LAKE"
              },
              -1
            ]
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4568",
    "Name": "I-ON-LAKE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG LAKE-TIME <+ ,LAKE-TIME 1>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "LAKE-TIME"
          },
          {
            "Zil": "<+ ,LAKE-TIME 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ",LAKE-TIME",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "LAKE-TIME"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<AND <PROB 10> <==? ,HERE ,ON-LAKE> <NOT ,INVIS>> <TELL \"A giant roc, previously hidden among the rocks, is heading right toward you,\r\nits mouth gaping wide!\" CR> <ENABLE <QUEUE I-ROC 2>>) (<NOT <EQUAL? ,HERE ,ON-LAKE ,IN-LAKE>> <QUEUE I-ON-LAKE 0> <QUEUE I-IN-LAKE 0> <QUEUE I-ROC 0> <RFALSE>) (<==? ,LAKE-TIME 4> <TELL \"The icy waters are taking their toll. You will not be able to hold out\r\nmuch longer.\" CR>) (<==? ,LAKE-TIME 6> <TELL \"You are becoming very weak. You had better leave the water before you\r\ndrown!\" CR>) (<==? ,LAKE-TIME 8> <QUEUE I-ON-LAKE 0> <QUEUE I-IN-LAKE 0> <QUEUE I-ROC 0> <JIGS-UP \"Your strength gives out, and you drown in the frigid waters.\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <PROB 10> <==? ,HERE ,ON-LAKE> <NOT ,INVIS>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<PROB 10>",
                  "Form": [
                    {
                      "Atom": "PROB"
                    },
                    10
                  ]
                },
                {
                  "Zil": "<==? ,HERE ,ON-LAKE>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",ON-LAKE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ON-LAKE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,INVIS>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",INVIS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "INVIS"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"A giant roc, previously hidden among the rocks, is heading right toward you,\r\nits mouth gaping wide!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "A giant roc, previously hidden among the rocks, is heading right toward you,\r\nits mouth gaping wide!",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-ROC 2>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-ROC 2>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-ROC"
                    },
                    2
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<NOT <EQUAL? ,HERE ,ON-LAKE ,IN-LAKE>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<EQUAL? ,HERE ,ON-LAKE ,IN-LAKE>",
                  "Form": [
                    {
                      "Atom": "EQUAL?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",ON-LAKE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ON-LAKE"
                        }
                      ]
                    },
                    {
                      "Zil": ",IN-LAKE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "IN-LAKE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<QUEUE I-ON-LAKE 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-ON-LAKE"
                },
                0
              ]
            },
            {
              "Zil": "<QUEUE I-IN-LAKE 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-IN-LAKE"
                },
                0
              ]
            },
            {
              "Zil": "<QUEUE I-ROC 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-ROC"
                },
                0
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,LAKE-TIME 4>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",LAKE-TIME",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LAKE-TIME"
                    }
                  ]
                },
                4
              ]
            },
            {
              "Zil": "<TELL \"The icy waters are taking their toll. You will not be able to hold out\r\nmuch longer.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The icy waters are taking their toll. You will not be able to hold out\r\nmuch longer.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,LAKE-TIME 6>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",LAKE-TIME",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LAKE-TIME"
                    }
                  ]
                },
                6
              ]
            },
            {
              "Zil": "<TELL \"You are becoming very weak. You had better leave the water before you\r\ndrown!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are becoming very weak. You had better leave the water before you\r\ndrown!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<==? ,LAKE-TIME 8>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",LAKE-TIME",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LAKE-TIME"
                    }
                  ]
                },
                8
              ]
            },
            {
              "Zil": "<QUEUE I-ON-LAKE 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-ON-LAKE"
                },
                0
              ]
            },
            {
              "Zil": "<QUEUE I-IN-LAKE 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-IN-LAKE"
                },
                0
              ]
            },
            {
              "Zil": "<QUEUE I-ROC 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-ROC"
                },
                0
              ]
            },
            {
              "Zil": "<JIGS-UP \"Your strength gives out, and you drown in the frigid waters.\">",
              "Form": [
                {
                  "Atom": "JIGS-UP"
                },
                "Your strength gives out, and you drown in the frigid waters."
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4595",
    "Name": "I-ROC",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <==? ,HERE ,ON-LAKE> <NOT ,INVIS>> <QUEUE I-ON-LAKE 0> <QUEUE I-IN-LAKE 0> <JIGS-UP \"The roc snatches you in its jaws and has you for lunch.\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <==? ,HERE ,ON-LAKE> <NOT ,INVIS>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? ,HERE ,ON-LAKE>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",ON-LAKE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ON-LAKE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,INVIS>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",INVIS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "INVIS"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<QUEUE I-ON-LAKE 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-ON-LAKE"
                },
                0
              ]
            },
            {
              "Zil": "<QUEUE I-IN-LAKE 0>",
              "Form": [
                {
                  "Atom": "QUEUE"
                },
                {
                  "Atom": "I-IN-LAKE"
                },
                0
              ]
            },
            {
              "Zil": "<JIGS-UP \"The roc snatches you in its jaws and has you for lunch.\">",
              "Form": [
                {
                  "Atom": "JIGS-UP"
                },
                "The roc snatches you in its jaws and has you for lunch."
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4602",
    "Name": "SHINY-OBJECT-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? TAKE FIND> <NOT <IN? ,AMULET ,WINNER>>> <COND (<PROB 50> <REMOVE ,SHINY-OBJECT> <MOVE ,AMULET ,WINNER> <THIS-IS-IT ,AMULET> <FCLEAR ,AMULET ,NDESCBIT> <TELL \"You reach the shiny object. It is a simple golden amulet!\" CR>) (T <TELL \"The shiny object slips from your grasp and back onto the floor of\r\nthe lake, where it is covered in sand.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? TAKE FIND> <NOT <IN? ,AMULET ,WINNER>>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? TAKE FIND>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "TAKE"
                    },
                    {
                      "Atom": "FIND"
                    }
                  ]
                },
                {
                  "Zil": "<NOT <IN? ,AMULET ,WINNER>>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": "<IN? ,AMULET ,WINNER>",
                      "Form": [
                        {
                          "Atom": "IN?"
                        },
                        {
                          "Zil": ",AMULET",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "AMULET"
                            }
                          ]
                        },
                        {
                          "Zil": ",WINNER",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "WINNER"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<PROB 50> <REMOVE ,SHINY-OBJECT> <MOVE ,AMULET ,WINNER> <THIS-IS-IT ,AMULET> <FCLEAR ,AMULET ,NDESCBIT> <TELL \"You reach the shiny object. It is a simple golden amulet!\" CR>) (T <TELL \"The shiny object slips from your grasp and back onto the floor of\r\nthe lake, where it is covered in sand.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<PROB 50>",
                    "Form": [
                      {
                        "Atom": "PROB"
                      },
                      50
                    ]
                  },
                  {
                    "Zil": "<REMOVE ,SHINY-OBJECT>",
                    "Form": [
                      {
                        "Atom": "REMOVE"
                      },
                      {
                        "Zil": ",SHINY-OBJECT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "SHINY-OBJECT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<MOVE ,AMULET ,WINNER>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ",AMULET",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "AMULET"
                          }
                        ]
                      },
                      {
                        "Zil": ",WINNER",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "WINNER"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<THIS-IS-IT ,AMULET>",
                    "Form": [
                      {
                        "Atom": "THIS-IS-IT"
                      },
                      {
                        "Zil": ",AMULET",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "AMULET"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,AMULET ,NDESCBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",AMULET",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "AMULET"
                          }
                        ]
                      },
                      {
                        "Zil": ",NDESCBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "NDESCBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You reach the shiny object. It is a simple golden amulet!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You reach the shiny object. It is a simple golden amulet!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The shiny object slips from your grasp and back onto the floor of\r\nthe lake, where it is covered in sand.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The shiny object slips from your grasp and back onto the floor of\r\nthe lake, where it is covered in sand.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4616",
    "Name": "SAND-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? DIG> <TELL \"You don't come across anything unusual.\" CR>) (<VERB? EXAMINE> <TELL \"There is nothing notable on the floor of the lake, except some plants\r\nand algae.\" CR>) (<VERB? TAKE> <TELL \"It slips through your fingers.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? DIG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "DIG"
                }
              ]
            },
            {
              "Zil": "<TELL \"You don't come across anything unusual.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You don't come across anything unusual.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"There is nothing notable on the floor of the lake, except some plants\r\nand algae.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is nothing notable on the floor of the lake, except some plants\r\nand algae.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? TAKE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TAKE"
                }
              ]
            },
            {
              "Zil": "<TELL \"It slips through your fingers.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It slips through your fingers.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4626",
    "Name": "ALGAE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EAT> <TELL \"Yeecchhhh!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EAT>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EAT"
                }
              ]
            },
            {
              "Zil": "<TELL \"Yeecchhhh!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Yeecchhhh!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4629",
    "Name": "FRIED-LAMP-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? LAMP-ON> <TELL \"The lamp isn't functioning (probably from having gotten wet).\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? LAMP-ON>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LAMP-ON"
                }
              ]
            },
            {
              "Zil": "<TELL \"The lamp isn't functioning (probably from having gotten wet).\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The lamp isn't functioning (probably from having gotten wet).",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4636",
    "Name": "I-VIEW-SNAP",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"You suddenly find yourself back in the viewing room!\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "You suddenly find yourself back in the viewing room!",
          {
            "Atom": "CR"
          }
        ]
      },
      {
        "Zil": "<GOTO ,VIEW-ROOM <>>",
        "Form": [
          {
            "Atom": "GOTO"
          },
          {
            "Zil": ",VIEW-ROOM",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "VIEW-ROOM"
              }
            ]
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<RTRUE>",
        "Form": [
          {
            "Atom": "RTRUE"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4641",
    "Name": "VIEWING-TABLE-F",
    "ArgSpec": "(\"AUX\" L)",
    "Body": [
      {
        "Zil": "<COND (<VERB? RUB> <SETG SCORE <+ ,SCORE ,VIEW-POINT>> <SETG VIEW-POINT 0> <TELL \"You touch the table and are instantly transported to another place!\" CR> <CRLF> <ENABLE <QUEUE I-VIEW-SNAP 3>> <GOTO <GET ,VIEW-ROOMS ,ACTIVE-VIEW>> <RTRUE>) (<VERB? EXAMINE LOOK-INSIDE> <TELL \"The surface is pale and featureless, but slowly, an image takes shape!\" CR> <TELL <GET ,VIEWS ,ACTIVE-VIEW> CR> <TELL \"The image slowly fades.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? RUB>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "RUB"
                }
              ]
            },
            {
              "Zil": "<SETG SCORE <+ ,SCORE ,VIEW-POINT>>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "SCORE"
                },
                {
                  "Zil": "<+ ,SCORE ,VIEW-POINT>",
                  "Form": [
                    {
                      "Atom": "+"
                    },
                    {
                      "Zil": ",SCORE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "SCORE"
                        }
                      ]
                    },
                    {
                      "Zil": ",VIEW-POINT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VIEW-POINT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG VIEW-POINT 0>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "VIEW-POINT"
                },
                0
              ]
            },
            {
              "Zil": "<TELL \"You touch the table and are instantly transported to another place!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You touch the table and are instantly transported to another place!",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-VIEW-SNAP 3>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-VIEW-SNAP 3>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-VIEW-SNAP"
                    },
                    3
                  ]
                }
              ]
            },
            {
              "Zil": "<GOTO <GET ,VIEW-ROOMS ,ACTIVE-VIEW>>",
              "Form": [
                {
                  "Atom": "GOTO"
                },
                {
                  "Zil": "<GET ,VIEW-ROOMS ,ACTIVE-VIEW>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",VIEW-ROOMS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VIEW-ROOMS"
                        }
                      ]
                    },
                    {
                      "Zil": ",ACTIVE-VIEW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ACTIVE-VIEW"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE LOOK-INSIDE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                },
                {
                  "Atom": "LOOK-INSIDE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The surface is pale and featureless, but slowly, an image takes shape!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The surface is pale and featureless, but slowly, an image takes shape!",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<TELL <GET ,VIEWS ,ACTIVE-VIEW> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<GET ,VIEWS ,ACTIVE-VIEW>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",VIEWS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VIEWS"
                        }
                      ]
                    },
                    {
                      "Zil": ",ACTIVE-VIEW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ACTIVE-VIEW"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<TELL \"The image slowly fades.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The image slowly fades.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4658",
    "Name": "I-VIEW-CHANGE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG ACTIVE-VIEW <+ ,ACTIVE-VIEW 1>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "ACTIVE-VIEW"
          },
          {
            "Zil": "<+ ,ACTIVE-VIEW 1>",
            "Form": [
              {
                "Atom": "+"
              },
              {
                "Zil": ",ACTIVE-VIEW",
                "Form": [
                  {
                    "Atom": "GVAL"
                  },
                  {
                    "Atom": "ACTIVE-VIEW"
                  }
                ]
              },
              1
            ]
          }
        ]
      },
      {
        "Zil": "<COND (<==? ,ACTIVE-VIEW 5> <SETG ACTIVE-VIEW 1>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,ACTIVE-VIEW 5>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",ACTIVE-VIEW",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "ACTIVE-VIEW"
                    }
                  ]
                },
                5
              ]
            },
            {
              "Zil": "<SETG ACTIVE-VIEW 1>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "ACTIVE-VIEW"
                },
                1
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<QUEUE I-VIEW-CHANGE 4>",
        "Form": [
          {
            "Atom": "QUEUE"
          },
          {
            "Atom": "I-VIEW-CHANGE"
          },
          4
        ]
      },
      {
        "Zil": "<COND (<==? ,HERE ,VIEW-ROOM> <TELL \"The indicator above the table flickers briefly, then changes to \\\"\"> <TELL <GET ,VIEW-ROMANS ,ACTIVE-VIEW> \"\\\".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,HERE ,VIEW-ROOM>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",VIEW-ROOM",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "VIEW-ROOM"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The indicator above the table flickers briefly, then changes to \\\"\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The indicator above the table flickers briefly, then changes to \""
              ]
            },
            {
              "Zil": "<TELL <GET ,VIEW-ROMANS ,ACTIVE-VIEW> \"\\\".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<GET ,VIEW-ROMANS ,ACTIVE-VIEW>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",VIEW-ROMANS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VIEW-ROMANS"
                        }
                      ]
                    },
                    {
                      "Zil": ",ACTIVE-VIEW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ACTIVE-VIEW"
                        }
                      ]
                    }
                  ]
                },
                "\".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4667",
    "Name": "VIEW-ROOM-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"You are in a small chamber carved in the rock, with the sole exit to the\r\nnorth. Mounted on one wall is a table labelled \\\"Scenic Vista,\\\" whose\r\nfeatureless surface is angled toward you. One might believe that the table\r\nwas used to indicate points of interest in the view from this spot, like those\r\nfound in many parks. On the other hand, your surroundings are far from\r\nspacious and by no stretch of the imagination could this spot be considered\r\nscenic. An indicator above the table reads \\\"\"> <TELL <GET ,VIEW-ROMANS ,ACTIVE-VIEW> \"\\\".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are in a small chamber carved in the rock, with the sole exit to the\r\nnorth. Mounted on one wall is a table labelled \\\"Scenic Vista,\\\" whose\r\nfeatureless surface is angled toward you. One might believe that the table\r\nwas used to indicate points of interest in the view from this spot, like those\r\nfound in many parks. On the other hand, your surroundings are far from\r\nspacious and by no stretch of the imagination could this spot be considered\r\nscenic. An indicator above the table reads \\\"\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are in a small chamber carved in the rock, with the sole exit to the\r\nnorth. Mounted on one wall is a table labelled \"Scenic Vista,\" whose\r\nfeatureless surface is angled toward you. One might believe that the table\r\nwas used to indicate points of interest in the view from this spot, like those\r\nfound in many parks. On the other hand, your surroundings are far from\r\nspacious and by no stretch of the imagination could this spot be considered\r\nscenic. An indicator above the table reads \""
              ]
            },
            {
              "Zil": "<TELL <GET ,VIEW-ROMANS ,ACTIVE-VIEW> \"\\\".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<GET ,VIEW-ROMANS ,ACTIVE-VIEW>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",VIEW-ROMANS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VIEW-ROMANS"
                        }
                      ]
                    },
                    {
                      "Zil": ",ACTIVE-VIEW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ACTIVE-VIEW"
                        }
                      ]
                    }
                  ]
                },
                "\".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4697",
    "Name": "CLIFF-OBJECT-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<==? ,HERE ,CLIFF> <COND (<VERB? LEAP> <JIGS-UP \"You should have looked before you leaped.\">) (<VERB? CLIMB-DOWN> <COND (,ROPE-FLAG <GOTO ,CLIFF-LEDGE> <RTRUE>) (T <TELL \"The fall would kill you.\" CR>)>) (<AND <VERB? THROW-OFF> <==? ,PRSI ,CLIFF-OBJECT>> <COND (<==? ,PRSO ,ROPE> <TELL \"The rope is dangling over the side of the cliff already.\" CR> <RTRUE>) (<NOT <IN? ,PRSO ,WINNER>> <TELL \"You aren't holding the \" D ,PRSO \".\" CR> <RTRUE>)> <MOVE ,PRSO ,CLIFF-LEDGE> <TELL \"The \" D ,PRSO \" goes over the cliff and lands among the rocks below.\" CR> <COND (<==? ,PRSO ,LAMP> <REMOVE ,PRSO> <MOVE ,BROKEN-LAMP ,CLIFF-LEDGE> <SETG CURRENT-LAMP ,BROKEN-LAMP>) (<==? ,PRSO ,STAFF> <REMOVE ,PRSO> <MOVE ,BROKEN-STAFF ,CLIFF-LEDGE>)> <RTRUE>)>) (<VERB? CLIMB-UP> <TELL \"You haven't enough strength to climb the cliff.\" CR>) (T <TELL \"The cliff is above you!\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,HERE ,CLIFF>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",CLIFF",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "CLIFF"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<VERB? LEAP> <JIGS-UP \"You should have looked before you leaped.\">) (<VERB? CLIMB-DOWN> <COND (,ROPE-FLAG <GOTO ,CLIFF-LEDGE> <RTRUE>) (T <TELL \"The fall would kill you.\" CR>)>) (<AND <VERB? THROW-OFF> <==? ,PRSI ,CLIFF-OBJECT>> <COND (<==? ,PRSO ,ROPE> <TELL \"The rope is dangling over the side of the cliff already.\" CR> <RTRUE>) (<NOT <IN? ,PRSO ,WINNER>> <TELL \"You aren't holding the \" D ,PRSO \".\" CR> <RTRUE>)> <MOVE ,PRSO ,CLIFF-LEDGE> <TELL \"The \" D ,PRSO \" goes over the cliff and lands among the rocks below.\" CR> <COND (<==? ,PRSO ,LAMP> <REMOVE ,PRSO> <MOVE ,BROKEN-LAMP ,CLIFF-LEDGE> <SETG CURRENT-LAMP ,BROKEN-LAMP>) (<==? ,PRSO ,STAFF> <REMOVE ,PRSO> <MOVE ,BROKEN-STAFF ,CLIFF-LEDGE>)> <RTRUE>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<VERB? LEAP>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "LEAP"
                      }
                    ]
                  },
                  {
                    "Zil": "<JIGS-UP \"You should have looked before you leaped.\">",
                    "Form": [
                      {
                        "Atom": "JIGS-UP"
                      },
                      "You should have looked before you leaped."
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<VERB? CLIMB-DOWN>",
                    "Form": [
                      {
                        "Atom": "VERB?"
                      },
                      {
                        "Atom": "CLIMB-DOWN"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (,ROPE-FLAG <GOTO ,CLIFF-LEDGE> <RTRUE>) (T <TELL \"The fall would kill you.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ",ROPE-FLAG",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "ROPE-FLAG"
                            }
                          ]
                        },
                        {
                          "Zil": "<GOTO ,CLIFF-LEDGE>",
                          "Form": [
                            {
                              "Atom": "GOTO"
                            },
                            {
                              "Zil": ",CLIFF-LEDGE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "CLIFF-LEDGE"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"The fall would kill you.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The fall would kill you.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<AND <VERB? THROW-OFF> <==? ,PRSI ,CLIFF-OBJECT>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<VERB? THROW-OFF>",
                        "Form": [
                          {
                            "Atom": "VERB?"
                          },
                          {
                            "Atom": "THROW-OFF"
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,PRSI ,CLIFF-OBJECT>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",PRSI",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSI"
                              }
                            ]
                          },
                          {
                            "Zil": ",CLIFF-OBJECT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "CLIFF-OBJECT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<==? ,PRSO ,ROPE> <TELL \"The rope is dangling over the side of the cliff already.\" CR> <RTRUE>) (<NOT <IN? ,PRSO ,WINNER>> <TELL \"You aren't holding the \" D ,PRSO \".\" CR> <RTRUE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<==? ,PRSO ,ROPE>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",ROPE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "ROPE"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The rope is dangling over the side of the cliff already.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The rope is dangling over the side of the cliff already.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<NOT <IN? ,PRSO ,WINNER>>",
                          "Form": [
                            {
                              "Atom": "NOT"
                            },
                            {
                              "Zil": "<IN? ,PRSO ,WINNER>",
                              "Form": [
                                {
                                  "Atom": "IN?"
                                },
                                {
                                  "Zil": ",PRSO",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "PRSO"
                                    }
                                  ]
                                },
                                {
                                  "Zil": ",WINNER",
                                  "Form": [
                                    {
                                      "Atom": "GVAL"
                                    },
                                    {
                                      "Atom": "WINNER"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"You aren't holding the \" D ,PRSO \".\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "You aren't holding the ",
                            {
                              "Atom": "D"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            ".",
                            {
                              "Atom": "CR"
                            }
                          ]
                        },
                        {
                          "Zil": "<RTRUE>",
                          "Form": [
                            {
                              "Atom": "RTRUE"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<MOVE ,PRSO ,CLIFF-LEDGE>",
                    "Form": [
                      {
                        "Atom": "MOVE"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",CLIFF-LEDGE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "CLIFF-LEDGE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The \" D ,PRSO \" goes over the cliff and lands among the rocks below.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The ",
                      {
                        "Atom": "D"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      " goes over the cliff and lands among the rocks below.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (<==? ,PRSO ,LAMP> <REMOVE ,PRSO> <MOVE ,BROKEN-LAMP ,CLIFF-LEDGE> <SETG CURRENT-LAMP ,BROKEN-LAMP>) (<==? ,PRSO ,STAFF> <REMOVE ,PRSO> <MOVE ,BROKEN-STAFF ,CLIFF-LEDGE>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<==? ,PRSO ,LAMP>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",LAMP",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "LAMP"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<REMOVE ,PRSO>",
                          "Form": [
                            {
                              "Atom": "REMOVE"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<MOVE ,BROKEN-LAMP ,CLIFF-LEDGE>",
                          "Form": [
                            {
                              "Atom": "MOVE"
                            },
                            {
                              "Zil": ",BROKEN-LAMP",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "BROKEN-LAMP"
                                }
                              ]
                            },
                            {
                              "Zil": ",CLIFF-LEDGE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "CLIFF-LEDGE"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG CURRENT-LAMP ,BROKEN-LAMP>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "CURRENT-LAMP"
                            },
                            {
                              "Zil": ",BROKEN-LAMP",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "BROKEN-LAMP"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Zil": "<==? ,PRSO ,STAFF>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            },
                            {
                              "Zil": ",STAFF",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "STAFF"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<REMOVE ,PRSO>",
                          "Form": [
                            {
                              "Atom": "REMOVE"
                            },
                            {
                              "Zil": ",PRSO",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSO"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<MOVE ,BROKEN-STAFF ,CLIFF-LEDGE>",
                          "Form": [
                            {
                              "Atom": "MOVE"
                            },
                            {
                              "Zil": ",BROKEN-STAFF",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "BROKEN-STAFF"
                                }
                              ]
                            },
                            {
                              "Zil": ",CLIFF-LEDGE",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "CLIFF-LEDGE"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? CLIMB-UP>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CLIMB-UP"
                }
              ]
            },
            {
              "Zil": "<TELL \"You haven't enough strength to climb the cliff.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You haven't enough strength to climb the cliff.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Atom": "T"
            },
            {
              "Zil": "<TELL \"The cliff is above you!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The cliff is above you!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4731",
    "Name": "TREE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? CLIMB-UP CLIMB-FOO> <TELL \"The trunks are too large for you to climb them.\" CR>) (<AND <VERB? EXAMINE LOOK-INSIDE> <NOT ,MAN-SEEN>> <TELL \"There seems to be nobody there, but it's hard to tell.\" CR>) (<VERB? BURN> <JIGS-UP \"Smokey the Bear puts out both the fire and you.\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? CLIMB-UP CLIMB-FOO>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CLIMB-UP"
                },
                {
                  "Atom": "CLIMB-FOO"
                }
              ]
            },
            {
              "Zil": "<TELL \"The trunks are too large for you to climb them.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The trunks are too large for you to climb them.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? EXAMINE LOOK-INSIDE> <NOT ,MAN-SEEN>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? EXAMINE LOOK-INSIDE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "EXAMINE"
                    },
                    {
                      "Atom": "LOOK-INSIDE"
                    }
                  ]
                },
                {
                  "Zil": "<NOT ,MAN-SEEN>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",MAN-SEEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "MAN-SEEN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"There seems to be nobody there, but it's hard to tell.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There seems to be nobody there, but it's hard to tell.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? BURN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "BURN"
                }
              ]
            },
            {
              "Zil": "<JIGS-UP \"Smokey the Bear puts out both the fire and you.\">",
              "Form": [
                {
                  "Atom": "JIGS-UP"
                },
                "Smokey the Bear puts out both the fire and you."
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4741",
    "Name": "FRIED-TORCH-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? LAMP-ON> <TELL \"It's hopeless. The torch is wet.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? LAMP-ON>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LAMP-ON"
                }
              ]
            },
            {
              "Zil": "<TELL \"It's hopeless. The torch is wet.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's hopeless. The torch is wet.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4745",
    "Name": "TORCH-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? LAMP-ON> <COND (<FSET? ,TORCH ,ONBIT> <TELL \"It's already lit.\" CR>) (T <TELL \"You have nothing to light it with.\" CR>)>) (<VERB? LAMP-OFF> <COND (<FSET? ,TORCH ,ONBIT> <TELL \"You manage to extinguish the flame.\" CR> <FCLEAR ,TORCH ,ONBIT>) (T <TELL \"It has already been extinguished.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? LAMP-ON>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LAMP-ON"
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,TORCH ,ONBIT> <TELL \"It's already lit.\" CR>) (T <TELL \"You have nothing to light it with.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,TORCH ,ONBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",TORCH",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TORCH"
                          }
                        ]
                      },
                      {
                        "Zil": ",ONBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ONBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"It's already lit.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It's already lit.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You have nothing to light it with.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You have nothing to light it with.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LAMP-OFF>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LAMP-OFF"
                }
              ]
            },
            {
              "Zil": "<COND (<FSET? ,TORCH ,ONBIT> <TELL \"You manage to extinguish the flame.\" CR> <FCLEAR ,TORCH ,ONBIT>) (T <TELL \"It has already been extinguished.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<FSET? ,TORCH ,ONBIT>",
                    "Form": [
                      {
                        "Atom": "FSET?"
                      },
                      {
                        "Zil": ",TORCH",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TORCH"
                          }
                        ]
                      },
                      {
                        "Zil": ",ONBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ONBIT"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"You manage to extinguish the flame.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You manage to extinguish the flame.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  },
                  {
                    "Zil": "<FCLEAR ,TORCH ,ONBIT>",
                    "Form": [
                      {
                        "Atom": "FCLEAR"
                      },
                      {
                        "Zil": ",TORCH",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "TORCH"
                          }
                        ]
                      },
                      {
                        "Zil": ",ONBIT",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "ONBIT"
                          }
                        ]
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"It has already been extinguished.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "It has already been extinguished.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4835",
    "Name": "NO-OBJS",
    "ArgSpec": "(RARG \"AUX\" F)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-BEG> <SET F <FIRST? ,WINNER>> <SETG EMPTY-HANDED T> <REPEAT () <COND (<NOT .F> <RETURN>) (<G? <WEIGHT .F> 4> <SETG EMPTY-HANDED <>> <RETURN>)> <SET F <NEXT? .F>>> <RFALSE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-BEG>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-BEG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-BEG"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SET F <FIRST? ,WINNER>>",
              "Form": [
                {
                  "Atom": "SET"
                },
                {
                  "Atom": "F"
                },
                {
                  "Zil": "<FIRST? ,WINNER>",
                  "Form": [
                    {
                      "Atom": "FIRST?"
                    },
                    {
                      "Zil": ",WINNER",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "WINNER"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG EMPTY-HANDED T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "EMPTY-HANDED"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<REPEAT () <COND (<NOT .F> <RETURN>) (<G? <WEIGHT .F> 4> <SETG EMPTY-HANDED <>> <RETURN>)> <SET F <NEXT? .F>>>",
              "Form": [
                {
                  "Atom": "REPEAT"
                },
                [],
                {
                  "Zil": "<COND (<NOT .F> <RETURN>) (<G? <WEIGHT .F> 4> <SETG EMPTY-HANDED <>> <RETURN>)>",
                  "Form": [
                    {
                      "Atom": "COND"
                    },
                    [
                      {
                        "Zil": "<NOT .F>",
                        "Form": [
                          {
                            "Atom": "NOT"
                          },
                          {
                            "Zil": ".F",
                            "Form": [
                              {
                                "Atom": "LVAL"
                              },
                              {
                                "Atom": "F"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ],
                    [
                      {
                        "Zil": "<G? <WEIGHT .F> 4>",
                        "Form": [
                          {
                            "Atom": "G?"
                          },
                          {
                            "Zil": "<WEIGHT .F>",
                            "Form": [
                              {
                                "Atom": "WEIGHT"
                              },
                              {
                                "Zil": ".F",
                                "Form": [
                                  {
                                    "Atom": "LVAL"
                                  },
                                  {
                                    "Atom": "F"
                                  }
                                ]
                              }
                            ]
                          },
                          4
                        ]
                      },
                      {
                        "Zil": "<SETG EMPTY-HANDED <>>",
                        "Form": [
                          {
                            "Atom": "SETG"
                          },
                          {
                            "Atom": "EMPTY-HANDED"
                          },
                          {
                            "Zil": "<>",
                            "Form": []
                          }
                        ]
                      },
                      {
                        "Zil": "<RETURN>",
                        "Form": [
                          {
                            "Atom": "RETURN"
                          }
                        ]
                      }
                    ]
                  ]
                },
                {
                  "Zil": "<SET F <NEXT? .F>>",
                  "Form": [
                    {
                      "Atom": "SET"
                    },
                    {
                      "Atom": "F"
                    },
                    {
                      "Zil": "<NEXT? .F>",
                      "Form": [
                        {
                          "Atom": "NEXT?"
                        },
                        {
                          "Zil": ".F",
                          "Form": [
                            {
                              "Atom": "LVAL"
                            },
                            {
                              "Atom": "F"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RFALSE>",
              "Form": [
                {
                  "Atom": "RFALSE"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4878",
    "Name": "REPELLENT-FCN",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? SHAKE> <COND (,SPRAY-USED? <TELL \"The can seems empty.\" CR>) (T <TELL \"There is a sloshing sound from inside.\" CR>)>) (<VERB? BURN> <JIGS-UP \"The can explodes and you die a horribly smelly death.\">) (<AND <VERB? SPRAY PUT-ON> <==? ,PRSO ,REPELLENT>> <COND (,SPRAY-USED? <TELL \"The repellent is all gone.\" CR>) (<NOT ,PRSI> <SETG SPRAY-USED? T> <TELL \"The spray stinks amazingly for a few moments, then drifts away.\" CR>) (ELSE <COND (<==? ,PRSI ,ME> <ENABLE <QUEUE I-SPRAY 5>> <SETG SPRAYED? T>)> <SETG SPRAY-USED? T> <TELL \"The spray smells like a mixture of old socks and burning rubber. If\r\nI were a grue I'd sure stay clear!\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? SHAKE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "SHAKE"
                }
              ]
            },
            {
              "Zil": "<COND (,SPRAY-USED? <TELL \"The can seems empty.\" CR>) (T <TELL \"There is a sloshing sound from inside.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",SPRAY-USED?",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "SPRAY-USED?"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The can seems empty.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The can seems empty.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"There is a sloshing sound from inside.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "There is a sloshing sound from inside.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? BURN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "BURN"
                }
              ]
            },
            {
              "Zil": "<JIGS-UP \"The can explodes and you die a horribly smelly death.\">",
              "Form": [
                {
                  "Atom": "JIGS-UP"
                },
                "The can explodes and you die a horribly smelly death."
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? SPRAY PUT-ON> <==? ,PRSO ,REPELLENT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? SPRAY PUT-ON>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "SPRAY"
                    },
                    {
                      "Atom": "PUT-ON"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSO ,REPELLENT>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",REPELLENT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "REPELLENT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (,SPRAY-USED? <TELL \"The repellent is all gone.\" CR>) (<NOT ,PRSI> <SETG SPRAY-USED? T> <TELL \"The spray stinks amazingly for a few moments, then drifts away.\" CR>) (ELSE <COND (<==? ,PRSI ,ME> <ENABLE <QUEUE I-SPRAY 5>> <SETG SPRAYED? T>)> <SETG SPRAY-USED? T> <TELL \"The spray smells like a mixture of old socks and burning rubber. If\r\nI were a grue I'd sure stay clear!\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",SPRAY-USED?",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "SPRAY-USED?"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The repellent is all gone.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The repellent is all gone.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<NOT ,PRSI>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",PRSI",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSI"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<SETG SPRAY-USED? T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "SPRAY-USED?"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The spray stinks amazingly for a few moments, then drifts away.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The spray stinks amazingly for a few moments, then drifts away.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "ELSE"
                  },
                  {
                    "Zil": "<COND (<==? ,PRSI ,ME> <ENABLE <QUEUE I-SPRAY 5>> <SETG SPRAYED? T>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": "<==? ,PRSI ,ME>",
                          "Form": [
                            {
                              "Atom": "==?"
                            },
                            {
                              "Zil": ",PRSI",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "PRSI"
                                }
                              ]
                            },
                            {
                              "Zil": ",ME",
                              "Form": [
                                {
                                  "Atom": "GVAL"
                                },
                                {
                                  "Atom": "ME"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<ENABLE <QUEUE I-SPRAY 5>>",
                          "Form": [
                            {
                              "Atom": "ENABLE"
                            },
                            {
                              "Zil": "<QUEUE I-SPRAY 5>",
                              "Form": [
                                {
                                  "Atom": "QUEUE"
                                },
                                {
                                  "Atom": "I-SPRAY"
                                },
                                5
                              ]
                            }
                          ]
                        },
                        {
                          "Zil": "<SETG SPRAYED? T>",
                          "Form": [
                            {
                              "Atom": "SETG"
                            },
                            {
                              "Atom": "SPRAYED?"
                            },
                            {
                              "Atom": "T"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<SETG SPRAY-USED? T>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "SPRAY-USED?"
                      },
                      {
                        "Atom": "T"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The spray smells like a mixture of old socks and burning rubber. If\r\nI were a grue I'd sure stay clear!\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The spray smells like a mixture of old socks and burning rubber. If\r\nI were a grue I'd sure stay clear!",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4904",
    "Name": "I-SPRAY",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG SPRAYED? <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "SPRAYED?"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<TELL \"That horrible smell is much less pungent now.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "That horrible smell is much less pungent now.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:4916",
    "Name": "ZORK-IV-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-ENTER> <JIGS-UP \"Sacrificial Altar|\r\nThis is the interior of a huge temple of primitive construction. A few\r\nflickering torches cast a sallow illumination over the altar, which is\r\nstill drenched with the blood of human sacrifice. Behind the altar is an\r\nenormous statue of a demon which seems to reach towards you with\r\ndripping fangs and razor-sharp talons. A low noise begins behind you,\r\nand you turn to see hundreds of hunched and hairy shapes. A guttural\r\nchant issues from their throats. Near you stands a figure draped in a\r\nrobe of deepest black, brandishing a huge sword. The chant grows louder\r\nas the robed figure approaches the altar. The large figure spots you and\r\napproaches menacingly. It reaches into its cloak and pulls out a great,\r\nglowing dagger. It pulls you onto the altar and, with a murmur of\r\napproval from the throng, slices you neatly across your abdomen.\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-ENTER>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-ENTER",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-ENTER"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<JIGS-UP \"Sacrificial Altar|\r\nThis is the interior of a huge temple of primitive construction. A few\r\nflickering torches cast a sallow illumination over the altar, which is\r\nstill drenched with the blood of human sacrifice. Behind the altar is an\r\nenormous statue of a demon which seems to reach towards you with\r\ndripping fangs and razor-sharp talons. A low noise begins behind you,\r\nand you turn to see hundreds of hunched and hairy shapes. A guttural\r\nchant issues from their throats. Near you stands a figure draped in a\r\nrobe of deepest black, brandishing a huge sword. The chant grows louder\r\nas the robed figure approaches the altar. The large figure spots you and\r\napproaches menacingly. It reaches into its cloak and pulls out a great,\r\nglowing dagger. It pulls you onto the altar and, with a murmur of\r\napproval from the throng, slices you neatly across your abdomen.\">",
              "Form": [
                {
                  "Atom": "JIGS-UP"
                },
                "Sacrificial Altar|\r\nThis is the interior of a huge temple of primitive construction. A few\r\nflickering torches cast a sallow illumination over the altar, which is\r\nstill drenched with the blood of human sacrifice. Behind the altar is an\r\nenormous statue of a demon which seems to reach towards you with\r\ndripping fangs and razor-sharp talons. A low noise begins behind you,\r\nand you turn to see hundreds of hunched and hairy shapes. A guttural\r\nchant issues from their throats. Near you stands a figure draped in a\r\nrobe of deepest black, brandishing a huge sword. The chant grows louder\r\nas the robed figure approaches the altar. The large figure spots you and\r\napproaches menacingly. It reaches into its cloak and pulls out a great,\r\nglowing dagger. It pulls you onto the altar and, with a murmur of\r\napproval from the throng, slices you neatly across your abdomen."
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5036",
    "Name": "AQUEDUCT-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE> <TELL \"The aqueduct is large and impressive. It was probably the major method\r\nof water transport in the Empire.\" CR>) (<VERB? LEAP> <JIGS-UP \"You execute a perfect swan dive into the rocks below!\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The aqueduct is large and impressive. It was probably the major method\r\nof water transport in the Empire.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The aqueduct is large and impressive. It was probably the major method\r\nof water transport in the Empire.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LEAP>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LEAP"
                }
              ]
            },
            {
              "Zil": "<JIGS-UP \"You execute a perfect swan dive into the rocks below!\">",
              "Form": [
                {
                  "Atom": "JIGS-UP"
                },
                "You execute a perfect swan dive into the rocks below!"
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5045",
    "Name": "WATER-CHANNEL-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE> <TELL \"The channel is a few feet deep and ten feet wide, rounded on the bottom.\" CR>) (<VERB? BOARD> <COND (<==? ,HERE ,DAMP-PASSAGE> <TELL \"Getting into the channel wouldn't be of much use.\" CR>) (T <TELL \"You're standing in it. Otherwise, you would be floating in midair above some\r\nvery nasty rocks.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The channel is a few feet deep and ten feet wide, rounded on the bottom.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The channel is a few feet deep and ten feet wide, rounded on the bottom.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? BOARD>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "BOARD"
                }
              ]
            },
            {
              "Zil": "<COND (<==? ,HERE ,DAMP-PASSAGE> <TELL \"Getting into the channel wouldn't be of much use.\" CR>) (T <TELL \"You're standing in it. Otherwise, you would be floating in midair above some\r\nvery nasty rocks.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<==? ,HERE ,DAMP-PASSAGE>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",HERE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "HERE"
                          }
                        ]
                      },
                      {
                        "Zil": ",DAMP-PASSAGE",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "DAMP-PASSAGE"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"Getting into the channel wouldn't be of much use.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "Getting into the channel wouldn't be of much use.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"You're standing in it. Otherwise, you would be floating in midair above some\r\nvery nasty rocks.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "You're standing in it. Otherwise, you would be floating in midair above some\r\nvery nasty rocks.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5058",
    "Name": "MOSS-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? TAKE MOVE> <TELL \"Don't be silly.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? TAKE MOVE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TAKE"
                },
                {
                  "Atom": "MOVE"
                }
              ]
            },
            {
              "Zil": "<TELL \"Don't be silly.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Don't be silly.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5062",
    "Name": "AQ-2-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"You are now on one of the tallest arches of the aqueduct, hundreds of feet\r\nabove a rocky chasm. The immensity of the aqueduct project is apparent from\r\nhere. Stone supports rise from the rock floor to form massive arches, which\r\ntraverse the region from north to south. The water-carrying channel here is\r\nwide and deep. To the west and far below, you can make out a balcony which\r\nmust command a wide view of the aqueduct.\" CR> <COND (<NOT ,AQ-FLAG> <TELL \"The channel ends abruptly to your north where a supporting pillar has\r\ncrumbled, casting the arch into the chasm.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are now on one of the tallest arches of the aqueduct, hundreds of feet\r\nabove a rocky chasm. The immensity of the aqueduct project is apparent from\r\nhere. Stone supports rise from the rock floor to form massive arches, which\r\ntraverse the region from north to south. The water-carrying channel here is\r\nwide and deep. To the west and far below, you can make out a balcony which\r\nmust command a wide view of the aqueduct.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are now on one of the tallest arches of the aqueduct, hundreds of feet\r\nabove a rocky chasm. The immensity of the aqueduct project is apparent from\r\nhere. Stone supports rise from the rock floor to form massive arches, which\r\ntraverse the region from north to south. The water-carrying channel here is\r\nwide and deep. To the west and far below, you can make out a balcony which\r\nmust command a wide view of the aqueduct.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<COND (<NOT ,AQ-FLAG> <TELL \"The channel ends abruptly to your north where a supporting pillar has\r\ncrumbled, casting the arch into the chasm.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,AQ-FLAG>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",AQ-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "AQ-FLAG"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The channel ends abruptly to your north where a supporting pillar has\r\ncrumbled, casting the arch into the chasm.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The channel ends abruptly to your north where a supporting pillar has\r\ncrumbled, casting the arch into the chasm.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5076",
    "Name": "AQ-3-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"You are near the northern end of this segment of the aqueduct system. To the\r\nsouth and slightly uphill, the bulk of the aqueduct looms ominously, towering\r\nabove a gorge. To the north, the water channel drops precipitously and enters\r\na rocky hole. The damp moss and lichen would certainly make that a one-way\r\ntrip.\" CR> <COND (<NOT ,AQ-FLAG> <TELL \"The southern part of the aqueduct system is inaccessable due to the\r\ncollapse of one of the water-bearing arches.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are near the northern end of this segment of the aqueduct system. To the\r\nsouth and slightly uphill, the bulk of the aqueduct looms ominously, towering\r\nabove a gorge. To the north, the water channel drops precipitously and enters\r\na rocky hole. The damp moss and lichen would certainly make that a one-way\r\ntrip.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are near the northern end of this segment of the aqueduct system. To the\r\nsouth and slightly uphill, the bulk of the aqueduct looms ominously, towering\r\nabove a gorge. To the north, the water channel drops precipitously and enters\r\na rocky hole. The damp moss and lichen would certainly make that a one-way\r\ntrip.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<COND (<NOT ,AQ-FLAG> <TELL \"The southern part of the aqueduct system is inaccessable due to the\r\ncollapse of one of the water-bearing arches.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT ,AQ-FLAG>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": ",AQ-FLAG",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "AQ-FLAG"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The southern part of the aqueduct system is inaccessable due to the\r\ncollapse of one of the water-bearing arches.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The southern part of the aqueduct system is inaccessable due to the\r\ncollapse of one of the water-bearing arches.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5101",
    "Name": "COVER-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? MOVE RAISE OPEN> <TELL \"The cover is moved a bit to one side, revealing a small hole leading into\r\ndarkness.\" CR> <SETG COVER-MOVED T>) (<VERB? TAKE> <TELL \"The cover is far too heavy to take.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? MOVE RAISE OPEN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "MOVE"
                },
                {
                  "Atom": "RAISE"
                },
                {
                  "Atom": "OPEN"
                }
              ]
            },
            {
              "Zil": "<TELL \"The cover is moved a bit to one side, revealing a small hole leading into\r\ndarkness.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The cover is moved a bit to one side, revealing a small hole leading into\r\ndarkness.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<SETG COVER-MOVED T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "COVER-MOVED"
                },
                {
                  "Atom": "T"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? TAKE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "TAKE"
                }
              ]
            },
            {
              "Zil": "<TELL \"The cover is far too heavy to take.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The cover is far too heavy to take.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5111",
    "Name": "KEY-ROOM-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"You are between some rock and a dark place. The room is lit dimly from\r\nabove, revealing a lone, dark path sloping down to the west.\" CR> <COND (,COVER-MOVED <TELL \"A heavy manhole cover has been moved to reveal a dark passage below.\" CR>) (T <TELL \"To one side of the room is a large manhole cover.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are between some rock and a dark place. The room is lit dimly from\r\nabove, revealing a lone, dark path sloping down to the west.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are between some rock and a dark place. The room is lit dimly from\r\nabove, revealing a lone, dark path sloping down to the west.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<COND (,COVER-MOVED <TELL \"A heavy manhole cover has been moved to reveal a dark passage below.\" CR>) (T <TELL \"To one side of the room is a large manhole cover.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",COVER-MOVED",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "COVER-MOVED"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"A heavy manhole cover has been moved to reveal a dark passage below.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "A heavy manhole cover has been moved to reveal a dark passage below.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"To one side of the room is a large manhole cover.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "To one side of the room is a large manhole cover.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5135",
    "Name": "KEY-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<AND <VERB? UNLOCK> <==? ,PRSI ,KEY>> <COND (<AND <==? ,PRSO ,BRONZE-DOOR> <==? ,HERE ,GOOD-CELL>> <COND (,BRONZE-DOOR-LOCKED <TELL \"The key seems to mold itself to the shape of the lock. With a mere\r\ntwist of your hand, the massive bolt gives way.\" CR>) (T <TELL \"It already is.\" CR>)> <SETG BRONZE-DOOR-LOCKED <>> <RTRUE>) (<==? ,PRSO ,BRONZE-DOOR> <TELL \"The key molds itself to the lock but will not turn.\" CR>) (<OR <EQUAL? ,PRSO ,CHEST> <FSET? ,PRSO ,DOORBIT>> <TELL \"The key, which initially seemed certain to fit the lock, seems to change\r\nshape and will not enter the keyhole.\" CR>)>) (<VERB? EXAMINE> <TELL <PICK-ONE ,KEY-DESCS> CR> <TELL \"Strange, though. The key seems to change shape constantly.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<AND <VERB? UNLOCK> <==? ,PRSI ,KEY>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? UNLOCK>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "UNLOCK"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,KEY>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",KEY",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "KEY"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<COND (<AND <==? ,PRSO ,BRONZE-DOOR> <==? ,HERE ,GOOD-CELL>> <COND (,BRONZE-DOOR-LOCKED <TELL \"The key seems to mold itself to the shape of the lock. With a mere\r\ntwist of your hand, the massive bolt gives way.\" CR>) (T <TELL \"It already is.\" CR>)> <SETG BRONZE-DOOR-LOCKED <>> <RTRUE>) (<==? ,PRSO ,BRONZE-DOOR> <TELL \"The key molds itself to the lock but will not turn.\" CR>) (<OR <EQUAL? ,PRSO ,CHEST> <FSET? ,PRSO ,DOORBIT>> <TELL \"The key, which initially seemed certain to fit the lock, seems to change\r\nshape and will not enter the keyhole.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<AND <==? ,PRSO ,BRONZE-DOOR> <==? ,HERE ,GOOD-CELL>>",
                    "Form": [
                      {
                        "Atom": "AND"
                      },
                      {
                        "Zil": "<==? ,PRSO ,BRONZE-DOOR>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",BRONZE-DOOR",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "BRONZE-DOOR"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<==? ,HERE ,GOOD-CELL>",
                        "Form": [
                          {
                            "Atom": "==?"
                          },
                          {
                            "Zil": ",HERE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "HERE"
                              }
                            ]
                          },
                          {
                            "Zil": ",GOOD-CELL",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "GOOD-CELL"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<COND (,BRONZE-DOOR-LOCKED <TELL \"The key seems to mold itself to the shape of the lock. With a mere\r\ntwist of your hand, the massive bolt gives way.\" CR>) (T <TELL \"It already is.\" CR>)>",
                    "Form": [
                      {
                        "Atom": "COND"
                      },
                      [
                        {
                          "Zil": ",BRONZE-DOOR-LOCKED",
                          "Form": [
                            {
                              "Atom": "GVAL"
                            },
                            {
                              "Atom": "BRONZE-DOOR-LOCKED"
                            }
                          ]
                        },
                        {
                          "Zil": "<TELL \"The key seems to mold itself to the shape of the lock. With a mere\r\ntwist of your hand, the massive bolt gives way.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "The key seems to mold itself to the shape of the lock. With a mere\r\ntwist of your hand, the massive bolt gives way.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ],
                      [
                        {
                          "Atom": "T"
                        },
                        {
                          "Zil": "<TELL \"It already is.\" CR>",
                          "Form": [
                            {
                              "Atom": "TELL"
                            },
                            "It already is.",
                            {
                              "Atom": "CR"
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    "Zil": "<SETG BRONZE-DOOR-LOCKED <>>",
                    "Form": [
                      {
                        "Atom": "SETG"
                      },
                      {
                        "Atom": "BRONZE-DOOR-LOCKED"
                      },
                      {
                        "Zil": "<>",
                        "Form": []
                      }
                    ]
                  },
                  {
                    "Zil": "<RTRUE>",
                    "Form": [
                      {
                        "Atom": "RTRUE"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<==? ,PRSO ,BRONZE-DOOR>",
                    "Form": [
                      {
                        "Atom": "==?"
                      },
                      {
                        "Zil": ",PRSO",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "PRSO"
                          }
                        ]
                      },
                      {
                        "Zil": ",BRONZE-DOOR",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "BRONZE-DOOR"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The key molds itself to the lock but will not turn.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The key molds itself to the lock but will not turn.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Zil": "<OR <EQUAL? ,PRSO ,CHEST> <FSET? ,PRSO ,DOORBIT>>",
                    "Form": [
                      {
                        "Atom": "OR"
                      },
                      {
                        "Zil": "<EQUAL? ,PRSO ,CHEST>",
                        "Form": [
                          {
                            "Atom": "EQUAL?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",CHEST",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "CHEST"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "Zil": "<FSET? ,PRSO ,DOORBIT>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",PRSO",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "PRSO"
                              }
                            ]
                          },
                          {
                            "Zil": ",DOORBIT",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "DOORBIT"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The key, which initially seemed certain to fit the lock, seems to change\r\nshape and will not enter the keyhole.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The key, which initially seemed certain to fit the lock, seems to change\r\nshape and will not enter the keyhole.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL <PICK-ONE ,KEY-DESCS> CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                {
                  "Zil": "<PICK-ONE ,KEY-DESCS>",
                  "Form": [
                    {
                      "Atom": "PICK-ONE"
                    },
                    {
                      "Zil": ",KEY-DESCS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "KEY-DESCS"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<TELL \"Strange, though. The key seems to change shape constantly.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Strange, though. The key seems to change shape constantly.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5172",
    "Name": "VIEW-INDICATOR-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE READ> <TELL \"The indicator reads \\\"\" <GET ,VIEW-ROMANS ,ACTIVE-VIEW> \"\\\".\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE READ>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                },
                {
                  "Atom": "READ"
                }
              ]
            },
            {
              "Zil": "<TELL \"The indicator reads \\\"\" <GET ,VIEW-ROMANS ,ACTIVE-VIEW> \"\\\".\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The indicator reads \"",
                {
                  "Zil": "<GET ,VIEW-ROMANS ,ACTIVE-VIEW>",
                  "Form": [
                    {
                      "Atom": "GET"
                    },
                    {
                      "Zil": ",VIEW-ROMANS",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VIEW-ROMANS"
                        }
                      ]
                    },
                    {
                      "Zil": ",ACTIVE-VIEW",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "ACTIVE-VIEW"
                        }
                      ]
                    }
                  ]
                },
                "\".",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5180",
    "Name": "FLATHEAD-OCEAN-F",
    "ArgSpec": "(RARG)",
    "Body": [
      {
        "Zil": "<COND (<==? .RARG ,M-LOOK> <TELL \"You are at the shore of an amazing underground sea, the topic of many a\r\nlegend among adventurers. Few were known to have arrived at this spot, and\r\nfewer to return. There is a heavy surf and a breeze is blowing onshore.\r\nThe land rises steeply to the east and quicksand prevents movement to the\r\nsouth. A thick mist covers the ocean and extends over the hills to the east.\r\nA path heads north along the beach.\" CR> <COND (<NOT <FSET? ,VIKING-SHIP ,INVISIBLE>> <TELL \"An ancient Viking ship is passing along the shore, an old and crusty\r\nsailor at the helm.\" CR>)> <RTRUE>) (<AND <==? .RARG ,M-END> <PROB 20> <NOT ,BOAT-SEEN> ,LIT> <SETG BOAT-SEEN T> <ENABLE <QUEUE I-BOAT-DISAPPEAR 2>> <TELL \"Passing alongside the shore now is an old boat, reminiscent of an ancient\r\nViking ship. Standing on the prow of the ship is an old and crusty sailor,\r\npeering out over the misty ocean.\" CR> <FCLEAR ,VIKING-SHIP ,INVISIBLE>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? .RARG ,M-LOOK>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ".RARG",
                  "Form": [
                    {
                      "Atom": "LVAL"
                    },
                    {
                      "Atom": "RARG"
                    }
                  ]
                },
                {
                  "Zil": ",M-LOOK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "M-LOOK"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You are at the shore of an amazing underground sea, the topic of many a\r\nlegend among adventurers. Few were known to have arrived at this spot, and\r\nfewer to return. There is a heavy surf and a breeze is blowing onshore.\r\nThe land rises steeply to the east and quicksand prevents movement to the\r\nsouth. A thick mist covers the ocean and extends over the hills to the east.\r\nA path heads north along the beach.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You are at the shore of an amazing underground sea, the topic of many a\r\nlegend among adventurers. Few were known to have arrived at this spot, and\r\nfewer to return. There is a heavy surf and a breeze is blowing onshore.\r\nThe land rises steeply to the east and quicksand prevents movement to the\r\nsouth. A thick mist covers the ocean and extends over the hills to the east.\r\nA path heads north along the beach.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<COND (<NOT <FSET? ,VIKING-SHIP ,INVISIBLE>> <TELL \"An ancient Viking ship is passing along the shore, an old and crusty\r\nsailor at the helm.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<NOT <FSET? ,VIKING-SHIP ,INVISIBLE>>",
                    "Form": [
                      {
                        "Atom": "NOT"
                      },
                      {
                        "Zil": "<FSET? ,VIKING-SHIP ,INVISIBLE>",
                        "Form": [
                          {
                            "Atom": "FSET?"
                          },
                          {
                            "Zil": ",VIKING-SHIP",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "VIKING-SHIP"
                              }
                            ]
                          },
                          {
                            "Zil": ",INVISIBLE",
                            "Form": [
                              {
                                "Atom": "GVAL"
                              },
                              {
                                "Atom": "INVISIBLE"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"An ancient Viking ship is passing along the shore, an old and crusty\r\nsailor at the helm.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "An ancient Viking ship is passing along the shore, an old and crusty\r\nsailor at the helm.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <==? .RARG ,M-END> <PROB 20> <NOT ,BOAT-SEEN> ,LIT>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<==? .RARG ,M-END>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ".RARG",
                      "Form": [
                        {
                          "Atom": "LVAL"
                        },
                        {
                          "Atom": "RARG"
                        }
                      ]
                    },
                    {
                      "Zil": ",M-END",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "M-END"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<PROB 20>",
                  "Form": [
                    {
                      "Atom": "PROB"
                    },
                    20
                  ]
                },
                {
                  "Zil": "<NOT ,BOAT-SEEN>",
                  "Form": [
                    {
                      "Atom": "NOT"
                    },
                    {
                      "Zil": ",BOAT-SEEN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "BOAT-SEEN"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": ",LIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "LIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG BOAT-SEEN T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "BOAT-SEEN"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-BOAT-DISAPPEAR 2>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-BOAT-DISAPPEAR 2>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-BOAT-DISAPPEAR"
                    },
                    2
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Passing alongside the shore now is an old boat, reminiscent of an ancient\r\nViking ship. Standing on the prow of the ship is an old and crusty sailor,\r\npeering out over the misty ocean.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Passing alongside the shore now is an old boat, reminiscent of an ancient\r\nViking ship. Standing on the prow of the ship is an old and crusty sailor,\r\npeering out over the misty ocean.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<FCLEAR ,VIKING-SHIP ,INVISIBLE>",
              "Form": [
                {
                  "Atom": "FCLEAR"
                },
                {
                  "Zil": ",VIKING-SHIP",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "VIKING-SHIP"
                    }
                  ]
                },
                {
                  "Zil": ",INVISIBLE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "INVISIBLE"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5208",
    "Name": "I-BOAT-DISAPPEAR",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<FSET ,VIKING-SHIP ,INVISIBLE>",
        "Form": [
          {
            "Atom": "FSET"
          },
          {
            "Zil": ",VIKING-SHIP",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "VIKING-SHIP"
              }
            ]
          },
          {
            "Zil": ",INVISIBLE",
            "Form": [
              {
                "Atom": "GVAL"
              },
              {
                "Atom": "INVISIBLE"
              }
            ]
          }
        ]
      },
      {
        "Zil": "<SETG SHIP-GONE T>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "SHIP-GONE"
          },
          {
            "Atom": "T"
          }
        ]
      },
      {
        "Zil": "<COND (<==? ,HERE ,FLATHEAD-OCEAN> <TELL \"The boat sails silently through the mist and out of sight.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<==? ,HERE ,FLATHEAD-OCEAN>",
              "Form": [
                {
                  "Atom": "==?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",FLATHEAD-OCEAN",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "FLATHEAD-OCEAN"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The boat sails silently through the mist and out of sight.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The boat sails silently through the mist and out of sight.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5239",
    "Name": "I-VISIBLE",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<SETG INVIS <>>",
        "Form": [
          {
            "Atom": "SETG"
          },
          {
            "Atom": "INVIS"
          },
          {
            "Zil": "<>",
            "Form": []
          }
        ]
      },
      {
        "Zil": "<COND (<EQUAL? ,HERE ,MRG ,MRGE ,MRGW> <JIGS-UP \"One of the stone figures (or maybe both, it's hard to tell) suddenly springs\r\nto life and crushes you with his stone bludgeon.\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<EQUAL? ,HERE ,MRG ,MRGE ,MRGW>",
              "Form": [
                {
                  "Atom": "EQUAL?"
                },
                {
                  "Zil": ",HERE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "HERE"
                    }
                  ]
                },
                {
                  "Zil": ",MRG",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRG"
                    }
                  ]
                },
                {
                  "Zil": ",MRGE",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRGE"
                    }
                  ]
                },
                {
                  "Zil": ",MRGW",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "MRGW"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<JIGS-UP \"One of the stone figures (or maybe both, it's hard to tell) suddenly springs\r\nto life and crushes you with his stone bludgeon.\">",
              "Form": [
                {
                  "Atom": "JIGS-UP"
                },
                "One of the stone figures (or maybe both, it's hard to tell) suddenly springs\r\nto life and crushes you with his stone bludgeon."
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<RFALSE>",
        "Form": [
          {
            "Atom": "RFALSE"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5247",
    "Name": "POTION-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? DRINK> <REMOVE ,POTION> <SETG INVIS T> <ENABLE <QUEUE I-VISIBLE 3>> <TELL \"You \\\"drink\\\" the contents in one gulp, but nothing unusual seems to have\r\nhappened as a result.\" CR>) (<AND <VERB? POUR-ON> <==? ,PRSO ,POTION>> <REMOVE ,POTION> <TELL \"It spills onto the \" D ,PRSI \" and vanishes.\" CR>) (<VERB? EXAMINE> <TELL \"It feels like there's something inside, but you can't see anything even\r\nthough the vial is transparent.\" CR>) (<VERB? SMELL> <TELL \"The vial (or something in it) smells sweet.\" CR>) (<VERB? DROP TAKE> <TELL \"Nothing seems to come out, although the sweet smell disappears from\r\nthe vial, seeming to permeate the air briefly before fading entirely.\" CR> <REMOVE ,POTION>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? DRINK>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "DRINK"
                }
              ]
            },
            {
              "Zil": "<REMOVE ,POTION>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",POTION",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "POTION"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<SETG INVIS T>",
              "Form": [
                {
                  "Atom": "SETG"
                },
                {
                  "Atom": "INVIS"
                },
                {
                  "Atom": "T"
                }
              ]
            },
            {
              "Zil": "<ENABLE <QUEUE I-VISIBLE 3>>",
              "Form": [
                {
                  "Atom": "ENABLE"
                },
                {
                  "Zil": "<QUEUE I-VISIBLE 3>",
                  "Form": [
                    {
                      "Atom": "QUEUE"
                    },
                    {
                      "Atom": "I-VISIBLE"
                    },
                    3
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You \\\"drink\\\" the contents in one gulp, but nothing unusual seems to have\r\nhappened as a result.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You \"drink\" the contents in one gulp, but nothing unusual seems to have\r\nhappened as a result.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? POUR-ON> <==? ,PRSO ,POTION>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? POUR-ON>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "POUR-ON"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSO ,POTION>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",POTION",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "POTION"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<REMOVE ,POTION>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",POTION",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "POTION"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"It spills onto the \" D ,PRSI \" and vanishes.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It spills onto the ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSI",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSI"
                    }
                  ]
                },
                " and vanishes.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"It feels like there's something inside, but you can't see anything even\r\nthough the vial is transparent.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It feels like there's something inside, but you can't see anything even\r\nthough the vial is transparent.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? SMELL>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "SMELL"
                }
              ]
            },
            {
              "Zil": "<TELL \"The vial (or something in it) smells sweet.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The vial (or something in it) smells sweet.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? DROP TAKE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "DROP"
                },
                {
                  "Atom": "TAKE"
                }
              ]
            },
            {
              "Zil": "<TELL \"Nothing seems to come out, although the sweet smell disappears from\r\nthe vial, seeming to permeate the air briefly before fading entirely.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Nothing seems to come out, although the sweet smell disappears from\r\nthe vial, seeming to permeate the air briefly before fading entirely.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<REMOVE ,POTION>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",POTION",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "POTION"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5273",
    "Name": "VIAL-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? FILL> <TELL \"You can't seem to put anything in it.\" CR>) (<AND <VERB? DRINK-FROM> <IN? ,POTION ,VIAL>> <PERFORM ,V?DRINK ,POTION> <RTRUE>) (<AND <VERB? SMELL> <IN? ,POTION ,VIAL>> <PERFORM ,V?SMELL ,POTION> <RTRUE>) (<AND <VERB? SHAKE> <IN? ,POTION ,VIAL> <FSET? ,VIAL ,OPENBIT>> <TELL \"Nothing seems to come out, although the vial is lighter now.\" CR> <REMOVE ,POTION>) (<VERB? OPEN> <FSET ,VIAL ,OPENBIT> <TELL \"The vial is open.\"> <COND (<IN? ,POTION ,VIAL> <TELL \" There is a sweet odor from within the vial, apparently coming from a heavy\r\nbut invisible liquid.\">)> <CRLF>) (<VERB? EXAMINE> <TELL \"It is a small, transparent vial \"> <COND (<IN? ,POTION ,VIAL> <TELL \"which looks empty but is strangely heavy.\" CR>) (T <TELL \"which is light and empty.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? FILL>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "FILL"
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't seem to put anything in it.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't seem to put anything in it.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? DRINK-FROM> <IN? ,POTION ,VIAL>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? DRINK-FROM>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "DRINK-FROM"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,POTION ,VIAL>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",POTION",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "POTION"
                        }
                      ]
                    },
                    {
                      "Zil": ",VIAL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VIAL"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?DRINK ,POTION>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?DRINK",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?DRINK"
                    }
                  ]
                },
                {
                  "Zil": ",POTION",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "POTION"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? SMELL> <IN? ,POTION ,VIAL>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? SMELL>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "SMELL"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,POTION ,VIAL>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",POTION",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "POTION"
                        }
                      ]
                    },
                    {
                      "Zil": ",VIAL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VIAL"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<PERFORM ,V?SMELL ,POTION>",
              "Form": [
                {
                  "Atom": "PERFORM"
                },
                {
                  "Zil": ",V?SMELL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "V?SMELL"
                    }
                  ]
                },
                {
                  "Zil": ",POTION",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "POTION"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<RTRUE>",
              "Form": [
                {
                  "Atom": "RTRUE"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? SHAKE> <IN? ,POTION ,VIAL> <FSET? ,VIAL ,OPENBIT>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? SHAKE>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "SHAKE"
                    }
                  ]
                },
                {
                  "Zil": "<IN? ,POTION ,VIAL>",
                  "Form": [
                    {
                      "Atom": "IN?"
                    },
                    {
                      "Zil": ",POTION",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "POTION"
                        }
                      ]
                    },
                    {
                      "Zil": ",VIAL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VIAL"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Zil": "<FSET? ,VIAL ,OPENBIT>",
                  "Form": [
                    {
                      "Atom": "FSET?"
                    },
                    {
                      "Zil": ",VIAL",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "VIAL"
                        }
                      ]
                    },
                    {
                      "Zil": ",OPENBIT",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "OPENBIT"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"Nothing seems to come out, although the vial is lighter now.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Nothing seems to come out, although the vial is lighter now.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<REMOVE ,POTION>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",POTION",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "POTION"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? OPEN>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                }
              ]
            },
            {
              "Zil": "<FSET ,VIAL ,OPENBIT>",
              "Form": [
                {
                  "Atom": "FSET"
                },
                {
                  "Zil": ",VIAL",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "VIAL"
                    }
                  ]
                },
                {
                  "Zil": ",OPENBIT",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "OPENBIT"
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The vial is open.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The vial is open."
              ]
            },
            {
              "Zil": "<COND (<IN? ,POTION ,VIAL> <TELL \" There is a sweet odor from within the vial, apparently coming from a heavy\r\nbut invisible liquid.\">)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<IN? ,POTION ,VIAL>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ",POTION",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "POTION"
                          }
                        ]
                      },
                      {
                        "Zil": ",VIAL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "VIAL"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \" There is a sweet odor from within the vial, apparently coming from a heavy\r\nbut invisible liquid.\">",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      " There is a sweet odor from within the vial, apparently coming from a heavy\r\nbut invisible liquid."
                    ]
                  }
                ]
              ]
            },
            {
              "Zil": "<CRLF>",
              "Form": [
                {
                  "Atom": "CRLF"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<TELL \"It is a small, transparent vial \">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It is a small, transparent vial "
              ]
            },
            {
              "Zil": "<COND (<IN? ,POTION ,VIAL> <TELL \"which looks empty but is strangely heavy.\" CR>) (T <TELL \"which is light and empty.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": "<IN? ,POTION ,VIAL>",
                    "Form": [
                      {
                        "Atom": "IN?"
                      },
                      {
                        "Zil": ",POTION",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "POTION"
                          }
                        ]
                      },
                      {
                        "Zil": ",VIAL",
                        "Form": [
                          {
                            "Atom": "GVAL"
                          },
                          {
                            "Atom": "VIAL"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"which looks empty but is strangely heavy.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "which looks empty but is strangely heavy.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"which is light and empty.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "which is light and empty.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5311",
    "Name": "OCEAN-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<NOT <==? ,HERE ,FLATHEAD-OCEAN>> <TELL \"There is no ocean here.\" CR>) (<VERB? THROUGH BOARD> <TELL \"You would be killed by the pounding surf!\" CR>) (<AND <VERB? PUT THROW> <==? ,PRSI ,OCEAN>> <TELL \"The \" D ,PRSO \" falls into the ocean and is lost forever.\" CR> <REMOVE ,PRSO>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<NOT <==? ,HERE ,FLATHEAD-OCEAN>>",
              "Form": [
                {
                  "Atom": "NOT"
                },
                {
                  "Zil": "<==? ,HERE ,FLATHEAD-OCEAN>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",HERE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "HERE"
                        }
                      ]
                    },
                    {
                      "Zil": ",FLATHEAD-OCEAN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "FLATHEAD-OCEAN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"There is no ocean here.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There is no ocean here.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? THROUGH BOARD>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "THROUGH"
                },
                {
                  "Atom": "BOARD"
                }
              ]
            },
            {
              "Zil": "<TELL \"You would be killed by the pounding surf!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You would be killed by the pounding surf!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? PUT THROW> <==? ,PRSI ,OCEAN>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT THROW>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT"
                    },
                    {
                      "Atom": "THROW"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,OCEAN>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",OCEAN",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "OCEAN"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The \" D ,PRSO \" falls into the ocean and is lost forever.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The ",
                {
                  "Atom": "D"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                },
                " falls into the ocean and is lost forever.",
                {
                  "Atom": "CR"
                }
              ]
            },
            {
              "Zil": "<REMOVE ,PRSO>",
              "Form": [
                {
                  "Atom": "REMOVE"
                },
                {
                  "Zil": ",PRSO",
                  "Form": [
                    {
                      "Atom": "GVAL"
                    },
                    {
                      "Atom": "PRSO"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5333",
    "Name": "STONE-DESC",
    "ArgSpec": "(FOO)",
    "Body": [
      {
        "Zil": "<TELL \"Standing before you is a great rock.\">",
        "Form": [
          {
            "Atom": "TELL"
          },
          "Standing before you is a great rock."
        ]
      },
      {
        "Zil": "<COND (,SWORD-IN-STONE? <TELL \" Imbedded within it is an Elvish sword.\">)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": ",SWORD-IN-STONE?",
              "Form": [
                {
                  "Atom": "GVAL"
                },
                {
                  "Atom": "SWORD-IN-STONE?"
                }
              ]
            },
            {
              "Zil": "<TELL \" Imbedded within it is an Elvish sword.\">",
              "Form": [
                {
                  "Atom": "TELL"
                },
                " Imbedded within it is an Elvish sword."
              ]
            }
          ]
        ]
      },
      {
        "Zil": "<CRLF>",
        "Form": [
          {
            "Atom": "CRLF"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5340",
    "Name": "STONE-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? OPEN CLOSE> <TELL \"You can't be serious.\" CR>) (<AND <VERB? PUT> <==? ,PRSI ,STONE>> <TELL \"You can't force anything into the stone.\" CR>) (<AND <VERB? MOVE TAKE PUSH> <==? ,PRSO ,STONE>> <TELL \"The stone is far too massive to be moved.\" CR>) (<VERB? LOOK-UNDER> <TELL \"Since it can't be moved, it's hard to know what's there.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? OPEN CLOSE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "OPEN"
                },
                {
                  "Atom": "CLOSE"
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't be serious.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't be serious.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? PUT> <==? ,PRSI ,STONE>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? PUT>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "PUT"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSI ,STONE>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSI",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSI"
                        }
                      ]
                    },
                    {
                      "Zil": ",STONE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "STONE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't force anything into the stone.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't force anything into the stone.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<AND <VERB? MOVE TAKE PUSH> <==? ,PRSO ,STONE>>",
              "Form": [
                {
                  "Atom": "AND"
                },
                {
                  "Zil": "<VERB? MOVE TAKE PUSH>",
                  "Form": [
                    {
                      "Atom": "VERB?"
                    },
                    {
                      "Atom": "MOVE"
                    },
                    {
                      "Atom": "TAKE"
                    },
                    {
                      "Atom": "PUSH"
                    }
                  ]
                },
                {
                  "Zil": "<==? ,PRSO ,STONE>",
                  "Form": [
                    {
                      "Atom": "==?"
                    },
                    {
                      "Zil": ",PRSO",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "PRSO"
                        }
                      ]
                    },
                    {
                      "Zil": ",STONE",
                      "Form": [
                        {
                          "Atom": "GVAL"
                        },
                        {
                          "Atom": "STONE"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "Zil": "<TELL \"The stone is far too massive to be moved.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "The stone is far too massive to be moved.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LOOK-UNDER>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LOOK-UNDER"
                }
              ]
            },
            {
              "Zil": "<TELL \"Since it can't be moved, it's hard to know what's there.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Since it can't be moved, it's hard to know what's there.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5359",
    "Name": "FISH-F",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<TELL \"There is no fish visible now.\" CR>",
        "Form": [
          {
            "Atom": "TELL"
          },
          "There is no fish visible now.",
          {
            "Atom": "CR"
          }
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5362",
    "Name": "QUICKSAND-PSEUDO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? THROUGH LEAP> <JIGS-UP \"You enter the quicksand and slowly sink to a new low in adventuring.\">) (<VERB? RUB> <TELL \"It's quicksand all right!\" CR>) (<VERB? LOOK-INSIDE> <TELL \"It's hard to tell what's in there.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? THROUGH LEAP>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "THROUGH"
                },
                {
                  "Atom": "LEAP"
                }
              ]
            },
            {
              "Zil": "<JIGS-UP \"You enter the quicksand and slowly sink to a new low in adventuring.\">",
              "Form": [
                {
                  "Atom": "JIGS-UP"
                },
                "You enter the quicksand and slowly sink to a new low in adventuring."
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? RUB>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "RUB"
                }
              ]
            },
            {
              "Zil": "<TELL \"It's quicksand all right!\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's quicksand all right!",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? LOOK-INSIDE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LOOK-INSIDE"
                }
              ]
            },
            {
              "Zil": "<TELL \"It's hard to tell what's in there.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's hard to tell what's in there.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5371",
    "Name": "SWAMP-PSEUDO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? THROUGH> <TELL \"Yucko.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? THROUGH>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "THROUGH"
                }
              ]
            },
            {
              "Zil": "<TELL \"Yucko.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "Yucko.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5375",
    "Name": "MIST-PSEUDO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? LOOK-INSIDE> <TELL \"You can't make anything out through the mist.\" CR>) (<VERB? SMELL> <TELL \"It smells vaguely salty.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? LOOK-INSIDE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "LOOK-INSIDE"
                }
              ]
            },
            {
              "Zil": "<TELL \"You can't make anything out through the mist.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "You can't make anything out through the mist.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ],
          [
            {
              "Zil": "<VERB? SMELL>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "SMELL"
                }
              ]
            },
            {
              "Zil": "<TELL \"It smells vaguely salty.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It smells vaguely salty.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5381",
    "Name": "SHORE-PSEUDO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? DIG> <TELL \"There's nothing there.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? DIG>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "DIG"
                }
              ]
            },
            {
              "Zil": "<TELL \"There's nothing there.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "There's nothing there.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5386",
    "Name": "WATERFALL-PSEUDO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? CLIMB-UP> <TELL \"It's much too slippery.\" CR>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? CLIMB-UP>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "CLIMB-UP"
                }
              ]
            },
            {
              "Zil": "<TELL \"It's much too slippery.\" CR>",
              "Form": [
                {
                  "Atom": "TELL"
                },
                "It's much too slippery.",
                {
                  "Atom": "CR"
                }
              ]
            }
          ]
        ]
      }
    ]
  },
  {
    "Source": "3ACTIONS.zil:5390",
    "Name": "ARCH-PSEUDO",
    "ArgSpec": "()",
    "Body": [
      {
        "Zil": "<COND (<VERB? EXAMINE> <COND (,AQ-FLAG <TELL \"The arches all show some signs of decay.\" CR>) (T <TELL \"The arch before you is broken. The others show signs of decay.\" CR>)>)>",
        "Form": [
          {
            "Atom": "COND"
          },
          [
            {
              "Zil": "<VERB? EXAMINE>",
              "Form": [
                {
                  "Atom": "VERB?"
                },
                {
                  "Atom": "EXAMINE"
                }
              ]
            },
            {
              "Zil": "<COND (,AQ-FLAG <TELL \"The arches all show some signs of decay.\" CR>) (T <TELL \"The arch before you is broken. The others show signs of decay.\" CR>)>",
              "Form": [
                {
                  "Atom": "COND"
                },
                [
                  {
                    "Zil": ",AQ-FLAG",
                    "Form": [
                      {
                        "Atom": "GVAL"
                      },
                      {
                        "Atom": "AQ-FLAG"
                      }
                    ]
                  },
                  {
                    "Zil": "<TELL \"The arches all show some signs of decay.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The arches all show some signs of decay.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ],
                [
                  {
                    "Atom": "T"
                  },
                  {
                    "Zil": "<TELL \"The arch before you is broken. The others show signs of decay.\" CR>",
                    "Form": [
                      {
                        "Atom": "TELL"
                      },
                      "The arch before you is broken. The others show signs of decay.",
                      {
                        "Atom": "CR"
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        ]
      }
    ]
  }
]